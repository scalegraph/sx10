diff -c -r configure trunk/configure
*** configure	     2013-08-21 17:58:33.654412119 -0400
--- trunk/configure  2012-08-09 16:25:12.000000000 -0400  
***************
*** 1474,1479 ****
--- 1474,1481 ----
    --enable-redirect-malloc
                            Redirect malloc and friends to GC routines
    --enable-large-config   Optimize for large (> 100 MB) heap or root set
+   --enable-sigrt-signals  Force the gc to use SIGRTMIN-based signals for
+                           thread suspend/resume
    --enable-handle-fork    Attempt to ensure a usable collector after fork() in
                            multi-threaded programs.
    --enable-gc-assertions  collector-internal assertion checking
***************
*** 16237,16243 ****
--- 16239,16255 ----
  fi
  
  
+ # Check whether --enable-sigrt-signals was given.
+ if test "${enable_sigrt_signals+set}" = set; then :
+   enableval=$enable_sigrt_signals;
+ fi
+ 
+ 
+ if test "${enable_sigrt_signals}" = yes; then
  
+ $as_echo "#define GC_USESIGRT_SIGNALS 1" >>confdefs.h
+ 
+ fi
  
  
  UNWINDLIBS=
diff -c -r include/private/config.h.in trunk/include/private/config.h.in
*** include/private/config.h.in	       2013-08-21 18:01:17.872834933 -0400 
--- trunk/include/private/config.h.in  2012-08-09 16:25:13.000000000 -0400
***************
*** 45,50 ****
--- 45,53 ----
  /* Define to include support for gcj. */
  #undef GC_GCJ_SUPPORT
  
+ /* Define to use SIGRTMIN-based signals for thread suspend/resume */
+ #undef GC_USESIGRT_SIGNALS
+ 
  /* Define to support GNU pthreads. */
  #undef GC_GNU_THREADS
  
diff -c -r configure.ac trunk/configure.ac
*** configure.ac	2012-05-11 13:09:00.000000000 -0400
--- trunk/configure.ac	2012-06-01 14:02:36.000000000 -0400
***************
*** 584,589 ****
--- 584,600 ----
      AC_DEFINE(GC_GCJ_SUPPORT, 1, [Define to include support for gcj.])
  fi
  
+ 
+ dnl Interaction with other programs that might use signals.
+ dnl Force the GC to use signals based on SIGRTMIN+k 
+ AC_ARG_ENABLE(sigrt-signals,
+ 	[AC_HELP_STRING([--enable-sigrt-signals], [Force the gc to use SIGRTMIN-based signals for thread suspend/resume])])
+ 
+ if test "${enable_sigrt_signals}" = yes; then
+    AC_DEFINE(GC_USESIGRT_SIGNALS)
+ fi
+ 
+ 
  dnl Debugging
  dnl ---------
  
diff -c -r include/private/gc_priv.h trunk/include/private/gc_priv.h
*** include/private/gc_priv.h	2012-05-11 13:09:00.000000000 -0400
--- trunk/include/private/gc_priv.h	2012-06-01 14:04:39.000000000 -0400
***************
*** 2190,2195 ****
--- 2190,2205 ----
                /* some other reason.                                     */
  #endif /* PARALLEL_MARK */
  
+ # if defined(GC_USESIGRT_SIGNALS)
+ #  if defined(_SIGRTMIN)
+ #   define SIG_SUSPEND _SIGRTMIN + 6
+ #   define SIG_THR_RESTART _SIGRTMIN + 5
+ #  else
+ #   define SIG_SUSPEND SIGRTMIN + 6
+ #   define SIG_THR_RESTART SIGRTMIN + 5
+ #  endif
+ # endif
+ 
  #if defined(GC_PTHREADS) && !defined(GC_WIN32_THREADS) && !defined(NACL) \
      && !defined(SIG_SUSPEND)
    /* We define the thread suspension signal here, so that we can refer  */
