class TestInstanceOperators {
	var w0:Float=0;
	var w1:Double=0;
	var w2:Byte=0;
	var w3:Int=0;
	var w4:Long=0;
	var w5:Short=0;
	var w6:UByte=0;
	var w7:UInt=0;
	var w8:ULong=0;
	var w9:UShort=0;


	def m10():Void { var l:Float = (w0)+(w0); }
	def m11():Void { var l:Float = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m12():Void { var l:Float = (w0)+(w2); }
	def m13():Void { var l:Float = (w0)+(w3); }
	def m14():Void { var l:Float = (w0)+(w4); }
	def m15():Void { var l:Float = (w0)+(w5); }
	def m16():Void { var l:Float = (w0)+(w6); }
	def m17():Void { var l:Float = (w0)+(w7); }
	def m18():Void { var l:Float = (w0)+(w8); }
	def m19():Void { var l:Float = (w0)+(w9); }
	def m20():Void { var l:Float = (w0)+(0); }
	def m21():Void { var l:Float = (w0)+(-0); }
	def m22():Void { var l:Float = (w0)+(1.1f); }
	def m23():Void { var l:Float = (w0)+(-1.1f); }
	def m24():Void { var l:Float = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m25():Void { var l:Float = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m26():Void { var l:Float = (w0)+(127); }
	def m27():Void { var l:Float = (w0)+(-127); }
	def m28():Void { var l:Float = (w0)+(128); }
	def m29():Void { var l:Float = (w0)+(-128); }
	def m30():Void { var l:Float = (w0)+(255); }
	def m31():Void { var l:Float = (w0)+(-255); }
	def m32():Void { var l:Float = (w0)+(256); }
	def m33():Void { var l:Float = (w0)+(-256); }
	def m34():Void { var l:Float = (w0)+(32767); }
	def m35():Void { var l:Float = (w0)+(-32767); }
	def m36():Void { var l:Float = (w0)+(32768); }
	def m37():Void { var l:Float = (w0)+(-32768); }
	def m38():Void { var l:Float = (w0)+(65535); }
	def m39():Void { var l:Float = (w0)+(-65535); }
	def m40():Void { var l:Float = (w0)+(65536); }
	def m41():Void { var l:Float = (w0)+(-65536); }
	def m42():Void { var l:Float = (w0)+(16777216); }
	def m43():Void { var l:Float = (w0)+(-16777216); }
	def m44():Void { var l:Float = (w0)+(16777217); }
	def m45():Void { var l:Float = (w0)+(-16777217); }
	def m46():Void { var l:Float = (w0)+(2147483647); }
	def m47():Void { var l:Float = (w0)+(-2147483647); }
	def m48():Void { var l:Float = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m49():Void { var l:Float = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m50():Void { var l:Float = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m51():Void { var l:Float = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m52():Void { var l:Float = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m53():Void { var l:Float = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m54():Void { var l:Float = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m55():Void { var l:Float = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m56():Void { var l:Float = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m57():Void { var l:Float = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m58():Void { var l:Float = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m59():Void { var l:Float = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m60():Void { var l:Float = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m61():Void { var l:Float = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m62():Void { var l:Float = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m63():Void { var l:Float = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m64():Void { var l:Float = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m65():Void { var l:Float = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m66():Void { var l:Float = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m67():Void { var l:Float = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m68():Void { var l:Float = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m69():Void { var l:Float = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m70():Void { var l:Float = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m71():Void { var l:Float = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m72():Void { var l:Float = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m73():Void { var l:Float = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m74():Void { var l:Float = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m75():Void { var l:Float = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m76():Void { var l:Float = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m77():Void { var l:Float = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m78():Void { var l:Float = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m79():Void { var l:Float = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m80():Void { var l:Float = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m81():Void { var l:Float = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m82():Void { var l:Float = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m83():Void { var l:Float = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m84():Void { var l:Float = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m85():Void { var l:Float = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m86():Void { var l:Float = (w2)+(w0); }
	def m87():Void { var l:Float = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m88():Void { var l:Float = (w2)+(w2); }
	def m89():Void { var l:Float = (w2)+(w3); }
	def m90():Void { var l:Float = (w2)+(w4); }
	def m91():Void { var l:Float = (w2)+(w5); }
	def m92():Void { var l:Float = (w2)+(w6); }
	def m93():Void { var l:Float = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m94():Void { var l:Float = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m95():Void { var l:Float = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m96():Void { var l:Float = (w2)+(0); }
	def m97():Void { var l:Float = (w2)+(-0); }
	def m98():Void { var l:Float = (w2)+(1.1f); }
	def m99():Void { var l:Float = (w2)+(-1.1f); }
	def m100():Void { var l:Float = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m101():Void { var l:Float = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m102():Void { var l:Float = (w2)+(127); }
	def m103():Void { var l:Float = (w2)+(-127); }
	def m104():Void { var l:Float = (w2)+(128); }
	def m105():Void { var l:Float = (w2)+(-128); }
	def m106():Void { var l:Float = (w2)+(255); }
	def m107():Void { var l:Float = (w2)+(-255); }
	def m108():Void { var l:Float = (w2)+(256); }
	def m109():Void { var l:Float = (w2)+(-256); }
	def m110():Void { var l:Float = (w2)+(32767); }
	def m111():Void { var l:Float = (w2)+(-32767); }
	def m112():Void { var l:Float = (w2)+(32768); }
	def m113():Void { var l:Float = (w2)+(-32768); }
	def m114():Void { var l:Float = (w2)+(65535); }
	def m115():Void { var l:Float = (w2)+(-65535); }
	def m116():Void { var l:Float = (w2)+(65536); }
	def m117():Void { var l:Float = (w2)+(-65536); }
	def m118():Void { var l:Float = (w2)+(16777216); }
	def m119():Void { var l:Float = (w2)+(-16777216); }
	def m120():Void { var l:Float = (w2)+(16777217); }
	def m121():Void { var l:Float = (w2)+(-16777217); }
	def m122():Void { var l:Float = (w2)+(2147483647); }
	def m123():Void { var l:Float = (w2)+(-2147483647); }
	def m124():Void { var l:Float = (w3)+(w0); }
	def m125():Void { var l:Float = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m126():Void { var l:Float = (w3)+(w2); }
	def m127():Void { var l:Float = (w3)+(w3); }
	def m128():Void { var l:Float = (w3)+(w4); }
	def m129():Void { var l:Float = (w3)+(w5); }
	def m130():Void { var l:Float = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m131():Void { var l:Float = (w3)+(w7); }
	def m132():Void { var l:Float = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m133():Void { var l:Float = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m134():Void { var l:Float = (w3)+(0); }
	def m135():Void { var l:Float = (w3)+(-0); }
	def m136():Void { var l:Float = (w3)+(1.1f); }
	def m137():Void { var l:Float = (w3)+(-1.1f); }
	def m138():Void { var l:Float = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m139():Void { var l:Float = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m140():Void { var l:Float = (w3)+(127); }
	def m141():Void { var l:Float = (w3)+(-127); }
	def m142():Void { var l:Float = (w3)+(128); }
	def m143():Void { var l:Float = (w3)+(-128); }
	def m144():Void { var l:Float = (w3)+(255); }
	def m145():Void { var l:Float = (w3)+(-255); }
	def m146():Void { var l:Float = (w3)+(256); }
	def m147():Void { var l:Float = (w3)+(-256); }
	def m148():Void { var l:Float = (w3)+(32767); }
	def m149():Void { var l:Float = (w3)+(-32767); }
	def m150():Void { var l:Float = (w3)+(32768); }
	def m151():Void { var l:Float = (w3)+(-32768); }
	def m152():Void { var l:Float = (w3)+(65535); }
	def m153():Void { var l:Float = (w3)+(-65535); }
	def m154():Void { var l:Float = (w3)+(65536); }
	def m155():Void { var l:Float = (w3)+(-65536); }
	def m156():Void { var l:Float = (w3)+(16777216); }
	def m157():Void { var l:Float = (w3)+(-16777216); }
	def m158():Void { var l:Float = (w3)+(16777217); }
	def m159():Void { var l:Float = (w3)+(-16777217); }
	def m160():Void { var l:Float = (w3)+(2147483647); }
	def m161():Void { var l:Float = (w3)+(-2147483647); }
	def m162():Void { var l:Float = (w4)+(w0); }
	def m163():Void { var l:Float = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m164():Void { var l:Float = (w4)+(w2); }
	def m165():Void { var l:Float = (w4)+(w3); }
	def m166():Void { var l:Float = (w4)+(w4); }
	def m167():Void { var l:Float = (w4)+(w5); }
	def m168():Void { var l:Float = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m169():Void { var l:Float = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m170():Void { var l:Float = (w4)+(w8); }
	def m171():Void { var l:Float = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m172():Void { var l:Float = (w4)+(0); }
	def m173():Void { var l:Float = (w4)+(-0); }
	def m174():Void { var l:Float = (w4)+(1.1f); }
	def m175():Void { var l:Float = (w4)+(-1.1f); }
	def m176():Void { var l:Float = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m177():Void { var l:Float = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m178():Void { var l:Float = (w4)+(127); }
	def m179():Void { var l:Float = (w4)+(-127); }
	def m180():Void { var l:Float = (w4)+(128); }
	def m181():Void { var l:Float = (w4)+(-128); }
	def m182():Void { var l:Float = (w4)+(255); }
	def m183():Void { var l:Float = (w4)+(-255); }
	def m184():Void { var l:Float = (w4)+(256); }
	def m185():Void { var l:Float = (w4)+(-256); }
	def m186():Void { var l:Float = (w4)+(32767); }
	def m187():Void { var l:Float = (w4)+(-32767); }
	def m188():Void { var l:Float = (w4)+(32768); }
	def m189():Void { var l:Float = (w4)+(-32768); }
	def m190():Void { var l:Float = (w4)+(65535); }
	def m191():Void { var l:Float = (w4)+(-65535); }
	def m192():Void { var l:Float = (w4)+(65536); }
	def m193():Void { var l:Float = (w4)+(-65536); }
	def m194():Void { var l:Float = (w4)+(16777216); }
	def m195():Void { var l:Float = (w4)+(-16777216); }
	def m196():Void { var l:Float = (w4)+(16777217); }
	def m197():Void { var l:Float = (w4)+(-16777217); }
	def m198():Void { var l:Float = (w4)+(2147483647); }
	def m199():Void { var l:Float = (w4)+(-2147483647); }
	def m200():Void { var l:Float = (w5)+(w0); }
	def m201():Void { var l:Float = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m202():Void { var l:Float = (w5)+(w2); }
	def m203():Void { var l:Float = (w5)+(w3); }
	def m204():Void { var l:Float = (w5)+(w4); }
	def m205():Void { var l:Float = (w5)+(w5); }
	def m206():Void { var l:Float = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m207():Void { var l:Float = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m208():Void { var l:Float = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m209():Void { var l:Float = (w5)+(w9); }
	def m210():Void { var l:Float = (w5)+(0); }
	def m211():Void { var l:Float = (w5)+(-0); }
	def m212():Void { var l:Float = (w5)+(1.1f); }
	def m213():Void { var l:Float = (w5)+(-1.1f); }
	def m214():Void { var l:Float = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m215():Void { var l:Float = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m216():Void { var l:Float = (w5)+(127); }
	def m217():Void { var l:Float = (w5)+(-127); }
	def m218():Void { var l:Float = (w5)+(128); }
	def m219():Void { var l:Float = (w5)+(-128); }
	def m220():Void { var l:Float = (w5)+(255); }
	def m221():Void { var l:Float = (w5)+(-255); }
	def m222():Void { var l:Float = (w5)+(256); }
	def m223():Void { var l:Float = (w5)+(-256); }
	def m224():Void { var l:Float = (w5)+(32767); }
	def m225():Void { var l:Float = (w5)+(-32767); }
	def m226():Void { var l:Float = (w5)+(32768); }
	def m227():Void { var l:Float = (w5)+(-32768); }
	def m228():Void { var l:Float = (w5)+(65535); }
	def m229():Void { var l:Float = (w5)+(-65535); }
	def m230():Void { var l:Float = (w5)+(65536); }
	def m231():Void { var l:Float = (w5)+(-65536); }
	def m232():Void { var l:Float = (w5)+(16777216); }
	def m233():Void { var l:Float = (w5)+(-16777216); }
	def m234():Void { var l:Float = (w5)+(16777217); }
	def m235():Void { var l:Float = (w5)+(-16777217); }
	def m236():Void { var l:Float = (w5)+(2147483647); }
	def m237():Void { var l:Float = (w5)+(-2147483647); }
	def m238():Void { var l:Float = (w6)+(w0); }
	def m239():Void { var l:Float = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m240():Void { var l:Float = (w6)+(w2); }
	def m241():Void { var l:Float = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte) in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m242():Void { var l:Float = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte) in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m243():Void { var l:Float = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte) in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m244():Void { var l:Float = (w6)+(w6); }
	def m245():Void { var l:Float = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m246():Void { var l:Float = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m247():Void { var l:Float = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m248():Void { var l:Float = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m249():Void { var l:Float = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m250():Void { var l:Float = (w6)+(1.1f); }
	def m251():Void { var l:Float = (w6)+(-1.1f); }
	def m252():Void { var l:Float = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m253():Void { var l:Float = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m254():Void { var l:Float = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m255():Void { var l:Float = (w6)+(-127); }
	def m256():Void { var l:Float = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m257():Void { var l:Float = (w6)+(-128); }
	def m258():Void { var l:Float = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m259():Void { var l:Float = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m260():Void { var l:Float = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m261():Void { var l:Float = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m262():Void { var l:Float = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m263():Void { var l:Float = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m264():Void { var l:Float = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m265():Void { var l:Float = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m266():Void { var l:Float = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m267():Void { var l:Float = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m268():Void { var l:Float = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m269():Void { var l:Float = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m270():Void { var l:Float = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m271():Void { var l:Float = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m272():Void { var l:Float = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m273():Void { var l:Float = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m274():Void { var l:Float = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m275():Void { var l:Float = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m276():Void { var l:Float = (w7)+(w0); }
	def m277():Void { var l:Float = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m278():Void { var l:Float = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt) in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m279():Void { var l:Float = (w7)+(w3); }
	def m280():Void { var l:Float = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt) in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m281():Void { var l:Float = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt) in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m282():Void { var l:Float = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt) in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m283():Void { var l:Float = (w7)+(w7); }
	def m284():Void { var l:Float = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m285():Void { var l:Float = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m286():Void { var l:Float = (w7)+(0); }
	def m287():Void { var l:Float = (w7)+(-0); }
	def m288():Void { var l:Float = (w7)+(1.1f); }
	def m289():Void { var l:Float = (w7)+(-1.1f); }
	def m290():Void { var l:Float = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m291():Void { var l:Float = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m292():Void { var l:Float = (w7)+(127); }
	def m293():Void { var l:Float = (w7)+(-127); }
	def m294():Void { var l:Float = (w7)+(128); }
	def m295():Void { var l:Float = (w7)+(-128); }
	def m296():Void { var l:Float = (w7)+(255); }
	def m297():Void { var l:Float = (w7)+(-255); }
	def m298():Void { var l:Float = (w7)+(256); }
	def m299():Void { var l:Float = (w7)+(-256); }
	def m300():Void { var l:Float = (w7)+(32767); }
	def m301():Void { var l:Float = (w7)+(-32767); }
	def m302():Void { var l:Float = (w7)+(32768); }
	def m303():Void { var l:Float = (w7)+(-32768); }
	def m304():Void { var l:Float = (w7)+(65535); }
	def m305():Void { var l:Float = (w7)+(-65535); }
	def m306():Void { var l:Float = (w7)+(65536); }
	def m307():Void { var l:Float = (w7)+(-65536); }
	def m308():Void { var l:Float = (w7)+(16777216); }
	def m309():Void { var l:Float = (w7)+(-16777216); }
	def m310():Void { var l:Float = (w7)+(16777217); }
	def m311():Void { var l:Float = (w7)+(-16777217); }
	def m312():Void { var l:Float = (w7)+(2147483647); }
	def m313():Void { var l:Float = (w7)+(-2147483647); }
	def m314():Void { var l:Float = (w8)+(w0); }
	def m315():Void { var l:Float = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m316():Void { var l:Float = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong) in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m317():Void { var l:Float = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong) in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m318():Void { var l:Float = (w8)+(w4); }
	def m319():Void { var l:Float = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong) in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m320():Void { var l:Float = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong) in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m321():Void { var l:Float = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong) in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m322():Void { var l:Float = (w8)+(w8); }
	def m323():Void { var l:Float = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m324():Void { var l:Float = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m325():Void { var l:Float = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m326():Void { var l:Float = (w8)+(1.1f); }
	def m327():Void { var l:Float = (w8)+(-1.1f); }
	def m328():Void { var l:Float = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m329():Void { var l:Float = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m330():Void { var l:Float = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m331():Void { var l:Float = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m332():Void { var l:Float = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m333():Void { var l:Float = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m334():Void { var l:Float = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m335():Void { var l:Float = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m336():Void { var l:Float = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m337():Void { var l:Float = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m338():Void { var l:Float = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m339():Void { var l:Float = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m340():Void { var l:Float = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m341():Void { var l:Float = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m342():Void { var l:Float = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m343():Void { var l:Float = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m344():Void { var l:Float = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m345():Void { var l:Float = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m346():Void { var l:Float = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m347():Void { var l:Float = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m348():Void { var l:Float = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m349():Void { var l:Float = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m350():Void { var l:Float = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m351():Void { var l:Float = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m352():Void { var l:Float = (w9)+(w0); }
	def m353():Void { var l:Float = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m354():Void { var l:Float = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m355():Void { var l:Float = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m356():Void { var l:Float = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m357():Void { var l:Float = (w9)+(w5); }
	def m358():Void { var l:Float = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m359():Void { var l:Float = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m360():Void { var l:Float = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort) in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m361():Void { var l:Float = (w9)+(w9); }
	def m362():Void { var l:Float = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m363():Void { var l:Float = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m364():Void { var l:Float = (w9)+(1.1f); }
	def m365():Void { var l:Float = (w9)+(-1.1f); }
	def m366():Void { var l:Float = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m367():Void { var l:Float = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m368():Void { var l:Float = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m369():Void { var l:Float = (w9)+(-127); }
	def m370():Void { var l:Float = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m371():Void { var l:Float = (w9)+(-128); }
	def m372():Void { var l:Float = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m373():Void { var l:Float = (w9)+(-255); }
	def m374():Void { var l:Float = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m375():Void { var l:Float = (w9)+(-256); }
	def m376():Void { var l:Float = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m377():Void { var l:Float = (w9)+(-32767); }
	def m378():Void { var l:Float = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m379():Void { var l:Float = (w9)+(-32768); }
	def m380():Void { var l:Float = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m381():Void { var l:Float = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m382():Void { var l:Float = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m383():Void { var l:Float = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m384():Void { var l:Float = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m385():Void { var l:Float = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m386():Void { var l:Float = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m387():Void { var l:Float = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m388():Void { var l:Float = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m389():Void { var l:Float = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m390():Void { var l:Float = (0)+(w0); }
	def m391():Void { var l:Float = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m392():Void { var l:Float = (0)+(w2); }
	def m393():Void { var l:Float = (0)+(w3); }
	def m394():Void { var l:Float = (0)+(w4); }
	def m395():Void { var l:Float = (0)+(w5); }
	def m396():Void { var l:Float = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m397():Void { var l:Float = (0)+(w7); }
	def m398():Void { var l:Float = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m399():Void { var l:Float = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m400():Void { var l:Float = (0)+(0); }
	def m401():Void { var l:Float = (0)+(-0); }
	def m402():Void { var l:Float = (0)+(1.1f); }
	def m403():Void { var l:Float = (0)+(-1.1f); }
	def m404():Void { var l:Float = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m405():Void { var l:Float = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m406():Void { var l:Float = (0)+(127); }
	def m407():Void { var l:Float = (0)+(-127); }
	def m408():Void { var l:Float = (0)+(128); }
	def m409():Void { var l:Float = (0)+(-128); }
	def m410():Void { var l:Float = (0)+(255); }
	def m411():Void { var l:Float = (0)+(-255); }
	def m412():Void { var l:Float = (0)+(256); }
	def m413():Void { var l:Float = (0)+(-256); }
	def m414():Void { var l:Float = (0)+(32767); }
	def m415():Void { var l:Float = (0)+(-32767); }
	def m416():Void { var l:Float = (0)+(32768); }
	def m417():Void { var l:Float = (0)+(-32768); }
	def m418():Void { var l:Float = (0)+(65535); }
	def m419():Void { var l:Float = (0)+(-65535); }
	def m420():Void { var l:Float = (0)+(65536); }
	def m421():Void { var l:Float = (0)+(-65536); }
	def m422():Void { var l:Float = (0)+(16777216); }
	def m423():Void { var l:Float = (0)+(-16777216); }
	def m424():Void { var l:Float = (0)+(16777217); }
	def m425():Void { var l:Float = (0)+(-16777217); }
	def m426():Void { var l:Float = (0)+(2147483647); }
	def m427():Void { var l:Float = (0)+(-2147483647); }
	def m428():Void { var l:Float = (-0)+(w0); }
	def m429():Void { var l:Float = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m430():Void { var l:Float = (-0)+(w2); }
	def m431():Void { var l:Float = (-0)+(w3); }
	def m432():Void { var l:Float = (-0)+(w4); }
	def m433():Void { var l:Float = (-0)+(w5); }
	def m434():Void { var l:Float = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m435():Void { var l:Float = (-0)+(w7); }
	def m436():Void { var l:Float = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m437():Void { var l:Float = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m438():Void { var l:Float = (-0)+(0); }
	def m439():Void { var l:Float = (-0)+(-0); }
	def m440():Void { var l:Float = (-0)+(1.1f); }
	def m441():Void { var l:Float = (-0)+(-1.1f); }
	def m442():Void { var l:Float = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m443():Void { var l:Float = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m444():Void { var l:Float = (-0)+(127); }
	def m445():Void { var l:Float = (-0)+(-127); }
	def m446():Void { var l:Float = (-0)+(128); }
	def m447():Void { var l:Float = (-0)+(-128); }
	def m448():Void { var l:Float = (-0)+(255); }
	def m449():Void { var l:Float = (-0)+(-255); }
	def m450():Void { var l:Float = (-0)+(256); }
	def m451():Void { var l:Float = (-0)+(-256); }
	def m452():Void { var l:Float = (-0)+(32767); }
	def m453():Void { var l:Float = (-0)+(-32767); }
	def m454():Void { var l:Float = (-0)+(32768); }
	def m455():Void { var l:Float = (-0)+(-32768); }
	def m456():Void { var l:Float = (-0)+(65535); }
	def m457():Void { var l:Float = (-0)+(-65535); }
	def m458():Void { var l:Float = (-0)+(65536); }
	def m459():Void { var l:Float = (-0)+(-65536); }
	def m460():Void { var l:Float = (-0)+(16777216); }
	def m461():Void { var l:Float = (-0)+(-16777216); }
	def m462():Void { var l:Float = (-0)+(16777217); }
	def m463():Void { var l:Float = (-0)+(-16777217); }
	def m464():Void { var l:Float = (-0)+(2147483647); }
	def m465():Void { var l:Float = (-0)+(-2147483647); }
	def m466():Void { var l:Float = (1.1f)+(w0); }
	def m467():Void { var l:Float = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m468():Void { var l:Float = (1.1f)+(w2); }
	def m469():Void { var l:Float = (1.1f)+(w3); }
	def m470():Void { var l:Float = (1.1f)+(w4); }
	def m471():Void { var l:Float = (1.1f)+(w5); }
	def m472():Void { var l:Float = (1.1f)+(w6); }
	def m473():Void { var l:Float = (1.1f)+(w7); }
	def m474():Void { var l:Float = (1.1f)+(w8); }
	def m475():Void { var l:Float = (1.1f)+(w9); }
	def m476():Void { var l:Float = (1.1f)+(0); }
	def m477():Void { var l:Float = (1.1f)+(-0); }
	def m478():Void { var l:Float = (1.1f)+(1.1f); }
	def m479():Void { var l:Float = (1.1f)+(-1.1f); }
	def m480():Void { var l:Float = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m481():Void { var l:Float = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m482():Void { var l:Float = (1.1f)+(127); }
	def m483():Void { var l:Float = (1.1f)+(-127); }
	def m484():Void { var l:Float = (1.1f)+(128); }
	def m485():Void { var l:Float = (1.1f)+(-128); }
	def m486():Void { var l:Float = (1.1f)+(255); }
	def m487():Void { var l:Float = (1.1f)+(-255); }
	def m488():Void { var l:Float = (1.1f)+(256); }
	def m489():Void { var l:Float = (1.1f)+(-256); }
	def m490():Void { var l:Float = (1.1f)+(32767); }
	def m491():Void { var l:Float = (1.1f)+(-32767); }
	def m492():Void { var l:Float = (1.1f)+(32768); }
	def m493():Void { var l:Float = (1.1f)+(-32768); }
	def m494():Void { var l:Float = (1.1f)+(65535); }
	def m495():Void { var l:Float = (1.1f)+(-65535); }
	def m496():Void { var l:Float = (1.1f)+(65536); }
	def m497():Void { var l:Float = (1.1f)+(-65536); }
	def m498():Void { var l:Float = (1.1f)+(16777216); }
	def m499():Void { var l:Float = (1.1f)+(-16777216); }
	def m500():Void { var l:Float = (1.1f)+(16777217); }
	def m501():Void { var l:Float = (1.1f)+(-16777217); }
	def m502():Void { var l:Float = (1.1f)+(2147483647); }
	def m503():Void { var l:Float = (1.1f)+(-2147483647); }
	def m504():Void { var l:Float = (-1.1f)+(w0); }
	def m505():Void { var l:Float = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m506():Void { var l:Float = (-1.1f)+(w2); }
	def m507():Void { var l:Float = (-1.1f)+(w3); }
	def m508():Void { var l:Float = (-1.1f)+(w4); }
	def m509():Void { var l:Float = (-1.1f)+(w5); }
	def m510():Void { var l:Float = (-1.1f)+(w6); }
	def m511():Void { var l:Float = (-1.1f)+(w7); }
	def m512():Void { var l:Float = (-1.1f)+(w8); }
	def m513():Void { var l:Float = (-1.1f)+(w9); }
	def m514():Void { var l:Float = (-1.1f)+(0); }
	def m515():Void { var l:Float = (-1.1f)+(-0); }
	def m516():Void { var l:Float = (-1.1f)+(1.1f); }
	def m517():Void { var l:Float = (-1.1f)+(-1.1f); }
	def m518():Void { var l:Float = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m519():Void { var l:Float = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m520():Void { var l:Float = (-1.1f)+(127); }
	def m521():Void { var l:Float = (-1.1f)+(-127); }
	def m522():Void { var l:Float = (-1.1f)+(128); }
	def m523():Void { var l:Float = (-1.1f)+(-128); }
	def m524():Void { var l:Float = (-1.1f)+(255); }
	def m525():Void { var l:Float = (-1.1f)+(-255); }
	def m526():Void { var l:Float = (-1.1f)+(256); }
	def m527():Void { var l:Float = (-1.1f)+(-256); }
	def m528():Void { var l:Float = (-1.1f)+(32767); }
	def m529():Void { var l:Float = (-1.1f)+(-32767); }
	def m530():Void { var l:Float = (-1.1f)+(32768); }
	def m531():Void { var l:Float = (-1.1f)+(-32768); }
	def m532():Void { var l:Float = (-1.1f)+(65535); }
	def m533():Void { var l:Float = (-1.1f)+(-65535); }
	def m534():Void { var l:Float = (-1.1f)+(65536); }
	def m535():Void { var l:Float = (-1.1f)+(-65536); }
	def m536():Void { var l:Float = (-1.1f)+(16777216); }
	def m537():Void { var l:Float = (-1.1f)+(-16777216); }
	def m538():Void { var l:Float = (-1.1f)+(16777217); }
	def m539():Void { var l:Float = (-1.1f)+(-16777217); }
	def m540():Void { var l:Float = (-1.1f)+(2147483647); }
	def m541():Void { var l:Float = (-1.1f)+(-2147483647); }
	def m542():Void { var l:Float = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m543():Void { var l:Float = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m544():Void { var l:Float = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m545():Void { var l:Float = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m546():Void { var l:Float = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m547():Void { var l:Float = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m548():Void { var l:Float = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m549():Void { var l:Float = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m550():Void { var l:Float = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m551():Void { var l:Float = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m552():Void { var l:Float = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m553():Void { var l:Float = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m554():Void { var l:Float = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m555():Void { var l:Float = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m556():Void { var l:Float = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m557():Void { var l:Float = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m558():Void { var l:Float = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m559():Void { var l:Float = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m560():Void { var l:Float = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m561():Void { var l:Float = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m562():Void { var l:Float = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m563():Void { var l:Float = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m564():Void { var l:Float = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m565():Void { var l:Float = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m566():Void { var l:Float = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m567():Void { var l:Float = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m568():Void { var l:Float = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m569():Void { var l:Float = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m570():Void { var l:Float = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m571():Void { var l:Float = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m572():Void { var l:Float = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m573():Void { var l:Float = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m574():Void { var l:Float = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m575():Void { var l:Float = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m576():Void { var l:Float = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m577():Void { var l:Float = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m578():Void { var l:Float = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m579():Void { var l:Float = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m580():Void { var l:Float = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m581():Void { var l:Float = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m582():Void { var l:Float = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m583():Void { var l:Float = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m584():Void { var l:Float = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m585():Void { var l:Float = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m586():Void { var l:Float = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m587():Void { var l:Float = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m588():Void { var l:Float = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m589():Void { var l:Float = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m590():Void { var l:Float = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m591():Void { var l:Float = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m592():Void { var l:Float = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m593():Void { var l:Float = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m594():Void { var l:Float = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m595():Void { var l:Float = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m596():Void { var l:Float = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m597():Void { var l:Float = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m598():Void { var l:Float = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m599():Void { var l:Float = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m600():Void { var l:Float = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m601():Void { var l:Float = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m602():Void { var l:Float = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m603():Void { var l:Float = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m604():Void { var l:Float = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m605():Void { var l:Float = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m606():Void { var l:Float = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m607():Void { var l:Float = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m608():Void { var l:Float = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m609():Void { var l:Float = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m610():Void { var l:Float = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m611():Void { var l:Float = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m612():Void { var l:Float = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m613():Void { var l:Float = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m614():Void { var l:Float = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m615():Void { var l:Float = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m616():Void { var l:Float = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m617():Void { var l:Float = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m618():Void { var l:Float = (127)+(w0); }
	def m619():Void { var l:Float = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m620():Void { var l:Float = (127)+(w2); }
	def m621():Void { var l:Float = (127)+(w3); }
	def m622():Void { var l:Float = (127)+(w4); }
	def m623():Void { var l:Float = (127)+(w5); }
	def m624():Void { var l:Float = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m625():Void { var l:Float = (127)+(w7); }
	def m626():Void { var l:Float = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m627():Void { var l:Float = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m628():Void { var l:Float = (127)+(0); }
	def m629():Void { var l:Float = (127)+(-0); }
	def m630():Void { var l:Float = (127)+(1.1f); }
	def m631():Void { var l:Float = (127)+(-1.1f); }
	def m632():Void { var l:Float = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m633():Void { var l:Float = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m634():Void { var l:Float = (127)+(127); }
	def m635():Void { var l:Float = (127)+(-127); }
	def m636():Void { var l:Float = (127)+(128); }
	def m637():Void { var l:Float = (127)+(-128); }
	def m638():Void { var l:Float = (127)+(255); }
	def m639():Void { var l:Float = (127)+(-255); }
	def m640():Void { var l:Float = (127)+(256); }
	def m641():Void { var l:Float = (127)+(-256); }
	def m642():Void { var l:Float = (127)+(32767); }
	def m643():Void { var l:Float = (127)+(-32767); }
	def m644():Void { var l:Float = (127)+(32768); }
	def m645():Void { var l:Float = (127)+(-32768); }
	def m646():Void { var l:Float = (127)+(65535); }
	def m647():Void { var l:Float = (127)+(-65535); }
	def m648():Void { var l:Float = (127)+(65536); }
	def m649():Void { var l:Float = (127)+(-65536); }
	def m650():Void { var l:Float = (127)+(16777216); }
	def m651():Void { var l:Float = (127)+(-16777216); }
	def m652():Void { var l:Float = (127)+(16777217); }
	def m653():Void { var l:Float = (127)+(-16777217); }
	def m654():Void { var l:Float = (127)+(2147483647); }
	def m655():Void { var l:Float = (127)+(-2147483647); }
	def m656():Void { var l:Float = (-127)+(w0); }
	def m657():Void { var l:Float = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m658():Void { var l:Float = (-127)+(w2); }
	def m659():Void { var l:Float = (-127)+(w3); }
	def m660():Void { var l:Float = (-127)+(w4); }
	def m661():Void { var l:Float = (-127)+(w5); }
	def m662():Void { var l:Float = (-127)+(w6); }
	def m663():Void { var l:Float = (-127)+(w7); }
	def m664():Void { var l:Float = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m665():Void { var l:Float = (-127)+(w9); }
	def m666():Void { var l:Float = (-127)+(0); }
	def m667():Void { var l:Float = (-127)+(-0); }
	def m668():Void { var l:Float = (-127)+(1.1f); }
	def m669():Void { var l:Float = (-127)+(-1.1f); }
	def m670():Void { var l:Float = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m671():Void { var l:Float = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m672():Void { var l:Float = (-127)+(127); }
	def m673():Void { var l:Float = (-127)+(-127); }
	def m674():Void { var l:Float = (-127)+(128); }
	def m675():Void { var l:Float = (-127)+(-128); }
	def m676():Void { var l:Float = (-127)+(255); }
	def m677():Void { var l:Float = (-127)+(-255); }
	def m678():Void { var l:Float = (-127)+(256); }
	def m679():Void { var l:Float = (-127)+(-256); }
	def m680():Void { var l:Float = (-127)+(32767); }
	def m681():Void { var l:Float = (-127)+(-32767); }
	def m682():Void { var l:Float = (-127)+(32768); }
	def m683():Void { var l:Float = (-127)+(-32768); }
	def m684():Void { var l:Float = (-127)+(65535); }
	def m685():Void { var l:Float = (-127)+(-65535); }
	def m686():Void { var l:Float = (-127)+(65536); }
	def m687():Void { var l:Float = (-127)+(-65536); }
	def m688():Void { var l:Float = (-127)+(16777216); }
	def m689():Void { var l:Float = (-127)+(-16777216); }
	def m690():Void { var l:Float = (-127)+(16777217); }
	def m691():Void { var l:Float = (-127)+(-16777217); }
	def m692():Void { var l:Float = (-127)+(2147483647); }
	def m693():Void { var l:Float = (-127)+(-2147483647); }
	def m694():Void { var l:Float = (128)+(w0); }
	def m695():Void { var l:Float = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m696():Void { var l:Float = (128)+(w2); }
	def m697():Void { var l:Float = (128)+(w3); }
	def m698():Void { var l:Float = (128)+(w4); }
	def m699():Void { var l:Float = (128)+(w5); }
	def m700():Void { var l:Float = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m701():Void { var l:Float = (128)+(w7); }
	def m702():Void { var l:Float = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m703():Void { var l:Float = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m704():Void { var l:Float = (128)+(0); }
	def m705():Void { var l:Float = (128)+(-0); }
	def m706():Void { var l:Float = (128)+(1.1f); }
	def m707():Void { var l:Float = (128)+(-1.1f); }
	def m708():Void { var l:Float = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m709():Void { var l:Float = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m710():Void { var l:Float = (128)+(127); }
	def m711():Void { var l:Float = (128)+(-127); }
	def m712():Void { var l:Float = (128)+(128); }
	def m713():Void { var l:Float = (128)+(-128); }
	def m714():Void { var l:Float = (128)+(255); }
	def m715():Void { var l:Float = (128)+(-255); }
	def m716():Void { var l:Float = (128)+(256); }
	def m717():Void { var l:Float = (128)+(-256); }
	def m718():Void { var l:Float = (128)+(32767); }
	def m719():Void { var l:Float = (128)+(-32767); }
	def m720():Void { var l:Float = (128)+(32768); }
	def m721():Void { var l:Float = (128)+(-32768); }
	def m722():Void { var l:Float = (128)+(65535); }
	def m723():Void { var l:Float = (128)+(-65535); }
	def m724():Void { var l:Float = (128)+(65536); }
	def m725():Void { var l:Float = (128)+(-65536); }
	def m726():Void { var l:Float = (128)+(16777216); }
	def m727():Void { var l:Float = (128)+(-16777216); }
	def m728():Void { var l:Float = (128)+(16777217); }
	def m729():Void { var l:Float = (128)+(-16777217); }
	def m730():Void { var l:Float = (128)+(2147483647); }
	def m731():Void { var l:Float = (128)+(-2147483647); }
	def m732():Void { var l:Float = (-128)+(w0); }
	def m733():Void { var l:Float = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m734():Void { var l:Float = (-128)+(w2); }
	def m735():Void { var l:Float = (-128)+(w3); }
	def m736():Void { var l:Float = (-128)+(w4); }
	def m737():Void { var l:Float = (-128)+(w5); }
	def m738():Void { var l:Float = (-128)+(w6); }
	def m739():Void { var l:Float = (-128)+(w7); }
	def m740():Void { var l:Float = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m741():Void { var l:Float = (-128)+(w9); }
	def m742():Void { var l:Float = (-128)+(0); }
	def m743():Void { var l:Float = (-128)+(-0); }
	def m744():Void { var l:Float = (-128)+(1.1f); }
	def m745():Void { var l:Float = (-128)+(-1.1f); }
	def m746():Void { var l:Float = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m747():Void { var l:Float = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m748():Void { var l:Float = (-128)+(127); }
	def m749():Void { var l:Float = (-128)+(-127); }
	def m750():Void { var l:Float = (-128)+(128); }
	def m751():Void { var l:Float = (-128)+(-128); }
	def m752():Void { var l:Float = (-128)+(255); }
	def m753():Void { var l:Float = (-128)+(-255); }
	def m754():Void { var l:Float = (-128)+(256); }
	def m755():Void { var l:Float = (-128)+(-256); }
	def m756():Void { var l:Float = (-128)+(32767); }
	def m757():Void { var l:Float = (-128)+(-32767); }
	def m758():Void { var l:Float = (-128)+(32768); }
	def m759():Void { var l:Float = (-128)+(-32768); }
	def m760():Void { var l:Float = (-128)+(65535); }
	def m761():Void { var l:Float = (-128)+(-65535); }
	def m762():Void { var l:Float = (-128)+(65536); }
	def m763():Void { var l:Float = (-128)+(-65536); }
	def m764():Void { var l:Float = (-128)+(16777216); }
	def m765():Void { var l:Float = (-128)+(-16777216); }
	def m766():Void { var l:Float = (-128)+(16777217); }
	def m767():Void { var l:Float = (-128)+(-16777217); }
	def m768():Void { var l:Float = (-128)+(2147483647); }
	def m769():Void { var l:Float = (-128)+(-2147483647); }
	def m770():Void { var l:Float = (255)+(w0); }
	def m771():Void { var l:Float = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m772():Void { var l:Float = (255)+(w2); }
	def m773():Void { var l:Float = (255)+(w3); }
	def m774():Void { var l:Float = (255)+(w4); }
	def m775():Void { var l:Float = (255)+(w5); }
	def m776():Void { var l:Float = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m777():Void { var l:Float = (255)+(w7); }
	def m778():Void { var l:Float = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m779():Void { var l:Float = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m780():Void { var l:Float = (255)+(0); }
	def m781():Void { var l:Float = (255)+(-0); }
	def m782():Void { var l:Float = (255)+(1.1f); }
	def m783():Void { var l:Float = (255)+(-1.1f); }
	def m784():Void { var l:Float = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m785():Void { var l:Float = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m786():Void { var l:Float = (255)+(127); }
	def m787():Void { var l:Float = (255)+(-127); }
	def m788():Void { var l:Float = (255)+(128); }
	def m789():Void { var l:Float = (255)+(-128); }
	def m790():Void { var l:Float = (255)+(255); }
	def m791():Void { var l:Float = (255)+(-255); }
	def m792():Void { var l:Float = (255)+(256); }
	def m793():Void { var l:Float = (255)+(-256); }
	def m794():Void { var l:Float = (255)+(32767); }
	def m795():Void { var l:Float = (255)+(-32767); }
	def m796():Void { var l:Float = (255)+(32768); }
	def m797():Void { var l:Float = (255)+(-32768); }
	def m798():Void { var l:Float = (255)+(65535); }
	def m799():Void { var l:Float = (255)+(-65535); }
	def m800():Void { var l:Float = (255)+(65536); }
	def m801():Void { var l:Float = (255)+(-65536); }
	def m802():Void { var l:Float = (255)+(16777216); }
	def m803():Void { var l:Float = (255)+(-16777216); }
	def m804():Void { var l:Float = (255)+(16777217); }
	def m805():Void { var l:Float = (255)+(-16777217); }
	def m806():Void { var l:Float = (255)+(2147483647); }
	def m807():Void { var l:Float = (255)+(-2147483647); }
	def m808():Void { var l:Float = (-255)+(w0); }
	def m809():Void { var l:Float = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m810():Void { var l:Float = (-255)+(w2); }
	def m811():Void { var l:Float = (-255)+(w3); }
	def m812():Void { var l:Float = (-255)+(w4); }
	def m813():Void { var l:Float = (-255)+(w5); }
	def m814():Void { var l:Float = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m815():Void { var l:Float = (-255)+(w7); }
	def m816():Void { var l:Float = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m817():Void { var l:Float = (-255)+(w9); }
	def m818():Void { var l:Float = (-255)+(0); }
	def m819():Void { var l:Float = (-255)+(-0); }
	def m820():Void { var l:Float = (-255)+(1.1f); }
	def m821():Void { var l:Float = (-255)+(-1.1f); }
	def m822():Void { var l:Float = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m823():Void { var l:Float = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m824():Void { var l:Float = (-255)+(127); }
	def m825():Void { var l:Float = (-255)+(-127); }
	def m826():Void { var l:Float = (-255)+(128); }
	def m827():Void { var l:Float = (-255)+(-128); }
	def m828():Void { var l:Float = (-255)+(255); }
	def m829():Void { var l:Float = (-255)+(-255); }
	def m830():Void { var l:Float = (-255)+(256); }
	def m831():Void { var l:Float = (-255)+(-256); }
	def m832():Void { var l:Float = (-255)+(32767); }
	def m833():Void { var l:Float = (-255)+(-32767); }
	def m834():Void { var l:Float = (-255)+(32768); }
	def m835():Void { var l:Float = (-255)+(-32768); }
	def m836():Void { var l:Float = (-255)+(65535); }
	def m837():Void { var l:Float = (-255)+(-65535); }
	def m838():Void { var l:Float = (-255)+(65536); }
	def m839():Void { var l:Float = (-255)+(-65536); }
	def m840():Void { var l:Float = (-255)+(16777216); }
	def m841():Void { var l:Float = (-255)+(-16777216); }
	def m842():Void { var l:Float = (-255)+(16777217); }
	def m843():Void { var l:Float = (-255)+(-16777217); }
	def m844():Void { var l:Float = (-255)+(2147483647); }
	def m845():Void { var l:Float = (-255)+(-2147483647); }
	def m846():Void { var l:Float = (256)+(w0); }
	def m847():Void { var l:Float = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m848():Void { var l:Float = (256)+(w2); }
	def m849():Void { var l:Float = (256)+(w3); }
	def m850():Void { var l:Float = (256)+(w4); }
	def m851():Void { var l:Float = (256)+(w5); }
	def m852():Void { var l:Float = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m853():Void { var l:Float = (256)+(w7); }
	def m854():Void { var l:Float = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m855():Void { var l:Float = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m856():Void { var l:Float = (256)+(0); }
	def m857():Void { var l:Float = (256)+(-0); }
	def m858():Void { var l:Float = (256)+(1.1f); }
	def m859():Void { var l:Float = (256)+(-1.1f); }
	def m860():Void { var l:Float = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m861():Void { var l:Float = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m862():Void { var l:Float = (256)+(127); }
	def m863():Void { var l:Float = (256)+(-127); }
	def m864():Void { var l:Float = (256)+(128); }
	def m865():Void { var l:Float = (256)+(-128); }
	def m866():Void { var l:Float = (256)+(255); }
	def m867():Void { var l:Float = (256)+(-255); }
	def m868():Void { var l:Float = (256)+(256); }
	def m869():Void { var l:Float = (256)+(-256); }
	def m870():Void { var l:Float = (256)+(32767); }
	def m871():Void { var l:Float = (256)+(-32767); }
	def m872():Void { var l:Float = (256)+(32768); }
	def m873():Void { var l:Float = (256)+(-32768); }
	def m874():Void { var l:Float = (256)+(65535); }
	def m875():Void { var l:Float = (256)+(-65535); }
	def m876():Void { var l:Float = (256)+(65536); }
	def m877():Void { var l:Float = (256)+(-65536); }
	def m878():Void { var l:Float = (256)+(16777216); }
	def m879():Void { var l:Float = (256)+(-16777216); }
	def m880():Void { var l:Float = (256)+(16777217); }
	def m881():Void { var l:Float = (256)+(-16777217); }
	def m882():Void { var l:Float = (256)+(2147483647); }
	def m883():Void { var l:Float = (256)+(-2147483647); }
	def m884():Void { var l:Float = (-256)+(w0); }
	def m885():Void { var l:Float = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m886():Void { var l:Float = (-256)+(w2); }
	def m887():Void { var l:Float = (-256)+(w3); }
	def m888():Void { var l:Float = (-256)+(w4); }
	def m889():Void { var l:Float = (-256)+(w5); }
	def m890():Void { var l:Float = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m891():Void { var l:Float = (-256)+(w7); }
	def m892():Void { var l:Float = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m893():Void { var l:Float = (-256)+(w9); }
	def m894():Void { var l:Float = (-256)+(0); }
	def m895():Void { var l:Float = (-256)+(-0); }
	def m896():Void { var l:Float = (-256)+(1.1f); }
	def m897():Void { var l:Float = (-256)+(-1.1f); }
	def m898():Void { var l:Float = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m899():Void { var l:Float = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m900():Void { var l:Float = (-256)+(127); }
	def m901():Void { var l:Float = (-256)+(-127); }
	def m902():Void { var l:Float = (-256)+(128); }
	def m903():Void { var l:Float = (-256)+(-128); }
	def m904():Void { var l:Float = (-256)+(255); }
	def m905():Void { var l:Float = (-256)+(-255); }
	def m906():Void { var l:Float = (-256)+(256); }
	def m907():Void { var l:Float = (-256)+(-256); }
	def m908():Void { var l:Float = (-256)+(32767); }
	def m909():Void { var l:Float = (-256)+(-32767); }
	def m910():Void { var l:Float = (-256)+(32768); }
	def m911():Void { var l:Float = (-256)+(-32768); }
	def m912():Void { var l:Float = (-256)+(65535); }
	def m913():Void { var l:Float = (-256)+(-65535); }
	def m914():Void { var l:Float = (-256)+(65536); }
	def m915():Void { var l:Float = (-256)+(-65536); }
	def m916():Void { var l:Float = (-256)+(16777216); }
	def m917():Void { var l:Float = (-256)+(-16777216); }
	def m918():Void { var l:Float = (-256)+(16777217); }
	def m919():Void { var l:Float = (-256)+(-16777217); }
	def m920():Void { var l:Float = (-256)+(2147483647); }
	def m921():Void { var l:Float = (-256)+(-2147483647); }
	def m922():Void { var l:Float = (32767)+(w0); }
	def m923():Void { var l:Float = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m924():Void { var l:Float = (32767)+(w2); }
	def m925():Void { var l:Float = (32767)+(w3); }
	def m926():Void { var l:Float = (32767)+(w4); }
	def m927():Void { var l:Float = (32767)+(w5); }
	def m928():Void { var l:Float = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m929():Void { var l:Float = (32767)+(w7); }
	def m930():Void { var l:Float = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m931():Void { var l:Float = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m932():Void { var l:Float = (32767)+(0); }
	def m933():Void { var l:Float = (32767)+(-0); }
	def m934():Void { var l:Float = (32767)+(1.1f); }
	def m935():Void { var l:Float = (32767)+(-1.1f); }
	def m936():Void { var l:Float = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m937():Void { var l:Float = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m938():Void { var l:Float = (32767)+(127); }
	def m939():Void { var l:Float = (32767)+(-127); }
	def m940():Void { var l:Float = (32767)+(128); }
	def m941():Void { var l:Float = (32767)+(-128); }
	def m942():Void { var l:Float = (32767)+(255); }
	def m943():Void { var l:Float = (32767)+(-255); }
	def m944():Void { var l:Float = (32767)+(256); }
	def m945():Void { var l:Float = (32767)+(-256); }
	def m946():Void { var l:Float = (32767)+(32767); }
	def m947():Void { var l:Float = (32767)+(-32767); }
	def m948():Void { var l:Float = (32767)+(32768); }
	def m949():Void { var l:Float = (32767)+(-32768); }
	def m950():Void { var l:Float = (32767)+(65535); }
	def m951():Void { var l:Float = (32767)+(-65535); }
	def m952():Void { var l:Float = (32767)+(65536); }
	def m953():Void { var l:Float = (32767)+(-65536); }
	def m954():Void { var l:Float = (32767)+(16777216); }
	def m955():Void { var l:Float = (32767)+(-16777216); }
	def m956():Void { var l:Float = (32767)+(16777217); }
	def m957():Void { var l:Float = (32767)+(-16777217); }
	def m958():Void { var l:Float = (32767)+(2147483647); }
	def m959():Void { var l:Float = (32767)+(-2147483647); }
	def m960():Void { var l:Float = (-32767)+(w0); }
	def m961():Void { var l:Float = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m962():Void { var l:Float = (-32767)+(w2); }
	def m963():Void { var l:Float = (-32767)+(w3); }
	def m964():Void { var l:Float = (-32767)+(w4); }
	def m965():Void { var l:Float = (-32767)+(w5); }
	def m966():Void { var l:Float = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m967():Void { var l:Float = (-32767)+(w7); }
	def m968():Void { var l:Float = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m969():Void { var l:Float = (-32767)+(w9); }
	def m970():Void { var l:Float = (-32767)+(0); }
	def m971():Void { var l:Float = (-32767)+(-0); }
	def m972():Void { var l:Float = (-32767)+(1.1f); }
	def m973():Void { var l:Float = (-32767)+(-1.1f); }
	def m974():Void { var l:Float = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m975():Void { var l:Float = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m976():Void { var l:Float = (-32767)+(127); }
	def m977():Void { var l:Float = (-32767)+(-127); }
	def m978():Void { var l:Float = (-32767)+(128); }
	def m979():Void { var l:Float = (-32767)+(-128); }
	def m980():Void { var l:Float = (-32767)+(255); }
	def m981():Void { var l:Float = (-32767)+(-255); }
	def m982():Void { var l:Float = (-32767)+(256); }
	def m983():Void { var l:Float = (-32767)+(-256); }
	def m984():Void { var l:Float = (-32767)+(32767); }
	def m985():Void { var l:Float = (-32767)+(-32767); }
	def m986():Void { var l:Float = (-32767)+(32768); }
	def m987():Void { var l:Float = (-32767)+(-32768); }
	def m988():Void { var l:Float = (-32767)+(65535); }
	def m989():Void { var l:Float = (-32767)+(-65535); }
	def m990():Void { var l:Float = (-32767)+(65536); }
	def m991():Void { var l:Float = (-32767)+(-65536); }
	def m992():Void { var l:Float = (-32767)+(16777216); }
	def m993():Void { var l:Float = (-32767)+(-16777216); }
	def m994():Void { var l:Float = (-32767)+(16777217); }
	def m995():Void { var l:Float = (-32767)+(-16777217); }
	def m996():Void { var l:Float = (-32767)+(2147483647); }
	def m997():Void { var l:Float = (-32767)+(-2147483647); }
	def m998():Void { var l:Float = (32768)+(w0); }
	def m999():Void { var l:Float = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1000():Void { var l:Float = (32768)+(w2); }
	def m1001():Void { var l:Float = (32768)+(w3); }
	def m1002():Void { var l:Float = (32768)+(w4); }
	def m1003():Void { var l:Float = (32768)+(w5); }
	def m1004():Void { var l:Float = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1005():Void { var l:Float = (32768)+(w7); }
	def m1006():Void { var l:Float = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1007():Void { var l:Float = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1008():Void { var l:Float = (32768)+(0); }
	def m1009():Void { var l:Float = (32768)+(-0); }
	def m1010():Void { var l:Float = (32768)+(1.1f); }
	def m1011():Void { var l:Float = (32768)+(-1.1f); }
	def m1012():Void { var l:Float = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1013():Void { var l:Float = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1014():Void { var l:Float = (32768)+(127); }
	def m1015():Void { var l:Float = (32768)+(-127); }
	def m1016():Void { var l:Float = (32768)+(128); }
	def m1017():Void { var l:Float = (32768)+(-128); }
	def m1018():Void { var l:Float = (32768)+(255); }
	def m1019():Void { var l:Float = (32768)+(-255); }
	def m1020():Void { var l:Float = (32768)+(256); }
	def m1021():Void { var l:Float = (32768)+(-256); }
	def m1022():Void { var l:Float = (32768)+(32767); }
	def m1023():Void { var l:Float = (32768)+(-32767); }
	def m1024():Void { var l:Float = (32768)+(32768); }
	def m1025():Void { var l:Float = (32768)+(-32768); }
	def m1026():Void { var l:Float = (32768)+(65535); }
	def m1027():Void { var l:Float = (32768)+(-65535); }
	def m1028():Void { var l:Float = (32768)+(65536); }
	def m1029():Void { var l:Float = (32768)+(-65536); }
	def m1030():Void { var l:Float = (32768)+(16777216); }
	def m1031():Void { var l:Float = (32768)+(-16777216); }
	def m1032():Void { var l:Float = (32768)+(16777217); }
	def m1033():Void { var l:Float = (32768)+(-16777217); }
	def m1034():Void { var l:Float = (32768)+(2147483647); }
	def m1035():Void { var l:Float = (32768)+(-2147483647); }
	def m1036():Void { var l:Float = (-32768)+(w0); }
	def m1037():Void { var l:Float = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1038():Void { var l:Float = (-32768)+(w2); }
	def m1039():Void { var l:Float = (-32768)+(w3); }
	def m1040():Void { var l:Float = (-32768)+(w4); }
	def m1041():Void { var l:Float = (-32768)+(w5); }
	def m1042():Void { var l:Float = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1043():Void { var l:Float = (-32768)+(w7); }
	def m1044():Void { var l:Float = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1045():Void { var l:Float = (-32768)+(w9); }
	def m1046():Void { var l:Float = (-32768)+(0); }
	def m1047():Void { var l:Float = (-32768)+(-0); }
	def m1048():Void { var l:Float = (-32768)+(1.1f); }
	def m1049():Void { var l:Float = (-32768)+(-1.1f); }
	def m1050():Void { var l:Float = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1051():Void { var l:Float = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1052():Void { var l:Float = (-32768)+(127); }
	def m1053():Void { var l:Float = (-32768)+(-127); }
	def m1054():Void { var l:Float = (-32768)+(128); }
	def m1055():Void { var l:Float = (-32768)+(-128); }
	def m1056():Void { var l:Float = (-32768)+(255); }
	def m1057():Void { var l:Float = (-32768)+(-255); }
	def m1058():Void { var l:Float = (-32768)+(256); }
	def m1059():Void { var l:Float = (-32768)+(-256); }
	def m1060():Void { var l:Float = (-32768)+(32767); }
	def m1061():Void { var l:Float = (-32768)+(-32767); }
	def m1062():Void { var l:Float = (-32768)+(32768); }
	def m1063():Void { var l:Float = (-32768)+(-32768); }
	def m1064():Void { var l:Float = (-32768)+(65535); }
	def m1065():Void { var l:Float = (-32768)+(-65535); }
	def m1066():Void { var l:Float = (-32768)+(65536); }
	def m1067():Void { var l:Float = (-32768)+(-65536); }
	def m1068():Void { var l:Float = (-32768)+(16777216); }
	def m1069():Void { var l:Float = (-32768)+(-16777216); }
	def m1070():Void { var l:Float = (-32768)+(16777217); }
	def m1071():Void { var l:Float = (-32768)+(-16777217); }
	def m1072():Void { var l:Float = (-32768)+(2147483647); }
	def m1073():Void { var l:Float = (-32768)+(-2147483647); }
	def m1074():Void { var l:Float = (65535)+(w0); }
	def m1075():Void { var l:Float = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1076():Void { var l:Float = (65535)+(w2); }
	def m1077():Void { var l:Float = (65535)+(w3); }
	def m1078():Void { var l:Float = (65535)+(w4); }
	def m1079():Void { var l:Float = (65535)+(w5); }
	def m1080():Void { var l:Float = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1081():Void { var l:Float = (65535)+(w7); }
	def m1082():Void { var l:Float = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1083():Void { var l:Float = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1084():Void { var l:Float = (65535)+(0); }
	def m1085():Void { var l:Float = (65535)+(-0); }
	def m1086():Void { var l:Float = (65535)+(1.1f); }
	def m1087():Void { var l:Float = (65535)+(-1.1f); }
	def m1088():Void { var l:Float = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1089():Void { var l:Float = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1090():Void { var l:Float = (65535)+(127); }
	def m1091():Void { var l:Float = (65535)+(-127); }
	def m1092():Void { var l:Float = (65535)+(128); }
	def m1093():Void { var l:Float = (65535)+(-128); }
	def m1094():Void { var l:Float = (65535)+(255); }
	def m1095():Void { var l:Float = (65535)+(-255); }
	def m1096():Void { var l:Float = (65535)+(256); }
	def m1097():Void { var l:Float = (65535)+(-256); }
	def m1098():Void { var l:Float = (65535)+(32767); }
	def m1099():Void { var l:Float = (65535)+(-32767); }
	def m1100():Void { var l:Float = (65535)+(32768); }
	def m1101():Void { var l:Float = (65535)+(-32768); }
	def m1102():Void { var l:Float = (65535)+(65535); }
	def m1103():Void { var l:Float = (65535)+(-65535); }
	def m1104():Void { var l:Float = (65535)+(65536); }
	def m1105():Void { var l:Float = (65535)+(-65536); }
	def m1106():Void { var l:Float = (65535)+(16777216); }
	def m1107():Void { var l:Float = (65535)+(-16777216); }
	def m1108():Void { var l:Float = (65535)+(16777217); }
	def m1109():Void { var l:Float = (65535)+(-16777217); }
	def m1110():Void { var l:Float = (65535)+(2147483647); }
	def m1111():Void { var l:Float = (65535)+(-2147483647); }
	def m1112():Void { var l:Float = (-65535)+(w0); }
	def m1113():Void { var l:Float = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1114():Void { var l:Float = (-65535)+(w2); }
	def m1115():Void { var l:Float = (-65535)+(w3); }
	def m1116():Void { var l:Float = (-65535)+(w4); }
	def m1117():Void { var l:Float = (-65535)+(w5); }
	def m1118():Void { var l:Float = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1119():Void { var l:Float = (-65535)+(w7); }
	def m1120():Void { var l:Float = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1121():Void { var l:Float = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1122():Void { var l:Float = (-65535)+(0); }
	def m1123():Void { var l:Float = (-65535)+(-0); }
	def m1124():Void { var l:Float = (-65535)+(1.1f); }
	def m1125():Void { var l:Float = (-65535)+(-1.1f); }
	def m1126():Void { var l:Float = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1127():Void { var l:Float = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1128():Void { var l:Float = (-65535)+(127); }
	def m1129():Void { var l:Float = (-65535)+(-127); }
	def m1130():Void { var l:Float = (-65535)+(128); }
	def m1131():Void { var l:Float = (-65535)+(-128); }
	def m1132():Void { var l:Float = (-65535)+(255); }
	def m1133():Void { var l:Float = (-65535)+(-255); }
	def m1134():Void { var l:Float = (-65535)+(256); }
	def m1135():Void { var l:Float = (-65535)+(-256); }
	def m1136():Void { var l:Float = (-65535)+(32767); }
	def m1137():Void { var l:Float = (-65535)+(-32767); }
	def m1138():Void { var l:Float = (-65535)+(32768); }
	def m1139():Void { var l:Float = (-65535)+(-32768); }
	def m1140():Void { var l:Float = (-65535)+(65535); }
	def m1141():Void { var l:Float = (-65535)+(-65535); }
	def m1142():Void { var l:Float = (-65535)+(65536); }
	def m1143():Void { var l:Float = (-65535)+(-65536); }
	def m1144():Void { var l:Float = (-65535)+(16777216); }
	def m1145():Void { var l:Float = (-65535)+(-16777216); }
	def m1146():Void { var l:Float = (-65535)+(16777217); }
	def m1147():Void { var l:Float = (-65535)+(-16777217); }
	def m1148():Void { var l:Float = (-65535)+(2147483647); }
	def m1149():Void { var l:Float = (-65535)+(-2147483647); }
	def m1150():Void { var l:Float = (65536)+(w0); }
	def m1151():Void { var l:Float = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1152():Void { var l:Float = (65536)+(w2); }
	def m1153():Void { var l:Float = (65536)+(w3); }
	def m1154():Void { var l:Float = (65536)+(w4); }
	def m1155():Void { var l:Float = (65536)+(w5); }
	def m1156():Void { var l:Float = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1157():Void { var l:Float = (65536)+(w7); }
	def m1158():Void { var l:Float = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1159():Void { var l:Float = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1160():Void { var l:Float = (65536)+(0); }
	def m1161():Void { var l:Float = (65536)+(-0); }
	def m1162():Void { var l:Float = (65536)+(1.1f); }
	def m1163():Void { var l:Float = (65536)+(-1.1f); }
	def m1164():Void { var l:Float = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1165():Void { var l:Float = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1166():Void { var l:Float = (65536)+(127); }
	def m1167():Void { var l:Float = (65536)+(-127); }
	def m1168():Void { var l:Float = (65536)+(128); }
	def m1169():Void { var l:Float = (65536)+(-128); }
	def m1170():Void { var l:Float = (65536)+(255); }
	def m1171():Void { var l:Float = (65536)+(-255); }
	def m1172():Void { var l:Float = (65536)+(256); }
	def m1173():Void { var l:Float = (65536)+(-256); }
	def m1174():Void { var l:Float = (65536)+(32767); }
	def m1175():Void { var l:Float = (65536)+(-32767); }
	def m1176():Void { var l:Float = (65536)+(32768); }
	def m1177():Void { var l:Float = (65536)+(-32768); }
	def m1178():Void { var l:Float = (65536)+(65535); }
	def m1179():Void { var l:Float = (65536)+(-65535); }
	def m1180():Void { var l:Float = (65536)+(65536); }
	def m1181():Void { var l:Float = (65536)+(-65536); }
	def m1182():Void { var l:Float = (65536)+(16777216); }
	def m1183():Void { var l:Float = (65536)+(-16777216); }
	def m1184():Void { var l:Float = (65536)+(16777217); }
	def m1185():Void { var l:Float = (65536)+(-16777217); }
	def m1186():Void { var l:Float = (65536)+(2147483647); }
	def m1187():Void { var l:Float = (65536)+(-2147483647); }
	def m1188():Void { var l:Float = (-65536)+(w0); }
	def m1189():Void { var l:Float = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1190():Void { var l:Float = (-65536)+(w2); }
	def m1191():Void { var l:Float = (-65536)+(w3); }
	def m1192():Void { var l:Float = (-65536)+(w4); }
	def m1193():Void { var l:Float = (-65536)+(w5); }
	def m1194():Void { var l:Float = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1195():Void { var l:Float = (-65536)+(w7); }
	def m1196():Void { var l:Float = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1197():Void { var l:Float = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1198():Void { var l:Float = (-65536)+(0); }
	def m1199():Void { var l:Float = (-65536)+(-0); }
	def m1200():Void { var l:Float = (-65536)+(1.1f); }
	def m1201():Void { var l:Float = (-65536)+(-1.1f); }
	def m1202():Void { var l:Float = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1203():Void { var l:Float = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1204():Void { var l:Float = (-65536)+(127); }
	def m1205():Void { var l:Float = (-65536)+(-127); }
	def m1206():Void { var l:Float = (-65536)+(128); }
	def m1207():Void { var l:Float = (-65536)+(-128); }
	def m1208():Void { var l:Float = (-65536)+(255); }
	def m1209():Void { var l:Float = (-65536)+(-255); }
	def m1210():Void { var l:Float = (-65536)+(256); }
	def m1211():Void { var l:Float = (-65536)+(-256); }
	def m1212():Void { var l:Float = (-65536)+(32767); }
	def m1213():Void { var l:Float = (-65536)+(-32767); }
	def m1214():Void { var l:Float = (-65536)+(32768); }
	def m1215():Void { var l:Float = (-65536)+(-32768); }
	def m1216():Void { var l:Float = (-65536)+(65535); }
	def m1217():Void { var l:Float = (-65536)+(-65535); }
	def m1218():Void { var l:Float = (-65536)+(65536); }
	def m1219():Void { var l:Float = (-65536)+(-65536); }
	def m1220():Void { var l:Float = (-65536)+(16777216); }
	def m1221():Void { var l:Float = (-65536)+(-16777216); }
	def m1222():Void { var l:Float = (-65536)+(16777217); }
	def m1223():Void { var l:Float = (-65536)+(-16777217); }
	def m1224():Void { var l:Float = (-65536)+(2147483647); }
	def m1225():Void { var l:Float = (-65536)+(-2147483647); }
	def m1226():Void { var l:Float = (16777216)+(w0); }
	def m1227():Void { var l:Float = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1228():Void { var l:Float = (16777216)+(w2); }
	def m1229():Void { var l:Float = (16777216)+(w3); }
	def m1230():Void { var l:Float = (16777216)+(w4); }
	def m1231():Void { var l:Float = (16777216)+(w5); }
	def m1232():Void { var l:Float = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1233():Void { var l:Float = (16777216)+(w7); }
	def m1234():Void { var l:Float = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1235():Void { var l:Float = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1236():Void { var l:Float = (16777216)+(0); }
	def m1237():Void { var l:Float = (16777216)+(-0); }
	def m1238():Void { var l:Float = (16777216)+(1.1f); }
	def m1239():Void { var l:Float = (16777216)+(-1.1f); }
	def m1240():Void { var l:Float = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1241():Void { var l:Float = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1242():Void { var l:Float = (16777216)+(127); }
	def m1243():Void { var l:Float = (16777216)+(-127); }
	def m1244():Void { var l:Float = (16777216)+(128); }
	def m1245():Void { var l:Float = (16777216)+(-128); }
	def m1246():Void { var l:Float = (16777216)+(255); }
	def m1247():Void { var l:Float = (16777216)+(-255); }
	def m1248():Void { var l:Float = (16777216)+(256); }
	def m1249():Void { var l:Float = (16777216)+(-256); }
	def m1250():Void { var l:Float = (16777216)+(32767); }
	def m1251():Void { var l:Float = (16777216)+(-32767); }
	def m1252():Void { var l:Float = (16777216)+(32768); }
	def m1253():Void { var l:Float = (16777216)+(-32768); }
	def m1254():Void { var l:Float = (16777216)+(65535); }
	def m1255():Void { var l:Float = (16777216)+(-65535); }
	def m1256():Void { var l:Float = (16777216)+(65536); }
	def m1257():Void { var l:Float = (16777216)+(-65536); }
	def m1258():Void { var l:Float = (16777216)+(16777216); }
	def m1259():Void { var l:Float = (16777216)+(-16777216); }
	def m1260():Void { var l:Float = (16777216)+(16777217); }
	def m1261():Void { var l:Float = (16777216)+(-16777217); }
	def m1262():Void { var l:Float = (16777216)+(2147483647); }
	def m1263():Void { var l:Float = (16777216)+(-2147483647); }
	def m1264():Void { var l:Float = (-16777216)+(w0); }
	def m1265():Void { var l:Float = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1266():Void { var l:Float = (-16777216)+(w2); }
	def m1267():Void { var l:Float = (-16777216)+(w3); }
	def m1268():Void { var l:Float = (-16777216)+(w4); }
	def m1269():Void { var l:Float = (-16777216)+(w5); }
	def m1270():Void { var l:Float = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1271():Void { var l:Float = (-16777216)+(w7); }
	def m1272():Void { var l:Float = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1273():Void { var l:Float = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1274():Void { var l:Float = (-16777216)+(0); }
	def m1275():Void { var l:Float = (-16777216)+(-0); }
	def m1276():Void { var l:Float = (-16777216)+(1.1f); }
	def m1277():Void { var l:Float = (-16777216)+(-1.1f); }
	def m1278():Void { var l:Float = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1279():Void { var l:Float = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1280():Void { var l:Float = (-16777216)+(127); }
	def m1281():Void { var l:Float = (-16777216)+(-127); }
	def m1282():Void { var l:Float = (-16777216)+(128); }
	def m1283():Void { var l:Float = (-16777216)+(-128); }
	def m1284():Void { var l:Float = (-16777216)+(255); }
	def m1285():Void { var l:Float = (-16777216)+(-255); }
	def m1286():Void { var l:Float = (-16777216)+(256); }
	def m1287():Void { var l:Float = (-16777216)+(-256); }
	def m1288():Void { var l:Float = (-16777216)+(32767); }
	def m1289():Void { var l:Float = (-16777216)+(-32767); }
	def m1290():Void { var l:Float = (-16777216)+(32768); }
	def m1291():Void { var l:Float = (-16777216)+(-32768); }
	def m1292():Void { var l:Float = (-16777216)+(65535); }
	def m1293():Void { var l:Float = (-16777216)+(-65535); }
	def m1294():Void { var l:Float = (-16777216)+(65536); }
	def m1295():Void { var l:Float = (-16777216)+(-65536); }
	def m1296():Void { var l:Float = (-16777216)+(16777216); }
	def m1297():Void { var l:Float = (-16777216)+(-16777216); }
	def m1298():Void { var l:Float = (-16777216)+(16777217); }
	def m1299():Void { var l:Float = (-16777216)+(-16777217); }
	def m1300():Void { var l:Float = (-16777216)+(2147483647); }
	def m1301():Void { var l:Float = (-16777216)+(-2147483647); }
	def m1302():Void { var l:Float = (16777217)+(w0); }
	def m1303():Void { var l:Float = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1304():Void { var l:Float = (16777217)+(w2); }
	def m1305():Void { var l:Float = (16777217)+(w3); }
	def m1306():Void { var l:Float = (16777217)+(w4); }
	def m1307():Void { var l:Float = (16777217)+(w5); }
	def m1308():Void { var l:Float = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1309():Void { var l:Float = (16777217)+(w7); }
	def m1310():Void { var l:Float = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1311():Void { var l:Float = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1312():Void { var l:Float = (16777217)+(0); }
	def m1313():Void { var l:Float = (16777217)+(-0); }
	def m1314():Void { var l:Float = (16777217)+(1.1f); }
	def m1315():Void { var l:Float = (16777217)+(-1.1f); }
	def m1316():Void { var l:Float = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1317():Void { var l:Float = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1318():Void { var l:Float = (16777217)+(127); }
	def m1319():Void { var l:Float = (16777217)+(-127); }
	def m1320():Void { var l:Float = (16777217)+(128); }
	def m1321():Void { var l:Float = (16777217)+(-128); }
	def m1322():Void { var l:Float = (16777217)+(255); }
	def m1323():Void { var l:Float = (16777217)+(-255); }
	def m1324():Void { var l:Float = (16777217)+(256); }
	def m1325():Void { var l:Float = (16777217)+(-256); }
	def m1326():Void { var l:Float = (16777217)+(32767); }
	def m1327():Void { var l:Float = (16777217)+(-32767); }
	def m1328():Void { var l:Float = (16777217)+(32768); }
	def m1329():Void { var l:Float = (16777217)+(-32768); }
	def m1330():Void { var l:Float = (16777217)+(65535); }
	def m1331():Void { var l:Float = (16777217)+(-65535); }
	def m1332():Void { var l:Float = (16777217)+(65536); }
	def m1333():Void { var l:Float = (16777217)+(-65536); }
	def m1334():Void { var l:Float = (16777217)+(16777216); }
	def m1335():Void { var l:Float = (16777217)+(-16777216); }
	def m1336():Void { var l:Float = (16777217)+(16777217); }
	def m1337():Void { var l:Float = (16777217)+(-16777217); }
	def m1338():Void { var l:Float = (16777217)+(2147483647); }
	def m1339():Void { var l:Float = (16777217)+(-2147483647); }
	def m1340():Void { var l:Float = (-16777217)+(w0); }
	def m1341():Void { var l:Float = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1342():Void { var l:Float = (-16777217)+(w2); }
	def m1343():Void { var l:Float = (-16777217)+(w3); }
	def m1344():Void { var l:Float = (-16777217)+(w4); }
	def m1345():Void { var l:Float = (-16777217)+(w5); }
	def m1346():Void { var l:Float = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1347():Void { var l:Float = (-16777217)+(w7); }
	def m1348():Void { var l:Float = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1349():Void { var l:Float = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1350():Void { var l:Float = (-16777217)+(0); }
	def m1351():Void { var l:Float = (-16777217)+(-0); }
	def m1352():Void { var l:Float = (-16777217)+(1.1f); }
	def m1353():Void { var l:Float = (-16777217)+(-1.1f); }
	def m1354():Void { var l:Float = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1355():Void { var l:Float = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1356():Void { var l:Float = (-16777217)+(127); }
	def m1357():Void { var l:Float = (-16777217)+(-127); }
	def m1358():Void { var l:Float = (-16777217)+(128); }
	def m1359():Void { var l:Float = (-16777217)+(-128); }
	def m1360():Void { var l:Float = (-16777217)+(255); }
	def m1361():Void { var l:Float = (-16777217)+(-255); }
	def m1362():Void { var l:Float = (-16777217)+(256); }
	def m1363():Void { var l:Float = (-16777217)+(-256); }
	def m1364():Void { var l:Float = (-16777217)+(32767); }
	def m1365():Void { var l:Float = (-16777217)+(-32767); }
	def m1366():Void { var l:Float = (-16777217)+(32768); }
	def m1367():Void { var l:Float = (-16777217)+(-32768); }
	def m1368():Void { var l:Float = (-16777217)+(65535); }
	def m1369():Void { var l:Float = (-16777217)+(-65535); }
	def m1370():Void { var l:Float = (-16777217)+(65536); }
	def m1371():Void { var l:Float = (-16777217)+(-65536); }
	def m1372():Void { var l:Float = (-16777217)+(16777216); }
	def m1373():Void { var l:Float = (-16777217)+(-16777216); }
	def m1374():Void { var l:Float = (-16777217)+(16777217); }
	def m1375():Void { var l:Float = (-16777217)+(-16777217); }
	def m1376():Void { var l:Float = (-16777217)+(2147483647); }
	def m1377():Void { var l:Float = (-16777217)+(-2147483647); }
	def m1378():Void { var l:Float = (2147483647)+(w0); }
	def m1379():Void { var l:Float = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1380():Void { var l:Float = (2147483647)+(w2); }
	def m1381():Void { var l:Float = (2147483647)+(w3); }
	def m1382():Void { var l:Float = (2147483647)+(w4); }
	def m1383():Void { var l:Float = (2147483647)+(w5); }
	def m1384():Void { var l:Float = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1385():Void { var l:Float = (2147483647)+(w7); }
	def m1386():Void { var l:Float = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1387():Void { var l:Float = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1388():Void { var l:Float = (2147483647)+(0); }
	def m1389():Void { var l:Float = (2147483647)+(-0); }
	def m1390():Void { var l:Float = (2147483647)+(1.1f); }
	def m1391():Void { var l:Float = (2147483647)+(-1.1f); }
	def m1392():Void { var l:Float = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1393():Void { var l:Float = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1394():Void { var l:Float = (2147483647)+(127); }
	def m1395():Void { var l:Float = (2147483647)+(-127); }
	def m1396():Void { var l:Float = (2147483647)+(128); }
	def m1397():Void { var l:Float = (2147483647)+(-128); }
	def m1398():Void { var l:Float = (2147483647)+(255); }
	def m1399():Void { var l:Float = (2147483647)+(-255); }
	def m1400():Void { var l:Float = (2147483647)+(256); }
	def m1401():Void { var l:Float = (2147483647)+(-256); }
	def m1402():Void { var l:Float = (2147483647)+(32767); }
	def m1403():Void { var l:Float = (2147483647)+(-32767); }
	def m1404():Void { var l:Float = (2147483647)+(32768); }
	def m1405():Void { var l:Float = (2147483647)+(-32768); }
	def m1406():Void { var l:Float = (2147483647)+(65535); }
	def m1407():Void { var l:Float = (2147483647)+(-65535); }
	def m1408():Void { var l:Float = (2147483647)+(65536); }
	def m1409():Void { var l:Float = (2147483647)+(-65536); }
	def m1410():Void { var l:Float = (2147483647)+(16777216); }
	def m1411():Void { var l:Float = (2147483647)+(-16777216); }
	def m1412():Void { var l:Float = (2147483647)+(16777217); }
	def m1413():Void { var l:Float = (2147483647)+(-16777217); }
	def m1414():Void { var l:Float = (2147483647)+(2147483647); }
	def m1415():Void { var l:Float = (2147483647)+(-2147483647); }
	def m1416():Void { var l:Float = (-2147483647)+(w0); }
	def m1417():Void { var l:Float = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1418():Void { var l:Float = (-2147483647)+(w2); }
	def m1419():Void { var l:Float = (-2147483647)+(w3); }
	def m1420():Void { var l:Float = (-2147483647)+(w4); }
	def m1421():Void { var l:Float = (-2147483647)+(w5); }
	def m1422():Void { var l:Float = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1423():Void { var l:Float = (-2147483647)+(w7); }
	def m1424():Void { var l:Float = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1425():Void { var l:Float = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1426():Void { var l:Float = (-2147483647)+(0); }
	def m1427():Void { var l:Float = (-2147483647)+(-0); }
	def m1428():Void { var l:Float = (-2147483647)+(1.1f); }
	def m1429():Void { var l:Float = (-2147483647)+(-1.1f); }
	def m1430():Void { var l:Float = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1431():Void { var l:Float = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1432():Void { var l:Float = (-2147483647)+(127); }
	def m1433():Void { var l:Float = (-2147483647)+(-127); }
	def m1434():Void { var l:Float = (-2147483647)+(128); }
	def m1435():Void { var l:Float = (-2147483647)+(-128); }
	def m1436():Void { var l:Float = (-2147483647)+(255); }
	def m1437():Void { var l:Float = (-2147483647)+(-255); }
	def m1438():Void { var l:Float = (-2147483647)+(256); }
	def m1439():Void { var l:Float = (-2147483647)+(-256); }
	def m1440():Void { var l:Float = (-2147483647)+(32767); }
	def m1441():Void { var l:Float = (-2147483647)+(-32767); }
	def m1442():Void { var l:Float = (-2147483647)+(32768); }
	def m1443():Void { var l:Float = (-2147483647)+(-32768); }
	def m1444():Void { var l:Float = (-2147483647)+(65535); }
	def m1445():Void { var l:Float = (-2147483647)+(-65535); }
	def m1446():Void { var l:Float = (-2147483647)+(65536); }
	def m1447():Void { var l:Float = (-2147483647)+(-65536); }
	def m1448():Void { var l:Float = (-2147483647)+(16777216); }
	def m1449():Void { var l:Float = (-2147483647)+(-16777216); }
	def m1450():Void { var l:Float = (-2147483647)+(16777217); }
	def m1451():Void { var l:Float = (-2147483647)+(-16777217); }
	def m1452():Void { var l:Float = (-2147483647)+(2147483647); }
	def m1453():Void { var l:Float = (-2147483647)+(-2147483647); }
	def m1454():Void { var l:Double = (w0)+(w0); }
	def m1455():Void { var l:Double = (w0)+(w1); }
	def m1456():Void { var l:Double = (w0)+(w2); }
	def m1457():Void { var l:Double = (w0)+(w3); }
	def m1458():Void { var l:Double = (w0)+(w4); }
	def m1459():Void { var l:Double = (w0)+(w5); }
	def m1460():Void { var l:Double = (w0)+(w6); }
	def m1461():Void { var l:Double = (w0)+(w7); }
	def m1462():Void { var l:Double = (w0)+(w8); }
	def m1463():Void { var l:Double = (w0)+(w9); }
	def m1464():Void { var l:Double = (w0)+(0); }
	def m1465():Void { var l:Double = (w0)+(-0); }
	def m1466():Void { var l:Double = (w0)+(1.1f); }
	def m1467():Void { var l:Double = (w0)+(-1.1f); }
	def m1468():Void { var l:Double = (w0)+(2.2); }
	def m1469():Void { var l:Double = (w0)+(-2.2); }
	def m1470():Void { var l:Double = (w0)+(127); }
	def m1471():Void { var l:Double = (w0)+(-127); }
	def m1472():Void { var l:Double = (w0)+(128); }
	def m1473():Void { var l:Double = (w0)+(-128); }
	def m1474():Void { var l:Double = (w0)+(255); }
	def m1475():Void { var l:Double = (w0)+(-255); }
	def m1476():Void { var l:Double = (w0)+(256); }
	def m1477():Void { var l:Double = (w0)+(-256); }
	def m1478():Void { var l:Double = (w0)+(32767); }
	def m1479():Void { var l:Double = (w0)+(-32767); }
	def m1480():Void { var l:Double = (w0)+(32768); }
	def m1481():Void { var l:Double = (w0)+(-32768); }
	def m1482():Void { var l:Double = (w0)+(65535); }
	def m1483():Void { var l:Double = (w0)+(-65535); }
	def m1484():Void { var l:Double = (w0)+(65536); }
	def m1485():Void { var l:Double = (w0)+(-65536); }
	def m1486():Void { var l:Double = (w0)+(16777216); }
	def m1487():Void { var l:Double = (w0)+(-16777216); }
	def m1488():Void { var l:Double = (w0)+(16777217); }
	def m1489():Void { var l:Double = (w0)+(-16777217); }
	def m1490():Void { var l:Double = (w0)+(2147483647); }
	def m1491():Void { var l:Double = (w0)+(-2147483647); }
	def m1492():Void { var l:Double = (w1)+(w0); }
	def m1493():Void { var l:Double = (w1)+(w1); }
	def m1494():Void { var l:Double = (w1)+(w2); }
	def m1495():Void { var l:Double = (w1)+(w3); }
	def m1496():Void { var l:Double = (w1)+(w4); }
	def m1497():Void { var l:Double = (w1)+(w5); }
	def m1498():Void { var l:Double = (w1)+(w6); }
	def m1499():Void { var l:Double = (w1)+(w7); }
	def m1500():Void { var l:Double = (w1)+(w8); }
	def m1501():Void { var l:Double = (w1)+(w9); }
	def m1502():Void { var l:Double = (w1)+(0); }
	def m1503():Void { var l:Double = (w1)+(-0); }
	def m1504():Void { var l:Double = (w1)+(1.1f); }
	def m1505():Void { var l:Double = (w1)+(-1.1f); }
	def m1506():Void { var l:Double = (w1)+(2.2); }
	def m1507():Void { var l:Double = (w1)+(-2.2); }
	def m1508():Void { var l:Double = (w1)+(127); }
	def m1509():Void { var l:Double = (w1)+(-127); }
	def m1510():Void { var l:Double = (w1)+(128); }
	def m1511():Void { var l:Double = (w1)+(-128); }
	def m1512():Void { var l:Double = (w1)+(255); }
	def m1513():Void { var l:Double = (w1)+(-255); }
	def m1514():Void { var l:Double = (w1)+(256); }
	def m1515():Void { var l:Double = (w1)+(-256); }
	def m1516():Void { var l:Double = (w1)+(32767); }
	def m1517():Void { var l:Double = (w1)+(-32767); }
	def m1518():Void { var l:Double = (w1)+(32768); }
	def m1519():Void { var l:Double = (w1)+(-32768); }
	def m1520():Void { var l:Double = (w1)+(65535); }
	def m1521():Void { var l:Double = (w1)+(-65535); }
	def m1522():Void { var l:Double = (w1)+(65536); }
	def m1523():Void { var l:Double = (w1)+(-65536); }
	def m1524():Void { var l:Double = (w1)+(16777216); }
	def m1525():Void { var l:Double = (w1)+(-16777216); }
	def m1526():Void { var l:Double = (w1)+(16777217); }
	def m1527():Void { var l:Double = (w1)+(-16777217); }
	def m1528():Void { var l:Double = (w1)+(2147483647); }
	def m1529():Void { var l:Double = (w1)+(-2147483647); }
	def m1530():Void { var l:Double = (w2)+(w0); }
	def m1531():Void { var l:Double = (w2)+(w1); }
	def m1532():Void { var l:Double = (w2)+(w2); }
	def m1533():Void { var l:Double = (w2)+(w3); }
	def m1534():Void { var l:Double = (w2)+(w4); }
	def m1535():Void { var l:Double = (w2)+(w5); }
	def m1536():Void { var l:Double = (w2)+(w6); }
	def m1537():Void { var l:Double = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m1538():Void { var l:Double = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m1539():Void { var l:Double = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m1540():Void { var l:Double = (w2)+(0); }
	def m1541():Void { var l:Double = (w2)+(-0); }
	def m1542():Void { var l:Double = (w2)+(1.1f); }
	def m1543():Void { var l:Double = (w2)+(-1.1f); }
	def m1544():Void { var l:Double = (w2)+(2.2); }
	def m1545():Void { var l:Double = (w2)+(-2.2); }
	def m1546():Void { var l:Double = (w2)+(127); }
	def m1547():Void { var l:Double = (w2)+(-127); }
	def m1548():Void { var l:Double = (w2)+(128); }
	def m1549():Void { var l:Double = (w2)+(-128); }
	def m1550():Void { var l:Double = (w2)+(255); }
	def m1551():Void { var l:Double = (w2)+(-255); }
	def m1552():Void { var l:Double = (w2)+(256); }
	def m1553():Void { var l:Double = (w2)+(-256); }
	def m1554():Void { var l:Double = (w2)+(32767); }
	def m1555():Void { var l:Double = (w2)+(-32767); }
	def m1556():Void { var l:Double = (w2)+(32768); }
	def m1557():Void { var l:Double = (w2)+(-32768); }
	def m1558():Void { var l:Double = (w2)+(65535); }
	def m1559():Void { var l:Double = (w2)+(-65535); }
	def m1560():Void { var l:Double = (w2)+(65536); }
	def m1561():Void { var l:Double = (w2)+(-65536); }
	def m1562():Void { var l:Double = (w2)+(16777216); }
	def m1563():Void { var l:Double = (w2)+(-16777216); }
	def m1564():Void { var l:Double = (w2)+(16777217); }
	def m1565():Void { var l:Double = (w2)+(-16777217); }
	def m1566():Void { var l:Double = (w2)+(2147483647); }
	def m1567():Void { var l:Double = (w2)+(-2147483647); }
	def m1568():Void { var l:Double = (w3)+(w0); }
	def m1569():Void { var l:Double = (w3)+(w1); }
	def m1570():Void { var l:Double = (w3)+(w2); }
	def m1571():Void { var l:Double = (w3)+(w3); }
	def m1572():Void { var l:Double = (w3)+(w4); }
	def m1573():Void { var l:Double = (w3)+(w5); }
	def m1574():Void { var l:Double = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1575():Void { var l:Double = (w3)+(w7); }
	def m1576():Void { var l:Double = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1577():Void { var l:Double = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1578():Void { var l:Double = (w3)+(0); }
	def m1579():Void { var l:Double = (w3)+(-0); }
	def m1580():Void { var l:Double = (w3)+(1.1f); }
	def m1581():Void { var l:Double = (w3)+(-1.1f); }
	def m1582():Void { var l:Double = (w3)+(2.2); }
	def m1583():Void { var l:Double = (w3)+(-2.2); }
	def m1584():Void { var l:Double = (w3)+(127); }
	def m1585():Void { var l:Double = (w3)+(-127); }
	def m1586():Void { var l:Double = (w3)+(128); }
	def m1587():Void { var l:Double = (w3)+(-128); }
	def m1588():Void { var l:Double = (w3)+(255); }
	def m1589():Void { var l:Double = (w3)+(-255); }
	def m1590():Void { var l:Double = (w3)+(256); }
	def m1591():Void { var l:Double = (w3)+(-256); }
	def m1592():Void { var l:Double = (w3)+(32767); }
	def m1593():Void { var l:Double = (w3)+(-32767); }
	def m1594():Void { var l:Double = (w3)+(32768); }
	def m1595():Void { var l:Double = (w3)+(-32768); }
	def m1596():Void { var l:Double = (w3)+(65535); }
	def m1597():Void { var l:Double = (w3)+(-65535); }
	def m1598():Void { var l:Double = (w3)+(65536); }
	def m1599():Void { var l:Double = (w3)+(-65536); }
	def m1600():Void { var l:Double = (w3)+(16777216); }
	def m1601():Void { var l:Double = (w3)+(-16777216); }
	def m1602():Void { var l:Double = (w3)+(16777217); }
	def m1603():Void { var l:Double = (w3)+(-16777217); }
	def m1604():Void { var l:Double = (w3)+(2147483647); }
	def m1605():Void { var l:Double = (w3)+(-2147483647); }
	def m1606():Void { var l:Double = (w4)+(w0); }
	def m1607():Void { var l:Double = (w4)+(w1); }
	def m1608():Void { var l:Double = (w4)+(w2); }
	def m1609():Void { var l:Double = (w4)+(w3); }
	def m1610():Void { var l:Double = (w4)+(w4); }
	def m1611():Void { var l:Double = (w4)+(w5); }
	def m1612():Void { var l:Double = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m1613():Void { var l:Double = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m1614():Void { var l:Double = (w4)+(w8); }
	def m1615():Void { var l:Double = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m1616():Void { var l:Double = (w4)+(0); }
	def m1617():Void { var l:Double = (w4)+(-0); }
	def m1618():Void { var l:Double = (w4)+(1.1f); }
	def m1619():Void { var l:Double = (w4)+(-1.1f); }
	def m1620():Void { var l:Double = (w4)+(2.2); }
	def m1621():Void { var l:Double = (w4)+(-2.2); }
	def m1622():Void { var l:Double = (w4)+(127); }
	def m1623():Void { var l:Double = (w4)+(-127); }
	def m1624():Void { var l:Double = (w4)+(128); }
	def m1625():Void { var l:Double = (w4)+(-128); }
	def m1626():Void { var l:Double = (w4)+(255); }
	def m1627():Void { var l:Double = (w4)+(-255); }
	def m1628():Void { var l:Double = (w4)+(256); }
	def m1629():Void { var l:Double = (w4)+(-256); }
	def m1630():Void { var l:Double = (w4)+(32767); }
	def m1631():Void { var l:Double = (w4)+(-32767); }
	def m1632():Void { var l:Double = (w4)+(32768); }
	def m1633():Void { var l:Double = (w4)+(-32768); }
	def m1634():Void { var l:Double = (w4)+(65535); }
	def m1635():Void { var l:Double = (w4)+(-65535); }
	def m1636():Void { var l:Double = (w4)+(65536); }
	def m1637():Void { var l:Double = (w4)+(-65536); }
	def m1638():Void { var l:Double = (w4)+(16777216); }
	def m1639():Void { var l:Double = (w4)+(-16777216); }
	def m1640():Void { var l:Double = (w4)+(16777217); }
	def m1641():Void { var l:Double = (w4)+(-16777217); }
	def m1642():Void { var l:Double = (w4)+(2147483647); }
	def m1643():Void { var l:Double = (w4)+(-2147483647); }
	def m1644():Void { var l:Double = (w5)+(w0); }
	def m1645():Void { var l:Double = (w5)+(w1); }
	def m1646():Void { var l:Double = (w5)+(w2); }
	def m1647():Void { var l:Double = (w5)+(w3); }
	def m1648():Void { var l:Double = (w5)+(w4); }
	def m1649():Void { var l:Double = (w5)+(w5); }
	def m1650():Void { var l:Double = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m1651():Void { var l:Double = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m1652():Void { var l:Double = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m1653():Void { var l:Double = (w5)+(w9); }
	def m1654():Void { var l:Double = (w5)+(0); }
	def m1655():Void { var l:Double = (w5)+(-0); }
	def m1656():Void { var l:Double = (w5)+(1.1f); }
	def m1657():Void { var l:Double = (w5)+(-1.1f); }
	def m1658():Void { var l:Double = (w5)+(2.2); }
	def m1659():Void { var l:Double = (w5)+(-2.2); }
	def m1660():Void { var l:Double = (w5)+(127); }
	def m1661():Void { var l:Double = (w5)+(-127); }
	def m1662():Void { var l:Double = (w5)+(128); }
	def m1663():Void { var l:Double = (w5)+(-128); }
	def m1664():Void { var l:Double = (w5)+(255); }
	def m1665():Void { var l:Double = (w5)+(-255); }
	def m1666():Void { var l:Double = (w5)+(256); }
	def m1667():Void { var l:Double = (w5)+(-256); }
	def m1668():Void { var l:Double = (w5)+(32767); }
	def m1669():Void { var l:Double = (w5)+(-32767); }
	def m1670():Void { var l:Double = (w5)+(32768); }
	def m1671():Void { var l:Double = (w5)+(-32768); }
	def m1672():Void { var l:Double = (w5)+(65535); }
	def m1673():Void { var l:Double = (w5)+(-65535); }
	def m1674():Void { var l:Double = (w5)+(65536); }
	def m1675():Void { var l:Double = (w5)+(-65536); }
	def m1676():Void { var l:Double = (w5)+(16777216); }
	def m1677():Void { var l:Double = (w5)+(-16777216); }
	def m1678():Void { var l:Double = (w5)+(16777217); }
	def m1679():Void { var l:Double = (w5)+(-16777217); }
	def m1680():Void { var l:Double = (w5)+(2147483647); }
	def m1681():Void { var l:Double = (w5)+(-2147483647); }
	def m1682():Void { var l:Double = (w6)+(w0); }
	def m1683():Void { var l:Double = (w6)+(w1); }
	def m1684():Void { var l:Double = (w6)+(w2); }
	def m1685():Void { var l:Double = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m1686():Void { var l:Double = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m1687():Void { var l:Double = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m1688():Void { var l:Double = (w6)+(w6); }
	def m1689():Void { var l:Double = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m1690():Void { var l:Double = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m1691():Void { var l:Double = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m1692():Void { var l:Double = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m1693():Void { var l:Double = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m1694():Void { var l:Double = (w6)+(1.1f); }
	def m1695():Void { var l:Double = (w6)+(-1.1f); }
	def m1696():Void { var l:Double = (w6)+(2.2); }
	def m1697():Void { var l:Double = (w6)+(-2.2); }
	def m1698():Void { var l:Double = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m1699():Void { var l:Double = (w6)+(-127); }
	def m1700():Void { var l:Double = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m1701():Void { var l:Double = (w6)+(-128); }
	def m1702():Void { var l:Double = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m1703():Void { var l:Double = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m1704():Void { var l:Double = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m1705():Void { var l:Double = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m1706():Void { var l:Double = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m1707():Void { var l:Double = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m1708():Void { var l:Double = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m1709():Void { var l:Double = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m1710():Void { var l:Double = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m1711():Void { var l:Double = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m1712():Void { var l:Double = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m1713():Void { var l:Double = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m1714():Void { var l:Double = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m1715():Void { var l:Double = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m1716():Void { var l:Double = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m1717():Void { var l:Double = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m1718():Void { var l:Double = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m1719():Void { var l:Double = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m1720():Void { var l:Double = (w7)+(w0); }
	def m1721():Void { var l:Double = (w7)+(w1); }
	def m1722():Void { var l:Double = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m1723():Void { var l:Double = (w7)+(w3); }
	def m1724():Void { var l:Double = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m1725():Void { var l:Double = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m1726():Void { var l:Double = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m1727():Void { var l:Double = (w7)+(w7); }
	def m1728():Void { var l:Double = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m1729():Void { var l:Double = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m1730():Void { var l:Double = (w7)+(0); }
	def m1731():Void { var l:Double = (w7)+(-0); }
	def m1732():Void { var l:Double = (w7)+(1.1f); }
	def m1733():Void { var l:Double = (w7)+(-1.1f); }
	def m1734():Void { var l:Double = (w7)+(2.2); }
	def m1735():Void { var l:Double = (w7)+(-2.2); }
	def m1736():Void { var l:Double = (w7)+(127); }
	def m1737():Void { var l:Double = (w7)+(-127); }
	def m1738():Void { var l:Double = (w7)+(128); }
	def m1739():Void { var l:Double = (w7)+(-128); }
	def m1740():Void { var l:Double = (w7)+(255); }
	def m1741():Void { var l:Double = (w7)+(-255); }
	def m1742():Void { var l:Double = (w7)+(256); }
	def m1743():Void { var l:Double = (w7)+(-256); }
	def m1744():Void { var l:Double = (w7)+(32767); }
	def m1745():Void { var l:Double = (w7)+(-32767); }
	def m1746():Void { var l:Double = (w7)+(32768); }
	def m1747():Void { var l:Double = (w7)+(-32768); }
	def m1748():Void { var l:Double = (w7)+(65535); }
	def m1749():Void { var l:Double = (w7)+(-65535); }
	def m1750():Void { var l:Double = (w7)+(65536); }
	def m1751():Void { var l:Double = (w7)+(-65536); }
	def m1752():Void { var l:Double = (w7)+(16777216); }
	def m1753():Void { var l:Double = (w7)+(-16777216); }
	def m1754():Void { var l:Double = (w7)+(16777217); }
	def m1755():Void { var l:Double = (w7)+(-16777217); }
	def m1756():Void { var l:Double = (w7)+(2147483647); }
	def m1757():Void { var l:Double = (w7)+(-2147483647); }
	def m1758():Void { var l:Double = (w8)+(w0); }
	def m1759():Void { var l:Double = (w8)+(w1); }
	def m1760():Void { var l:Double = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m1761():Void { var l:Double = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m1762():Void { var l:Double = (w8)+(w4); }
	def m1763():Void { var l:Double = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m1764():Void { var l:Double = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m1765():Void { var l:Double = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m1766():Void { var l:Double = (w8)+(w8); }
	def m1767():Void { var l:Double = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m1768():Void { var l:Double = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m1769():Void { var l:Double = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m1770():Void { var l:Double = (w8)+(1.1f); }
	def m1771():Void { var l:Double = (w8)+(-1.1f); }
	def m1772():Void { var l:Double = (w8)+(2.2); }
	def m1773():Void { var l:Double = (w8)+(-2.2); }
	def m1774():Void { var l:Double = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m1775():Void { var l:Double = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m1776():Void { var l:Double = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m1777():Void { var l:Double = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m1778():Void { var l:Double = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m1779():Void { var l:Double = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m1780():Void { var l:Double = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m1781():Void { var l:Double = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m1782():Void { var l:Double = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m1783():Void { var l:Double = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m1784():Void { var l:Double = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m1785():Void { var l:Double = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m1786():Void { var l:Double = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m1787():Void { var l:Double = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m1788():Void { var l:Double = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m1789():Void { var l:Double = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m1790():Void { var l:Double = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m1791():Void { var l:Double = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m1792():Void { var l:Double = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m1793():Void { var l:Double = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m1794():Void { var l:Double = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m1795():Void { var l:Double = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m1796():Void { var l:Double = (w9)+(w0); }
	def m1797():Void { var l:Double = (w9)+(w1); }
	def m1798():Void { var l:Double = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m1799():Void { var l:Double = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m1800():Void { var l:Double = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m1801():Void { var l:Double = (w9)+(w5); }
	def m1802():Void { var l:Double = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m1803():Void { var l:Double = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m1804():Void { var l:Double = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m1805():Void { var l:Double = (w9)+(w9); }
	def m1806():Void { var l:Double = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m1807():Void { var l:Double = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m1808():Void { var l:Double = (w9)+(1.1f); }
	def m1809():Void { var l:Double = (w9)+(-1.1f); }
	def m1810():Void { var l:Double = (w9)+(2.2); }
	def m1811():Void { var l:Double = (w9)+(-2.2); }
	def m1812():Void { var l:Double = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m1813():Void { var l:Double = (w9)+(-127); }
	def m1814():Void { var l:Double = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m1815():Void { var l:Double = (w9)+(-128); }
	def m1816():Void { var l:Double = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m1817():Void { var l:Double = (w9)+(-255); }
	def m1818():Void { var l:Double = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m1819():Void { var l:Double = (w9)+(-256); }
	def m1820():Void { var l:Double = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m1821():Void { var l:Double = (w9)+(-32767); }
	def m1822():Void { var l:Double = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m1823():Void { var l:Double = (w9)+(-32768); }
	def m1824():Void { var l:Double = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m1825():Void { var l:Double = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m1826():Void { var l:Double = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m1827():Void { var l:Double = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m1828():Void { var l:Double = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m1829():Void { var l:Double = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m1830():Void { var l:Double = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m1831():Void { var l:Double = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m1832():Void { var l:Double = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m1833():Void { var l:Double = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m1834():Void { var l:Double = (0)+(w0); }
	def m1835():Void { var l:Double = (0)+(w1); }
	def m1836():Void { var l:Double = (0)+(w2); }
	def m1837():Void { var l:Double = (0)+(w3); }
	def m1838():Void { var l:Double = (0)+(w4); }
	def m1839():Void { var l:Double = (0)+(w5); }
	def m1840():Void { var l:Double = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1841():Void { var l:Double = (0)+(w7); }
	def m1842():Void { var l:Double = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1843():Void { var l:Double = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1844():Void { var l:Double = (0)+(0); }
	def m1845():Void { var l:Double = (0)+(-0); }
	def m1846():Void { var l:Double = (0)+(1.1f); }
	def m1847():Void { var l:Double = (0)+(-1.1f); }
	def m1848():Void { var l:Double = (0)+(2.2); }
	def m1849():Void { var l:Double = (0)+(-2.2); }
	def m1850():Void { var l:Double = (0)+(127); }
	def m1851():Void { var l:Double = (0)+(-127); }
	def m1852():Void { var l:Double = (0)+(128); }
	def m1853():Void { var l:Double = (0)+(-128); }
	def m1854():Void { var l:Double = (0)+(255); }
	def m1855():Void { var l:Double = (0)+(-255); }
	def m1856():Void { var l:Double = (0)+(256); }
	def m1857():Void { var l:Double = (0)+(-256); }
	def m1858():Void { var l:Double = (0)+(32767); }
	def m1859():Void { var l:Double = (0)+(-32767); }
	def m1860():Void { var l:Double = (0)+(32768); }
	def m1861():Void { var l:Double = (0)+(-32768); }
	def m1862():Void { var l:Double = (0)+(65535); }
	def m1863():Void { var l:Double = (0)+(-65535); }
	def m1864():Void { var l:Double = (0)+(65536); }
	def m1865():Void { var l:Double = (0)+(-65536); }
	def m1866():Void { var l:Double = (0)+(16777216); }
	def m1867():Void { var l:Double = (0)+(-16777216); }
	def m1868():Void { var l:Double = (0)+(16777217); }
	def m1869():Void { var l:Double = (0)+(-16777217); }
	def m1870():Void { var l:Double = (0)+(2147483647); }
	def m1871():Void { var l:Double = (0)+(-2147483647); }
	def m1872():Void { var l:Double = (-0)+(w0); }
	def m1873():Void { var l:Double = (-0)+(w1); }
	def m1874():Void { var l:Double = (-0)+(w2); }
	def m1875():Void { var l:Double = (-0)+(w3); }
	def m1876():Void { var l:Double = (-0)+(w4); }
	def m1877():Void { var l:Double = (-0)+(w5); }
	def m1878():Void { var l:Double = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m1879():Void { var l:Double = (-0)+(w7); }
	def m1880():Void { var l:Double = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m1881():Void { var l:Double = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m1882():Void { var l:Double = (-0)+(0); }
	def m1883():Void { var l:Double = (-0)+(-0); }
	def m1884():Void { var l:Double = (-0)+(1.1f); }
	def m1885():Void { var l:Double = (-0)+(-1.1f); }
	def m1886():Void { var l:Double = (-0)+(2.2); }
	def m1887():Void { var l:Double = (-0)+(-2.2); }
	def m1888():Void { var l:Double = (-0)+(127); }
	def m1889():Void { var l:Double = (-0)+(-127); }
	def m1890():Void { var l:Double = (-0)+(128); }
	def m1891():Void { var l:Double = (-0)+(-128); }
	def m1892():Void { var l:Double = (-0)+(255); }
	def m1893():Void { var l:Double = (-0)+(-255); }
	def m1894():Void { var l:Double = (-0)+(256); }
	def m1895():Void { var l:Double = (-0)+(-256); }
	def m1896():Void { var l:Double = (-0)+(32767); }
	def m1897():Void { var l:Double = (-0)+(-32767); }
	def m1898():Void { var l:Double = (-0)+(32768); }
	def m1899():Void { var l:Double = (-0)+(-32768); }
	def m1900():Void { var l:Double = (-0)+(65535); }
	def m1901():Void { var l:Double = (-0)+(-65535); }
	def m1902():Void { var l:Double = (-0)+(65536); }
	def m1903():Void { var l:Double = (-0)+(-65536); }
	def m1904():Void { var l:Double = (-0)+(16777216); }
	def m1905():Void { var l:Double = (-0)+(-16777216); }
	def m1906():Void { var l:Double = (-0)+(16777217); }
	def m1907():Void { var l:Double = (-0)+(-16777217); }
	def m1908():Void { var l:Double = (-0)+(2147483647); }
	def m1909():Void { var l:Double = (-0)+(-2147483647); }
	def m1910():Void { var l:Double = (1.1f)+(w0); }
	def m1911():Void { var l:Double = (1.1f)+(w1); }
	def m1912():Void { var l:Double = (1.1f)+(w2); }
	def m1913():Void { var l:Double = (1.1f)+(w3); }
	def m1914():Void { var l:Double = (1.1f)+(w4); }
	def m1915():Void { var l:Double = (1.1f)+(w5); }
	def m1916():Void { var l:Double = (1.1f)+(w6); }
	def m1917():Void { var l:Double = (1.1f)+(w7); }
	def m1918():Void { var l:Double = (1.1f)+(w8); }
	def m1919():Void { var l:Double = (1.1f)+(w9); }
	def m1920():Void { var l:Double = (1.1f)+(0); }
	def m1921():Void { var l:Double = (1.1f)+(-0); }
	def m1922():Void { var l:Double = (1.1f)+(1.1f); }
	def m1923():Void { var l:Double = (1.1f)+(-1.1f); }
	def m1924():Void { var l:Double = (1.1f)+(2.2); }
	def m1925():Void { var l:Double = (1.1f)+(-2.2); }
	def m1926():Void { var l:Double = (1.1f)+(127); }
	def m1927():Void { var l:Double = (1.1f)+(-127); }
	def m1928():Void { var l:Double = (1.1f)+(128); }
	def m1929():Void { var l:Double = (1.1f)+(-128); }
	def m1930():Void { var l:Double = (1.1f)+(255); }
	def m1931():Void { var l:Double = (1.1f)+(-255); }
	def m1932():Void { var l:Double = (1.1f)+(256); }
	def m1933():Void { var l:Double = (1.1f)+(-256); }
	def m1934():Void { var l:Double = (1.1f)+(32767); }
	def m1935():Void { var l:Double = (1.1f)+(-32767); }
	def m1936():Void { var l:Double = (1.1f)+(32768); }
	def m1937():Void { var l:Double = (1.1f)+(-32768); }
	def m1938():Void { var l:Double = (1.1f)+(65535); }
	def m1939():Void { var l:Double = (1.1f)+(-65535); }
	def m1940():Void { var l:Double = (1.1f)+(65536); }
	def m1941():Void { var l:Double = (1.1f)+(-65536); }
	def m1942():Void { var l:Double = (1.1f)+(16777216); }
	def m1943():Void { var l:Double = (1.1f)+(-16777216); }
	def m1944():Void { var l:Double = (1.1f)+(16777217); }
	def m1945():Void { var l:Double = (1.1f)+(-16777217); }
	def m1946():Void { var l:Double = (1.1f)+(2147483647); }
	def m1947():Void { var l:Double = (1.1f)+(-2147483647); }
	def m1948():Void { var l:Double = (-1.1f)+(w0); }
	def m1949():Void { var l:Double = (-1.1f)+(w1); }
	def m1950():Void { var l:Double = (-1.1f)+(w2); }
	def m1951():Void { var l:Double = (-1.1f)+(w3); }
	def m1952():Void { var l:Double = (-1.1f)+(w4); }
	def m1953():Void { var l:Double = (-1.1f)+(w5); }
	def m1954():Void { var l:Double = (-1.1f)+(w6); }
	def m1955():Void { var l:Double = (-1.1f)+(w7); }
	def m1956():Void { var l:Double = (-1.1f)+(w8); }
	def m1957():Void { var l:Double = (-1.1f)+(w9); }
	def m1958():Void { var l:Double = (-1.1f)+(0); }
	def m1959():Void { var l:Double = (-1.1f)+(-0); }
	def m1960():Void { var l:Double = (-1.1f)+(1.1f); }
	def m1961():Void { var l:Double = (-1.1f)+(-1.1f); }
	def m1962():Void { var l:Double = (-1.1f)+(2.2); }
	def m1963():Void { var l:Double = (-1.1f)+(-2.2); }
	def m1964():Void { var l:Double = (-1.1f)+(127); }
	def m1965():Void { var l:Double = (-1.1f)+(-127); }
	def m1966():Void { var l:Double = (-1.1f)+(128); }
	def m1967():Void { var l:Double = (-1.1f)+(-128); }
	def m1968():Void { var l:Double = (-1.1f)+(255); }
	def m1969():Void { var l:Double = (-1.1f)+(-255); }
	def m1970():Void { var l:Double = (-1.1f)+(256); }
	def m1971():Void { var l:Double = (-1.1f)+(-256); }
	def m1972():Void { var l:Double = (-1.1f)+(32767); }
	def m1973():Void { var l:Double = (-1.1f)+(-32767); }
	def m1974():Void { var l:Double = (-1.1f)+(32768); }
	def m1975():Void { var l:Double = (-1.1f)+(-32768); }
	def m1976():Void { var l:Double = (-1.1f)+(65535); }
	def m1977():Void { var l:Double = (-1.1f)+(-65535); }
	def m1978():Void { var l:Double = (-1.1f)+(65536); }
	def m1979():Void { var l:Double = (-1.1f)+(-65536); }
	def m1980():Void { var l:Double = (-1.1f)+(16777216); }
	def m1981():Void { var l:Double = (-1.1f)+(-16777216); }
	def m1982():Void { var l:Double = (-1.1f)+(16777217); }
	def m1983():Void { var l:Double = (-1.1f)+(-16777217); }
	def m1984():Void { var l:Double = (-1.1f)+(2147483647); }
	def m1985():Void { var l:Double = (-1.1f)+(-2147483647); }
	def m1986():Void { var l:Double = (2.2)+(w0); }
	def m1987():Void { var l:Double = (2.2)+(w1); }
	def m1988():Void { var l:Double = (2.2)+(w2); }
	def m1989():Void { var l:Double = (2.2)+(w3); }
	def m1990():Void { var l:Double = (2.2)+(w4); }
	def m1991():Void { var l:Double = (2.2)+(w5); }
	def m1992():Void { var l:Double = (2.2)+(w6); }
	def m1993():Void { var l:Double = (2.2)+(w7); }
	def m1994():Void { var l:Double = (2.2)+(w8); }
	def m1995():Void { var l:Double = (2.2)+(w9); }
	def m1996():Void { var l:Double = (2.2)+(0); }
	def m1997():Void { var l:Double = (2.2)+(-0); }
	def m1998():Void { var l:Double = (2.2)+(1.1f); }
	def m1999():Void { var l:Double = (2.2)+(-1.1f); }
	def m2000():Void { var l:Double = (2.2)+(2.2); }
	def m2001():Void { var l:Double = (2.2)+(-2.2); }
	def m2002():Void { var l:Double = (2.2)+(127); }
	def m2003():Void { var l:Double = (2.2)+(-127); }
	def m2004():Void { var l:Double = (2.2)+(128); }
	def m2005():Void { var l:Double = (2.2)+(-128); }
	def m2006():Void { var l:Double = (2.2)+(255); }
	def m2007():Void { var l:Double = (2.2)+(-255); }
	def m2008():Void { var l:Double = (2.2)+(256); }
	def m2009():Void { var l:Double = (2.2)+(-256); }
	def m2010():Void { var l:Double = (2.2)+(32767); }
	def m2011():Void { var l:Double = (2.2)+(-32767); }
	def m2012():Void { var l:Double = (2.2)+(32768); }
	def m2013():Void { var l:Double = (2.2)+(-32768); }
	def m2014():Void { var l:Double = (2.2)+(65535); }
	def m2015():Void { var l:Double = (2.2)+(-65535); }
	def m2016():Void { var l:Double = (2.2)+(65536); }
	def m2017():Void { var l:Double = (2.2)+(-65536); }
	def m2018():Void { var l:Double = (2.2)+(16777216); }
	def m2019():Void { var l:Double = (2.2)+(-16777216); }
	def m2020():Void { var l:Double = (2.2)+(16777217); }
	def m2021():Void { var l:Double = (2.2)+(-16777217); }
	def m2022():Void { var l:Double = (2.2)+(2147483647); }
	def m2023():Void { var l:Double = (2.2)+(-2147483647); }
	def m2024():Void { var l:Double = (-2.2)+(w0); }
	def m2025():Void { var l:Double = (-2.2)+(w1); }
	def m2026():Void { var l:Double = (-2.2)+(w2); }
	def m2027():Void { var l:Double = (-2.2)+(w3); }
	def m2028():Void { var l:Double = (-2.2)+(w4); }
	def m2029():Void { var l:Double = (-2.2)+(w5); }
	def m2030():Void { var l:Double = (-2.2)+(w6); }
	def m2031():Void { var l:Double = (-2.2)+(w7); }
	def m2032():Void { var l:Double = (-2.2)+(w8); }
	def m2033():Void { var l:Double = (-2.2)+(w9); }
	def m2034():Void { var l:Double = (-2.2)+(0); }
	def m2035():Void { var l:Double = (-2.2)+(-0); }
	def m2036():Void { var l:Double = (-2.2)+(1.1f); }
	def m2037():Void { var l:Double = (-2.2)+(-1.1f); }
	def m2038():Void { var l:Double = (-2.2)+(2.2); }
	def m2039():Void { var l:Double = (-2.2)+(-2.2); }
	def m2040():Void { var l:Double = (-2.2)+(127); }
	def m2041():Void { var l:Double = (-2.2)+(-127); }
	def m2042():Void { var l:Double = (-2.2)+(128); }
	def m2043():Void { var l:Double = (-2.2)+(-128); }
	def m2044():Void { var l:Double = (-2.2)+(255); }
	def m2045():Void { var l:Double = (-2.2)+(-255); }
	def m2046():Void { var l:Double = (-2.2)+(256); }
	def m2047():Void { var l:Double = (-2.2)+(-256); }
	def m2048():Void { var l:Double = (-2.2)+(32767); }
	def m2049():Void { var l:Double = (-2.2)+(-32767); }
	def m2050():Void { var l:Double = (-2.2)+(32768); }
	def m2051():Void { var l:Double = (-2.2)+(-32768); }
	def m2052():Void { var l:Double = (-2.2)+(65535); }
	def m2053():Void { var l:Double = (-2.2)+(-65535); }
	def m2054():Void { var l:Double = (-2.2)+(65536); }
	def m2055():Void { var l:Double = (-2.2)+(-65536); }
	def m2056():Void { var l:Double = (-2.2)+(16777216); }
	def m2057():Void { var l:Double = (-2.2)+(-16777216); }
	def m2058():Void { var l:Double = (-2.2)+(16777217); }
	def m2059():Void { var l:Double = (-2.2)+(-16777217); }
	def m2060():Void { var l:Double = (-2.2)+(2147483647); }
	def m2061():Void { var l:Double = (-2.2)+(-2147483647); }
	def m2062():Void { var l:Double = (127)+(w0); }
	def m2063():Void { var l:Double = (127)+(w1); }
	def m2064():Void { var l:Double = (127)+(w2); }
	def m2065():Void { var l:Double = (127)+(w3); }
	def m2066():Void { var l:Double = (127)+(w4); }
	def m2067():Void { var l:Double = (127)+(w5); }
	def m2068():Void { var l:Double = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2069():Void { var l:Double = (127)+(w7); }
	def m2070():Void { var l:Double = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2071():Void { var l:Double = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2072():Void { var l:Double = (127)+(0); }
	def m2073():Void { var l:Double = (127)+(-0); }
	def m2074():Void { var l:Double = (127)+(1.1f); }
	def m2075():Void { var l:Double = (127)+(-1.1f); }
	def m2076():Void { var l:Double = (127)+(2.2); }
	def m2077():Void { var l:Double = (127)+(-2.2); }
	def m2078():Void { var l:Double = (127)+(127); }
	def m2079():Void { var l:Double = (127)+(-127); }
	def m2080():Void { var l:Double = (127)+(128); }
	def m2081():Void { var l:Double = (127)+(-128); }
	def m2082():Void { var l:Double = (127)+(255); }
	def m2083():Void { var l:Double = (127)+(-255); }
	def m2084():Void { var l:Double = (127)+(256); }
	def m2085():Void { var l:Double = (127)+(-256); }
	def m2086():Void { var l:Double = (127)+(32767); }
	def m2087():Void { var l:Double = (127)+(-32767); }
	def m2088():Void { var l:Double = (127)+(32768); }
	def m2089():Void { var l:Double = (127)+(-32768); }
	def m2090():Void { var l:Double = (127)+(65535); }
	def m2091():Void { var l:Double = (127)+(-65535); }
	def m2092():Void { var l:Double = (127)+(65536); }
	def m2093():Void { var l:Double = (127)+(-65536); }
	def m2094():Void { var l:Double = (127)+(16777216); }
	def m2095():Void { var l:Double = (127)+(-16777216); }
	def m2096():Void { var l:Double = (127)+(16777217); }
	def m2097():Void { var l:Double = (127)+(-16777217); }
	def m2098():Void { var l:Double = (127)+(2147483647); }
	def m2099():Void { var l:Double = (127)+(-2147483647); }
	def m2100():Void { var l:Double = (-127)+(w0); }
	def m2101():Void { var l:Double = (-127)+(w1); }
	def m2102():Void { var l:Double = (-127)+(w2); }
	def m2103():Void { var l:Double = (-127)+(w3); }
	def m2104():Void { var l:Double = (-127)+(w4); }
	def m2105():Void { var l:Double = (-127)+(w5); }
	def m2106():Void { var l:Double = (-127)+(w6); }
	def m2107():Void { var l:Double = (-127)+(w7); }
	def m2108():Void { var l:Double = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2109():Void { var l:Double = (-127)+(w9); }
	def m2110():Void { var l:Double = (-127)+(0); }
	def m2111():Void { var l:Double = (-127)+(-0); }
	def m2112():Void { var l:Double = (-127)+(1.1f); }
	def m2113():Void { var l:Double = (-127)+(-1.1f); }
	def m2114():Void { var l:Double = (-127)+(2.2); }
	def m2115():Void { var l:Double = (-127)+(-2.2); }
	def m2116():Void { var l:Double = (-127)+(127); }
	def m2117():Void { var l:Double = (-127)+(-127); }
	def m2118():Void { var l:Double = (-127)+(128); }
	def m2119():Void { var l:Double = (-127)+(-128); }
	def m2120():Void { var l:Double = (-127)+(255); }
	def m2121():Void { var l:Double = (-127)+(-255); }
	def m2122():Void { var l:Double = (-127)+(256); }
	def m2123():Void { var l:Double = (-127)+(-256); }
	def m2124():Void { var l:Double = (-127)+(32767); }
	def m2125():Void { var l:Double = (-127)+(-32767); }
	def m2126():Void { var l:Double = (-127)+(32768); }
	def m2127():Void { var l:Double = (-127)+(-32768); }
	def m2128():Void { var l:Double = (-127)+(65535); }
	def m2129():Void { var l:Double = (-127)+(-65535); }
	def m2130():Void { var l:Double = (-127)+(65536); }
	def m2131():Void { var l:Double = (-127)+(-65536); }
	def m2132():Void { var l:Double = (-127)+(16777216); }
	def m2133():Void { var l:Double = (-127)+(-16777216); }
	def m2134():Void { var l:Double = (-127)+(16777217); }
	def m2135():Void { var l:Double = (-127)+(-16777217); }
	def m2136():Void { var l:Double = (-127)+(2147483647); }
	def m2137():Void { var l:Double = (-127)+(-2147483647); }
	def m2138():Void { var l:Double = (128)+(w0); }
	def m2139():Void { var l:Double = (128)+(w1); }
	def m2140():Void { var l:Double = (128)+(w2); }
	def m2141():Void { var l:Double = (128)+(w3); }
	def m2142():Void { var l:Double = (128)+(w4); }
	def m2143():Void { var l:Double = (128)+(w5); }
	def m2144():Void { var l:Double = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2145():Void { var l:Double = (128)+(w7); }
	def m2146():Void { var l:Double = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2147():Void { var l:Double = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2148():Void { var l:Double = (128)+(0); }
	def m2149():Void { var l:Double = (128)+(-0); }
	def m2150():Void { var l:Double = (128)+(1.1f); }
	def m2151():Void { var l:Double = (128)+(-1.1f); }
	def m2152():Void { var l:Double = (128)+(2.2); }
	def m2153():Void { var l:Double = (128)+(-2.2); }
	def m2154():Void { var l:Double = (128)+(127); }
	def m2155():Void { var l:Double = (128)+(-127); }
	def m2156():Void { var l:Double = (128)+(128); }
	def m2157():Void { var l:Double = (128)+(-128); }
	def m2158():Void { var l:Double = (128)+(255); }
	def m2159():Void { var l:Double = (128)+(-255); }
	def m2160():Void { var l:Double = (128)+(256); }
	def m2161():Void { var l:Double = (128)+(-256); }
	def m2162():Void { var l:Double = (128)+(32767); }
	def m2163():Void { var l:Double = (128)+(-32767); }
	def m2164():Void { var l:Double = (128)+(32768); }
	def m2165():Void { var l:Double = (128)+(-32768); }
	def m2166():Void { var l:Double = (128)+(65535); }
	def m2167():Void { var l:Double = (128)+(-65535); }
	def m2168():Void { var l:Double = (128)+(65536); }
	def m2169():Void { var l:Double = (128)+(-65536); }
	def m2170():Void { var l:Double = (128)+(16777216); }
	def m2171():Void { var l:Double = (128)+(-16777216); }
	def m2172():Void { var l:Double = (128)+(16777217); }
	def m2173():Void { var l:Double = (128)+(-16777217); }
	def m2174():Void { var l:Double = (128)+(2147483647); }
	def m2175():Void { var l:Double = (128)+(-2147483647); }
	def m2176():Void { var l:Double = (-128)+(w0); }
	def m2177():Void { var l:Double = (-128)+(w1); }
	def m2178():Void { var l:Double = (-128)+(w2); }
	def m2179():Void { var l:Double = (-128)+(w3); }
	def m2180():Void { var l:Double = (-128)+(w4); }
	def m2181():Void { var l:Double = (-128)+(w5); }
	def m2182():Void { var l:Double = (-128)+(w6); }
	def m2183():Void { var l:Double = (-128)+(w7); }
	def m2184():Void { var l:Double = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2185():Void { var l:Double = (-128)+(w9); }
	def m2186():Void { var l:Double = (-128)+(0); }
	def m2187():Void { var l:Double = (-128)+(-0); }
	def m2188():Void { var l:Double = (-128)+(1.1f); }
	def m2189():Void { var l:Double = (-128)+(-1.1f); }
	def m2190():Void { var l:Double = (-128)+(2.2); }
	def m2191():Void { var l:Double = (-128)+(-2.2); }
	def m2192():Void { var l:Double = (-128)+(127); }
	def m2193():Void { var l:Double = (-128)+(-127); }
	def m2194():Void { var l:Double = (-128)+(128); }
	def m2195():Void { var l:Double = (-128)+(-128); }
	def m2196():Void { var l:Double = (-128)+(255); }
	def m2197():Void { var l:Double = (-128)+(-255); }
	def m2198():Void { var l:Double = (-128)+(256); }
	def m2199():Void { var l:Double = (-128)+(-256); }
	def m2200():Void { var l:Double = (-128)+(32767); }
	def m2201():Void { var l:Double = (-128)+(-32767); }
	def m2202():Void { var l:Double = (-128)+(32768); }
	def m2203():Void { var l:Double = (-128)+(-32768); }
	def m2204():Void { var l:Double = (-128)+(65535); }
	def m2205():Void { var l:Double = (-128)+(-65535); }
	def m2206():Void { var l:Double = (-128)+(65536); }
	def m2207():Void { var l:Double = (-128)+(-65536); }
	def m2208():Void { var l:Double = (-128)+(16777216); }
	def m2209():Void { var l:Double = (-128)+(-16777216); }
	def m2210():Void { var l:Double = (-128)+(16777217); }
	def m2211():Void { var l:Double = (-128)+(-16777217); }
	def m2212():Void { var l:Double = (-128)+(2147483647); }
	def m2213():Void { var l:Double = (-128)+(-2147483647); }
	def m2214():Void { var l:Double = (255)+(w0); }
	def m2215():Void { var l:Double = (255)+(w1); }
	def m2216():Void { var l:Double = (255)+(w2); }
	def m2217():Void { var l:Double = (255)+(w3); }
	def m2218():Void { var l:Double = (255)+(w4); }
	def m2219():Void { var l:Double = (255)+(w5); }
	def m2220():Void { var l:Double = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2221():Void { var l:Double = (255)+(w7); }
	def m2222():Void { var l:Double = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2223():Void { var l:Double = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2224():Void { var l:Double = (255)+(0); }
	def m2225():Void { var l:Double = (255)+(-0); }
	def m2226():Void { var l:Double = (255)+(1.1f); }
	def m2227():Void { var l:Double = (255)+(-1.1f); }
	def m2228():Void { var l:Double = (255)+(2.2); }
	def m2229():Void { var l:Double = (255)+(-2.2); }
	def m2230():Void { var l:Double = (255)+(127); }
	def m2231():Void { var l:Double = (255)+(-127); }
	def m2232():Void { var l:Double = (255)+(128); }
	def m2233():Void { var l:Double = (255)+(-128); }
	def m2234():Void { var l:Double = (255)+(255); }
	def m2235():Void { var l:Double = (255)+(-255); }
	def m2236():Void { var l:Double = (255)+(256); }
	def m2237():Void { var l:Double = (255)+(-256); }
	def m2238():Void { var l:Double = (255)+(32767); }
	def m2239():Void { var l:Double = (255)+(-32767); }
	def m2240():Void { var l:Double = (255)+(32768); }
	def m2241():Void { var l:Double = (255)+(-32768); }
	def m2242():Void { var l:Double = (255)+(65535); }
	def m2243():Void { var l:Double = (255)+(-65535); }
	def m2244():Void { var l:Double = (255)+(65536); }
	def m2245():Void { var l:Double = (255)+(-65536); }
	def m2246():Void { var l:Double = (255)+(16777216); }
	def m2247():Void { var l:Double = (255)+(-16777216); }
	def m2248():Void { var l:Double = (255)+(16777217); }
	def m2249():Void { var l:Double = (255)+(-16777217); }
	def m2250():Void { var l:Double = (255)+(2147483647); }
	def m2251():Void { var l:Double = (255)+(-2147483647); }
	def m2252():Void { var l:Double = (-255)+(w0); }
	def m2253():Void { var l:Double = (-255)+(w1); }
	def m2254():Void { var l:Double = (-255)+(w2); }
	def m2255():Void { var l:Double = (-255)+(w3); }
	def m2256():Void { var l:Double = (-255)+(w4); }
	def m2257():Void { var l:Double = (-255)+(w5); }
	def m2258():Void { var l:Double = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2259():Void { var l:Double = (-255)+(w7); }
	def m2260():Void { var l:Double = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2261():Void { var l:Double = (-255)+(w9); }
	def m2262():Void { var l:Double = (-255)+(0); }
	def m2263():Void { var l:Double = (-255)+(-0); }
	def m2264():Void { var l:Double = (-255)+(1.1f); }
	def m2265():Void { var l:Double = (-255)+(-1.1f); }
	def m2266():Void { var l:Double = (-255)+(2.2); }
	def m2267():Void { var l:Double = (-255)+(-2.2); }
	def m2268():Void { var l:Double = (-255)+(127); }
	def m2269():Void { var l:Double = (-255)+(-127); }
	def m2270():Void { var l:Double = (-255)+(128); }
	def m2271():Void { var l:Double = (-255)+(-128); }
	def m2272():Void { var l:Double = (-255)+(255); }
	def m2273():Void { var l:Double = (-255)+(-255); }
	def m2274():Void { var l:Double = (-255)+(256); }
	def m2275():Void { var l:Double = (-255)+(-256); }
	def m2276():Void { var l:Double = (-255)+(32767); }
	def m2277():Void { var l:Double = (-255)+(-32767); }
	def m2278():Void { var l:Double = (-255)+(32768); }
	def m2279():Void { var l:Double = (-255)+(-32768); }
	def m2280():Void { var l:Double = (-255)+(65535); }
	def m2281():Void { var l:Double = (-255)+(-65535); }
	def m2282():Void { var l:Double = (-255)+(65536); }
	def m2283():Void { var l:Double = (-255)+(-65536); }
	def m2284():Void { var l:Double = (-255)+(16777216); }
	def m2285():Void { var l:Double = (-255)+(-16777216); }
	def m2286():Void { var l:Double = (-255)+(16777217); }
	def m2287():Void { var l:Double = (-255)+(-16777217); }
	def m2288():Void { var l:Double = (-255)+(2147483647); }
	def m2289():Void { var l:Double = (-255)+(-2147483647); }
	def m2290():Void { var l:Double = (256)+(w0); }
	def m2291():Void { var l:Double = (256)+(w1); }
	def m2292():Void { var l:Double = (256)+(w2); }
	def m2293():Void { var l:Double = (256)+(w3); }
	def m2294():Void { var l:Double = (256)+(w4); }
	def m2295():Void { var l:Double = (256)+(w5); }
	def m2296():Void { var l:Double = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2297():Void { var l:Double = (256)+(w7); }
	def m2298():Void { var l:Double = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2299():Void { var l:Double = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2300():Void { var l:Double = (256)+(0); }
	def m2301():Void { var l:Double = (256)+(-0); }
	def m2302():Void { var l:Double = (256)+(1.1f); }
	def m2303():Void { var l:Double = (256)+(-1.1f); }
	def m2304():Void { var l:Double = (256)+(2.2); }
	def m2305():Void { var l:Double = (256)+(-2.2); }
	def m2306():Void { var l:Double = (256)+(127); }
	def m2307():Void { var l:Double = (256)+(-127); }
	def m2308():Void { var l:Double = (256)+(128); }
	def m2309():Void { var l:Double = (256)+(-128); }
	def m2310():Void { var l:Double = (256)+(255); }
	def m2311():Void { var l:Double = (256)+(-255); }
	def m2312():Void { var l:Double = (256)+(256); }
	def m2313():Void { var l:Double = (256)+(-256); }
	def m2314():Void { var l:Double = (256)+(32767); }
	def m2315():Void { var l:Double = (256)+(-32767); }
	def m2316():Void { var l:Double = (256)+(32768); }
	def m2317():Void { var l:Double = (256)+(-32768); }
	def m2318():Void { var l:Double = (256)+(65535); }
	def m2319():Void { var l:Double = (256)+(-65535); }
	def m2320():Void { var l:Double = (256)+(65536); }
	def m2321():Void { var l:Double = (256)+(-65536); }
	def m2322():Void { var l:Double = (256)+(16777216); }
	def m2323():Void { var l:Double = (256)+(-16777216); }
	def m2324():Void { var l:Double = (256)+(16777217); }
	def m2325():Void { var l:Double = (256)+(-16777217); }
	def m2326():Void { var l:Double = (256)+(2147483647); }
	def m2327():Void { var l:Double = (256)+(-2147483647); }
	def m2328():Void { var l:Double = (-256)+(w0); }
	def m2329():Void { var l:Double = (-256)+(w1); }
	def m2330():Void { var l:Double = (-256)+(w2); }
	def m2331():Void { var l:Double = (-256)+(w3); }
	def m2332():Void { var l:Double = (-256)+(w4); }
	def m2333():Void { var l:Double = (-256)+(w5); }
	def m2334():Void { var l:Double = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2335():Void { var l:Double = (-256)+(w7); }
	def m2336():Void { var l:Double = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2337():Void { var l:Double = (-256)+(w9); }
	def m2338():Void { var l:Double = (-256)+(0); }
	def m2339():Void { var l:Double = (-256)+(-0); }
	def m2340():Void { var l:Double = (-256)+(1.1f); }
	def m2341():Void { var l:Double = (-256)+(-1.1f); }
	def m2342():Void { var l:Double = (-256)+(2.2); }
	def m2343():Void { var l:Double = (-256)+(-2.2); }
	def m2344():Void { var l:Double = (-256)+(127); }
	def m2345():Void { var l:Double = (-256)+(-127); }
	def m2346():Void { var l:Double = (-256)+(128); }
	def m2347():Void { var l:Double = (-256)+(-128); }
	def m2348():Void { var l:Double = (-256)+(255); }
	def m2349():Void { var l:Double = (-256)+(-255); }
	def m2350():Void { var l:Double = (-256)+(256); }
	def m2351():Void { var l:Double = (-256)+(-256); }
	def m2352():Void { var l:Double = (-256)+(32767); }
	def m2353():Void { var l:Double = (-256)+(-32767); }
	def m2354():Void { var l:Double = (-256)+(32768); }
	def m2355():Void { var l:Double = (-256)+(-32768); }
	def m2356():Void { var l:Double = (-256)+(65535); }
	def m2357():Void { var l:Double = (-256)+(-65535); }
	def m2358():Void { var l:Double = (-256)+(65536); }
	def m2359():Void { var l:Double = (-256)+(-65536); }
	def m2360():Void { var l:Double = (-256)+(16777216); }
	def m2361():Void { var l:Double = (-256)+(-16777216); }
	def m2362():Void { var l:Double = (-256)+(16777217); }
	def m2363():Void { var l:Double = (-256)+(-16777217); }
	def m2364():Void { var l:Double = (-256)+(2147483647); }
	def m2365():Void { var l:Double = (-256)+(-2147483647); }
	def m2366():Void { var l:Double = (32767)+(w0); }
	def m2367():Void { var l:Double = (32767)+(w1); }
	def m2368():Void { var l:Double = (32767)+(w2); }
	def m2369():Void { var l:Double = (32767)+(w3); }
	def m2370():Void { var l:Double = (32767)+(w4); }
	def m2371():Void { var l:Double = (32767)+(w5); }
	def m2372():Void { var l:Double = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2373():Void { var l:Double = (32767)+(w7); }
	def m2374():Void { var l:Double = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2375():Void { var l:Double = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2376():Void { var l:Double = (32767)+(0); }
	def m2377():Void { var l:Double = (32767)+(-0); }
	def m2378():Void { var l:Double = (32767)+(1.1f); }
	def m2379():Void { var l:Double = (32767)+(-1.1f); }
	def m2380():Void { var l:Double = (32767)+(2.2); }
	def m2381():Void { var l:Double = (32767)+(-2.2); }
	def m2382():Void { var l:Double = (32767)+(127); }
	def m2383():Void { var l:Double = (32767)+(-127); }
	def m2384():Void { var l:Double = (32767)+(128); }
	def m2385():Void { var l:Double = (32767)+(-128); }
	def m2386():Void { var l:Double = (32767)+(255); }
	def m2387():Void { var l:Double = (32767)+(-255); }
	def m2388():Void { var l:Double = (32767)+(256); }
	def m2389():Void { var l:Double = (32767)+(-256); }
	def m2390():Void { var l:Double = (32767)+(32767); }
	def m2391():Void { var l:Double = (32767)+(-32767); }
	def m2392():Void { var l:Double = (32767)+(32768); }
	def m2393():Void { var l:Double = (32767)+(-32768); }
	def m2394():Void { var l:Double = (32767)+(65535); }
	def m2395():Void { var l:Double = (32767)+(-65535); }
	def m2396():Void { var l:Double = (32767)+(65536); }
	def m2397():Void { var l:Double = (32767)+(-65536); }
	def m2398():Void { var l:Double = (32767)+(16777216); }
	def m2399():Void { var l:Double = (32767)+(-16777216); }
	def m2400():Void { var l:Double = (32767)+(16777217); }
	def m2401():Void { var l:Double = (32767)+(-16777217); }
	def m2402():Void { var l:Double = (32767)+(2147483647); }
	def m2403():Void { var l:Double = (32767)+(-2147483647); }
	def m2404():Void { var l:Double = (-32767)+(w0); }
	def m2405():Void { var l:Double = (-32767)+(w1); }
	def m2406():Void { var l:Double = (-32767)+(w2); }
	def m2407():Void { var l:Double = (-32767)+(w3); }
	def m2408():Void { var l:Double = (-32767)+(w4); }
	def m2409():Void { var l:Double = (-32767)+(w5); }
	def m2410():Void { var l:Double = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2411():Void { var l:Double = (-32767)+(w7); }
	def m2412():Void { var l:Double = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2413():Void { var l:Double = (-32767)+(w9); }
	def m2414():Void { var l:Double = (-32767)+(0); }
	def m2415():Void { var l:Double = (-32767)+(-0); }
	def m2416():Void { var l:Double = (-32767)+(1.1f); }
	def m2417():Void { var l:Double = (-32767)+(-1.1f); }
	def m2418():Void { var l:Double = (-32767)+(2.2); }
	def m2419():Void { var l:Double = (-32767)+(-2.2); }
	def m2420():Void { var l:Double = (-32767)+(127); }
	def m2421():Void { var l:Double = (-32767)+(-127); }
	def m2422():Void { var l:Double = (-32767)+(128); }
	def m2423():Void { var l:Double = (-32767)+(-128); }
	def m2424():Void { var l:Double = (-32767)+(255); }
	def m2425():Void { var l:Double = (-32767)+(-255); }
	def m2426():Void { var l:Double = (-32767)+(256); }
	def m2427():Void { var l:Double = (-32767)+(-256); }
	def m2428():Void { var l:Double = (-32767)+(32767); }
	def m2429():Void { var l:Double = (-32767)+(-32767); }
	def m2430():Void { var l:Double = (-32767)+(32768); }
	def m2431():Void { var l:Double = (-32767)+(-32768); }
	def m2432():Void { var l:Double = (-32767)+(65535); }
	def m2433():Void { var l:Double = (-32767)+(-65535); }
	def m2434():Void { var l:Double = (-32767)+(65536); }
	def m2435():Void { var l:Double = (-32767)+(-65536); }
	def m2436():Void { var l:Double = (-32767)+(16777216); }
	def m2437():Void { var l:Double = (-32767)+(-16777216); }
	def m2438():Void { var l:Double = (-32767)+(16777217); }
	def m2439():Void { var l:Double = (-32767)+(-16777217); }
	def m2440():Void { var l:Double = (-32767)+(2147483647); }
	def m2441():Void { var l:Double = (-32767)+(-2147483647); }
	def m2442():Void { var l:Double = (32768)+(w0); }
	def m2443():Void { var l:Double = (32768)+(w1); }
	def m2444():Void { var l:Double = (32768)+(w2); }
	def m2445():Void { var l:Double = (32768)+(w3); }
	def m2446():Void { var l:Double = (32768)+(w4); }
	def m2447():Void { var l:Double = (32768)+(w5); }
	def m2448():Void { var l:Double = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2449():Void { var l:Double = (32768)+(w7); }
	def m2450():Void { var l:Double = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2451():Void { var l:Double = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2452():Void { var l:Double = (32768)+(0); }
	def m2453():Void { var l:Double = (32768)+(-0); }
	def m2454():Void { var l:Double = (32768)+(1.1f); }
	def m2455():Void { var l:Double = (32768)+(-1.1f); }
	def m2456():Void { var l:Double = (32768)+(2.2); }
	def m2457():Void { var l:Double = (32768)+(-2.2); }
	def m2458():Void { var l:Double = (32768)+(127); }
	def m2459():Void { var l:Double = (32768)+(-127); }
	def m2460():Void { var l:Double = (32768)+(128); }
	def m2461():Void { var l:Double = (32768)+(-128); }
	def m2462():Void { var l:Double = (32768)+(255); }
	def m2463():Void { var l:Double = (32768)+(-255); }
	def m2464():Void { var l:Double = (32768)+(256); }
	def m2465():Void { var l:Double = (32768)+(-256); }
	def m2466():Void { var l:Double = (32768)+(32767); }
	def m2467():Void { var l:Double = (32768)+(-32767); }
	def m2468():Void { var l:Double = (32768)+(32768); }
	def m2469():Void { var l:Double = (32768)+(-32768); }
	def m2470():Void { var l:Double = (32768)+(65535); }
	def m2471():Void { var l:Double = (32768)+(-65535); }
	def m2472():Void { var l:Double = (32768)+(65536); }
	def m2473():Void { var l:Double = (32768)+(-65536); }
	def m2474():Void { var l:Double = (32768)+(16777216); }
	def m2475():Void { var l:Double = (32768)+(-16777216); }
	def m2476():Void { var l:Double = (32768)+(16777217); }
	def m2477():Void { var l:Double = (32768)+(-16777217); }
	def m2478():Void { var l:Double = (32768)+(2147483647); }
	def m2479():Void { var l:Double = (32768)+(-2147483647); }
	def m2480():Void { var l:Double = (-32768)+(w0); }
	def m2481():Void { var l:Double = (-32768)+(w1); }
	def m2482():Void { var l:Double = (-32768)+(w2); }
	def m2483():Void { var l:Double = (-32768)+(w3); }
	def m2484():Void { var l:Double = (-32768)+(w4); }
	def m2485():Void { var l:Double = (-32768)+(w5); }
	def m2486():Void { var l:Double = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2487():Void { var l:Double = (-32768)+(w7); }
	def m2488():Void { var l:Double = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2489():Void { var l:Double = (-32768)+(w9); }
	def m2490():Void { var l:Double = (-32768)+(0); }
	def m2491():Void { var l:Double = (-32768)+(-0); }
	def m2492():Void { var l:Double = (-32768)+(1.1f); }
	def m2493():Void { var l:Double = (-32768)+(-1.1f); }
	def m2494():Void { var l:Double = (-32768)+(2.2); }
	def m2495():Void { var l:Double = (-32768)+(-2.2); }
	def m2496():Void { var l:Double = (-32768)+(127); }
	def m2497():Void { var l:Double = (-32768)+(-127); }
	def m2498():Void { var l:Double = (-32768)+(128); }
	def m2499():Void { var l:Double = (-32768)+(-128); }
	def m2500():Void { var l:Double = (-32768)+(255); }
	def m2501():Void { var l:Double = (-32768)+(-255); }
	def m2502():Void { var l:Double = (-32768)+(256); }
	def m2503():Void { var l:Double = (-32768)+(-256); }
	def m2504():Void { var l:Double = (-32768)+(32767); }
	def m2505():Void { var l:Double = (-32768)+(-32767); }
	def m2506():Void { var l:Double = (-32768)+(32768); }
	def m2507():Void { var l:Double = (-32768)+(-32768); }
	def m2508():Void { var l:Double = (-32768)+(65535); }
	def m2509():Void { var l:Double = (-32768)+(-65535); }
	def m2510():Void { var l:Double = (-32768)+(65536); }
	def m2511():Void { var l:Double = (-32768)+(-65536); }
	def m2512():Void { var l:Double = (-32768)+(16777216); }
	def m2513():Void { var l:Double = (-32768)+(-16777216); }
	def m2514():Void { var l:Double = (-32768)+(16777217); }
	def m2515():Void { var l:Double = (-32768)+(-16777217); }
	def m2516():Void { var l:Double = (-32768)+(2147483647); }
	def m2517():Void { var l:Double = (-32768)+(-2147483647); }
	def m2518():Void { var l:Double = (65535)+(w0); }
	def m2519():Void { var l:Double = (65535)+(w1); }
	def m2520():Void { var l:Double = (65535)+(w2); }
	def m2521():Void { var l:Double = (65535)+(w3); }
	def m2522():Void { var l:Double = (65535)+(w4); }
	def m2523():Void { var l:Double = (65535)+(w5); }
	def m2524():Void { var l:Double = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2525():Void { var l:Double = (65535)+(w7); }
	def m2526():Void { var l:Double = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2527():Void { var l:Double = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2528():Void { var l:Double = (65535)+(0); }
	def m2529():Void { var l:Double = (65535)+(-0); }
	def m2530():Void { var l:Double = (65535)+(1.1f); }
	def m2531():Void { var l:Double = (65535)+(-1.1f); }
	def m2532():Void { var l:Double = (65535)+(2.2); }
	def m2533():Void { var l:Double = (65535)+(-2.2); }
	def m2534():Void { var l:Double = (65535)+(127); }
	def m2535():Void { var l:Double = (65535)+(-127); }
	def m2536():Void { var l:Double = (65535)+(128); }
	def m2537():Void { var l:Double = (65535)+(-128); }
	def m2538():Void { var l:Double = (65535)+(255); }
	def m2539():Void { var l:Double = (65535)+(-255); }
	def m2540():Void { var l:Double = (65535)+(256); }
	def m2541():Void { var l:Double = (65535)+(-256); }
	def m2542():Void { var l:Double = (65535)+(32767); }
	def m2543():Void { var l:Double = (65535)+(-32767); }
	def m2544():Void { var l:Double = (65535)+(32768); }
	def m2545():Void { var l:Double = (65535)+(-32768); }
	def m2546():Void { var l:Double = (65535)+(65535); }
	def m2547():Void { var l:Double = (65535)+(-65535); }
	def m2548():Void { var l:Double = (65535)+(65536); }
	def m2549():Void { var l:Double = (65535)+(-65536); }
	def m2550():Void { var l:Double = (65535)+(16777216); }
	def m2551():Void { var l:Double = (65535)+(-16777216); }
	def m2552():Void { var l:Double = (65535)+(16777217); }
	def m2553():Void { var l:Double = (65535)+(-16777217); }
	def m2554():Void { var l:Double = (65535)+(2147483647); }
	def m2555():Void { var l:Double = (65535)+(-2147483647); }
	def m2556():Void { var l:Double = (-65535)+(w0); }
	def m2557():Void { var l:Double = (-65535)+(w1); }
	def m2558():Void { var l:Double = (-65535)+(w2); }
	def m2559():Void { var l:Double = (-65535)+(w3); }
	def m2560():Void { var l:Double = (-65535)+(w4); }
	def m2561():Void { var l:Double = (-65535)+(w5); }
	def m2562():Void { var l:Double = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2563():Void { var l:Double = (-65535)+(w7); }
	def m2564():Void { var l:Double = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2565():Void { var l:Double = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2566():Void { var l:Double = (-65535)+(0); }
	def m2567():Void { var l:Double = (-65535)+(-0); }
	def m2568():Void { var l:Double = (-65535)+(1.1f); }
	def m2569():Void { var l:Double = (-65535)+(-1.1f); }
	def m2570():Void { var l:Double = (-65535)+(2.2); }
	def m2571():Void { var l:Double = (-65535)+(-2.2); }
	def m2572():Void { var l:Double = (-65535)+(127); }
	def m2573():Void { var l:Double = (-65535)+(-127); }
	def m2574():Void { var l:Double = (-65535)+(128); }
	def m2575():Void { var l:Double = (-65535)+(-128); }
	def m2576():Void { var l:Double = (-65535)+(255); }
	def m2577():Void { var l:Double = (-65535)+(-255); }
	def m2578():Void { var l:Double = (-65535)+(256); }
	def m2579():Void { var l:Double = (-65535)+(-256); }
	def m2580():Void { var l:Double = (-65535)+(32767); }
	def m2581():Void { var l:Double = (-65535)+(-32767); }
	def m2582():Void { var l:Double = (-65535)+(32768); }
	def m2583():Void { var l:Double = (-65535)+(-32768); }
	def m2584():Void { var l:Double = (-65535)+(65535); }
	def m2585():Void { var l:Double = (-65535)+(-65535); }
	def m2586():Void { var l:Double = (-65535)+(65536); }
	def m2587():Void { var l:Double = (-65535)+(-65536); }
	def m2588():Void { var l:Double = (-65535)+(16777216); }
	def m2589():Void { var l:Double = (-65535)+(-16777216); }
	def m2590():Void { var l:Double = (-65535)+(16777217); }
	def m2591():Void { var l:Double = (-65535)+(-16777217); }
	def m2592():Void { var l:Double = (-65535)+(2147483647); }
	def m2593():Void { var l:Double = (-65535)+(-2147483647); }
	def m2594():Void { var l:Double = (65536)+(w0); }
	def m2595():Void { var l:Double = (65536)+(w1); }
	def m2596():Void { var l:Double = (65536)+(w2); }
	def m2597():Void { var l:Double = (65536)+(w3); }
	def m2598():Void { var l:Double = (65536)+(w4); }
	def m2599():Void { var l:Double = (65536)+(w5); }
	def m2600():Void { var l:Double = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2601():Void { var l:Double = (65536)+(w7); }
	def m2602():Void { var l:Double = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2603():Void { var l:Double = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2604():Void { var l:Double = (65536)+(0); }
	def m2605():Void { var l:Double = (65536)+(-0); }
	def m2606():Void { var l:Double = (65536)+(1.1f); }
	def m2607():Void { var l:Double = (65536)+(-1.1f); }
	def m2608():Void { var l:Double = (65536)+(2.2); }
	def m2609():Void { var l:Double = (65536)+(-2.2); }
	def m2610():Void { var l:Double = (65536)+(127); }
	def m2611():Void { var l:Double = (65536)+(-127); }
	def m2612():Void { var l:Double = (65536)+(128); }
	def m2613():Void { var l:Double = (65536)+(-128); }
	def m2614():Void { var l:Double = (65536)+(255); }
	def m2615():Void { var l:Double = (65536)+(-255); }
	def m2616():Void { var l:Double = (65536)+(256); }
	def m2617():Void { var l:Double = (65536)+(-256); }
	def m2618():Void { var l:Double = (65536)+(32767); }
	def m2619():Void { var l:Double = (65536)+(-32767); }
	def m2620():Void { var l:Double = (65536)+(32768); }
	def m2621():Void { var l:Double = (65536)+(-32768); }
	def m2622():Void { var l:Double = (65536)+(65535); }
	def m2623():Void { var l:Double = (65536)+(-65535); }
	def m2624():Void { var l:Double = (65536)+(65536); }
	def m2625():Void { var l:Double = (65536)+(-65536); }
	def m2626():Void { var l:Double = (65536)+(16777216); }
	def m2627():Void { var l:Double = (65536)+(-16777216); }
	def m2628():Void { var l:Double = (65536)+(16777217); }
	def m2629():Void { var l:Double = (65536)+(-16777217); }
	def m2630():Void { var l:Double = (65536)+(2147483647); }
	def m2631():Void { var l:Double = (65536)+(-2147483647); }
	def m2632():Void { var l:Double = (-65536)+(w0); }
	def m2633():Void { var l:Double = (-65536)+(w1); }
	def m2634():Void { var l:Double = (-65536)+(w2); }
	def m2635():Void { var l:Double = (-65536)+(w3); }
	def m2636():Void { var l:Double = (-65536)+(w4); }
	def m2637():Void { var l:Double = (-65536)+(w5); }
	def m2638():Void { var l:Double = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2639():Void { var l:Double = (-65536)+(w7); }
	def m2640():Void { var l:Double = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2641():Void { var l:Double = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2642():Void { var l:Double = (-65536)+(0); }
	def m2643():Void { var l:Double = (-65536)+(-0); }
	def m2644():Void { var l:Double = (-65536)+(1.1f); }
	def m2645():Void { var l:Double = (-65536)+(-1.1f); }
	def m2646():Void { var l:Double = (-65536)+(2.2); }
	def m2647():Void { var l:Double = (-65536)+(-2.2); }
	def m2648():Void { var l:Double = (-65536)+(127); }
	def m2649():Void { var l:Double = (-65536)+(-127); }
	def m2650():Void { var l:Double = (-65536)+(128); }
	def m2651():Void { var l:Double = (-65536)+(-128); }
	def m2652():Void { var l:Double = (-65536)+(255); }
	def m2653():Void { var l:Double = (-65536)+(-255); }
	def m2654():Void { var l:Double = (-65536)+(256); }
	def m2655():Void { var l:Double = (-65536)+(-256); }
	def m2656():Void { var l:Double = (-65536)+(32767); }
	def m2657():Void { var l:Double = (-65536)+(-32767); }
	def m2658():Void { var l:Double = (-65536)+(32768); }
	def m2659():Void { var l:Double = (-65536)+(-32768); }
	def m2660():Void { var l:Double = (-65536)+(65535); }
	def m2661():Void { var l:Double = (-65536)+(-65535); }
	def m2662():Void { var l:Double = (-65536)+(65536); }
	def m2663():Void { var l:Double = (-65536)+(-65536); }
	def m2664():Void { var l:Double = (-65536)+(16777216); }
	def m2665():Void { var l:Double = (-65536)+(-16777216); }
	def m2666():Void { var l:Double = (-65536)+(16777217); }
	def m2667():Void { var l:Double = (-65536)+(-16777217); }
	def m2668():Void { var l:Double = (-65536)+(2147483647); }
	def m2669():Void { var l:Double = (-65536)+(-2147483647); }
	def m2670():Void { var l:Double = (16777216)+(w0); }
	def m2671():Void { var l:Double = (16777216)+(w1); }
	def m2672():Void { var l:Double = (16777216)+(w2); }
	def m2673():Void { var l:Double = (16777216)+(w3); }
	def m2674():Void { var l:Double = (16777216)+(w4); }
	def m2675():Void { var l:Double = (16777216)+(w5); }
	def m2676():Void { var l:Double = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2677():Void { var l:Double = (16777216)+(w7); }
	def m2678():Void { var l:Double = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2679():Void { var l:Double = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2680():Void { var l:Double = (16777216)+(0); }
	def m2681():Void { var l:Double = (16777216)+(-0); }
	def m2682():Void { var l:Double = (16777216)+(1.1f); }
	def m2683():Void { var l:Double = (16777216)+(-1.1f); }
	def m2684():Void { var l:Double = (16777216)+(2.2); }
	def m2685():Void { var l:Double = (16777216)+(-2.2); }
	def m2686():Void { var l:Double = (16777216)+(127); }
	def m2687():Void { var l:Double = (16777216)+(-127); }
	def m2688():Void { var l:Double = (16777216)+(128); }
	def m2689():Void { var l:Double = (16777216)+(-128); }
	def m2690():Void { var l:Double = (16777216)+(255); }
	def m2691():Void { var l:Double = (16777216)+(-255); }
	def m2692():Void { var l:Double = (16777216)+(256); }
	def m2693():Void { var l:Double = (16777216)+(-256); }
	def m2694():Void { var l:Double = (16777216)+(32767); }
	def m2695():Void { var l:Double = (16777216)+(-32767); }
	def m2696():Void { var l:Double = (16777216)+(32768); }
	def m2697():Void { var l:Double = (16777216)+(-32768); }
	def m2698():Void { var l:Double = (16777216)+(65535); }
	def m2699():Void { var l:Double = (16777216)+(-65535); }
	def m2700():Void { var l:Double = (16777216)+(65536); }
	def m2701():Void { var l:Double = (16777216)+(-65536); }
	def m2702():Void { var l:Double = (16777216)+(16777216); }
	def m2703():Void { var l:Double = (16777216)+(-16777216); }
	def m2704():Void { var l:Double = (16777216)+(16777217); }
	def m2705():Void { var l:Double = (16777216)+(-16777217); }
	def m2706():Void { var l:Double = (16777216)+(2147483647); }
	def m2707():Void { var l:Double = (16777216)+(-2147483647); }
	def m2708():Void { var l:Double = (-16777216)+(w0); }
	def m2709():Void { var l:Double = (-16777216)+(w1); }
	def m2710():Void { var l:Double = (-16777216)+(w2); }
	def m2711():Void { var l:Double = (-16777216)+(w3); }
	def m2712():Void { var l:Double = (-16777216)+(w4); }
	def m2713():Void { var l:Double = (-16777216)+(w5); }
	def m2714():Void { var l:Double = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2715():Void { var l:Double = (-16777216)+(w7); }
	def m2716():Void { var l:Double = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2717():Void { var l:Double = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2718():Void { var l:Double = (-16777216)+(0); }
	def m2719():Void { var l:Double = (-16777216)+(-0); }
	def m2720():Void { var l:Double = (-16777216)+(1.1f); }
	def m2721():Void { var l:Double = (-16777216)+(-1.1f); }
	def m2722():Void { var l:Double = (-16777216)+(2.2); }
	def m2723():Void { var l:Double = (-16777216)+(-2.2); }
	def m2724():Void { var l:Double = (-16777216)+(127); }
	def m2725():Void { var l:Double = (-16777216)+(-127); }
	def m2726():Void { var l:Double = (-16777216)+(128); }
	def m2727():Void { var l:Double = (-16777216)+(-128); }
	def m2728():Void { var l:Double = (-16777216)+(255); }
	def m2729():Void { var l:Double = (-16777216)+(-255); }
	def m2730():Void { var l:Double = (-16777216)+(256); }
	def m2731():Void { var l:Double = (-16777216)+(-256); }
	def m2732():Void { var l:Double = (-16777216)+(32767); }
	def m2733():Void { var l:Double = (-16777216)+(-32767); }
	def m2734():Void { var l:Double = (-16777216)+(32768); }
	def m2735():Void { var l:Double = (-16777216)+(-32768); }
	def m2736():Void { var l:Double = (-16777216)+(65535); }
	def m2737():Void { var l:Double = (-16777216)+(-65535); }
	def m2738():Void { var l:Double = (-16777216)+(65536); }
	def m2739():Void { var l:Double = (-16777216)+(-65536); }
	def m2740():Void { var l:Double = (-16777216)+(16777216); }
	def m2741():Void { var l:Double = (-16777216)+(-16777216); }
	def m2742():Void { var l:Double = (-16777216)+(16777217); }
	def m2743():Void { var l:Double = (-16777216)+(-16777217); }
	def m2744():Void { var l:Double = (-16777216)+(2147483647); }
	def m2745():Void { var l:Double = (-16777216)+(-2147483647); }
	def m2746():Void { var l:Double = (16777217)+(w0); }
	def m2747():Void { var l:Double = (16777217)+(w1); }
	def m2748():Void { var l:Double = (16777217)+(w2); }
	def m2749():Void { var l:Double = (16777217)+(w3); }
	def m2750():Void { var l:Double = (16777217)+(w4); }
	def m2751():Void { var l:Double = (16777217)+(w5); }
	def m2752():Void { var l:Double = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2753():Void { var l:Double = (16777217)+(w7); }
	def m2754():Void { var l:Double = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2755():Void { var l:Double = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2756():Void { var l:Double = (16777217)+(0); }
	def m2757():Void { var l:Double = (16777217)+(-0); }
	def m2758():Void { var l:Double = (16777217)+(1.1f); }
	def m2759():Void { var l:Double = (16777217)+(-1.1f); }
	def m2760():Void { var l:Double = (16777217)+(2.2); }
	def m2761():Void { var l:Double = (16777217)+(-2.2); }
	def m2762():Void { var l:Double = (16777217)+(127); }
	def m2763():Void { var l:Double = (16777217)+(-127); }
	def m2764():Void { var l:Double = (16777217)+(128); }
	def m2765():Void { var l:Double = (16777217)+(-128); }
	def m2766():Void { var l:Double = (16777217)+(255); }
	def m2767():Void { var l:Double = (16777217)+(-255); }
	def m2768():Void { var l:Double = (16777217)+(256); }
	def m2769():Void { var l:Double = (16777217)+(-256); }
	def m2770():Void { var l:Double = (16777217)+(32767); }
	def m2771():Void { var l:Double = (16777217)+(-32767); }
	def m2772():Void { var l:Double = (16777217)+(32768); }
	def m2773():Void { var l:Double = (16777217)+(-32768); }
	def m2774():Void { var l:Double = (16777217)+(65535); }
	def m2775():Void { var l:Double = (16777217)+(-65535); }
	def m2776():Void { var l:Double = (16777217)+(65536); }
	def m2777():Void { var l:Double = (16777217)+(-65536); }
	def m2778():Void { var l:Double = (16777217)+(16777216); }
	def m2779():Void { var l:Double = (16777217)+(-16777216); }
	def m2780():Void { var l:Double = (16777217)+(16777217); }
	def m2781():Void { var l:Double = (16777217)+(-16777217); }
	def m2782():Void { var l:Double = (16777217)+(2147483647); }
	def m2783():Void { var l:Double = (16777217)+(-2147483647); }
	def m2784():Void { var l:Double = (-16777217)+(w0); }
	def m2785():Void { var l:Double = (-16777217)+(w1); }
	def m2786():Void { var l:Double = (-16777217)+(w2); }
	def m2787():Void { var l:Double = (-16777217)+(w3); }
	def m2788():Void { var l:Double = (-16777217)+(w4); }
	def m2789():Void { var l:Double = (-16777217)+(w5); }
	def m2790():Void { var l:Double = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2791():Void { var l:Double = (-16777217)+(w7); }
	def m2792():Void { var l:Double = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2793():Void { var l:Double = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2794():Void { var l:Double = (-16777217)+(0); }
	def m2795():Void { var l:Double = (-16777217)+(-0); }
	def m2796():Void { var l:Double = (-16777217)+(1.1f); }
	def m2797():Void { var l:Double = (-16777217)+(-1.1f); }
	def m2798():Void { var l:Double = (-16777217)+(2.2); }
	def m2799():Void { var l:Double = (-16777217)+(-2.2); }
	def m2800():Void { var l:Double = (-16777217)+(127); }
	def m2801():Void { var l:Double = (-16777217)+(-127); }
	def m2802():Void { var l:Double = (-16777217)+(128); }
	def m2803():Void { var l:Double = (-16777217)+(-128); }
	def m2804():Void { var l:Double = (-16777217)+(255); }
	def m2805():Void { var l:Double = (-16777217)+(-255); }
	def m2806():Void { var l:Double = (-16777217)+(256); }
	def m2807():Void { var l:Double = (-16777217)+(-256); }
	def m2808():Void { var l:Double = (-16777217)+(32767); }
	def m2809():Void { var l:Double = (-16777217)+(-32767); }
	def m2810():Void { var l:Double = (-16777217)+(32768); }
	def m2811():Void { var l:Double = (-16777217)+(-32768); }
	def m2812():Void { var l:Double = (-16777217)+(65535); }
	def m2813():Void { var l:Double = (-16777217)+(-65535); }
	def m2814():Void { var l:Double = (-16777217)+(65536); }
	def m2815():Void { var l:Double = (-16777217)+(-65536); }
	def m2816():Void { var l:Double = (-16777217)+(16777216); }
	def m2817():Void { var l:Double = (-16777217)+(-16777216); }
	def m2818():Void { var l:Double = (-16777217)+(16777217); }
	def m2819():Void { var l:Double = (-16777217)+(-16777217); }
	def m2820():Void { var l:Double = (-16777217)+(2147483647); }
	def m2821():Void { var l:Double = (-16777217)+(-2147483647); }
	def m2822():Void { var l:Double = (2147483647)+(w0); }
	def m2823():Void { var l:Double = (2147483647)+(w1); }
	def m2824():Void { var l:Double = (2147483647)+(w2); }
	def m2825():Void { var l:Double = (2147483647)+(w3); }
	def m2826():Void { var l:Double = (2147483647)+(w4); }
	def m2827():Void { var l:Double = (2147483647)+(w5); }
	def m2828():Void { var l:Double = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2829():Void { var l:Double = (2147483647)+(w7); }
	def m2830():Void { var l:Double = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2831():Void { var l:Double = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2832():Void { var l:Double = (2147483647)+(0); }
	def m2833():Void { var l:Double = (2147483647)+(-0); }
	def m2834():Void { var l:Double = (2147483647)+(1.1f); }
	def m2835():Void { var l:Double = (2147483647)+(-1.1f); }
	def m2836():Void { var l:Double = (2147483647)+(2.2); }
	def m2837():Void { var l:Double = (2147483647)+(-2.2); }
	def m2838():Void { var l:Double = (2147483647)+(127); }
	def m2839():Void { var l:Double = (2147483647)+(-127); }
	def m2840():Void { var l:Double = (2147483647)+(128); }
	def m2841():Void { var l:Double = (2147483647)+(-128); }
	def m2842():Void { var l:Double = (2147483647)+(255); }
	def m2843():Void { var l:Double = (2147483647)+(-255); }
	def m2844():Void { var l:Double = (2147483647)+(256); }
	def m2845():Void { var l:Double = (2147483647)+(-256); }
	def m2846():Void { var l:Double = (2147483647)+(32767); }
	def m2847():Void { var l:Double = (2147483647)+(-32767); }
	def m2848():Void { var l:Double = (2147483647)+(32768); }
	def m2849():Void { var l:Double = (2147483647)+(-32768); }
	def m2850():Void { var l:Double = (2147483647)+(65535); }
	def m2851():Void { var l:Double = (2147483647)+(-65535); }
	def m2852():Void { var l:Double = (2147483647)+(65536); }
	def m2853():Void { var l:Double = (2147483647)+(-65536); }
	def m2854():Void { var l:Double = (2147483647)+(16777216); }
	def m2855():Void { var l:Double = (2147483647)+(-16777216); }
	def m2856():Void { var l:Double = (2147483647)+(16777217); }
	def m2857():Void { var l:Double = (2147483647)+(-16777217); }
	def m2858():Void { var l:Double = (2147483647)+(2147483647); }
	def m2859():Void { var l:Double = (2147483647)+(-2147483647); }
	def m2860():Void { var l:Double = (-2147483647)+(w0); }
	def m2861():Void { var l:Double = (-2147483647)+(w1); }
	def m2862():Void { var l:Double = (-2147483647)+(w2); }
	def m2863():Void { var l:Double = (-2147483647)+(w3); }
	def m2864():Void { var l:Double = (-2147483647)+(w4); }
	def m2865():Void { var l:Double = (-2147483647)+(w5); }
	def m2866():Void { var l:Double = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m2867():Void { var l:Double = (-2147483647)+(w7); }
	def m2868():Void { var l:Double = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m2869():Void { var l:Double = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m2870():Void { var l:Double = (-2147483647)+(0); }
	def m2871():Void { var l:Double = (-2147483647)+(-0); }
	def m2872():Void { var l:Double = (-2147483647)+(1.1f); }
	def m2873():Void { var l:Double = (-2147483647)+(-1.1f); }
	def m2874():Void { var l:Double = (-2147483647)+(2.2); }
	def m2875():Void { var l:Double = (-2147483647)+(-2.2); }
	def m2876():Void { var l:Double = (-2147483647)+(127); }
	def m2877():Void { var l:Double = (-2147483647)+(-127); }
	def m2878():Void { var l:Double = (-2147483647)+(128); }
	def m2879():Void { var l:Double = (-2147483647)+(-128); }
	def m2880():Void { var l:Double = (-2147483647)+(255); }
	def m2881():Void { var l:Double = (-2147483647)+(-255); }
	def m2882():Void { var l:Double = (-2147483647)+(256); }
	def m2883():Void { var l:Double = (-2147483647)+(-256); }
	def m2884():Void { var l:Double = (-2147483647)+(32767); }
	def m2885():Void { var l:Double = (-2147483647)+(-32767); }
	def m2886():Void { var l:Double = (-2147483647)+(32768); }
	def m2887():Void { var l:Double = (-2147483647)+(-32768); }
	def m2888():Void { var l:Double = (-2147483647)+(65535); }
	def m2889():Void { var l:Double = (-2147483647)+(-65535); }
	def m2890():Void { var l:Double = (-2147483647)+(65536); }
	def m2891():Void { var l:Double = (-2147483647)+(-65536); }
	def m2892():Void { var l:Double = (-2147483647)+(16777216); }
	def m2893():Void { var l:Double = (-2147483647)+(-16777216); }
	def m2894():Void { var l:Double = (-2147483647)+(16777217); }
	def m2895():Void { var l:Double = (-2147483647)+(-16777217); }
	def m2896():Void { var l:Double = (-2147483647)+(2147483647); }
	def m2897():Void { var l:Double = (-2147483647)+(-2147483647); }
	def m2898():Void { var l:Byte = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2899():Void { var l:Byte = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2900():Void { var l:Byte = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2901():Void { var l:Byte = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2902():Void { var l:Byte = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2903():Void { var l:Byte = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2904():Void { var l:Byte = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2905():Void { var l:Byte = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2906():Void { var l:Byte = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2907():Void { var l:Byte = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2908():Void { var l:Byte = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2909():Void { var l:Byte = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2910():Void { var l:Byte = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2911():Void { var l:Byte = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2912():Void { var l:Byte = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2913():Void { var l:Byte = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2914():Void { var l:Byte = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2915():Void { var l:Byte = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2916():Void { var l:Byte = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2917():Void { var l:Byte = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2918():Void { var l:Byte = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2919():Void { var l:Byte = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2920():Void { var l:Byte = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2921():Void { var l:Byte = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2922():Void { var l:Byte = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2923():Void { var l:Byte = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2924():Void { var l:Byte = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2925():Void { var l:Byte = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2926():Void { var l:Byte = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2927():Void { var l:Byte = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2928():Void { var l:Byte = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2929():Void { var l:Byte = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2930():Void { var l:Byte = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2931():Void { var l:Byte = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2932():Void { var l:Byte = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2933():Void { var l:Byte = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2934():Void { var l:Byte = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2935():Void { var l:Byte = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2936():Void { var l:Byte = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2937():Void { var l:Byte = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2938():Void { var l:Byte = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2939():Void { var l:Byte = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2940():Void { var l:Byte = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2941():Void { var l:Byte = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2942():Void { var l:Byte = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2943():Void { var l:Byte = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2944():Void { var l:Byte = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2945():Void { var l:Byte = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2946():Void { var l:Byte = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2947():Void { var l:Byte = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2948():Void { var l:Byte = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2949():Void { var l:Byte = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2950():Void { var l:Byte = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2951():Void { var l:Byte = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2952():Void { var l:Byte = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2953():Void { var l:Byte = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2954():Void { var l:Byte = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2955():Void { var l:Byte = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2956():Void { var l:Byte = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2957():Void { var l:Byte = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2958():Void { var l:Byte = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2959():Void { var l:Byte = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2960():Void { var l:Byte = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2961():Void { var l:Byte = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2962():Void { var l:Byte = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2963():Void { var l:Byte = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2964():Void { var l:Byte = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2965():Void { var l:Byte = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2966():Void { var l:Byte = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2967():Void { var l:Byte = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2968():Void { var l:Byte = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2969():Void { var l:Byte = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2970():Void { var l:Byte = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2971():Void { var l:Byte = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2972():Void { var l:Byte = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2973():Void { var l:Byte = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2974():Void { var l:Byte = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2975():Void { var l:Byte = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2976():Void { var l:Byte = (w2)+(w2); }
	def m2977():Void { var l:Byte = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2978():Void { var l:Byte = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2979():Void { var l:Byte = (w2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2980():Void { var l:Byte = (w2)+(w6); }
	def m2981():Void { var l:Byte = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m2982():Void { var l:Byte = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m2983():Void { var l:Byte = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m2984():Void { var l:Byte = (w2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2985():Void { var l:Byte = (w2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2986():Void { var l:Byte = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2987():Void { var l:Byte = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2988():Void { var l:Byte = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2989():Void { var l:Byte = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2990():Void { var l:Byte = (w2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2991():Void { var l:Byte = (w2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2992():Void { var l:Byte = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2993():Void { var l:Byte = (w2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2994():Void { var l:Byte = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2995():Void { var l:Byte = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2996():Void { var l:Byte = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2997():Void { var l:Byte = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2998():Void { var l:Byte = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2999():Void { var l:Byte = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3000():Void { var l:Byte = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3001():Void { var l:Byte = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3002():Void { var l:Byte = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3003():Void { var l:Byte = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3004():Void { var l:Byte = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3005():Void { var l:Byte = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3006():Void { var l:Byte = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3007():Void { var l:Byte = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3008():Void { var l:Byte = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3009():Void { var l:Byte = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3010():Void { var l:Byte = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3011():Void { var l:Byte = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3012():Void { var l:Byte = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3013():Void { var l:Byte = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3014():Void { var l:Byte = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3015():Void { var l:Byte = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3016():Void { var l:Byte = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3017():Void { var l:Byte = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3018():Void { var l:Byte = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3019():Void { var l:Byte = (w3)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3020():Void { var l:Byte = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3021():Void { var l:Byte = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3022():Void { var l:Byte = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3023():Void { var l:Byte = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3024():Void { var l:Byte = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3025():Void { var l:Byte = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3026():Void { var l:Byte = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3027():Void { var l:Byte = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3028():Void { var l:Byte = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3029():Void { var l:Byte = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3030():Void { var l:Byte = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3031():Void { var l:Byte = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3032():Void { var l:Byte = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3033():Void { var l:Byte = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3034():Void { var l:Byte = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3035():Void { var l:Byte = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3036():Void { var l:Byte = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3037():Void { var l:Byte = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3038():Void { var l:Byte = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3039():Void { var l:Byte = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3040():Void { var l:Byte = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3041():Void { var l:Byte = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3042():Void { var l:Byte = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3043():Void { var l:Byte = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3044():Void { var l:Byte = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3045():Void { var l:Byte = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3046():Void { var l:Byte = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3047():Void { var l:Byte = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3048():Void { var l:Byte = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3049():Void { var l:Byte = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3050():Void { var l:Byte = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3051():Void { var l:Byte = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3052():Void { var l:Byte = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3053():Void { var l:Byte = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3054():Void { var l:Byte = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3055():Void { var l:Byte = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3056():Void { var l:Byte = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m3057():Void { var l:Byte = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m3058():Void { var l:Byte = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3059():Void { var l:Byte = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m3060():Void { var l:Byte = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3061():Void { var l:Byte = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3062():Void { var l:Byte = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3063():Void { var l:Byte = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3064():Void { var l:Byte = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3065():Void { var l:Byte = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3066():Void { var l:Byte = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3067():Void { var l:Byte = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3068():Void { var l:Byte = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3069():Void { var l:Byte = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3070():Void { var l:Byte = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3071():Void { var l:Byte = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3072():Void { var l:Byte = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3073():Void { var l:Byte = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3074():Void { var l:Byte = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3075():Void { var l:Byte = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3076():Void { var l:Byte = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3077():Void { var l:Byte = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3078():Void { var l:Byte = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3079():Void { var l:Byte = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3080():Void { var l:Byte = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3081():Void { var l:Byte = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3082():Void { var l:Byte = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3083():Void { var l:Byte = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3084():Void { var l:Byte = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3085():Void { var l:Byte = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3086():Void { var l:Byte = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3087():Void { var l:Byte = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3088():Void { var l:Byte = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3089():Void { var l:Byte = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3090():Void { var l:Byte = (w5)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + x10.lang.Short.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3091():Void { var l:Byte = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3092():Void { var l:Byte = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3093():Void { var l:Byte = (w5)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3094():Void { var l:Byte = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m3095():Void { var l:Byte = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m3096():Void { var l:Byte = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m3097():Void { var l:Byte = (w5)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3098():Void { var l:Byte = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3099():Void { var l:Byte = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3100():Void { var l:Byte = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3101():Void { var l:Byte = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3102():Void { var l:Byte = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3103():Void { var l:Byte = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3104():Void { var l:Byte = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3105():Void { var l:Byte = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3106():Void { var l:Byte = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3107():Void { var l:Byte = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3108():Void { var l:Byte = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3109():Void { var l:Byte = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3110():Void { var l:Byte = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3111():Void { var l:Byte = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3112():Void { var l:Byte = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3113():Void { var l:Byte = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3114():Void { var l:Byte = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3115():Void { var l:Byte = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3116():Void { var l:Byte = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3117():Void { var l:Byte = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3118():Void { var l:Byte = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3119():Void { var l:Byte = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3120():Void { var l:Byte = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3121():Void { var l:Byte = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3122():Void { var l:Byte = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3123():Void { var l:Byte = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3124():Void { var l:Byte = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3125():Void { var l:Byte = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3126():Void { var l:Byte = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3127():Void { var l:Byte = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3128():Void { var l:Byte = (w6)+(w2); }
	def m3129():Void { var l:Byte = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m3130():Void { var l:Byte = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m3131():Void { var l:Byte = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m3132():Void { var l:Byte = (w6)+(w6); }
	def m3133():Void { var l:Byte = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m3134():Void { var l:Byte = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m3135():Void { var l:Byte = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m3136():Void { var l:Byte = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m3137():Void { var l:Byte = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m3138():Void { var l:Byte = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3139():Void { var l:Byte = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3140():Void { var l:Byte = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3141():Void { var l:Byte = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3142():Void { var l:Byte = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m3143():Void { var l:Byte = (w6)+(-127); }
	def m3144():Void { var l:Byte = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m3145():Void { var l:Byte = (w6)+(-128); }
	def m3146():Void { var l:Byte = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m3147():Void { var l:Byte = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m3148():Void { var l:Byte = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m3149():Void { var l:Byte = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m3150():Void { var l:Byte = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m3151():Void { var l:Byte = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m3152():Void { var l:Byte = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m3153():Void { var l:Byte = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m3154():Void { var l:Byte = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m3155():Void { var l:Byte = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m3156():Void { var l:Byte = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m3157():Void { var l:Byte = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m3158():Void { var l:Byte = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m3159():Void { var l:Byte = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m3160():Void { var l:Byte = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m3161():Void { var l:Byte = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m3162():Void { var l:Byte = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m3163():Void { var l:Byte = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m3164():Void { var l:Byte = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3165():Void { var l:Byte = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3166():Void { var l:Byte = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m3167():Void { var l:Byte = (w7)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3168():Void { var l:Byte = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m3169():Void { var l:Byte = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m3170():Void { var l:Byte = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m3171():Void { var l:Byte = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3172():Void { var l:Byte = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m3173():Void { var l:Byte = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m3174():Void { var l:Byte = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3175():Void { var l:Byte = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3176():Void { var l:Byte = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3177():Void { var l:Byte = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3178():Void { var l:Byte = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3179():Void { var l:Byte = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3180():Void { var l:Byte = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3181():Void { var l:Byte = (w7)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3182():Void { var l:Byte = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3183():Void { var l:Byte = (w7)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3184():Void { var l:Byte = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3185():Void { var l:Byte = (w7)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3186():Void { var l:Byte = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3187():Void { var l:Byte = (w7)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3188():Void { var l:Byte = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3189():Void { var l:Byte = (w7)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3190():Void { var l:Byte = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3191():Void { var l:Byte = (w7)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3192():Void { var l:Byte = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3193():Void { var l:Byte = (w7)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3194():Void { var l:Byte = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3195():Void { var l:Byte = (w7)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3196():Void { var l:Byte = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3197():Void { var l:Byte = (w7)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3198():Void { var l:Byte = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3199():Void { var l:Byte = (w7)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3200():Void { var l:Byte = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3201():Void { var l:Byte = (w7)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3202():Void { var l:Byte = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3203():Void { var l:Byte = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3204():Void { var l:Byte = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m3205():Void { var l:Byte = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m3206():Void { var l:Byte = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3207():Void { var l:Byte = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m3208():Void { var l:Byte = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m3209():Void { var l:Byte = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m3210():Void { var l:Byte = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3211():Void { var l:Byte = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m3212():Void { var l:Byte = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m3213():Void { var l:Byte = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m3214():Void { var l:Byte = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3215():Void { var l:Byte = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3216():Void { var l:Byte = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3217():Void { var l:Byte = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3218():Void { var l:Byte = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m3219():Void { var l:Byte = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m3220():Void { var l:Byte = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m3221():Void { var l:Byte = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m3222():Void { var l:Byte = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m3223():Void { var l:Byte = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m3224():Void { var l:Byte = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m3225():Void { var l:Byte = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m3226():Void { var l:Byte = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m3227():Void { var l:Byte = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m3228():Void { var l:Byte = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m3229():Void { var l:Byte = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m3230():Void { var l:Byte = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m3231():Void { var l:Byte = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m3232():Void { var l:Byte = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m3233():Void { var l:Byte = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m3234():Void { var l:Byte = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m3235():Void { var l:Byte = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m3236():Void { var l:Byte = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m3237():Void { var l:Byte = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m3238():Void { var l:Byte = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m3239():Void { var l:Byte = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m3240():Void { var l:Byte = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3241():Void { var l:Byte = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3242():Void { var l:Byte = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m3243():Void { var l:Byte = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m3244():Void { var l:Byte = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m3245():Void { var l:Byte = (w9)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3246():Void { var l:Byte = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m3247():Void { var l:Byte = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m3248():Void { var l:Byte = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m3249():Void { var l:Byte = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3250():Void { var l:Byte = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m3251():Void { var l:Byte = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m3252():Void { var l:Byte = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3253():Void { var l:Byte = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3254():Void { var l:Byte = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3255():Void { var l:Byte = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3256():Void { var l:Byte = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m3257():Void { var l:Byte = (w9)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3258():Void { var l:Byte = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m3259():Void { var l:Byte = (w9)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3260():Void { var l:Byte = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m3261():Void { var l:Byte = (w9)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3262():Void { var l:Byte = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m3263():Void { var l:Byte = (w9)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3264():Void { var l:Byte = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m3265():Void { var l:Byte = (w9)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3266():Void { var l:Byte = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m3267():Void { var l:Byte = (w9)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3268():Void { var l:Byte = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m3269():Void { var l:Byte = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m3270():Void { var l:Byte = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m3271():Void { var l:Byte = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m3272():Void { var l:Byte = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m3273():Void { var l:Byte = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m3274():Void { var l:Byte = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m3275():Void { var l:Byte = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m3276():Void { var l:Byte = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m3277():Void { var l:Byte = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m3278():Void { var l:Byte = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3279():Void { var l:Byte = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3280():Void { var l:Byte = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3281():Void { var l:Byte = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3282():Void { var l:Byte = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3283():Void { var l:Byte = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3284():Void { var l:Byte = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3285():Void { var l:Byte = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3286():Void { var l:Byte = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3287():Void { var l:Byte = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3288():Void { var l:Byte = (0)+(0); }
	def m3289():Void { var l:Byte = (0)+(-0); }
	def m3290():Void { var l:Byte = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3291():Void { var l:Byte = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3292():Void { var l:Byte = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3293():Void { var l:Byte = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3294():Void { var l:Byte = (0)+(127); }
	def m3295():Void { var l:Byte = (0)+(-127); }
	def m3296():Void { var l:Byte = (0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3297():Void { var l:Byte = (0)+(-128); }
	def m3298():Void { var l:Byte = (0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3299():Void { var l:Byte = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3300():Void { var l:Byte = (0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3301():Void { var l:Byte = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3302():Void { var l:Byte = (0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3303():Void { var l:Byte = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3304():Void { var l:Byte = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3305():Void { var l:Byte = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3306():Void { var l:Byte = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3307():Void { var l:Byte = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3308():Void { var l:Byte = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3309():Void { var l:Byte = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3310():Void { var l:Byte = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3311():Void { var l:Byte = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3312():Void { var l:Byte = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3313():Void { var l:Byte = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3314():Void { var l:Byte = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3315():Void { var l:Byte = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3316():Void { var l:Byte = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3317():Void { var l:Byte = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3318():Void { var l:Byte = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3319():Void { var l:Byte = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3320():Void { var l:Byte = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3321():Void { var l:Byte = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3322():Void { var l:Byte = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3323():Void { var l:Byte = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3324():Void { var l:Byte = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3325():Void { var l:Byte = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3326():Void { var l:Byte = (-0)+(0); }
	def m3327():Void { var l:Byte = (-0)+(-0); }
	def m3328():Void { var l:Byte = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3329():Void { var l:Byte = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3330():Void { var l:Byte = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3331():Void { var l:Byte = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3332():Void { var l:Byte = (-0)+(127); }
	def m3333():Void { var l:Byte = (-0)+(-127); }
	def m3334():Void { var l:Byte = (-0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3335():Void { var l:Byte = (-0)+(-128); }
	def m3336():Void { var l:Byte = (-0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3337():Void { var l:Byte = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3338():Void { var l:Byte = (-0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3339():Void { var l:Byte = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3340():Void { var l:Byte = (-0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3341():Void { var l:Byte = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3342():Void { var l:Byte = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3343():Void { var l:Byte = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3344():Void { var l:Byte = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3345():Void { var l:Byte = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3346():Void { var l:Byte = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3347():Void { var l:Byte = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3348():Void { var l:Byte = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3349():Void { var l:Byte = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3350():Void { var l:Byte = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3351():Void { var l:Byte = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3352():Void { var l:Byte = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3353():Void { var l:Byte = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3354():Void { var l:Byte = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3355():Void { var l:Byte = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3356():Void { var l:Byte = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3357():Void { var l:Byte = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3358():Void { var l:Byte = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3359():Void { var l:Byte = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3360():Void { var l:Byte = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3361():Void { var l:Byte = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3362():Void { var l:Byte = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3363():Void { var l:Byte = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3364():Void { var l:Byte = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3365():Void { var l:Byte = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3366():Void { var l:Byte = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3367():Void { var l:Byte = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3368():Void { var l:Byte = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3369():Void { var l:Byte = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3370():Void { var l:Byte = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3371():Void { var l:Byte = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3372():Void { var l:Byte = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3373():Void { var l:Byte = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3374():Void { var l:Byte = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3375():Void { var l:Byte = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3376():Void { var l:Byte = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3377():Void { var l:Byte = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3378():Void { var l:Byte = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3379():Void { var l:Byte = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3380():Void { var l:Byte = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3381():Void { var l:Byte = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3382():Void { var l:Byte = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3383():Void { var l:Byte = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3384():Void { var l:Byte = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3385():Void { var l:Byte = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3386():Void { var l:Byte = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3387():Void { var l:Byte = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3388():Void { var l:Byte = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3389():Void { var l:Byte = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3390():Void { var l:Byte = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3391():Void { var l:Byte = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3392():Void { var l:Byte = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3393():Void { var l:Byte = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3394():Void { var l:Byte = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3395():Void { var l:Byte = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3396():Void { var l:Byte = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3397():Void { var l:Byte = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3398():Void { var l:Byte = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3399():Void { var l:Byte = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3400():Void { var l:Byte = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3401():Void { var l:Byte = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3402():Void { var l:Byte = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3403():Void { var l:Byte = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3404():Void { var l:Byte = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3405():Void { var l:Byte = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3406():Void { var l:Byte = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3407():Void { var l:Byte = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3408():Void { var l:Byte = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3409():Void { var l:Byte = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3410():Void { var l:Byte = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3411():Void { var l:Byte = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3412():Void { var l:Byte = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3413():Void { var l:Byte = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3414():Void { var l:Byte = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3415():Void { var l:Byte = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3416():Void { var l:Byte = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3417():Void { var l:Byte = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3418():Void { var l:Byte = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3419():Void { var l:Byte = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3420():Void { var l:Byte = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3421():Void { var l:Byte = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3422():Void { var l:Byte = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3423():Void { var l:Byte = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3424():Void { var l:Byte = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3425():Void { var l:Byte = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3426():Void { var l:Byte = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3427():Void { var l:Byte = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3428():Void { var l:Byte = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3429():Void { var l:Byte = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3430():Void { var l:Byte = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3431():Void { var l:Byte = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3432():Void { var l:Byte = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3433():Void { var l:Byte = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3434():Void { var l:Byte = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3435():Void { var l:Byte = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3436():Void { var l:Byte = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3437():Void { var l:Byte = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3438():Void { var l:Byte = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3439():Void { var l:Byte = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3440():Void { var l:Byte = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3441():Void { var l:Byte = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3442():Void { var l:Byte = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3443():Void { var l:Byte = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3444():Void { var l:Byte = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3445():Void { var l:Byte = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3446():Void { var l:Byte = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3447():Void { var l:Byte = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3448():Void { var l:Byte = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3449():Void { var l:Byte = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3450():Void { var l:Byte = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3451():Void { var l:Byte = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3452():Void { var l:Byte = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3453():Void { var l:Byte = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3454():Void { var l:Byte = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3455():Void { var l:Byte = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3456():Void { var l:Byte = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3457():Void { var l:Byte = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3458():Void { var l:Byte = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3459():Void { var l:Byte = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3460():Void { var l:Byte = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3461():Void { var l:Byte = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3462():Void { var l:Byte = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3463():Void { var l:Byte = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3464():Void { var l:Byte = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3465():Void { var l:Byte = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3466():Void { var l:Byte = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3467():Void { var l:Byte = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3468():Void { var l:Byte = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3469():Void { var l:Byte = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3470():Void { var l:Byte = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3471():Void { var l:Byte = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3472():Void { var l:Byte = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3473():Void { var l:Byte = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3474():Void { var l:Byte = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3475():Void { var l:Byte = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3476():Void { var l:Byte = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3477():Void { var l:Byte = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3478():Void { var l:Byte = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3479():Void { var l:Byte = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3480():Void { var l:Byte = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3481():Void { var l:Byte = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3482():Void { var l:Byte = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3483():Void { var l:Byte = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3484():Void { var l:Byte = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3485():Void { var l:Byte = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3486():Void { var l:Byte = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3487():Void { var l:Byte = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3488():Void { var l:Byte = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3489():Void { var l:Byte = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3490():Void { var l:Byte = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3491():Void { var l:Byte = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3492():Void { var l:Byte = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3493():Void { var l:Byte = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3494():Void { var l:Byte = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3495():Void { var l:Byte = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3496():Void { var l:Byte = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3497():Void { var l:Byte = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3498():Void { var l:Byte = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3499():Void { var l:Byte = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3500():Void { var l:Byte = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3501():Void { var l:Byte = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3502():Void { var l:Byte = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3503():Void { var l:Byte = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3504():Void { var l:Byte = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3505():Void { var l:Byte = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3506():Void { var l:Byte = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3507():Void { var l:Byte = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3508():Void { var l:Byte = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3509():Void { var l:Byte = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3510():Void { var l:Byte = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3511():Void { var l:Byte = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3512():Void { var l:Byte = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3513():Void { var l:Byte = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3514():Void { var l:Byte = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3515():Void { var l:Byte = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3516():Void { var l:Byte = (127)+(0); }
	def m3517():Void { var l:Byte = (127)+(-0); }
	def m3518():Void { var l:Byte = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3519():Void { var l:Byte = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3520():Void { var l:Byte = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3521():Void { var l:Byte = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3522():Void { var l:Byte = (127)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3523():Void { var l:Byte = (127)+(-127); }
	def m3524():Void { var l:Byte = (127)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3525():Void { var l:Byte = (127)+(-128); }
	def m3526():Void { var l:Byte = (127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3527():Void { var l:Byte = (127)+(-255); }
	def m3528():Void { var l:Byte = (127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3529():Void { var l:Byte = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3530():Void { var l:Byte = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3531():Void { var l:Byte = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3532():Void { var l:Byte = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3533():Void { var l:Byte = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3534():Void { var l:Byte = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3535():Void { var l:Byte = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3536():Void { var l:Byte = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3537():Void { var l:Byte = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3538():Void { var l:Byte = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3539():Void { var l:Byte = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3540():Void { var l:Byte = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3541():Void { var l:Byte = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3542():Void { var l:Byte = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3543():Void { var l:Byte = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3544():Void { var l:Byte = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3545():Void { var l:Byte = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3546():Void { var l:Byte = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3547():Void { var l:Byte = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3548():Void { var l:Byte = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3549():Void { var l:Byte = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3550():Void { var l:Byte = (-127)+(w6); }
	def m3551():Void { var l:Byte = (-127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3552():Void { var l:Byte = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3553():Void { var l:Byte = (-127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-127)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3554():Void { var l:Byte = (-127)+(0); }
	def m3555():Void { var l:Byte = (-127)+(-0); }
	def m3556():Void { var l:Byte = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3557():Void { var l:Byte = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3558():Void { var l:Byte = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3559():Void { var l:Byte = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3560():Void { var l:Byte = (-127)+(127); }
	def m3561():Void { var l:Byte = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3562():Void { var l:Byte = (-127)+(128); }
	def m3563():Void { var l:Byte = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3564():Void { var l:Byte = (-127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3565():Void { var l:Byte = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3566():Void { var l:Byte = (-127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3567():Void { var l:Byte = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3568():Void { var l:Byte = (-127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3569():Void { var l:Byte = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3570():Void { var l:Byte = (-127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3571():Void { var l:Byte = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3572():Void { var l:Byte = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3573():Void { var l:Byte = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3574():Void { var l:Byte = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3575():Void { var l:Byte = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3576():Void { var l:Byte = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3577():Void { var l:Byte = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3578():Void { var l:Byte = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3579():Void { var l:Byte = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3580():Void { var l:Byte = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3581():Void { var l:Byte = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3582():Void { var l:Byte = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3583():Void { var l:Byte = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3584():Void { var l:Byte = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3585():Void { var l:Byte = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3586():Void { var l:Byte = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3587():Void { var l:Byte = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3588():Void { var l:Byte = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3589():Void { var l:Byte = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3590():Void { var l:Byte = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3591():Void { var l:Byte = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3592():Void { var l:Byte = (128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3593():Void { var l:Byte = (128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3594():Void { var l:Byte = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3595():Void { var l:Byte = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3596():Void { var l:Byte = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3597():Void { var l:Byte = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3598():Void { var l:Byte = (128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3599():Void { var l:Byte = (128)+(-127); }
	def m3600():Void { var l:Byte = (128)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3601():Void { var l:Byte = (128)+(-128); }
	def m3602():Void { var l:Byte = (128)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3603():Void { var l:Byte = (128)+(-255); }
	def m3604():Void { var l:Byte = (128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3605():Void { var l:Byte = (128)+(-256); }
	def m3606():Void { var l:Byte = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3607():Void { var l:Byte = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3608():Void { var l:Byte = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3609():Void { var l:Byte = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3610():Void { var l:Byte = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3611():Void { var l:Byte = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3612():Void { var l:Byte = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3613():Void { var l:Byte = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3614():Void { var l:Byte = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3615():Void { var l:Byte = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3616():Void { var l:Byte = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3617():Void { var l:Byte = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3618():Void { var l:Byte = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3619():Void { var l:Byte = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3620():Void { var l:Byte = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3621():Void { var l:Byte = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3622():Void { var l:Byte = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3623():Void { var l:Byte = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3624():Void { var l:Byte = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3625():Void { var l:Byte = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3626():Void { var l:Byte = (-128)+(w6); }
	def m3627():Void { var l:Byte = (-128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3628():Void { var l:Byte = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3629():Void { var l:Byte = (-128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-128)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3630():Void { var l:Byte = (-128)+(0); }
	def m3631():Void { var l:Byte = (-128)+(-0); }
	def m3632():Void { var l:Byte = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3633():Void { var l:Byte = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3634():Void { var l:Byte = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3635():Void { var l:Byte = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3636():Void { var l:Byte = (-128)+(127); }
	def m3637():Void { var l:Byte = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3638():Void { var l:Byte = (-128)+(128); }
	def m3639():Void { var l:Byte = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3640():Void { var l:Byte = (-128)+(255); }
	def m3641():Void { var l:Byte = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3642():Void { var l:Byte = (-128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3643():Void { var l:Byte = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3644():Void { var l:Byte = (-128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3645():Void { var l:Byte = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3646():Void { var l:Byte = (-128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3647():Void { var l:Byte = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3648():Void { var l:Byte = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3649():Void { var l:Byte = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3650():Void { var l:Byte = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3651():Void { var l:Byte = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3652():Void { var l:Byte = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3653():Void { var l:Byte = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3654():Void { var l:Byte = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3655():Void { var l:Byte = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3656():Void { var l:Byte = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3657():Void { var l:Byte = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3658():Void { var l:Byte = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3659():Void { var l:Byte = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3660():Void { var l:Byte = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3661():Void { var l:Byte = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3662():Void { var l:Byte = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3663():Void { var l:Byte = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3664():Void { var l:Byte = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3665():Void { var l:Byte = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3666():Void { var l:Byte = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3667():Void { var l:Byte = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3668():Void { var l:Byte = (255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3669():Void { var l:Byte = (255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3670():Void { var l:Byte = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3671():Void { var l:Byte = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3672():Void { var l:Byte = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3673():Void { var l:Byte = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3674():Void { var l:Byte = (255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3675():Void { var l:Byte = (255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3676():Void { var l:Byte = (255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3677():Void { var l:Byte = (255)+(-128); }
	def m3678():Void { var l:Byte = (255)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3679():Void { var l:Byte = (255)+(-255); }
	def m3680():Void { var l:Byte = (255)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3681():Void { var l:Byte = (255)+(-256); }
	def m3682():Void { var l:Byte = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3683():Void { var l:Byte = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3684():Void { var l:Byte = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3685():Void { var l:Byte = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3686():Void { var l:Byte = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3687():Void { var l:Byte = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3688():Void { var l:Byte = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3689():Void { var l:Byte = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3690():Void { var l:Byte = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3691():Void { var l:Byte = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3692():Void { var l:Byte = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3693():Void { var l:Byte = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3694():Void { var l:Byte = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3695():Void { var l:Byte = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3696():Void { var l:Byte = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3697():Void { var l:Byte = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3698():Void { var l:Byte = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3699():Void { var l:Byte = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3700():Void { var l:Byte = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3701():Void { var l:Byte = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3702():Void { var l:Byte = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3703():Void { var l:Byte = (-255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3704():Void { var l:Byte = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3705():Void { var l:Byte = (-255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-255)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3706():Void { var l:Byte = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3707():Void { var l:Byte = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3708():Void { var l:Byte = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3709():Void { var l:Byte = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3710():Void { var l:Byte = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3711():Void { var l:Byte = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3712():Void { var l:Byte = (-255)+(127); }
	def m3713():Void { var l:Byte = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3714():Void { var l:Byte = (-255)+(128); }
	def m3715():Void { var l:Byte = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3716():Void { var l:Byte = (-255)+(255); }
	def m3717():Void { var l:Byte = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3718():Void { var l:Byte = (-255)+(256); }
	def m3719():Void { var l:Byte = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3720():Void { var l:Byte = (-255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3721():Void { var l:Byte = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3722():Void { var l:Byte = (-255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3723():Void { var l:Byte = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3724():Void { var l:Byte = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3725():Void { var l:Byte = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3726():Void { var l:Byte = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3727():Void { var l:Byte = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3728():Void { var l:Byte = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3729():Void { var l:Byte = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3730():Void { var l:Byte = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3731():Void { var l:Byte = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3732():Void { var l:Byte = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3733():Void { var l:Byte = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3734():Void { var l:Byte = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3735():Void { var l:Byte = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3736():Void { var l:Byte = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3737():Void { var l:Byte = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3738():Void { var l:Byte = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3739():Void { var l:Byte = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3740():Void { var l:Byte = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3741():Void { var l:Byte = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3742():Void { var l:Byte = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3743():Void { var l:Byte = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3744():Void { var l:Byte = (256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3745():Void { var l:Byte = (256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3746():Void { var l:Byte = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3747():Void { var l:Byte = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3748():Void { var l:Byte = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3749():Void { var l:Byte = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3750():Void { var l:Byte = (256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3751():Void { var l:Byte = (256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3752():Void { var l:Byte = (256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3753():Void { var l:Byte = (256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3754():Void { var l:Byte = (256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3755():Void { var l:Byte = (256)+(-255); }
	def m3756():Void { var l:Byte = (256)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3757():Void { var l:Byte = (256)+(-256); }
	def m3758():Void { var l:Byte = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3759():Void { var l:Byte = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3760():Void { var l:Byte = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3761():Void { var l:Byte = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3762():Void { var l:Byte = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3763():Void { var l:Byte = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3764():Void { var l:Byte = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3765():Void { var l:Byte = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3766():Void { var l:Byte = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3767():Void { var l:Byte = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3768():Void { var l:Byte = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3769():Void { var l:Byte = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3770():Void { var l:Byte = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3771():Void { var l:Byte = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3772():Void { var l:Byte = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3773():Void { var l:Byte = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3774():Void { var l:Byte = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3775():Void { var l:Byte = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3776():Void { var l:Byte = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3777():Void { var l:Byte = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3778():Void { var l:Byte = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3779():Void { var l:Byte = (-256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3780():Void { var l:Byte = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3781():Void { var l:Byte = (-256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-256)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3782():Void { var l:Byte = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3783():Void { var l:Byte = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3784():Void { var l:Byte = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3785():Void { var l:Byte = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3786():Void { var l:Byte = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3787():Void { var l:Byte = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3788():Void { var l:Byte = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3789():Void { var l:Byte = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3790():Void { var l:Byte = (-256)+(128); }
	def m3791():Void { var l:Byte = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3792():Void { var l:Byte = (-256)+(255); }
	def m3793():Void { var l:Byte = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3794():Void { var l:Byte = (-256)+(256); }
	def m3795():Void { var l:Byte = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3796():Void { var l:Byte = (-256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3797():Void { var l:Byte = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3798():Void { var l:Byte = (-256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3799():Void { var l:Byte = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3800():Void { var l:Byte = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3801():Void { var l:Byte = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3802():Void { var l:Byte = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3803():Void { var l:Byte = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3804():Void { var l:Byte = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3805():Void { var l:Byte = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3806():Void { var l:Byte = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3807():Void { var l:Byte = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3808():Void { var l:Byte = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3809():Void { var l:Byte = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3810():Void { var l:Byte = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3811():Void { var l:Byte = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3812():Void { var l:Byte = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3813():Void { var l:Byte = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3814():Void { var l:Byte = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3815():Void { var l:Byte = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3816():Void { var l:Byte = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3817():Void { var l:Byte = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3818():Void { var l:Byte = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3819():Void { var l:Byte = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3820():Void { var l:Byte = (32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3821():Void { var l:Byte = (32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3822():Void { var l:Byte = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3823():Void { var l:Byte = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3824():Void { var l:Byte = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3825():Void { var l:Byte = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3826():Void { var l:Byte = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3827():Void { var l:Byte = (32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3828():Void { var l:Byte = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3829():Void { var l:Byte = (32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3830():Void { var l:Byte = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3831():Void { var l:Byte = (32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3832():Void { var l:Byte = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3833():Void { var l:Byte = (32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3834():Void { var l:Byte = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3835():Void { var l:Byte = (32767)+(-32767); }
	def m3836():Void { var l:Byte = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3837():Void { var l:Byte = (32767)+(-32768); }
	def m3838():Void { var l:Byte = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3839():Void { var l:Byte = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3840():Void { var l:Byte = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3841():Void { var l:Byte = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3842():Void { var l:Byte = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3843():Void { var l:Byte = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3844():Void { var l:Byte = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3845():Void { var l:Byte = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3846():Void { var l:Byte = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3847():Void { var l:Byte = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3848():Void { var l:Byte = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3849():Void { var l:Byte = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3850():Void { var l:Byte = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3851():Void { var l:Byte = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3852():Void { var l:Byte = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3853():Void { var l:Byte = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3854():Void { var l:Byte = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3855():Void { var l:Byte = (-32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3856():Void { var l:Byte = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3857():Void { var l:Byte = (-32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32767)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3858():Void { var l:Byte = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3859():Void { var l:Byte = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3860():Void { var l:Byte = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3861():Void { var l:Byte = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3862():Void { var l:Byte = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3863():Void { var l:Byte = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3864():Void { var l:Byte = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3865():Void { var l:Byte = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3866():Void { var l:Byte = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3867():Void { var l:Byte = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3868():Void { var l:Byte = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3869():Void { var l:Byte = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3870():Void { var l:Byte = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3871():Void { var l:Byte = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3872():Void { var l:Byte = (-32767)+(32767); }
	def m3873():Void { var l:Byte = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3874():Void { var l:Byte = (-32767)+(32768); }
	def m3875():Void { var l:Byte = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3876():Void { var l:Byte = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3877():Void { var l:Byte = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3878():Void { var l:Byte = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3879():Void { var l:Byte = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3880():Void { var l:Byte = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3881():Void { var l:Byte = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3882():Void { var l:Byte = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3883():Void { var l:Byte = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3884():Void { var l:Byte = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3885():Void { var l:Byte = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3886():Void { var l:Byte = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3887():Void { var l:Byte = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3888():Void { var l:Byte = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3889():Void { var l:Byte = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3890():Void { var l:Byte = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3891():Void { var l:Byte = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3892():Void { var l:Byte = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3893():Void { var l:Byte = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3894():Void { var l:Byte = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3895():Void { var l:Byte = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3896():Void { var l:Byte = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3897():Void { var l:Byte = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3898():Void { var l:Byte = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3899():Void { var l:Byte = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3900():Void { var l:Byte = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3901():Void { var l:Byte = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3902():Void { var l:Byte = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3903():Void { var l:Byte = (32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3904():Void { var l:Byte = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3905():Void { var l:Byte = (32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3906():Void { var l:Byte = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3907():Void { var l:Byte = (32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3908():Void { var l:Byte = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3909():Void { var l:Byte = (32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3910():Void { var l:Byte = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3911():Void { var l:Byte = (32768)+(-32767); }
	def m3912():Void { var l:Byte = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3913():Void { var l:Byte = (32768)+(-32768); }
	def m3914():Void { var l:Byte = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3915():Void { var l:Byte = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3916():Void { var l:Byte = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3917():Void { var l:Byte = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3918():Void { var l:Byte = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3919():Void { var l:Byte = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3920():Void { var l:Byte = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3921():Void { var l:Byte = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3922():Void { var l:Byte = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3923():Void { var l:Byte = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3924():Void { var l:Byte = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3925():Void { var l:Byte = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3926():Void { var l:Byte = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3927():Void { var l:Byte = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3928():Void { var l:Byte = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3929():Void { var l:Byte = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3930():Void { var l:Byte = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3931():Void { var l:Byte = (-32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3932():Void { var l:Byte = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3933():Void { var l:Byte = (-32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32768)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3934():Void { var l:Byte = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3935():Void { var l:Byte = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3936():Void { var l:Byte = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3937():Void { var l:Byte = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3938():Void { var l:Byte = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3939():Void { var l:Byte = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3940():Void { var l:Byte = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3941():Void { var l:Byte = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3942():Void { var l:Byte = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3943():Void { var l:Byte = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3944():Void { var l:Byte = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3945():Void { var l:Byte = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3946():Void { var l:Byte = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3947():Void { var l:Byte = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3948():Void { var l:Byte = (-32768)+(32767); }
	def m3949():Void { var l:Byte = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3950():Void { var l:Byte = (-32768)+(32768); }
	def m3951():Void { var l:Byte = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3952():Void { var l:Byte = (-32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3953():Void { var l:Byte = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3954():Void { var l:Byte = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3955():Void { var l:Byte = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3956():Void { var l:Byte = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3957():Void { var l:Byte = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3958():Void { var l:Byte = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3959():Void { var l:Byte = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3960():Void { var l:Byte = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3961():Void { var l:Byte = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3962():Void { var l:Byte = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3963():Void { var l:Byte = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3964():Void { var l:Byte = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3965():Void { var l:Byte = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3966():Void { var l:Byte = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3967():Void { var l:Byte = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3968():Void { var l:Byte = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m3969():Void { var l:Byte = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3970():Void { var l:Byte = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m3971():Void { var l:Byte = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m3972():Void { var l:Byte = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3973():Void { var l:Byte = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3974():Void { var l:Byte = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3975():Void { var l:Byte = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3976():Void { var l:Byte = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3977():Void { var l:Byte = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3978():Void { var l:Byte = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3979():Void { var l:Byte = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3980():Void { var l:Byte = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3981():Void { var l:Byte = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3982():Void { var l:Byte = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3983():Void { var l:Byte = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3984():Void { var l:Byte = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3985():Void { var l:Byte = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3986():Void { var l:Byte = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3987():Void { var l:Byte = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3988():Void { var l:Byte = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3989():Void { var l:Byte = (65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3990():Void { var l:Byte = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3991():Void { var l:Byte = (65535)+(-65535); }
	def m3992():Void { var l:Byte = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3993():Void { var l:Byte = (65535)+(-65536); }
	def m3994():Void { var l:Byte = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3995():Void { var l:Byte = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3996():Void { var l:Byte = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3997():Void { var l:Byte = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3998():Void { var l:Byte = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3999():Void { var l:Byte = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4000():Void { var l:Byte = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4001():Void { var l:Byte = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4002():Void { var l:Byte = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4003():Void { var l:Byte = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4004():Void { var l:Byte = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4005():Void { var l:Byte = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4006():Void { var l:Byte = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4007():Void { var l:Byte = (-65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4008():Void { var l:Byte = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4009():Void { var l:Byte = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4010():Void { var l:Byte = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4011():Void { var l:Byte = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4012():Void { var l:Byte = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4013():Void { var l:Byte = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4014():Void { var l:Byte = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4015():Void { var l:Byte = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4016():Void { var l:Byte = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4017():Void { var l:Byte = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4018():Void { var l:Byte = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4019():Void { var l:Byte = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4020():Void { var l:Byte = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4021():Void { var l:Byte = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4022():Void { var l:Byte = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4023():Void { var l:Byte = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4024():Void { var l:Byte = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4025():Void { var l:Byte = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4026():Void { var l:Byte = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4027():Void { var l:Byte = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4028():Void { var l:Byte = (-65535)+(65535); }
	def m4029():Void { var l:Byte = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4030():Void { var l:Byte = (-65535)+(65536); }
	def m4031():Void { var l:Byte = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4032():Void { var l:Byte = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4033():Void { var l:Byte = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4034():Void { var l:Byte = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4035():Void { var l:Byte = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4036():Void { var l:Byte = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4037():Void { var l:Byte = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4038():Void { var l:Byte = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4039():Void { var l:Byte = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4040():Void { var l:Byte = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4041():Void { var l:Byte = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4042():Void { var l:Byte = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4043():Void { var l:Byte = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4044():Void { var l:Byte = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4045():Void { var l:Byte = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4046():Void { var l:Byte = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4047():Void { var l:Byte = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4048():Void { var l:Byte = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4049():Void { var l:Byte = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4050():Void { var l:Byte = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4051():Void { var l:Byte = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4052():Void { var l:Byte = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4053():Void { var l:Byte = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4054():Void { var l:Byte = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4055():Void { var l:Byte = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4056():Void { var l:Byte = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4057():Void { var l:Byte = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4058():Void { var l:Byte = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4059():Void { var l:Byte = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4060():Void { var l:Byte = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4061():Void { var l:Byte = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4062():Void { var l:Byte = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4063():Void { var l:Byte = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4064():Void { var l:Byte = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4065():Void { var l:Byte = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4066():Void { var l:Byte = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4067():Void { var l:Byte = (65536)+(-65535); }
	def m4068():Void { var l:Byte = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4069():Void { var l:Byte = (65536)+(-65536); }
	def m4070():Void { var l:Byte = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4071():Void { var l:Byte = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4072():Void { var l:Byte = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4073():Void { var l:Byte = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4074():Void { var l:Byte = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4075():Void { var l:Byte = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4076():Void { var l:Byte = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4077():Void { var l:Byte = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4078():Void { var l:Byte = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4079():Void { var l:Byte = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4080():Void { var l:Byte = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4081():Void { var l:Byte = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4082():Void { var l:Byte = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4083():Void { var l:Byte = (-65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4084():Void { var l:Byte = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4085():Void { var l:Byte = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4086():Void { var l:Byte = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4087():Void { var l:Byte = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4088():Void { var l:Byte = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4089():Void { var l:Byte = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4090():Void { var l:Byte = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4091():Void { var l:Byte = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4092():Void { var l:Byte = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4093():Void { var l:Byte = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4094():Void { var l:Byte = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4095():Void { var l:Byte = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4096():Void { var l:Byte = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4097():Void { var l:Byte = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4098():Void { var l:Byte = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4099():Void { var l:Byte = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4100():Void { var l:Byte = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4101():Void { var l:Byte = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4102():Void { var l:Byte = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4103():Void { var l:Byte = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4104():Void { var l:Byte = (-65536)+(65535); }
	def m4105():Void { var l:Byte = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4106():Void { var l:Byte = (-65536)+(65536); }
	def m4107():Void { var l:Byte = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4108():Void { var l:Byte = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4109():Void { var l:Byte = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4110():Void { var l:Byte = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4111():Void { var l:Byte = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4112():Void { var l:Byte = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4113():Void { var l:Byte = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4114():Void { var l:Byte = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4115():Void { var l:Byte = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4116():Void { var l:Byte = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4117():Void { var l:Byte = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4118():Void { var l:Byte = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4119():Void { var l:Byte = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4120():Void { var l:Byte = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4121():Void { var l:Byte = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4122():Void { var l:Byte = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4123():Void { var l:Byte = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4124():Void { var l:Byte = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4125():Void { var l:Byte = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4126():Void { var l:Byte = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4127():Void { var l:Byte = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4128():Void { var l:Byte = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4129():Void { var l:Byte = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4130():Void { var l:Byte = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4131():Void { var l:Byte = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4132():Void { var l:Byte = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4133():Void { var l:Byte = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4134():Void { var l:Byte = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4135():Void { var l:Byte = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4136():Void { var l:Byte = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4137():Void { var l:Byte = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4138():Void { var l:Byte = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4139():Void { var l:Byte = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4140():Void { var l:Byte = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4141():Void { var l:Byte = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4142():Void { var l:Byte = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4143():Void { var l:Byte = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4144():Void { var l:Byte = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4145():Void { var l:Byte = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4146():Void { var l:Byte = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4147():Void { var l:Byte = (16777216)+(-16777216); }
	def m4148():Void { var l:Byte = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4149():Void { var l:Byte = (16777216)+(-16777217); }
	def m4150():Void { var l:Byte = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4151():Void { var l:Byte = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4152():Void { var l:Byte = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4153():Void { var l:Byte = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4154():Void { var l:Byte = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4155():Void { var l:Byte = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4156():Void { var l:Byte = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4157():Void { var l:Byte = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4158():Void { var l:Byte = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4159():Void { var l:Byte = (-16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4160():Void { var l:Byte = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4161():Void { var l:Byte = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4162():Void { var l:Byte = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4163():Void { var l:Byte = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4164():Void { var l:Byte = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4165():Void { var l:Byte = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4166():Void { var l:Byte = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4167():Void { var l:Byte = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4168():Void { var l:Byte = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4169():Void { var l:Byte = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4170():Void { var l:Byte = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4171():Void { var l:Byte = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4172():Void { var l:Byte = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4173():Void { var l:Byte = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4174():Void { var l:Byte = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4175():Void { var l:Byte = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4176():Void { var l:Byte = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4177():Void { var l:Byte = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4178():Void { var l:Byte = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4179():Void { var l:Byte = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4180():Void { var l:Byte = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4181():Void { var l:Byte = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4182():Void { var l:Byte = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4183():Void { var l:Byte = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4184():Void { var l:Byte = (-16777216)+(16777216); }
	def m4185():Void { var l:Byte = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4186():Void { var l:Byte = (-16777216)+(16777217); }
	def m4187():Void { var l:Byte = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4188():Void { var l:Byte = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4189():Void { var l:Byte = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4190():Void { var l:Byte = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4191():Void { var l:Byte = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4192():Void { var l:Byte = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4193():Void { var l:Byte = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4194():Void { var l:Byte = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4195():Void { var l:Byte = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4196():Void { var l:Byte = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4197():Void { var l:Byte = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4198():Void { var l:Byte = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4199():Void { var l:Byte = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4200():Void { var l:Byte = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4201():Void { var l:Byte = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4202():Void { var l:Byte = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4203():Void { var l:Byte = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4204():Void { var l:Byte = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4205():Void { var l:Byte = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4206():Void { var l:Byte = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4207():Void { var l:Byte = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4208():Void { var l:Byte = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4209():Void { var l:Byte = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4210():Void { var l:Byte = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4211():Void { var l:Byte = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4212():Void { var l:Byte = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4213():Void { var l:Byte = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4214():Void { var l:Byte = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4215():Void { var l:Byte = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4216():Void { var l:Byte = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4217():Void { var l:Byte = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4218():Void { var l:Byte = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4219():Void { var l:Byte = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4220():Void { var l:Byte = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4221():Void { var l:Byte = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4222():Void { var l:Byte = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4223():Void { var l:Byte = (16777217)+(-16777216); }
	def m4224():Void { var l:Byte = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4225():Void { var l:Byte = (16777217)+(-16777217); }
	def m4226():Void { var l:Byte = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4227():Void { var l:Byte = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4228():Void { var l:Byte = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4229():Void { var l:Byte = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4230():Void { var l:Byte = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4231():Void { var l:Byte = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4232():Void { var l:Byte = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4233():Void { var l:Byte = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4234():Void { var l:Byte = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4235():Void { var l:Byte = (-16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4236():Void { var l:Byte = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4237():Void { var l:Byte = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4238():Void { var l:Byte = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4239():Void { var l:Byte = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4240():Void { var l:Byte = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4241():Void { var l:Byte = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4242():Void { var l:Byte = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4243():Void { var l:Byte = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4244():Void { var l:Byte = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4245():Void { var l:Byte = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4246():Void { var l:Byte = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4247():Void { var l:Byte = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4248():Void { var l:Byte = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4249():Void { var l:Byte = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4250():Void { var l:Byte = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4251():Void { var l:Byte = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4252():Void { var l:Byte = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4253():Void { var l:Byte = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4254():Void { var l:Byte = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4255():Void { var l:Byte = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4256():Void { var l:Byte = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4257():Void { var l:Byte = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4258():Void { var l:Byte = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4259():Void { var l:Byte = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4260():Void { var l:Byte = (-16777217)+(16777216); }
	def m4261():Void { var l:Byte = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4262():Void { var l:Byte = (-16777217)+(16777217); }
	def m4263():Void { var l:Byte = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4264():Void { var l:Byte = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4265():Void { var l:Byte = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4266():Void { var l:Byte = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4267():Void { var l:Byte = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4268():Void { var l:Byte = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4269():Void { var l:Byte = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4270():Void { var l:Byte = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4271():Void { var l:Byte = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4272():Void { var l:Byte = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4273():Void { var l:Byte = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4274():Void { var l:Byte = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4275():Void { var l:Byte = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4276():Void { var l:Byte = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4277():Void { var l:Byte = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4278():Void { var l:Byte = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4279():Void { var l:Byte = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4280():Void { var l:Byte = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4281():Void { var l:Byte = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4282():Void { var l:Byte = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4283():Void { var l:Byte = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4284():Void { var l:Byte = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4285():Void { var l:Byte = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4286():Void { var l:Byte = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4287():Void { var l:Byte = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4288():Void { var l:Byte = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4289():Void { var l:Byte = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4290():Void { var l:Byte = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4291():Void { var l:Byte = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4292():Void { var l:Byte = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4293():Void { var l:Byte = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4294():Void { var l:Byte = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4295():Void { var l:Byte = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4296():Void { var l:Byte = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4297():Void { var l:Byte = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4298():Void { var l:Byte = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4299():Void { var l:Byte = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4300():Void { var l:Byte = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4301():Void { var l:Byte = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4302():Void { var l:Byte = (2147483647)+(2147483647); }
	def m4303():Void { var l:Byte = (2147483647)+(-2147483647); }
	def m4304():Void { var l:Byte = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4305():Void { var l:Byte = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4306():Void { var l:Byte = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4307():Void { var l:Byte = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4308():Void { var l:Byte = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4309():Void { var l:Byte = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4310():Void { var l:Byte = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4311():Void { var l:Byte = (-2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4312():Void { var l:Byte = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4313():Void { var l:Byte = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4314():Void { var l:Byte = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4315():Void { var l:Byte = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4316():Void { var l:Byte = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4317():Void { var l:Byte = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4318():Void { var l:Byte = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4319():Void { var l:Byte = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4320():Void { var l:Byte = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4321():Void { var l:Byte = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4322():Void { var l:Byte = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4323():Void { var l:Byte = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4324():Void { var l:Byte = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4325():Void { var l:Byte = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4326():Void { var l:Byte = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4327():Void { var l:Byte = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4328():Void { var l:Byte = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4329():Void { var l:Byte = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4330():Void { var l:Byte = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4331():Void { var l:Byte = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4332():Void { var l:Byte = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4333():Void { var l:Byte = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4334():Void { var l:Byte = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4335():Void { var l:Byte = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4336():Void { var l:Byte = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4337():Void { var l:Byte = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4338():Void { var l:Byte = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4339():Void { var l:Byte = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4340():Void { var l:Byte = (-2147483647)+(2147483647); }
	def m4341():Void { var l:Byte = (-2147483647)+(-2147483647); }
	def m4342():Void { var l:Int = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4343():Void { var l:Int = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4344():Void { var l:Int = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4345():Void { var l:Int = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4346():Void { var l:Int = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4347():Void { var l:Int = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4348():Void { var l:Int = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4349():Void { var l:Int = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4350():Void { var l:Int = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4351():Void { var l:Int = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4352():Void { var l:Int = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4353():Void { var l:Int = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4354():Void { var l:Int = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4355():Void { var l:Int = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4356():Void { var l:Int = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4357():Void { var l:Int = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4358():Void { var l:Int = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4359():Void { var l:Int = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4360():Void { var l:Int = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4361():Void { var l:Int = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4362():Void { var l:Int = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4363():Void { var l:Int = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4364():Void { var l:Int = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4365():Void { var l:Int = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4366():Void { var l:Int = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4367():Void { var l:Int = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4368():Void { var l:Int = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4369():Void { var l:Int = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4370():Void { var l:Int = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4371():Void { var l:Int = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4372():Void { var l:Int = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4373():Void { var l:Int = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4374():Void { var l:Int = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4375():Void { var l:Int = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4376():Void { var l:Int = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4377():Void { var l:Int = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4378():Void { var l:Int = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4379():Void { var l:Int = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4380():Void { var l:Int = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4381():Void { var l:Int = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4382():Void { var l:Int = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4383():Void { var l:Int = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4384():Void { var l:Int = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4385():Void { var l:Int = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4386():Void { var l:Int = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4387():Void { var l:Int = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4388():Void { var l:Int = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4389():Void { var l:Int = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4390():Void { var l:Int = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4391():Void { var l:Int = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4392():Void { var l:Int = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4393():Void { var l:Int = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4394():Void { var l:Int = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4395():Void { var l:Int = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4396():Void { var l:Int = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4397():Void { var l:Int = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4398():Void { var l:Int = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4399():Void { var l:Int = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4400():Void { var l:Int = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4401():Void { var l:Int = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4402():Void { var l:Int = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4403():Void { var l:Int = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4404():Void { var l:Int = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4405():Void { var l:Int = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4406():Void { var l:Int = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4407():Void { var l:Int = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4408():Void { var l:Int = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4409():Void { var l:Int = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4410():Void { var l:Int = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4411():Void { var l:Int = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4412():Void { var l:Int = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4413():Void { var l:Int = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4414():Void { var l:Int = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4415():Void { var l:Int = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4416():Void { var l:Int = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4417():Void { var l:Int = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4418():Void { var l:Int = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4419():Void { var l:Int = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4420():Void { var l:Int = (w2)+(w2); }
	def m4421():Void { var l:Int = (w2)+(w3); }
	def m4422():Void { var l:Int = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4423():Void { var l:Int = (w2)+(w5); }
	def m4424():Void { var l:Int = (w2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w2) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4425():Void { var l:Int = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4426():Void { var l:Int = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4427():Void { var l:Int = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m4428():Void { var l:Int = (w2)+(0); }
	def m4429():Void { var l:Int = (w2)+(-0); }
	def m4430():Void { var l:Int = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4431():Void { var l:Int = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4432():Void { var l:Int = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4433():Void { var l:Int = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4434():Void { var l:Int = (w2)+(127); }
	def m4435():Void { var l:Int = (w2)+(-127); }
	def m4436():Void { var l:Int = (w2)+(128); }
	def m4437():Void { var l:Int = (w2)+(-128); }
	def m4438():Void { var l:Int = (w2)+(255); }
	def m4439():Void { var l:Int = (w2)+(-255); }
	def m4440():Void { var l:Int = (w2)+(256); }
	def m4441():Void { var l:Int = (w2)+(-256); }
	def m4442():Void { var l:Int = (w2)+(32767); }
	def m4443():Void { var l:Int = (w2)+(-32767); }
	def m4444():Void { var l:Int = (w2)+(32768); }
	def m4445():Void { var l:Int = (w2)+(-32768); }
	def m4446():Void { var l:Int = (w2)+(65535); }
	def m4447():Void { var l:Int = (w2)+(-65535); }
	def m4448():Void { var l:Int = (w2)+(65536); }
	def m4449():Void { var l:Int = (w2)+(-65536); }
	def m4450():Void { var l:Int = (w2)+(16777216); }
	def m4451():Void { var l:Int = (w2)+(-16777216); }
	def m4452():Void { var l:Int = (w2)+(16777217); }
	def m4453():Void { var l:Int = (w2)+(-16777217); }
	def m4454():Void { var l:Int = (w2)+(2147483647); }
	def m4455():Void { var l:Int = (w2)+(-2147483647); }
	def m4456():Void { var l:Int = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4457():Void { var l:Int = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4458():Void { var l:Int = (w3)+(w2); }
	def m4459():Void { var l:Int = (w3)+(w3); }
	def m4460():Void { var l:Int = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4461():Void { var l:Int = (w3)+(w5); }
	def m4462():Void { var l:Int = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4463():Void { var l:Int = (w3)+(w7); }
	def m4464():Void { var l:Int = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4465():Void { var l:Int = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4466():Void { var l:Int = (w3)+(0); }
	def m4467():Void { var l:Int = (w3)+(-0); }
	def m4468():Void { var l:Int = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4469():Void { var l:Int = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4470():Void { var l:Int = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4471():Void { var l:Int = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4472():Void { var l:Int = (w3)+(127); }
	def m4473():Void { var l:Int = (w3)+(-127); }
	def m4474():Void { var l:Int = (w3)+(128); }
	def m4475():Void { var l:Int = (w3)+(-128); }
	def m4476():Void { var l:Int = (w3)+(255); }
	def m4477():Void { var l:Int = (w3)+(-255); }
	def m4478():Void { var l:Int = (w3)+(256); }
	def m4479():Void { var l:Int = (w3)+(-256); }
	def m4480():Void { var l:Int = (w3)+(32767); }
	def m4481():Void { var l:Int = (w3)+(-32767); }
	def m4482():Void { var l:Int = (w3)+(32768); }
	def m4483():Void { var l:Int = (w3)+(-32768); }
	def m4484():Void { var l:Int = (w3)+(65535); }
	def m4485():Void { var l:Int = (w3)+(-65535); }
	def m4486():Void { var l:Int = (w3)+(65536); }
	def m4487():Void { var l:Int = (w3)+(-65536); }
	def m4488():Void { var l:Int = (w3)+(16777216); }
	def m4489():Void { var l:Int = (w3)+(-16777216); }
	def m4490():Void { var l:Int = (w3)+(16777217); }
	def m4491():Void { var l:Int = (w3)+(-16777217); }
	def m4492():Void { var l:Int = (w3)+(2147483647); }
	def m4493():Void { var l:Int = (w3)+(-2147483647); }
	def m4494():Void { var l:Int = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4495():Void { var l:Int = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4496():Void { var l:Int = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4497():Void { var l:Int = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4498():Void { var l:Int = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4499():Void { var l:Int = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4500():Void { var l:Int = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m4501():Void { var l:Int = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m4502():Void { var l:Int = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4503():Void { var l:Int = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m4504():Void { var l:Int = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4505():Void { var l:Int = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4506():Void { var l:Int = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4507():Void { var l:Int = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4508():Void { var l:Int = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4509():Void { var l:Int = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4510():Void { var l:Int = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4511():Void { var l:Int = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4512():Void { var l:Int = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4513():Void { var l:Int = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4514():Void { var l:Int = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4515():Void { var l:Int = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4516():Void { var l:Int = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4517():Void { var l:Int = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4518():Void { var l:Int = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4519():Void { var l:Int = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4520():Void { var l:Int = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4521():Void { var l:Int = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4522():Void { var l:Int = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4523():Void { var l:Int = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4524():Void { var l:Int = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4525():Void { var l:Int = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4526():Void { var l:Int = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4527():Void { var l:Int = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4528():Void { var l:Int = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4529():Void { var l:Int = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4530():Void { var l:Int = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4531():Void { var l:Int = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4532():Void { var l:Int = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4533():Void { var l:Int = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4534():Void { var l:Int = (w5)+(w2); }
	def m4535():Void { var l:Int = (w5)+(w3); }
	def m4536():Void { var l:Int = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4537():Void { var l:Int = (w5)+(w5); }
	def m4538():Void { var l:Int = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m4539():Void { var l:Int = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m4540():Void { var l:Int = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m4541():Void { var l:Int = (w5)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4542():Void { var l:Int = (w5)+(0); }
	def m4543():Void { var l:Int = (w5)+(-0); }
	def m4544():Void { var l:Int = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4545():Void { var l:Int = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4546():Void { var l:Int = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4547():Void { var l:Int = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4548():Void { var l:Int = (w5)+(127); }
	def m4549():Void { var l:Int = (w5)+(-127); }
	def m4550():Void { var l:Int = (w5)+(128); }
	def m4551():Void { var l:Int = (w5)+(-128); }
	def m4552():Void { var l:Int = (w5)+(255); }
	def m4553():Void { var l:Int = (w5)+(-255); }
	def m4554():Void { var l:Int = (w5)+(256); }
	def m4555():Void { var l:Int = (w5)+(-256); }
	def m4556():Void { var l:Int = (w5)+(32767); }
	def m4557():Void { var l:Int = (w5)+(-32767); }
	def m4558():Void { var l:Int = (w5)+(32768); }
	def m4559():Void { var l:Int = (w5)+(-32768); }
	def m4560():Void { var l:Int = (w5)+(65535); }
	def m4561():Void { var l:Int = (w5)+(-65535); }
	def m4562():Void { var l:Int = (w5)+(65536); }
	def m4563():Void { var l:Int = (w5)+(-65536); }
	def m4564():Void { var l:Int = (w5)+(16777216); }
	def m4565():Void { var l:Int = (w5)+(-16777216); }
	def m4566():Void { var l:Int = (w5)+(16777217); }
	def m4567():Void { var l:Int = (w5)+(-16777217); }
	def m4568():Void { var l:Int = (w5)+(2147483647); }
	def m4569():Void { var l:Int = (w5)+(-2147483647); }
	def m4570():Void { var l:Int = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4571():Void { var l:Int = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4572():Void { var l:Int = (w6)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w2)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4573():Void { var l:Int = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m4574():Void { var l:Int = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m4575():Void { var l:Int = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m4576():Void { var l:Int = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4577():Void { var l:Int = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m4578():Void { var l:Int = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m4579():Void { var l:Int = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m4580():Void { var l:Int = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m4581():Void { var l:Int = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m4582():Void { var l:Int = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4583():Void { var l:Int = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4584():Void { var l:Int = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4585():Void { var l:Int = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4586():Void { var l:Int = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m4587():Void { var l:Int = (w6)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4588():Void { var l:Int = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m4589():Void { var l:Int = (w6)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4590():Void { var l:Int = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m4591():Void { var l:Int = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m4592():Void { var l:Int = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m4593():Void { var l:Int = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m4594():Void { var l:Int = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m4595():Void { var l:Int = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m4596():Void { var l:Int = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m4597():Void { var l:Int = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m4598():Void { var l:Int = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m4599():Void { var l:Int = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m4600():Void { var l:Int = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m4601():Void { var l:Int = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m4602():Void { var l:Int = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m4603():Void { var l:Int = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m4604():Void { var l:Int = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m4605():Void { var l:Int = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m4606():Void { var l:Int = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m4607():Void { var l:Int = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m4608():Void { var l:Int = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4609():Void { var l:Int = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4610():Void { var l:Int = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m4611():Void { var l:Int = (w7)+(w3); }
	def m4612():Void { var l:Int = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m4613():Void { var l:Int = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m4614():Void { var l:Int = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m4615():Void { var l:Int = (w7)+(w7); }
	def m4616():Void { var l:Int = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m4617():Void { var l:Int = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m4618():Void { var l:Int = (w7)+(0); }
	def m4619():Void { var l:Int = (w7)+(-0); }
	def m4620():Void { var l:Int = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4621():Void { var l:Int = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4622():Void { var l:Int = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4623():Void { var l:Int = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4624():Void { var l:Int = (w7)+(127); }
	def m4625():Void { var l:Int = (w7)+(-127); }
	def m4626():Void { var l:Int = (w7)+(128); }
	def m4627():Void { var l:Int = (w7)+(-128); }
	def m4628():Void { var l:Int = (w7)+(255); }
	def m4629():Void { var l:Int = (w7)+(-255); }
	def m4630():Void { var l:Int = (w7)+(256); }
	def m4631():Void { var l:Int = (w7)+(-256); }
	def m4632():Void { var l:Int = (w7)+(32767); }
	def m4633():Void { var l:Int = (w7)+(-32767); }
	def m4634():Void { var l:Int = (w7)+(32768); }
	def m4635():Void { var l:Int = (w7)+(-32768); }
	def m4636():Void { var l:Int = (w7)+(65535); }
	def m4637():Void { var l:Int = (w7)+(-65535); }
	def m4638():Void { var l:Int = (w7)+(65536); }
	def m4639():Void { var l:Int = (w7)+(-65536); }
	def m4640():Void { var l:Int = (w7)+(16777216); }
	def m4641():Void { var l:Int = (w7)+(-16777216); }
	def m4642():Void { var l:Int = (w7)+(16777217); }
	def m4643():Void { var l:Int = (w7)+(-16777217); }
	def m4644():Void { var l:Int = (w7)+(2147483647); }
	def m4645():Void { var l:Int = (w7)+(-2147483647); }
	def m4646():Void { var l:Int = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4647():Void { var l:Int = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4648():Void { var l:Int = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m4649():Void { var l:Int = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m4650():Void { var l:Int = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4651():Void { var l:Int = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m4652():Void { var l:Int = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m4653():Void { var l:Int = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m4654():Void { var l:Int = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4655():Void { var l:Int = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m4656():Void { var l:Int = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m4657():Void { var l:Int = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m4658():Void { var l:Int = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4659():Void { var l:Int = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4660():Void { var l:Int = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4661():Void { var l:Int = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4662():Void { var l:Int = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m4663():Void { var l:Int = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m4664():Void { var l:Int = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m4665():Void { var l:Int = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m4666():Void { var l:Int = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m4667():Void { var l:Int = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m4668():Void { var l:Int = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m4669():Void { var l:Int = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m4670():Void { var l:Int = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m4671():Void { var l:Int = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m4672():Void { var l:Int = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m4673():Void { var l:Int = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m4674():Void { var l:Int = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m4675():Void { var l:Int = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m4676():Void { var l:Int = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m4677():Void { var l:Int = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m4678():Void { var l:Int = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m4679():Void { var l:Int = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m4680():Void { var l:Int = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m4681():Void { var l:Int = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m4682():Void { var l:Int = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m4683():Void { var l:Int = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m4684():Void { var l:Int = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4685():Void { var l:Int = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4686():Void { var l:Int = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m4687():Void { var l:Int = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m4688():Void { var l:Int = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m4689():Void { var l:Int = (w9)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4690():Void { var l:Int = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m4691():Void { var l:Int = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m4692():Void { var l:Int = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m4693():Void { var l:Int = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4694():Void { var l:Int = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m4695():Void { var l:Int = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m4696():Void { var l:Int = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4697():Void { var l:Int = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4698():Void { var l:Int = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4699():Void { var l:Int = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4700():Void { var l:Int = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m4701():Void { var l:Int = (w9)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4702():Void { var l:Int = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m4703():Void { var l:Int = (w9)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4704():Void { var l:Int = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m4705():Void { var l:Int = (w9)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4706():Void { var l:Int = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m4707():Void { var l:Int = (w9)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4708():Void { var l:Int = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m4709():Void { var l:Int = (w9)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4710():Void { var l:Int = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m4711():Void { var l:Int = (w9)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4712():Void { var l:Int = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m4713():Void { var l:Int = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m4714():Void { var l:Int = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m4715():Void { var l:Int = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m4716():Void { var l:Int = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m4717():Void { var l:Int = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m4718():Void { var l:Int = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m4719():Void { var l:Int = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m4720():Void { var l:Int = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m4721():Void { var l:Int = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m4722():Void { var l:Int = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4723():Void { var l:Int = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4724():Void { var l:Int = (0)+(w2); }
	def m4725():Void { var l:Int = (0)+(w3); }
	def m4726():Void { var l:Int = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4727():Void { var l:Int = (0)+(w5); }
	def m4728():Void { var l:Int = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4729():Void { var l:Int = (0)+(w7); }
	def m4730():Void { var l:Int = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4731():Void { var l:Int = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4732():Void { var l:Int = (0)+(0); }
	def m4733():Void { var l:Int = (0)+(-0); }
	def m4734():Void { var l:Int = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4735():Void { var l:Int = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4736():Void { var l:Int = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4737():Void { var l:Int = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4738():Void { var l:Int = (0)+(127); }
	def m4739():Void { var l:Int = (0)+(-127); }
	def m4740():Void { var l:Int = (0)+(128); }
	def m4741():Void { var l:Int = (0)+(-128); }
	def m4742():Void { var l:Int = (0)+(255); }
	def m4743():Void { var l:Int = (0)+(-255); }
	def m4744():Void { var l:Int = (0)+(256); }
	def m4745():Void { var l:Int = (0)+(-256); }
	def m4746():Void { var l:Int = (0)+(32767); }
	def m4747():Void { var l:Int = (0)+(-32767); }
	def m4748():Void { var l:Int = (0)+(32768); }
	def m4749():Void { var l:Int = (0)+(-32768); }
	def m4750():Void { var l:Int = (0)+(65535); }
	def m4751():Void { var l:Int = (0)+(-65535); }
	def m4752():Void { var l:Int = (0)+(65536); }
	def m4753():Void { var l:Int = (0)+(-65536); }
	def m4754():Void { var l:Int = (0)+(16777216); }
	def m4755():Void { var l:Int = (0)+(-16777216); }
	def m4756():Void { var l:Int = (0)+(16777217); }
	def m4757():Void { var l:Int = (0)+(-16777217); }
	def m4758():Void { var l:Int = (0)+(2147483647); }
	def m4759():Void { var l:Int = (0)+(-2147483647); }
	def m4760():Void { var l:Int = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4761():Void { var l:Int = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4762():Void { var l:Int = (-0)+(w2); }
	def m4763():Void { var l:Int = (-0)+(w3); }
	def m4764():Void { var l:Int = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4765():Void { var l:Int = (-0)+(w5); }
	def m4766():Void { var l:Int = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4767():Void { var l:Int = (-0)+(w7); }
	def m4768():Void { var l:Int = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4769():Void { var l:Int = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4770():Void { var l:Int = (-0)+(0); }
	def m4771():Void { var l:Int = (-0)+(-0); }
	def m4772():Void { var l:Int = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4773():Void { var l:Int = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4774():Void { var l:Int = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4775():Void { var l:Int = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4776():Void { var l:Int = (-0)+(127); }
	def m4777():Void { var l:Int = (-0)+(-127); }
	def m4778():Void { var l:Int = (-0)+(128); }
	def m4779():Void { var l:Int = (-0)+(-128); }
	def m4780():Void { var l:Int = (-0)+(255); }
	def m4781():Void { var l:Int = (-0)+(-255); }
	def m4782():Void { var l:Int = (-0)+(256); }
	def m4783():Void { var l:Int = (-0)+(-256); }
	def m4784():Void { var l:Int = (-0)+(32767); }
	def m4785():Void { var l:Int = (-0)+(-32767); }
	def m4786():Void { var l:Int = (-0)+(32768); }
	def m4787():Void { var l:Int = (-0)+(-32768); }
	def m4788():Void { var l:Int = (-0)+(65535); }
	def m4789():Void { var l:Int = (-0)+(-65535); }
	def m4790():Void { var l:Int = (-0)+(65536); }
	def m4791():Void { var l:Int = (-0)+(-65536); }
	def m4792():Void { var l:Int = (-0)+(16777216); }
	def m4793():Void { var l:Int = (-0)+(-16777216); }
	def m4794():Void { var l:Int = (-0)+(16777217); }
	def m4795():Void { var l:Int = (-0)+(-16777217); }
	def m4796():Void { var l:Int = (-0)+(2147483647); }
	def m4797():Void { var l:Int = (-0)+(-2147483647); }
	def m4798():Void { var l:Int = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4799():Void { var l:Int = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4800():Void { var l:Int = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4801():Void { var l:Int = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4802():Void { var l:Int = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4803():Void { var l:Int = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4804():Void { var l:Int = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4805():Void { var l:Int = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4806():Void { var l:Int = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4807():Void { var l:Int = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4808():Void { var l:Int = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4809():Void { var l:Int = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4810():Void { var l:Int = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4811():Void { var l:Int = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4812():Void { var l:Int = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4813():Void { var l:Int = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4814():Void { var l:Int = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4815():Void { var l:Int = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4816():Void { var l:Int = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4817():Void { var l:Int = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4818():Void { var l:Int = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4819():Void { var l:Int = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4820():Void { var l:Int = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4821():Void { var l:Int = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4822():Void { var l:Int = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4823():Void { var l:Int = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4824():Void { var l:Int = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4825():Void { var l:Int = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4826():Void { var l:Int = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4827():Void { var l:Int = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4828():Void { var l:Int = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4829():Void { var l:Int = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4830():Void { var l:Int = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4831():Void { var l:Int = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4832():Void { var l:Int = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4833():Void { var l:Int = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4834():Void { var l:Int = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4835():Void { var l:Int = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4836():Void { var l:Int = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4837():Void { var l:Int = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4838():Void { var l:Int = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4839():Void { var l:Int = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4840():Void { var l:Int = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4841():Void { var l:Int = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4842():Void { var l:Int = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4843():Void { var l:Int = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4844():Void { var l:Int = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4845():Void { var l:Int = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4846():Void { var l:Int = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4847():Void { var l:Int = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4848():Void { var l:Int = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4849():Void { var l:Int = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4850():Void { var l:Int = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4851():Void { var l:Int = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4852():Void { var l:Int = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4853():Void { var l:Int = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4854():Void { var l:Int = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4855():Void { var l:Int = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4856():Void { var l:Int = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4857():Void { var l:Int = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4858():Void { var l:Int = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4859():Void { var l:Int = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4860():Void { var l:Int = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4861():Void { var l:Int = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4862():Void { var l:Int = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4863():Void { var l:Int = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4864():Void { var l:Int = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4865():Void { var l:Int = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4866():Void { var l:Int = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4867():Void { var l:Int = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4868():Void { var l:Int = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4869():Void { var l:Int = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4870():Void { var l:Int = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4871():Void { var l:Int = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4872():Void { var l:Int = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4873():Void { var l:Int = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4874():Void { var l:Int = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4875():Void { var l:Int = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4876():Void { var l:Int = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4877():Void { var l:Int = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4878():Void { var l:Int = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4879():Void { var l:Int = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4880():Void { var l:Int = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4881():Void { var l:Int = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4882():Void { var l:Int = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4883():Void { var l:Int = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4884():Void { var l:Int = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4885():Void { var l:Int = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4886():Void { var l:Int = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4887():Void { var l:Int = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4888():Void { var l:Int = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4889():Void { var l:Int = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4890():Void { var l:Int = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4891():Void { var l:Int = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4892():Void { var l:Int = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4893():Void { var l:Int = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4894():Void { var l:Int = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4895():Void { var l:Int = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4896():Void { var l:Int = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4897():Void { var l:Int = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4898():Void { var l:Int = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4899():Void { var l:Int = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4900():Void { var l:Int = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4901():Void { var l:Int = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4902():Void { var l:Int = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4903():Void { var l:Int = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4904():Void { var l:Int = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4905():Void { var l:Int = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4906():Void { var l:Int = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4907():Void { var l:Int = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4908():Void { var l:Int = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4909():Void { var l:Int = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4910():Void { var l:Int = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4911():Void { var l:Int = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4912():Void { var l:Int = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4913():Void { var l:Int = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4914():Void { var l:Int = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4915():Void { var l:Int = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4916():Void { var l:Int = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4917():Void { var l:Int = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4918():Void { var l:Int = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4919():Void { var l:Int = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4920():Void { var l:Int = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4921():Void { var l:Int = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4922():Void { var l:Int = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4923():Void { var l:Int = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4924():Void { var l:Int = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4925():Void { var l:Int = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4926():Void { var l:Int = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4927():Void { var l:Int = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4928():Void { var l:Int = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4929():Void { var l:Int = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4930():Void { var l:Int = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4931():Void { var l:Int = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4932():Void { var l:Int = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4933():Void { var l:Int = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4934():Void { var l:Int = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4935():Void { var l:Int = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4936():Void { var l:Int = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4937():Void { var l:Int = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4938():Void { var l:Int = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4939():Void { var l:Int = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4940():Void { var l:Int = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4941():Void { var l:Int = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4942():Void { var l:Int = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4943():Void { var l:Int = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4944():Void { var l:Int = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4945():Void { var l:Int = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4946():Void { var l:Int = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4947():Void { var l:Int = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4948():Void { var l:Int = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4949():Void { var l:Int = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4950():Void { var l:Int = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4951():Void { var l:Int = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4952():Void { var l:Int = (127)+(w2); }
	def m4953():Void { var l:Int = (127)+(w3); }
	def m4954():Void { var l:Int = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4955():Void { var l:Int = (127)+(w5); }
	def m4956():Void { var l:Int = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4957():Void { var l:Int = (127)+(w7); }
	def m4958():Void { var l:Int = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4959():Void { var l:Int = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4960():Void { var l:Int = (127)+(0); }
	def m4961():Void { var l:Int = (127)+(-0); }
	def m4962():Void { var l:Int = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4963():Void { var l:Int = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4964():Void { var l:Int = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4965():Void { var l:Int = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4966():Void { var l:Int = (127)+(127); }
	def m4967():Void { var l:Int = (127)+(-127); }
	def m4968():Void { var l:Int = (127)+(128); }
	def m4969():Void { var l:Int = (127)+(-128); }
	def m4970():Void { var l:Int = (127)+(255); }
	def m4971():Void { var l:Int = (127)+(-255); }
	def m4972():Void { var l:Int = (127)+(256); }
	def m4973():Void { var l:Int = (127)+(-256); }
	def m4974():Void { var l:Int = (127)+(32767); }
	def m4975():Void { var l:Int = (127)+(-32767); }
	def m4976():Void { var l:Int = (127)+(32768); }
	def m4977():Void { var l:Int = (127)+(-32768); }
	def m4978():Void { var l:Int = (127)+(65535); }
	def m4979():Void { var l:Int = (127)+(-65535); }
	def m4980():Void { var l:Int = (127)+(65536); }
	def m4981():Void { var l:Int = (127)+(-65536); }
	def m4982():Void { var l:Int = (127)+(16777216); }
	def m4983():Void { var l:Int = (127)+(-16777216); }
	def m4984():Void { var l:Int = (127)+(16777217); }
	def m4985():Void { var l:Int = (127)+(-16777217); }
	def m4986():Void { var l:Int = (127)+(2147483647); }
	def m4987():Void { var l:Int = (127)+(-2147483647); }
	def m4988():Void { var l:Int = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4989():Void { var l:Int = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4990():Void { var l:Int = (-127)+(w2); }
	def m4991():Void { var l:Int = (-127)+(w3); }
	def m4992():Void { var l:Int = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4993():Void { var l:Int = (-127)+(w5); }
	def m4994():Void { var l:Int = (-127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-127)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4995():Void { var l:Int = (-127)+(w7); }
	def m4996():Void { var l:Int = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4997():Void { var l:Int = (-127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-127)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4998():Void { var l:Int = (-127)+(0); }
	def m4999():Void { var l:Int = (-127)+(-0); }
	def m5000():Void { var l:Int = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5001():Void { var l:Int = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5002():Void { var l:Int = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5003():Void { var l:Int = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5004():Void { var l:Int = (-127)+(127); }
	def m5005():Void { var l:Int = (-127)+(-127); }
	def m5006():Void { var l:Int = (-127)+(128); }
	def m5007():Void { var l:Int = (-127)+(-128); }
	def m5008():Void { var l:Int = (-127)+(255); }
	def m5009():Void { var l:Int = (-127)+(-255); }
	def m5010():Void { var l:Int = (-127)+(256); }
	def m5011():Void { var l:Int = (-127)+(-256); }
	def m5012():Void { var l:Int = (-127)+(32767); }
	def m5013():Void { var l:Int = (-127)+(-32767); }
	def m5014():Void { var l:Int = (-127)+(32768); }
	def m5015():Void { var l:Int = (-127)+(-32768); }
	def m5016():Void { var l:Int = (-127)+(65535); }
	def m5017():Void { var l:Int = (-127)+(-65535); }
	def m5018():Void { var l:Int = (-127)+(65536); }
	def m5019():Void { var l:Int = (-127)+(-65536); }
	def m5020():Void { var l:Int = (-127)+(16777216); }
	def m5021():Void { var l:Int = (-127)+(-16777216); }
	def m5022():Void { var l:Int = (-127)+(16777217); }
	def m5023():Void { var l:Int = (-127)+(-16777217); }
	def m5024():Void { var l:Int = (-127)+(2147483647); }
	def m5025():Void { var l:Int = (-127)+(-2147483647); }
	def m5026():Void { var l:Int = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5027():Void { var l:Int = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5028():Void { var l:Int = (128)+(w2); }
	def m5029():Void { var l:Int = (128)+(w3); }
	def m5030():Void { var l:Int = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5031():Void { var l:Int = (128)+(w5); }
	def m5032():Void { var l:Int = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5033():Void { var l:Int = (128)+(w7); }
	def m5034():Void { var l:Int = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5035():Void { var l:Int = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5036():Void { var l:Int = (128)+(0); }
	def m5037():Void { var l:Int = (128)+(-0); }
	def m5038():Void { var l:Int = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5039():Void { var l:Int = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5040():Void { var l:Int = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5041():Void { var l:Int = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5042():Void { var l:Int = (128)+(127); }
	def m5043():Void { var l:Int = (128)+(-127); }
	def m5044():Void { var l:Int = (128)+(128); }
	def m5045():Void { var l:Int = (128)+(-128); }
	def m5046():Void { var l:Int = (128)+(255); }
	def m5047():Void { var l:Int = (128)+(-255); }
	def m5048():Void { var l:Int = (128)+(256); }
	def m5049():Void { var l:Int = (128)+(-256); }
	def m5050():Void { var l:Int = (128)+(32767); }
	def m5051():Void { var l:Int = (128)+(-32767); }
	def m5052():Void { var l:Int = (128)+(32768); }
	def m5053():Void { var l:Int = (128)+(-32768); }
	def m5054():Void { var l:Int = (128)+(65535); }
	def m5055():Void { var l:Int = (128)+(-65535); }
	def m5056():Void { var l:Int = (128)+(65536); }
	def m5057():Void { var l:Int = (128)+(-65536); }
	def m5058():Void { var l:Int = (128)+(16777216); }
	def m5059():Void { var l:Int = (128)+(-16777216); }
	def m5060():Void { var l:Int = (128)+(16777217); }
	def m5061():Void { var l:Int = (128)+(-16777217); }
	def m5062():Void { var l:Int = (128)+(2147483647); }
	def m5063():Void { var l:Int = (128)+(-2147483647); }
	def m5064():Void { var l:Int = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5065():Void { var l:Int = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5066():Void { var l:Int = (-128)+(w2); }
	def m5067():Void { var l:Int = (-128)+(w3); }
	def m5068():Void { var l:Int = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5069():Void { var l:Int = (-128)+(w5); }
	def m5070():Void { var l:Int = (-128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-128)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5071():Void { var l:Int = (-128)+(w7); }
	def m5072():Void { var l:Int = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5073():Void { var l:Int = (-128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-128)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5074():Void { var l:Int = (-128)+(0); }
	def m5075():Void { var l:Int = (-128)+(-0); }
	def m5076():Void { var l:Int = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5077():Void { var l:Int = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5078():Void { var l:Int = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5079():Void { var l:Int = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5080():Void { var l:Int = (-128)+(127); }
	def m5081():Void { var l:Int = (-128)+(-127); }
	def m5082():Void { var l:Int = (-128)+(128); }
	def m5083():Void { var l:Int = (-128)+(-128); }
	def m5084():Void { var l:Int = (-128)+(255); }
	def m5085():Void { var l:Int = (-128)+(-255); }
	def m5086():Void { var l:Int = (-128)+(256); }
	def m5087():Void { var l:Int = (-128)+(-256); }
	def m5088():Void { var l:Int = (-128)+(32767); }
	def m5089():Void { var l:Int = (-128)+(-32767); }
	def m5090():Void { var l:Int = (-128)+(32768); }
	def m5091():Void { var l:Int = (-128)+(-32768); }
	def m5092():Void { var l:Int = (-128)+(65535); }
	def m5093():Void { var l:Int = (-128)+(-65535); }
	def m5094():Void { var l:Int = (-128)+(65536); }
	def m5095():Void { var l:Int = (-128)+(-65536); }
	def m5096():Void { var l:Int = (-128)+(16777216); }
	def m5097():Void { var l:Int = (-128)+(-16777216); }
	def m5098():Void { var l:Int = (-128)+(16777217); }
	def m5099():Void { var l:Int = (-128)+(-16777217); }
	def m5100():Void { var l:Int = (-128)+(2147483647); }
	def m5101():Void { var l:Int = (-128)+(-2147483647); }
	def m5102():Void { var l:Int = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5103():Void { var l:Int = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5104():Void { var l:Int = (255)+(w2); }
	def m5105():Void { var l:Int = (255)+(w3); }
	def m5106():Void { var l:Int = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5107():Void { var l:Int = (255)+(w5); }
	def m5108():Void { var l:Int = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5109():Void { var l:Int = (255)+(w7); }
	def m5110():Void { var l:Int = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5111():Void { var l:Int = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5112():Void { var l:Int = (255)+(0); }
	def m5113():Void { var l:Int = (255)+(-0); }
	def m5114():Void { var l:Int = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5115():Void { var l:Int = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5116():Void { var l:Int = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5117():Void { var l:Int = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5118():Void { var l:Int = (255)+(127); }
	def m5119():Void { var l:Int = (255)+(-127); }
	def m5120():Void { var l:Int = (255)+(128); }
	def m5121():Void { var l:Int = (255)+(-128); }
	def m5122():Void { var l:Int = (255)+(255); }
	def m5123():Void { var l:Int = (255)+(-255); }
	def m5124():Void { var l:Int = (255)+(256); }
	def m5125():Void { var l:Int = (255)+(-256); }
	def m5126():Void { var l:Int = (255)+(32767); }
	def m5127():Void { var l:Int = (255)+(-32767); }
	def m5128():Void { var l:Int = (255)+(32768); }
	def m5129():Void { var l:Int = (255)+(-32768); }
	def m5130():Void { var l:Int = (255)+(65535); }
	def m5131():Void { var l:Int = (255)+(-65535); }
	def m5132():Void { var l:Int = (255)+(65536); }
	def m5133():Void { var l:Int = (255)+(-65536); }
	def m5134():Void { var l:Int = (255)+(16777216); }
	def m5135():Void { var l:Int = (255)+(-16777216); }
	def m5136():Void { var l:Int = (255)+(16777217); }
	def m5137():Void { var l:Int = (255)+(-16777217); }
	def m5138():Void { var l:Int = (255)+(2147483647); }
	def m5139():Void { var l:Int = (255)+(-2147483647); }
	def m5140():Void { var l:Int = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5141():Void { var l:Int = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5142():Void { var l:Int = (-255)+(w2); }
	def m5143():Void { var l:Int = (-255)+(w3); }
	def m5144():Void { var l:Int = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5145():Void { var l:Int = (-255)+(w5); }
	def m5146():Void { var l:Int = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5147():Void { var l:Int = (-255)+(w7); }
	def m5148():Void { var l:Int = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5149():Void { var l:Int = (-255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-255)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5150():Void { var l:Int = (-255)+(0); }
	def m5151():Void { var l:Int = (-255)+(-0); }
	def m5152():Void { var l:Int = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5153():Void { var l:Int = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5154():Void { var l:Int = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5155():Void { var l:Int = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5156():Void { var l:Int = (-255)+(127); }
	def m5157():Void { var l:Int = (-255)+(-127); }
	def m5158():Void { var l:Int = (-255)+(128); }
	def m5159():Void { var l:Int = (-255)+(-128); }
	def m5160():Void { var l:Int = (-255)+(255); }
	def m5161():Void { var l:Int = (-255)+(-255); }
	def m5162():Void { var l:Int = (-255)+(256); }
	def m5163():Void { var l:Int = (-255)+(-256); }
	def m5164():Void { var l:Int = (-255)+(32767); }
	def m5165():Void { var l:Int = (-255)+(-32767); }
	def m5166():Void { var l:Int = (-255)+(32768); }
	def m5167():Void { var l:Int = (-255)+(-32768); }
	def m5168():Void { var l:Int = (-255)+(65535); }
	def m5169():Void { var l:Int = (-255)+(-65535); }
	def m5170():Void { var l:Int = (-255)+(65536); }
	def m5171():Void { var l:Int = (-255)+(-65536); }
	def m5172():Void { var l:Int = (-255)+(16777216); }
	def m5173():Void { var l:Int = (-255)+(-16777216); }
	def m5174():Void { var l:Int = (-255)+(16777217); }
	def m5175():Void { var l:Int = (-255)+(-16777217); }
	def m5176():Void { var l:Int = (-255)+(2147483647); }
	def m5177():Void { var l:Int = (-255)+(-2147483647); }
	def m5178():Void { var l:Int = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5179():Void { var l:Int = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5180():Void { var l:Int = (256)+(w2); }
	def m5181():Void { var l:Int = (256)+(w3); }
	def m5182():Void { var l:Int = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5183():Void { var l:Int = (256)+(w5); }
	def m5184():Void { var l:Int = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5185():Void { var l:Int = (256)+(w7); }
	def m5186():Void { var l:Int = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5187():Void { var l:Int = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5188():Void { var l:Int = (256)+(0); }
	def m5189():Void { var l:Int = (256)+(-0); }
	def m5190():Void { var l:Int = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5191():Void { var l:Int = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5192():Void { var l:Int = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5193():Void { var l:Int = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5194():Void { var l:Int = (256)+(127); }
	def m5195():Void { var l:Int = (256)+(-127); }
	def m5196():Void { var l:Int = (256)+(128); }
	def m5197():Void { var l:Int = (256)+(-128); }
	def m5198():Void { var l:Int = (256)+(255); }
	def m5199():Void { var l:Int = (256)+(-255); }
	def m5200():Void { var l:Int = (256)+(256); }
	def m5201():Void { var l:Int = (256)+(-256); }
	def m5202():Void { var l:Int = (256)+(32767); }
	def m5203():Void { var l:Int = (256)+(-32767); }
	def m5204():Void { var l:Int = (256)+(32768); }
	def m5205():Void { var l:Int = (256)+(-32768); }
	def m5206():Void { var l:Int = (256)+(65535); }
	def m5207():Void { var l:Int = (256)+(-65535); }
	def m5208():Void { var l:Int = (256)+(65536); }
	def m5209():Void { var l:Int = (256)+(-65536); }
	def m5210():Void { var l:Int = (256)+(16777216); }
	def m5211():Void { var l:Int = (256)+(-16777216); }
	def m5212():Void { var l:Int = (256)+(16777217); }
	def m5213():Void { var l:Int = (256)+(-16777217); }
	def m5214():Void { var l:Int = (256)+(2147483647); }
	def m5215():Void { var l:Int = (256)+(-2147483647); }
	def m5216():Void { var l:Int = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5217():Void { var l:Int = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5218():Void { var l:Int = (-256)+(w2); }
	def m5219():Void { var l:Int = (-256)+(w3); }
	def m5220():Void { var l:Int = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5221():Void { var l:Int = (-256)+(w5); }
	def m5222():Void { var l:Int = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5223():Void { var l:Int = (-256)+(w7); }
	def m5224():Void { var l:Int = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5225():Void { var l:Int = (-256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-256)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5226():Void { var l:Int = (-256)+(0); }
	def m5227():Void { var l:Int = (-256)+(-0); }
	def m5228():Void { var l:Int = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5229():Void { var l:Int = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5230():Void { var l:Int = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5231():Void { var l:Int = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5232():Void { var l:Int = (-256)+(127); }
	def m5233():Void { var l:Int = (-256)+(-127); }
	def m5234():Void { var l:Int = (-256)+(128); }
	def m5235():Void { var l:Int = (-256)+(-128); }
	def m5236():Void { var l:Int = (-256)+(255); }
	def m5237():Void { var l:Int = (-256)+(-255); }
	def m5238():Void { var l:Int = (-256)+(256); }
	def m5239():Void { var l:Int = (-256)+(-256); }
	def m5240():Void { var l:Int = (-256)+(32767); }
	def m5241():Void { var l:Int = (-256)+(-32767); }
	def m5242():Void { var l:Int = (-256)+(32768); }
	def m5243():Void { var l:Int = (-256)+(-32768); }
	def m5244():Void { var l:Int = (-256)+(65535); }
	def m5245():Void { var l:Int = (-256)+(-65535); }
	def m5246():Void { var l:Int = (-256)+(65536); }
	def m5247():Void { var l:Int = (-256)+(-65536); }
	def m5248():Void { var l:Int = (-256)+(16777216); }
	def m5249():Void { var l:Int = (-256)+(-16777216); }
	def m5250():Void { var l:Int = (-256)+(16777217); }
	def m5251():Void { var l:Int = (-256)+(-16777217); }
	def m5252():Void { var l:Int = (-256)+(2147483647); }
	def m5253():Void { var l:Int = (-256)+(-2147483647); }
	def m5254():Void { var l:Int = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5255():Void { var l:Int = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5256():Void { var l:Int = (32767)+(w2); }
	def m5257():Void { var l:Int = (32767)+(w3); }
	def m5258():Void { var l:Int = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5259():Void { var l:Int = (32767)+(w5); }
	def m5260():Void { var l:Int = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5261():Void { var l:Int = (32767)+(w7); }
	def m5262():Void { var l:Int = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5263():Void { var l:Int = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5264():Void { var l:Int = (32767)+(0); }
	def m5265():Void { var l:Int = (32767)+(-0); }
	def m5266():Void { var l:Int = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5267():Void { var l:Int = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5268():Void { var l:Int = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5269():Void { var l:Int = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5270():Void { var l:Int = (32767)+(127); }
	def m5271():Void { var l:Int = (32767)+(-127); }
	def m5272():Void { var l:Int = (32767)+(128); }
	def m5273():Void { var l:Int = (32767)+(-128); }
	def m5274():Void { var l:Int = (32767)+(255); }
	def m5275():Void { var l:Int = (32767)+(-255); }
	def m5276():Void { var l:Int = (32767)+(256); }
	def m5277():Void { var l:Int = (32767)+(-256); }
	def m5278():Void { var l:Int = (32767)+(32767); }
	def m5279():Void { var l:Int = (32767)+(-32767); }
	def m5280():Void { var l:Int = (32767)+(32768); }
	def m5281():Void { var l:Int = (32767)+(-32768); }
	def m5282():Void { var l:Int = (32767)+(65535); }
	def m5283():Void { var l:Int = (32767)+(-65535); }
	def m5284():Void { var l:Int = (32767)+(65536); }
	def m5285():Void { var l:Int = (32767)+(-65536); }
	def m5286():Void { var l:Int = (32767)+(16777216); }
	def m5287():Void { var l:Int = (32767)+(-16777216); }
	def m5288():Void { var l:Int = (32767)+(16777217); }
	def m5289():Void { var l:Int = (32767)+(-16777217); }
	def m5290():Void { var l:Int = (32767)+(2147483647); }
	def m5291():Void { var l:Int = (32767)+(-2147483647); }
	def m5292():Void { var l:Int = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5293():Void { var l:Int = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5294():Void { var l:Int = (-32767)+(w2); }
	def m5295():Void { var l:Int = (-32767)+(w3); }
	def m5296():Void { var l:Int = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5297():Void { var l:Int = (-32767)+(w5); }
	def m5298():Void { var l:Int = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5299():Void { var l:Int = (-32767)+(w7); }
	def m5300():Void { var l:Int = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5301():Void { var l:Int = (-32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32767)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5302():Void { var l:Int = (-32767)+(0); }
	def m5303():Void { var l:Int = (-32767)+(-0); }
	def m5304():Void { var l:Int = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5305():Void { var l:Int = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5306():Void { var l:Int = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5307():Void { var l:Int = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5308():Void { var l:Int = (-32767)+(127); }
	def m5309():Void { var l:Int = (-32767)+(-127); }
	def m5310():Void { var l:Int = (-32767)+(128); }
	def m5311():Void { var l:Int = (-32767)+(-128); }
	def m5312():Void { var l:Int = (-32767)+(255); }
	def m5313():Void { var l:Int = (-32767)+(-255); }
	def m5314():Void { var l:Int = (-32767)+(256); }
	def m5315():Void { var l:Int = (-32767)+(-256); }
	def m5316():Void { var l:Int = (-32767)+(32767); }
	def m5317():Void { var l:Int = (-32767)+(-32767); }
	def m5318():Void { var l:Int = (-32767)+(32768); }
	def m5319():Void { var l:Int = (-32767)+(-32768); }
	def m5320():Void { var l:Int = (-32767)+(65535); }
	def m5321():Void { var l:Int = (-32767)+(-65535); }
	def m5322():Void { var l:Int = (-32767)+(65536); }
	def m5323():Void { var l:Int = (-32767)+(-65536); }
	def m5324():Void { var l:Int = (-32767)+(16777216); }
	def m5325():Void { var l:Int = (-32767)+(-16777216); }
	def m5326():Void { var l:Int = (-32767)+(16777217); }
	def m5327():Void { var l:Int = (-32767)+(-16777217); }
	def m5328():Void { var l:Int = (-32767)+(2147483647); }
	def m5329():Void { var l:Int = (-32767)+(-2147483647); }
	def m5330():Void { var l:Int = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5331():Void { var l:Int = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5332():Void { var l:Int = (32768)+(w2); }
	def m5333():Void { var l:Int = (32768)+(w3); }
	def m5334():Void { var l:Int = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5335():Void { var l:Int = (32768)+(w5); }
	def m5336():Void { var l:Int = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5337():Void { var l:Int = (32768)+(w7); }
	def m5338():Void { var l:Int = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5339():Void { var l:Int = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5340():Void { var l:Int = (32768)+(0); }
	def m5341():Void { var l:Int = (32768)+(-0); }
	def m5342():Void { var l:Int = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5343():Void { var l:Int = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5344():Void { var l:Int = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5345():Void { var l:Int = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5346():Void { var l:Int = (32768)+(127); }
	def m5347():Void { var l:Int = (32768)+(-127); }
	def m5348():Void { var l:Int = (32768)+(128); }
	def m5349():Void { var l:Int = (32768)+(-128); }
	def m5350():Void { var l:Int = (32768)+(255); }
	def m5351():Void { var l:Int = (32768)+(-255); }
	def m5352():Void { var l:Int = (32768)+(256); }
	def m5353():Void { var l:Int = (32768)+(-256); }
	def m5354():Void { var l:Int = (32768)+(32767); }
	def m5355():Void { var l:Int = (32768)+(-32767); }
	def m5356():Void { var l:Int = (32768)+(32768); }
	def m5357():Void { var l:Int = (32768)+(-32768); }
	def m5358():Void { var l:Int = (32768)+(65535); }
	def m5359():Void { var l:Int = (32768)+(-65535); }
	def m5360():Void { var l:Int = (32768)+(65536); }
	def m5361():Void { var l:Int = (32768)+(-65536); }
	def m5362():Void { var l:Int = (32768)+(16777216); }
	def m5363():Void { var l:Int = (32768)+(-16777216); }
	def m5364():Void { var l:Int = (32768)+(16777217); }
	def m5365():Void { var l:Int = (32768)+(-16777217); }
	def m5366():Void { var l:Int = (32768)+(2147483647); }
	def m5367():Void { var l:Int = (32768)+(-2147483647); }
	def m5368():Void { var l:Int = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5369():Void { var l:Int = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5370():Void { var l:Int = (-32768)+(w2); }
	def m5371():Void { var l:Int = (-32768)+(w3); }
	def m5372():Void { var l:Int = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5373():Void { var l:Int = (-32768)+(w5); }
	def m5374():Void { var l:Int = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5375():Void { var l:Int = (-32768)+(w7); }
	def m5376():Void { var l:Int = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5377():Void { var l:Int = (-32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32768)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5378():Void { var l:Int = (-32768)+(0); }
	def m5379():Void { var l:Int = (-32768)+(-0); }
	def m5380():Void { var l:Int = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5381():Void { var l:Int = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5382():Void { var l:Int = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5383():Void { var l:Int = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5384():Void { var l:Int = (-32768)+(127); }
	def m5385():Void { var l:Int = (-32768)+(-127); }
	def m5386():Void { var l:Int = (-32768)+(128); }
	def m5387():Void { var l:Int = (-32768)+(-128); }
	def m5388():Void { var l:Int = (-32768)+(255); }
	def m5389():Void { var l:Int = (-32768)+(-255); }
	def m5390():Void { var l:Int = (-32768)+(256); }
	def m5391():Void { var l:Int = (-32768)+(-256); }
	def m5392():Void { var l:Int = (-32768)+(32767); }
	def m5393():Void { var l:Int = (-32768)+(-32767); }
	def m5394():Void { var l:Int = (-32768)+(32768); }
	def m5395():Void { var l:Int = (-32768)+(-32768); }
	def m5396():Void { var l:Int = (-32768)+(65535); }
	def m5397():Void { var l:Int = (-32768)+(-65535); }
	def m5398():Void { var l:Int = (-32768)+(65536); }
	def m5399():Void { var l:Int = (-32768)+(-65536); }
	def m5400():Void { var l:Int = (-32768)+(16777216); }
	def m5401():Void { var l:Int = (-32768)+(-16777216); }
	def m5402():Void { var l:Int = (-32768)+(16777217); }
	def m5403():Void { var l:Int = (-32768)+(-16777217); }
	def m5404():Void { var l:Int = (-32768)+(2147483647); }
	def m5405():Void { var l:Int = (-32768)+(-2147483647); }
	def m5406():Void { var l:Int = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5407():Void { var l:Int = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5408():Void { var l:Int = (65535)+(w2); }
	def m5409():Void { var l:Int = (65535)+(w3); }
	def m5410():Void { var l:Int = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5411():Void { var l:Int = (65535)+(w5); }
	def m5412():Void { var l:Int = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5413():Void { var l:Int = (65535)+(w7); }
	def m5414():Void { var l:Int = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5415():Void { var l:Int = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5416():Void { var l:Int = (65535)+(0); }
	def m5417():Void { var l:Int = (65535)+(-0); }
	def m5418():Void { var l:Int = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5419():Void { var l:Int = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5420():Void { var l:Int = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5421():Void { var l:Int = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5422():Void { var l:Int = (65535)+(127); }
	def m5423():Void { var l:Int = (65535)+(-127); }
	def m5424():Void { var l:Int = (65535)+(128); }
	def m5425():Void { var l:Int = (65535)+(-128); }
	def m5426():Void { var l:Int = (65535)+(255); }
	def m5427():Void { var l:Int = (65535)+(-255); }
	def m5428():Void { var l:Int = (65535)+(256); }
	def m5429():Void { var l:Int = (65535)+(-256); }
	def m5430():Void { var l:Int = (65535)+(32767); }
	def m5431():Void { var l:Int = (65535)+(-32767); }
	def m5432():Void { var l:Int = (65535)+(32768); }
	def m5433():Void { var l:Int = (65535)+(-32768); }
	def m5434():Void { var l:Int = (65535)+(65535); }
	def m5435():Void { var l:Int = (65535)+(-65535); }
	def m5436():Void { var l:Int = (65535)+(65536); }
	def m5437():Void { var l:Int = (65535)+(-65536); }
	def m5438():Void { var l:Int = (65535)+(16777216); }
	def m5439():Void { var l:Int = (65535)+(-16777216); }
	def m5440():Void { var l:Int = (65535)+(16777217); }
	def m5441():Void { var l:Int = (65535)+(-16777217); }
	def m5442():Void { var l:Int = (65535)+(2147483647); }
	def m5443():Void { var l:Int = (65535)+(-2147483647); }
	def m5444():Void { var l:Int = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5445():Void { var l:Int = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5446():Void { var l:Int = (-65535)+(w2); }
	def m5447():Void { var l:Int = (-65535)+(w3); }
	def m5448():Void { var l:Int = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5449():Void { var l:Int = (-65535)+(w5); }
	def m5450():Void { var l:Int = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5451():Void { var l:Int = (-65535)+(w7); }
	def m5452():Void { var l:Int = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5453():Void { var l:Int = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5454():Void { var l:Int = (-65535)+(0); }
	def m5455():Void { var l:Int = (-65535)+(-0); }
	def m5456():Void { var l:Int = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5457():Void { var l:Int = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5458():Void { var l:Int = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5459():Void { var l:Int = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5460():Void { var l:Int = (-65535)+(127); }
	def m5461():Void { var l:Int = (-65535)+(-127); }
	def m5462():Void { var l:Int = (-65535)+(128); }
	def m5463():Void { var l:Int = (-65535)+(-128); }
	def m5464():Void { var l:Int = (-65535)+(255); }
	def m5465():Void { var l:Int = (-65535)+(-255); }
	def m5466():Void { var l:Int = (-65535)+(256); }
	def m5467():Void { var l:Int = (-65535)+(-256); }
	def m5468():Void { var l:Int = (-65535)+(32767); }
	def m5469():Void { var l:Int = (-65535)+(-32767); }
	def m5470():Void { var l:Int = (-65535)+(32768); }
	def m5471():Void { var l:Int = (-65535)+(-32768); }
	def m5472():Void { var l:Int = (-65535)+(65535); }
	def m5473():Void { var l:Int = (-65535)+(-65535); }
	def m5474():Void { var l:Int = (-65535)+(65536); }
	def m5475():Void { var l:Int = (-65535)+(-65536); }
	def m5476():Void { var l:Int = (-65535)+(16777216); }
	def m5477():Void { var l:Int = (-65535)+(-16777216); }
	def m5478():Void { var l:Int = (-65535)+(16777217); }
	def m5479():Void { var l:Int = (-65535)+(-16777217); }
	def m5480():Void { var l:Int = (-65535)+(2147483647); }
	def m5481():Void { var l:Int = (-65535)+(-2147483647); }
	def m5482():Void { var l:Int = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5483():Void { var l:Int = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5484():Void { var l:Int = (65536)+(w2); }
	def m5485():Void { var l:Int = (65536)+(w3); }
	def m5486():Void { var l:Int = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5487():Void { var l:Int = (65536)+(w5); }
	def m5488():Void { var l:Int = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5489():Void { var l:Int = (65536)+(w7); }
	def m5490():Void { var l:Int = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5491():Void { var l:Int = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5492():Void { var l:Int = (65536)+(0); }
	def m5493():Void { var l:Int = (65536)+(-0); }
	def m5494():Void { var l:Int = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5495():Void { var l:Int = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5496():Void { var l:Int = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5497():Void { var l:Int = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5498():Void { var l:Int = (65536)+(127); }
	def m5499():Void { var l:Int = (65536)+(-127); }
	def m5500():Void { var l:Int = (65536)+(128); }
	def m5501():Void { var l:Int = (65536)+(-128); }
	def m5502():Void { var l:Int = (65536)+(255); }
	def m5503():Void { var l:Int = (65536)+(-255); }
	def m5504():Void { var l:Int = (65536)+(256); }
	def m5505():Void { var l:Int = (65536)+(-256); }
	def m5506():Void { var l:Int = (65536)+(32767); }
	def m5507():Void { var l:Int = (65536)+(-32767); }
	def m5508():Void { var l:Int = (65536)+(32768); }
	def m5509():Void { var l:Int = (65536)+(-32768); }
	def m5510():Void { var l:Int = (65536)+(65535); }
	def m5511():Void { var l:Int = (65536)+(-65535); }
	def m5512():Void { var l:Int = (65536)+(65536); }
	def m5513():Void { var l:Int = (65536)+(-65536); }
	def m5514():Void { var l:Int = (65536)+(16777216); }
	def m5515():Void { var l:Int = (65536)+(-16777216); }
	def m5516():Void { var l:Int = (65536)+(16777217); }
	def m5517():Void { var l:Int = (65536)+(-16777217); }
	def m5518():Void { var l:Int = (65536)+(2147483647); }
	def m5519():Void { var l:Int = (65536)+(-2147483647); }
	def m5520():Void { var l:Int = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5521():Void { var l:Int = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5522():Void { var l:Int = (-65536)+(w2); }
	def m5523():Void { var l:Int = (-65536)+(w3); }
	def m5524():Void { var l:Int = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5525():Void { var l:Int = (-65536)+(w5); }
	def m5526():Void { var l:Int = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5527():Void { var l:Int = (-65536)+(w7); }
	def m5528():Void { var l:Int = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5529():Void { var l:Int = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5530():Void { var l:Int = (-65536)+(0); }
	def m5531():Void { var l:Int = (-65536)+(-0); }
	def m5532():Void { var l:Int = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5533():Void { var l:Int = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5534():Void { var l:Int = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5535():Void { var l:Int = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5536():Void { var l:Int = (-65536)+(127); }
	def m5537():Void { var l:Int = (-65536)+(-127); }
	def m5538():Void { var l:Int = (-65536)+(128); }
	def m5539():Void { var l:Int = (-65536)+(-128); }
	def m5540():Void { var l:Int = (-65536)+(255); }
	def m5541():Void { var l:Int = (-65536)+(-255); }
	def m5542():Void { var l:Int = (-65536)+(256); }
	def m5543():Void { var l:Int = (-65536)+(-256); }
	def m5544():Void { var l:Int = (-65536)+(32767); }
	def m5545():Void { var l:Int = (-65536)+(-32767); }
	def m5546():Void { var l:Int = (-65536)+(32768); }
	def m5547():Void { var l:Int = (-65536)+(-32768); }
	def m5548():Void { var l:Int = (-65536)+(65535); }
	def m5549():Void { var l:Int = (-65536)+(-65535); }
	def m5550():Void { var l:Int = (-65536)+(65536); }
	def m5551():Void { var l:Int = (-65536)+(-65536); }
	def m5552():Void { var l:Int = (-65536)+(16777216); }
	def m5553():Void { var l:Int = (-65536)+(-16777216); }
	def m5554():Void { var l:Int = (-65536)+(16777217); }
	def m5555():Void { var l:Int = (-65536)+(-16777217); }
	def m5556():Void { var l:Int = (-65536)+(2147483647); }
	def m5557():Void { var l:Int = (-65536)+(-2147483647); }
	def m5558():Void { var l:Int = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5559():Void { var l:Int = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5560():Void { var l:Int = (16777216)+(w2); }
	def m5561():Void { var l:Int = (16777216)+(w3); }
	def m5562():Void { var l:Int = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5563():Void { var l:Int = (16777216)+(w5); }
	def m5564():Void { var l:Int = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5565():Void { var l:Int = (16777216)+(w7); }
	def m5566():Void { var l:Int = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5567():Void { var l:Int = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5568():Void { var l:Int = (16777216)+(0); }
	def m5569():Void { var l:Int = (16777216)+(-0); }
	def m5570():Void { var l:Int = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5571():Void { var l:Int = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5572():Void { var l:Int = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5573():Void { var l:Int = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5574():Void { var l:Int = (16777216)+(127); }
	def m5575():Void { var l:Int = (16777216)+(-127); }
	def m5576():Void { var l:Int = (16777216)+(128); }
	def m5577():Void { var l:Int = (16777216)+(-128); }
	def m5578():Void { var l:Int = (16777216)+(255); }
	def m5579():Void { var l:Int = (16777216)+(-255); }
	def m5580():Void { var l:Int = (16777216)+(256); }
	def m5581():Void { var l:Int = (16777216)+(-256); }
	def m5582():Void { var l:Int = (16777216)+(32767); }
	def m5583():Void { var l:Int = (16777216)+(-32767); }
	def m5584():Void { var l:Int = (16777216)+(32768); }
	def m5585():Void { var l:Int = (16777216)+(-32768); }
	def m5586():Void { var l:Int = (16777216)+(65535); }
	def m5587():Void { var l:Int = (16777216)+(-65535); }
	def m5588():Void { var l:Int = (16777216)+(65536); }
	def m5589():Void { var l:Int = (16777216)+(-65536); }
	def m5590():Void { var l:Int = (16777216)+(16777216); }
	def m5591():Void { var l:Int = (16777216)+(-16777216); }
	def m5592():Void { var l:Int = (16777216)+(16777217); }
	def m5593():Void { var l:Int = (16777216)+(-16777217); }
	def m5594():Void { var l:Int = (16777216)+(2147483647); }
	def m5595():Void { var l:Int = (16777216)+(-2147483647); }
	def m5596():Void { var l:Int = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5597():Void { var l:Int = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5598():Void { var l:Int = (-16777216)+(w2); }
	def m5599():Void { var l:Int = (-16777216)+(w3); }
	def m5600():Void { var l:Int = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5601():Void { var l:Int = (-16777216)+(w5); }
	def m5602():Void { var l:Int = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5603():Void { var l:Int = (-16777216)+(w7); }
	def m5604():Void { var l:Int = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5605():Void { var l:Int = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5606():Void { var l:Int = (-16777216)+(0); }
	def m5607():Void { var l:Int = (-16777216)+(-0); }
	def m5608():Void { var l:Int = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5609():Void { var l:Int = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5610():Void { var l:Int = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5611():Void { var l:Int = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5612():Void { var l:Int = (-16777216)+(127); }
	def m5613():Void { var l:Int = (-16777216)+(-127); }
	def m5614():Void { var l:Int = (-16777216)+(128); }
	def m5615():Void { var l:Int = (-16777216)+(-128); }
	def m5616():Void { var l:Int = (-16777216)+(255); }
	def m5617():Void { var l:Int = (-16777216)+(-255); }
	def m5618():Void { var l:Int = (-16777216)+(256); }
	def m5619():Void { var l:Int = (-16777216)+(-256); }
	def m5620():Void { var l:Int = (-16777216)+(32767); }
	def m5621():Void { var l:Int = (-16777216)+(-32767); }
	def m5622():Void { var l:Int = (-16777216)+(32768); }
	def m5623():Void { var l:Int = (-16777216)+(-32768); }
	def m5624():Void { var l:Int = (-16777216)+(65535); }
	def m5625():Void { var l:Int = (-16777216)+(-65535); }
	def m5626():Void { var l:Int = (-16777216)+(65536); }
	def m5627():Void { var l:Int = (-16777216)+(-65536); }
	def m5628():Void { var l:Int = (-16777216)+(16777216); }
	def m5629():Void { var l:Int = (-16777216)+(-16777216); }
	def m5630():Void { var l:Int = (-16777216)+(16777217); }
	def m5631():Void { var l:Int = (-16777216)+(-16777217); }
	def m5632():Void { var l:Int = (-16777216)+(2147483647); }
	def m5633():Void { var l:Int = (-16777216)+(-2147483647); }
	def m5634():Void { var l:Int = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5635():Void { var l:Int = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5636():Void { var l:Int = (16777217)+(w2); }
	def m5637():Void { var l:Int = (16777217)+(w3); }
	def m5638():Void { var l:Int = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5639():Void { var l:Int = (16777217)+(w5); }
	def m5640():Void { var l:Int = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5641():Void { var l:Int = (16777217)+(w7); }
	def m5642():Void { var l:Int = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5643():Void { var l:Int = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5644():Void { var l:Int = (16777217)+(0); }
	def m5645():Void { var l:Int = (16777217)+(-0); }
	def m5646():Void { var l:Int = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5647():Void { var l:Int = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5648():Void { var l:Int = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5649():Void { var l:Int = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5650():Void { var l:Int = (16777217)+(127); }
	def m5651():Void { var l:Int = (16777217)+(-127); }
	def m5652():Void { var l:Int = (16777217)+(128); }
	def m5653():Void { var l:Int = (16777217)+(-128); }
	def m5654():Void { var l:Int = (16777217)+(255); }
	def m5655():Void { var l:Int = (16777217)+(-255); }
	def m5656():Void { var l:Int = (16777217)+(256); }
	def m5657():Void { var l:Int = (16777217)+(-256); }
	def m5658():Void { var l:Int = (16777217)+(32767); }
	def m5659():Void { var l:Int = (16777217)+(-32767); }
	def m5660():Void { var l:Int = (16777217)+(32768); }
	def m5661():Void { var l:Int = (16777217)+(-32768); }
	def m5662():Void { var l:Int = (16777217)+(65535); }
	def m5663():Void { var l:Int = (16777217)+(-65535); }
	def m5664():Void { var l:Int = (16777217)+(65536); }
	def m5665():Void { var l:Int = (16777217)+(-65536); }
	def m5666():Void { var l:Int = (16777217)+(16777216); }
	def m5667():Void { var l:Int = (16777217)+(-16777216); }
	def m5668():Void { var l:Int = (16777217)+(16777217); }
	def m5669():Void { var l:Int = (16777217)+(-16777217); }
	def m5670():Void { var l:Int = (16777217)+(2147483647); }
	def m5671():Void { var l:Int = (16777217)+(-2147483647); }
	def m5672():Void { var l:Int = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5673():Void { var l:Int = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5674():Void { var l:Int = (-16777217)+(w2); }
	def m5675():Void { var l:Int = (-16777217)+(w3); }
	def m5676():Void { var l:Int = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5677():Void { var l:Int = (-16777217)+(w5); }
	def m5678():Void { var l:Int = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5679():Void { var l:Int = (-16777217)+(w7); }
	def m5680():Void { var l:Int = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5681():Void { var l:Int = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5682():Void { var l:Int = (-16777217)+(0); }
	def m5683():Void { var l:Int = (-16777217)+(-0); }
	def m5684():Void { var l:Int = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5685():Void { var l:Int = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5686():Void { var l:Int = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5687():Void { var l:Int = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5688():Void { var l:Int = (-16777217)+(127); }
	def m5689():Void { var l:Int = (-16777217)+(-127); }
	def m5690():Void { var l:Int = (-16777217)+(128); }
	def m5691():Void { var l:Int = (-16777217)+(-128); }
	def m5692():Void { var l:Int = (-16777217)+(255); }
	def m5693():Void { var l:Int = (-16777217)+(-255); }
	def m5694():Void { var l:Int = (-16777217)+(256); }
	def m5695():Void { var l:Int = (-16777217)+(-256); }
	def m5696():Void { var l:Int = (-16777217)+(32767); }
	def m5697():Void { var l:Int = (-16777217)+(-32767); }
	def m5698():Void { var l:Int = (-16777217)+(32768); }
	def m5699():Void { var l:Int = (-16777217)+(-32768); }
	def m5700():Void { var l:Int = (-16777217)+(65535); }
	def m5701():Void { var l:Int = (-16777217)+(-65535); }
	def m5702():Void { var l:Int = (-16777217)+(65536); }
	def m5703():Void { var l:Int = (-16777217)+(-65536); }
	def m5704():Void { var l:Int = (-16777217)+(16777216); }
	def m5705():Void { var l:Int = (-16777217)+(-16777216); }
	def m5706():Void { var l:Int = (-16777217)+(16777217); }
	def m5707():Void { var l:Int = (-16777217)+(-16777217); }
	def m5708():Void { var l:Int = (-16777217)+(2147483647); }
	def m5709():Void { var l:Int = (-16777217)+(-2147483647); }
	def m5710():Void { var l:Int = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5711():Void { var l:Int = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5712():Void { var l:Int = (2147483647)+(w2); }
	def m5713():Void { var l:Int = (2147483647)+(w3); }
	def m5714():Void { var l:Int = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5715():Void { var l:Int = (2147483647)+(w5); }
	def m5716():Void { var l:Int = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5717():Void { var l:Int = (2147483647)+(w7); }
	def m5718():Void { var l:Int = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5719():Void { var l:Int = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5720():Void { var l:Int = (2147483647)+(0); }
	def m5721():Void { var l:Int = (2147483647)+(-0); }
	def m5722():Void { var l:Int = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5723():Void { var l:Int = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5724():Void { var l:Int = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5725():Void { var l:Int = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5726():Void { var l:Int = (2147483647)+(127); }
	def m5727():Void { var l:Int = (2147483647)+(-127); }
	def m5728():Void { var l:Int = (2147483647)+(128); }
	def m5729():Void { var l:Int = (2147483647)+(-128); }
	def m5730():Void { var l:Int = (2147483647)+(255); }
	def m5731():Void { var l:Int = (2147483647)+(-255); }
	def m5732():Void { var l:Int = (2147483647)+(256); }
	def m5733():Void { var l:Int = (2147483647)+(-256); }
	def m5734():Void { var l:Int = (2147483647)+(32767); }
	def m5735():Void { var l:Int = (2147483647)+(-32767); }
	def m5736():Void { var l:Int = (2147483647)+(32768); }
	def m5737():Void { var l:Int = (2147483647)+(-32768); }
	def m5738():Void { var l:Int = (2147483647)+(65535); }
	def m5739():Void { var l:Int = (2147483647)+(-65535); }
	def m5740():Void { var l:Int = (2147483647)+(65536); }
	def m5741():Void { var l:Int = (2147483647)+(-65536); }
	def m5742():Void { var l:Int = (2147483647)+(16777216); }
	def m5743():Void { var l:Int = (2147483647)+(-16777216); }
	def m5744():Void { var l:Int = (2147483647)+(16777217); }
	def m5745():Void { var l:Int = (2147483647)+(-16777217); }
	def m5746():Void { var l:Int = (2147483647)+(2147483647); }
	def m5747():Void { var l:Int = (2147483647)+(-2147483647); }
	def m5748():Void { var l:Int = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5749():Void { var l:Int = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5750():Void { var l:Int = (-2147483647)+(w2); }
	def m5751():Void { var l:Int = (-2147483647)+(w3); }
	def m5752():Void { var l:Int = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5753():Void { var l:Int = (-2147483647)+(w5); }
	def m5754():Void { var l:Int = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5755():Void { var l:Int = (-2147483647)+(w7); }
	def m5756():Void { var l:Int = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5757():Void { var l:Int = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5758():Void { var l:Int = (-2147483647)+(0); }
	def m5759():Void { var l:Int = (-2147483647)+(-0); }
	def m5760():Void { var l:Int = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5761():Void { var l:Int = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5762():Void { var l:Int = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5763():Void { var l:Int = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5764():Void { var l:Int = (-2147483647)+(127); }
	def m5765():Void { var l:Int = (-2147483647)+(-127); }
	def m5766():Void { var l:Int = (-2147483647)+(128); }
	def m5767():Void { var l:Int = (-2147483647)+(-128); }
	def m5768():Void { var l:Int = (-2147483647)+(255); }
	def m5769():Void { var l:Int = (-2147483647)+(-255); }
	def m5770():Void { var l:Int = (-2147483647)+(256); }
	def m5771():Void { var l:Int = (-2147483647)+(-256); }
	def m5772():Void { var l:Int = (-2147483647)+(32767); }
	def m5773():Void { var l:Int = (-2147483647)+(-32767); }
	def m5774():Void { var l:Int = (-2147483647)+(32768); }
	def m5775():Void { var l:Int = (-2147483647)+(-32768); }
	def m5776():Void { var l:Int = (-2147483647)+(65535); }
	def m5777():Void { var l:Int = (-2147483647)+(-65535); }
	def m5778():Void { var l:Int = (-2147483647)+(65536); }
	def m5779():Void { var l:Int = (-2147483647)+(-65536); }
	def m5780():Void { var l:Int = (-2147483647)+(16777216); }
	def m5781():Void { var l:Int = (-2147483647)+(-16777216); }
	def m5782():Void { var l:Int = (-2147483647)+(16777217); }
	def m5783():Void { var l:Int = (-2147483647)+(-16777217); }
	def m5784():Void { var l:Int = (-2147483647)+(2147483647); }
	def m5785():Void { var l:Int = (-2147483647)+(-2147483647); }
	def m5786():Void { var l:Long = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5787():Void { var l:Long = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5788():Void { var l:Long = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5789():Void { var l:Long = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5790():Void { var l:Long = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5791():Void { var l:Long = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5792():Void { var l:Long = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5793():Void { var l:Long = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5794():Void { var l:Long = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5795():Void { var l:Long = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5796():Void { var l:Long = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5797():Void { var l:Long = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5798():Void { var l:Long = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5799():Void { var l:Long = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5800():Void { var l:Long = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5801():Void { var l:Long = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5802():Void { var l:Long = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5803():Void { var l:Long = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5804():Void { var l:Long = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5805():Void { var l:Long = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5806():Void { var l:Long = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5807():Void { var l:Long = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5808():Void { var l:Long = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5809():Void { var l:Long = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5810():Void { var l:Long = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5811():Void { var l:Long = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5812():Void { var l:Long = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5813():Void { var l:Long = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5814():Void { var l:Long = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5815():Void { var l:Long = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5816():Void { var l:Long = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5817():Void { var l:Long = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5818():Void { var l:Long = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5819():Void { var l:Long = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5820():Void { var l:Long = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5821():Void { var l:Long = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5822():Void { var l:Long = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5823():Void { var l:Long = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5824():Void { var l:Long = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5825():Void { var l:Long = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5826():Void { var l:Long = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5827():Void { var l:Long = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5828():Void { var l:Long = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5829():Void { var l:Long = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5830():Void { var l:Long = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5831():Void { var l:Long = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5832():Void { var l:Long = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5833():Void { var l:Long = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5834():Void { var l:Long = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5835():Void { var l:Long = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5836():Void { var l:Long = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5837():Void { var l:Long = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5838():Void { var l:Long = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5839():Void { var l:Long = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5840():Void { var l:Long = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5841():Void { var l:Long = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5842():Void { var l:Long = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5843():Void { var l:Long = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5844():Void { var l:Long = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5845():Void { var l:Long = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5846():Void { var l:Long = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5847():Void { var l:Long = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5848():Void { var l:Long = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5849():Void { var l:Long = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5850():Void { var l:Long = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5851():Void { var l:Long = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5852():Void { var l:Long = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5853():Void { var l:Long = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5854():Void { var l:Long = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5855():Void { var l:Long = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5856():Void { var l:Long = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5857():Void { var l:Long = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5858():Void { var l:Long = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5859():Void { var l:Long = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5860():Void { var l:Long = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5861():Void { var l:Long = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5862():Void { var l:Long = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5863():Void { var l:Long = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5864():Void { var l:Long = (w2)+(w2); }
	def m5865():Void { var l:Long = (w2)+(w3); }
	def m5866():Void { var l:Long = (w2)+(w4); }
	def m5867():Void { var l:Long = (w2)+(w5); }
	def m5868():Void { var l:Long = (w2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w2) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m5869():Void { var l:Long = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m5870():Void { var l:Long = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m5871():Void { var l:Long = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m5872():Void { var l:Long = (w2)+(0); }
	def m5873():Void { var l:Long = (w2)+(-0); }
	def m5874():Void { var l:Long = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5875():Void { var l:Long = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5876():Void { var l:Long = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5877():Void { var l:Long = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5878():Void { var l:Long = (w2)+(127); }
	def m5879():Void { var l:Long = (w2)+(-127); }
	def m5880():Void { var l:Long = (w2)+(128); }
	def m5881():Void { var l:Long = (w2)+(-128); }
	def m5882():Void { var l:Long = (w2)+(255); }
	def m5883():Void { var l:Long = (w2)+(-255); }
	def m5884():Void { var l:Long = (w2)+(256); }
	def m5885():Void { var l:Long = (w2)+(-256); }
	def m5886():Void { var l:Long = (w2)+(32767); }
	def m5887():Void { var l:Long = (w2)+(-32767); }
	def m5888():Void { var l:Long = (w2)+(32768); }
	def m5889():Void { var l:Long = (w2)+(-32768); }
	def m5890():Void { var l:Long = (w2)+(65535); }
	def m5891():Void { var l:Long = (w2)+(-65535); }
	def m5892():Void { var l:Long = (w2)+(65536); }
	def m5893():Void { var l:Long = (w2)+(-65536); }
	def m5894():Void { var l:Long = (w2)+(16777216); }
	def m5895():Void { var l:Long = (w2)+(-16777216); }
	def m5896():Void { var l:Long = (w2)+(16777217); }
	def m5897():Void { var l:Long = (w2)+(-16777217); }
	def m5898():Void { var l:Long = (w2)+(2147483647); }
	def m5899():Void { var l:Long = (w2)+(-2147483647); }
	def m5900():Void { var l:Long = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5901():Void { var l:Long = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5902():Void { var l:Long = (w3)+(w2); }
	def m5903():Void { var l:Long = (w3)+(w3); }
	def m5904():Void { var l:Long = (w3)+(w4); }
	def m5905():Void { var l:Long = (w3)+(w5); }
	def m5906():Void { var l:Long = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5907():Void { var l:Long = (w3)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m5908():Void { var l:Long = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5909():Void { var l:Long = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5910():Void { var l:Long = (w3)+(0); }
	def m5911():Void { var l:Long = (w3)+(-0); }
	def m5912():Void { var l:Long = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5913():Void { var l:Long = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5914():Void { var l:Long = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5915():Void { var l:Long = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5916():Void { var l:Long = (w3)+(127); }
	def m5917():Void { var l:Long = (w3)+(-127); }
	def m5918():Void { var l:Long = (w3)+(128); }
	def m5919():Void { var l:Long = (w3)+(-128); }
	def m5920():Void { var l:Long = (w3)+(255); }
	def m5921():Void { var l:Long = (w3)+(-255); }
	def m5922():Void { var l:Long = (w3)+(256); }
	def m5923():Void { var l:Long = (w3)+(-256); }
	def m5924():Void { var l:Long = (w3)+(32767); }
	def m5925():Void { var l:Long = (w3)+(-32767); }
	def m5926():Void { var l:Long = (w3)+(32768); }
	def m5927():Void { var l:Long = (w3)+(-32768); }
	def m5928():Void { var l:Long = (w3)+(65535); }
	def m5929():Void { var l:Long = (w3)+(-65535); }
	def m5930():Void { var l:Long = (w3)+(65536); }
	def m5931():Void { var l:Long = (w3)+(-65536); }
	def m5932():Void { var l:Long = (w3)+(16777216); }
	def m5933():Void { var l:Long = (w3)+(-16777216); }
	def m5934():Void { var l:Long = (w3)+(16777217); }
	def m5935():Void { var l:Long = (w3)+(-16777217); }
	def m5936():Void { var l:Long = (w3)+(2147483647); }
	def m5937():Void { var l:Long = (w3)+(-2147483647); }
	def m5938():Void { var l:Long = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5939():Void { var l:Long = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5940():Void { var l:Long = (w4)+(w2); }
	def m5941():Void { var l:Long = (w4)+(w3); }
	def m5942():Void { var l:Long = (w4)+(w4); }
	def m5943():Void { var l:Long = (w4)+(w5); }
	def m5944():Void { var l:Long = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m5945():Void { var l:Long = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m5946():Void { var l:Long = (w4)+(w8); }
	def m5947():Void { var l:Long = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m5948():Void { var l:Long = (w4)+(0); }
	def m5949():Void { var l:Long = (w4)+(-0); }
	def m5950():Void { var l:Long = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5951():Void { var l:Long = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5952():Void { var l:Long = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5953():Void { var l:Long = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5954():Void { var l:Long = (w4)+(127); }
	def m5955():Void { var l:Long = (w4)+(-127); }
	def m5956():Void { var l:Long = (w4)+(128); }
	def m5957():Void { var l:Long = (w4)+(-128); }
	def m5958():Void { var l:Long = (w4)+(255); }
	def m5959():Void { var l:Long = (w4)+(-255); }
	def m5960():Void { var l:Long = (w4)+(256); }
	def m5961():Void { var l:Long = (w4)+(-256); }
	def m5962():Void { var l:Long = (w4)+(32767); }
	def m5963():Void { var l:Long = (w4)+(-32767); }
	def m5964():Void { var l:Long = (w4)+(32768); }
	def m5965():Void { var l:Long = (w4)+(-32768); }
	def m5966():Void { var l:Long = (w4)+(65535); }
	def m5967():Void { var l:Long = (w4)+(-65535); }
	def m5968():Void { var l:Long = (w4)+(65536); }
	def m5969():Void { var l:Long = (w4)+(-65536); }
	def m5970():Void { var l:Long = (w4)+(16777216); }
	def m5971():Void { var l:Long = (w4)+(-16777216); }
	def m5972():Void { var l:Long = (w4)+(16777217); }
	def m5973():Void { var l:Long = (w4)+(-16777217); }
	def m5974():Void { var l:Long = (w4)+(2147483647); }
	def m5975():Void { var l:Long = (w4)+(-2147483647); }
	def m5976():Void { var l:Long = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5977():Void { var l:Long = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5978():Void { var l:Long = (w5)+(w2); }
	def m5979():Void { var l:Long = (w5)+(w3); }
	def m5980():Void { var l:Long = (w5)+(w4); }
	def m5981():Void { var l:Long = (w5)+(w5); }
	def m5982():Void { var l:Long = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m5983():Void { var l:Long = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m5984():Void { var l:Long = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m5985():Void { var l:Long = (w5)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m5986():Void { var l:Long = (w5)+(0); }
	def m5987():Void { var l:Long = (w5)+(-0); }
	def m5988():Void { var l:Long = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5989():Void { var l:Long = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5990():Void { var l:Long = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5991():Void { var l:Long = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5992():Void { var l:Long = (w5)+(127); }
	def m5993():Void { var l:Long = (w5)+(-127); }
	def m5994():Void { var l:Long = (w5)+(128); }
	def m5995():Void { var l:Long = (w5)+(-128); }
	def m5996():Void { var l:Long = (w5)+(255); }
	def m5997():Void { var l:Long = (w5)+(-255); }
	def m5998():Void { var l:Long = (w5)+(256); }
	def m5999():Void { var l:Long = (w5)+(-256); }
	def m6000():Void { var l:Long = (w5)+(32767); }
	def m6001():Void { var l:Long = (w5)+(-32767); }
	def m6002():Void { var l:Long = (w5)+(32768); }
	def m6003():Void { var l:Long = (w5)+(-32768); }
	def m6004():Void { var l:Long = (w5)+(65535); }
	def m6005():Void { var l:Long = (w5)+(-65535); }
	def m6006():Void { var l:Long = (w5)+(65536); }
	def m6007():Void { var l:Long = (w5)+(-65536); }
	def m6008():Void { var l:Long = (w5)+(16777216); }
	def m6009():Void { var l:Long = (w5)+(-16777216); }
	def m6010():Void { var l:Long = (w5)+(16777217); }
	def m6011():Void { var l:Long = (w5)+(-16777217); }
	def m6012():Void { var l:Long = (w5)+(2147483647); }
	def m6013():Void { var l:Long = (w5)+(-2147483647); }
	def m6014():Void { var l:Long = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6015():Void { var l:Long = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6016():Void { var l:Long = (w6)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w2)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6017():Void { var l:Long = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m6018():Void { var l:Long = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m6019():Void { var l:Long = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m6020():Void { var l:Long = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6021():Void { var l:Long = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m6022():Void { var l:Long = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m6023():Void { var l:Long = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m6024():Void { var l:Long = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m6025():Void { var l:Long = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m6026():Void { var l:Long = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6027():Void { var l:Long = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6028():Void { var l:Long = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6029():Void { var l:Long = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6030():Void { var l:Long = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m6031():Void { var l:Long = (w6)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6032():Void { var l:Long = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m6033():Void { var l:Long = (w6)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6034():Void { var l:Long = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m6035():Void { var l:Long = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m6036():Void { var l:Long = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m6037():Void { var l:Long = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m6038():Void { var l:Long = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m6039():Void { var l:Long = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m6040():Void { var l:Long = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m6041():Void { var l:Long = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m6042():Void { var l:Long = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m6043():Void { var l:Long = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m6044():Void { var l:Long = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m6045():Void { var l:Long = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m6046():Void { var l:Long = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m6047():Void { var l:Long = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m6048():Void { var l:Long = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m6049():Void { var l:Long = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m6050():Void { var l:Long = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m6051():Void { var l:Long = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m6052():Void { var l:Long = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6053():Void { var l:Long = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6054():Void { var l:Long = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m6055():Void { var l:Long = (w7)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6056():Void { var l:Long = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m6057():Void { var l:Long = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m6058():Void { var l:Long = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m6059():Void { var l:Long = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6060():Void { var l:Long = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m6061():Void { var l:Long = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m6062():Void { var l:Long = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6063():Void { var l:Long = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6064():Void { var l:Long = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6065():Void { var l:Long = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6066():Void { var l:Long = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6067():Void { var l:Long = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6068():Void { var l:Long = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (127)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6069():Void { var l:Long = (w7)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-127)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6070():Void { var l:Long = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (128)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6071():Void { var l:Long = (w7)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-128)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6072():Void { var l:Long = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (255)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6073():Void { var l:Long = (w7)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-255)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6074():Void { var l:Long = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (256)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6075():Void { var l:Long = (w7)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-256)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6076():Void { var l:Long = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32767)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6077():Void { var l:Long = (w7)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32767)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6078():Void { var l:Long = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32768)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6079():Void { var l:Long = (w7)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32768)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6080():Void { var l:Long = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65535)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6081():Void { var l:Long = (w7)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65535)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6082():Void { var l:Long = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65536)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6083():Void { var l:Long = (w7)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65536)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6084():Void { var l:Long = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777216)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6085():Void { var l:Long = (w7)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777216)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6086():Void { var l:Long = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777217)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6087():Void { var l:Long = (w7)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777217)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6088():Void { var l:Long = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (2147483647)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6089():Void { var l:Long = (w7)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-2147483647)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6090():Void { var l:Long = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6091():Void { var l:Long = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6092():Void { var l:Long = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m6093():Void { var l:Long = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m6094():Void { var l:Long = (w8)+(w4); }
	def m6095():Void { var l:Long = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m6096():Void { var l:Long = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m6097():Void { var l:Long = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m6098():Void { var l:Long = (w8)+(w8); }
	def m6099():Void { var l:Long = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m6100():Void { var l:Long = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m6101():Void { var l:Long = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m6102():Void { var l:Long = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6103():Void { var l:Long = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6104():Void { var l:Long = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6105():Void { var l:Long = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6106():Void { var l:Long = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m6107():Void { var l:Long = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m6108():Void { var l:Long = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m6109():Void { var l:Long = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m6110():Void { var l:Long = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m6111():Void { var l:Long = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m6112():Void { var l:Long = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m6113():Void { var l:Long = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m6114():Void { var l:Long = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m6115():Void { var l:Long = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m6116():Void { var l:Long = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m6117():Void { var l:Long = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m6118():Void { var l:Long = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m6119():Void { var l:Long = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m6120():Void { var l:Long = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m6121():Void { var l:Long = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m6122():Void { var l:Long = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m6123():Void { var l:Long = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m6124():Void { var l:Long = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m6125():Void { var l:Long = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m6126():Void { var l:Long = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m6127():Void { var l:Long = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m6128():Void { var l:Long = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6129():Void { var l:Long = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6130():Void { var l:Long = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m6131():Void { var l:Long = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m6132():Void { var l:Long = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m6133():Void { var l:Long = (w9)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6134():Void { var l:Long = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m6135():Void { var l:Long = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m6136():Void { var l:Long = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m6137():Void { var l:Long = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6138():Void { var l:Long = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m6139():Void { var l:Long = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m6140():Void { var l:Long = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6141():Void { var l:Long = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6142():Void { var l:Long = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6143():Void { var l:Long = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6144():Void { var l:Long = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m6145():Void { var l:Long = (w9)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6146():Void { var l:Long = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m6147():Void { var l:Long = (w9)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6148():Void { var l:Long = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m6149():Void { var l:Long = (w9)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6150():Void { var l:Long = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m6151():Void { var l:Long = (w9)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6152():Void { var l:Long = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m6153():Void { var l:Long = (w9)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6154():Void { var l:Long = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m6155():Void { var l:Long = (w9)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6156():Void { var l:Long = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m6157():Void { var l:Long = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m6158():Void { var l:Long = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m6159():Void { var l:Long = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m6160():Void { var l:Long = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m6161():Void { var l:Long = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m6162():Void { var l:Long = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m6163():Void { var l:Long = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m6164():Void { var l:Long = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m6165():Void { var l:Long = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m6166():Void { var l:Long = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6167():Void { var l:Long = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6168():Void { var l:Long = (0)+(w2); }
	def m6169():Void { var l:Long = (0)+(w3); }
	def m6170():Void { var l:Long = (0)+(w4); }
	def m6171():Void { var l:Long = (0)+(w5); }
	def m6172():Void { var l:Long = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6173():Void { var l:Long = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6174():Void { var l:Long = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6175():Void { var l:Long = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6176():Void { var l:Long = (0)+(0); }
	def m6177():Void { var l:Long = (0)+(-0); }
	def m6178():Void { var l:Long = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6179():Void { var l:Long = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6180():Void { var l:Long = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6181():Void { var l:Long = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6182():Void { var l:Long = (0)+(127); }
	def m6183():Void { var l:Long = (0)+(-127); }
	def m6184():Void { var l:Long = (0)+(128); }
	def m6185():Void { var l:Long = (0)+(-128); }
	def m6186():Void { var l:Long = (0)+(255); }
	def m6187():Void { var l:Long = (0)+(-255); }
	def m6188():Void { var l:Long = (0)+(256); }
	def m6189():Void { var l:Long = (0)+(-256); }
	def m6190():Void { var l:Long = (0)+(32767); }
	def m6191():Void { var l:Long = (0)+(-32767); }
	def m6192():Void { var l:Long = (0)+(32768); }
	def m6193():Void { var l:Long = (0)+(-32768); }
	def m6194():Void { var l:Long = (0)+(65535); }
	def m6195():Void { var l:Long = (0)+(-65535); }
	def m6196():Void { var l:Long = (0)+(65536); }
	def m6197():Void { var l:Long = (0)+(-65536); }
	def m6198():Void { var l:Long = (0)+(16777216); }
	def m6199():Void { var l:Long = (0)+(-16777216); }
	def m6200():Void { var l:Long = (0)+(16777217); }
	def m6201():Void { var l:Long = (0)+(-16777217); }
	def m6202():Void { var l:Long = (0)+(2147483647); }
	def m6203():Void { var l:Long = (0)+(-2147483647); }
	def m6204():Void { var l:Long = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6205():Void { var l:Long = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6206():Void { var l:Long = (-0)+(w2); }
	def m6207():Void { var l:Long = (-0)+(w3); }
	def m6208():Void { var l:Long = (-0)+(w4); }
	def m6209():Void { var l:Long = (-0)+(w5); }
	def m6210():Void { var l:Long = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6211():Void { var l:Long = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6212():Void { var l:Long = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6213():Void { var l:Long = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6214():Void { var l:Long = (-0)+(0); }
	def m6215():Void { var l:Long = (-0)+(-0); }
	def m6216():Void { var l:Long = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6217():Void { var l:Long = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6218():Void { var l:Long = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6219():Void { var l:Long = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6220():Void { var l:Long = (-0)+(127); }
	def m6221():Void { var l:Long = (-0)+(-127); }
	def m6222():Void { var l:Long = (-0)+(128); }
	def m6223():Void { var l:Long = (-0)+(-128); }
	def m6224():Void { var l:Long = (-0)+(255); }
	def m6225():Void { var l:Long = (-0)+(-255); }
	def m6226():Void { var l:Long = (-0)+(256); }
	def m6227():Void { var l:Long = (-0)+(-256); }
	def m6228():Void { var l:Long = (-0)+(32767); }
	def m6229():Void { var l:Long = (-0)+(-32767); }
	def m6230():Void { var l:Long = (-0)+(32768); }
	def m6231():Void { var l:Long = (-0)+(-32768); }
	def m6232():Void { var l:Long = (-0)+(65535); }
	def m6233():Void { var l:Long = (-0)+(-65535); }
	def m6234():Void { var l:Long = (-0)+(65536); }
	def m6235():Void { var l:Long = (-0)+(-65536); }
	def m6236():Void { var l:Long = (-0)+(16777216); }
	def m6237():Void { var l:Long = (-0)+(-16777216); }
	def m6238():Void { var l:Long = (-0)+(16777217); }
	def m6239():Void { var l:Long = (-0)+(-16777217); }
	def m6240():Void { var l:Long = (-0)+(2147483647); }
	def m6241():Void { var l:Long = (-0)+(-2147483647); }
	def m6242():Void { var l:Long = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6243():Void { var l:Long = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6244():Void { var l:Long = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6245():Void { var l:Long = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6246():Void { var l:Long = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6247():Void { var l:Long = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6248():Void { var l:Long = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6249():Void { var l:Long = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6250():Void { var l:Long = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6251():Void { var l:Long = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6252():Void { var l:Long = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6253():Void { var l:Long = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6254():Void { var l:Long = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6255():Void { var l:Long = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6256():Void { var l:Long = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6257():Void { var l:Long = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6258():Void { var l:Long = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6259():Void { var l:Long = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6260():Void { var l:Long = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6261():Void { var l:Long = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6262():Void { var l:Long = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6263():Void { var l:Long = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6264():Void { var l:Long = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6265():Void { var l:Long = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6266():Void { var l:Long = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6267():Void { var l:Long = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6268():Void { var l:Long = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6269():Void { var l:Long = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6270():Void { var l:Long = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6271():Void { var l:Long = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6272():Void { var l:Long = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6273():Void { var l:Long = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6274():Void { var l:Long = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6275():Void { var l:Long = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6276():Void { var l:Long = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6277():Void { var l:Long = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6278():Void { var l:Long = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6279():Void { var l:Long = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6280():Void { var l:Long = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6281():Void { var l:Long = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6282():Void { var l:Long = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6283():Void { var l:Long = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6284():Void { var l:Long = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6285():Void { var l:Long = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6286():Void { var l:Long = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6287():Void { var l:Long = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6288():Void { var l:Long = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6289():Void { var l:Long = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6290():Void { var l:Long = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6291():Void { var l:Long = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6292():Void { var l:Long = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6293():Void { var l:Long = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6294():Void { var l:Long = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6295():Void { var l:Long = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6296():Void { var l:Long = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6297():Void { var l:Long = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6298():Void { var l:Long = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6299():Void { var l:Long = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6300():Void { var l:Long = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6301():Void { var l:Long = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6302():Void { var l:Long = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6303():Void { var l:Long = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6304():Void { var l:Long = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6305():Void { var l:Long = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6306():Void { var l:Long = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6307():Void { var l:Long = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6308():Void { var l:Long = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6309():Void { var l:Long = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6310():Void { var l:Long = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6311():Void { var l:Long = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6312():Void { var l:Long = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6313():Void { var l:Long = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6314():Void { var l:Long = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6315():Void { var l:Long = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6316():Void { var l:Long = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6317():Void { var l:Long = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6318():Void { var l:Long = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6319():Void { var l:Long = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6320():Void { var l:Long = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6321():Void { var l:Long = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6322():Void { var l:Long = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6323():Void { var l:Long = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6324():Void { var l:Long = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6325():Void { var l:Long = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6326():Void { var l:Long = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6327():Void { var l:Long = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6328():Void { var l:Long = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6329():Void { var l:Long = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6330():Void { var l:Long = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6331():Void { var l:Long = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6332():Void { var l:Long = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6333():Void { var l:Long = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6334():Void { var l:Long = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6335():Void { var l:Long = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6336():Void { var l:Long = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6337():Void { var l:Long = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6338():Void { var l:Long = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6339():Void { var l:Long = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6340():Void { var l:Long = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6341():Void { var l:Long = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6342():Void { var l:Long = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6343():Void { var l:Long = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6344():Void { var l:Long = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6345():Void { var l:Long = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6346():Void { var l:Long = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6347():Void { var l:Long = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6348():Void { var l:Long = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6349():Void { var l:Long = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6350():Void { var l:Long = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6351():Void { var l:Long = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6352():Void { var l:Long = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6353():Void { var l:Long = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6354():Void { var l:Long = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6355():Void { var l:Long = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6356():Void { var l:Long = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6357():Void { var l:Long = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6358():Void { var l:Long = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6359():Void { var l:Long = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6360():Void { var l:Long = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6361():Void { var l:Long = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6362():Void { var l:Long = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6363():Void { var l:Long = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6364():Void { var l:Long = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6365():Void { var l:Long = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6366():Void { var l:Long = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6367():Void { var l:Long = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6368():Void { var l:Long = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6369():Void { var l:Long = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6370():Void { var l:Long = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6371():Void { var l:Long = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6372():Void { var l:Long = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6373():Void { var l:Long = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6374():Void { var l:Long = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6375():Void { var l:Long = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6376():Void { var l:Long = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6377():Void { var l:Long = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6378():Void { var l:Long = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6379():Void { var l:Long = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6380():Void { var l:Long = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6381():Void { var l:Long = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6382():Void { var l:Long = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6383():Void { var l:Long = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6384():Void { var l:Long = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6385():Void { var l:Long = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6386():Void { var l:Long = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6387():Void { var l:Long = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6388():Void { var l:Long = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6389():Void { var l:Long = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6390():Void { var l:Long = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6391():Void { var l:Long = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6392():Void { var l:Long = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6393():Void { var l:Long = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6394():Void { var l:Long = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6395():Void { var l:Long = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6396():Void { var l:Long = (127)+(w2); }
	def m6397():Void { var l:Long = (127)+(w3); }
	def m6398():Void { var l:Long = (127)+(w4); }
	def m6399():Void { var l:Long = (127)+(w5); }
	def m6400():Void { var l:Long = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6401():Void { var l:Long = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6402():Void { var l:Long = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6403():Void { var l:Long = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6404():Void { var l:Long = (127)+(0); }
	def m6405():Void { var l:Long = (127)+(-0); }
	def m6406():Void { var l:Long = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6407():Void { var l:Long = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6408():Void { var l:Long = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6409():Void { var l:Long = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6410():Void { var l:Long = (127)+(127); }
	def m6411():Void { var l:Long = (127)+(-127); }
	def m6412():Void { var l:Long = (127)+(128); }
	def m6413():Void { var l:Long = (127)+(-128); }
	def m6414():Void { var l:Long = (127)+(255); }
	def m6415():Void { var l:Long = (127)+(-255); }
	def m6416():Void { var l:Long = (127)+(256); }
	def m6417():Void { var l:Long = (127)+(-256); }
	def m6418():Void { var l:Long = (127)+(32767); }
	def m6419():Void { var l:Long = (127)+(-32767); }
	def m6420():Void { var l:Long = (127)+(32768); }
	def m6421():Void { var l:Long = (127)+(-32768); }
	def m6422():Void { var l:Long = (127)+(65535); }
	def m6423():Void { var l:Long = (127)+(-65535); }
	def m6424():Void { var l:Long = (127)+(65536); }
	def m6425():Void { var l:Long = (127)+(-65536); }
	def m6426():Void { var l:Long = (127)+(16777216); }
	def m6427():Void { var l:Long = (127)+(-16777216); }
	def m6428():Void { var l:Long = (127)+(16777217); }
	def m6429():Void { var l:Long = (127)+(-16777217); }
	def m6430():Void { var l:Long = (127)+(2147483647); }
	def m6431():Void { var l:Long = (127)+(-2147483647); }
	def m6432():Void { var l:Long = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6433():Void { var l:Long = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6434():Void { var l:Long = (-127)+(w2); }
	def m6435():Void { var l:Long = (-127)+(w3); }
	def m6436():Void { var l:Long = (-127)+(w4); }
	def m6437():Void { var l:Long = (-127)+(w5); }
	def m6438():Void { var l:Long = (-127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-127)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6439():Void { var l:Long = (-127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6440():Void { var l:Long = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6441():Void { var l:Long = (-127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-127)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6442():Void { var l:Long = (-127)+(0); }
	def m6443():Void { var l:Long = (-127)+(-0); }
	def m6444():Void { var l:Long = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6445():Void { var l:Long = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6446():Void { var l:Long = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6447():Void { var l:Long = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6448():Void { var l:Long = (-127)+(127); }
	def m6449():Void { var l:Long = (-127)+(-127); }
	def m6450():Void { var l:Long = (-127)+(128); }
	def m6451():Void { var l:Long = (-127)+(-128); }
	def m6452():Void { var l:Long = (-127)+(255); }
	def m6453():Void { var l:Long = (-127)+(-255); }
	def m6454():Void { var l:Long = (-127)+(256); }
	def m6455():Void { var l:Long = (-127)+(-256); }
	def m6456():Void { var l:Long = (-127)+(32767); }
	def m6457():Void { var l:Long = (-127)+(-32767); }
	def m6458():Void { var l:Long = (-127)+(32768); }
	def m6459():Void { var l:Long = (-127)+(-32768); }
	def m6460():Void { var l:Long = (-127)+(65535); }
	def m6461():Void { var l:Long = (-127)+(-65535); }
	def m6462():Void { var l:Long = (-127)+(65536); }
	def m6463():Void { var l:Long = (-127)+(-65536); }
	def m6464():Void { var l:Long = (-127)+(16777216); }
	def m6465():Void { var l:Long = (-127)+(-16777216); }
	def m6466():Void { var l:Long = (-127)+(16777217); }
	def m6467():Void { var l:Long = (-127)+(-16777217); }
	def m6468():Void { var l:Long = (-127)+(2147483647); }
	def m6469():Void { var l:Long = (-127)+(-2147483647); }
	def m6470():Void { var l:Long = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6471():Void { var l:Long = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6472():Void { var l:Long = (128)+(w2); }
	def m6473():Void { var l:Long = (128)+(w3); }
	def m6474():Void { var l:Long = (128)+(w4); }
	def m6475():Void { var l:Long = (128)+(w5); }
	def m6476():Void { var l:Long = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6477():Void { var l:Long = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6478():Void { var l:Long = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6479():Void { var l:Long = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6480():Void { var l:Long = (128)+(0); }
	def m6481():Void { var l:Long = (128)+(-0); }
	def m6482():Void { var l:Long = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6483():Void { var l:Long = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6484():Void { var l:Long = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6485():Void { var l:Long = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6486():Void { var l:Long = (128)+(127); }
	def m6487():Void { var l:Long = (128)+(-127); }
	def m6488():Void { var l:Long = (128)+(128); }
	def m6489():Void { var l:Long = (128)+(-128); }
	def m6490():Void { var l:Long = (128)+(255); }
	def m6491():Void { var l:Long = (128)+(-255); }
	def m6492():Void { var l:Long = (128)+(256); }
	def m6493():Void { var l:Long = (128)+(-256); }
	def m6494():Void { var l:Long = (128)+(32767); }
	def m6495():Void { var l:Long = (128)+(-32767); }
	def m6496():Void { var l:Long = (128)+(32768); }
	def m6497():Void { var l:Long = (128)+(-32768); }
	def m6498():Void { var l:Long = (128)+(65535); }
	def m6499():Void { var l:Long = (128)+(-65535); }
	def m6500():Void { var l:Long = (128)+(65536); }
	def m6501():Void { var l:Long = (128)+(-65536); }
	def m6502():Void { var l:Long = (128)+(16777216); }
	def m6503():Void { var l:Long = (128)+(-16777216); }
	def m6504():Void { var l:Long = (128)+(16777217); }
	def m6505():Void { var l:Long = (128)+(-16777217); }
	def m6506():Void { var l:Long = (128)+(2147483647); }
	def m6507():Void { var l:Long = (128)+(-2147483647); }
	def m6508():Void { var l:Long = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6509():Void { var l:Long = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6510():Void { var l:Long = (-128)+(w2); }
	def m6511():Void { var l:Long = (-128)+(w3); }
	def m6512():Void { var l:Long = (-128)+(w4); }
	def m6513():Void { var l:Long = (-128)+(w5); }
	def m6514():Void { var l:Long = (-128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-128)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6515():Void { var l:Long = (-128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6516():Void { var l:Long = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6517():Void { var l:Long = (-128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-128)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6518():Void { var l:Long = (-128)+(0); }
	def m6519():Void { var l:Long = (-128)+(-0); }
	def m6520():Void { var l:Long = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6521():Void { var l:Long = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6522():Void { var l:Long = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6523():Void { var l:Long = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6524():Void { var l:Long = (-128)+(127); }
	def m6525():Void { var l:Long = (-128)+(-127); }
	def m6526():Void { var l:Long = (-128)+(128); }
	def m6527():Void { var l:Long = (-128)+(-128); }
	def m6528():Void { var l:Long = (-128)+(255); }
	def m6529():Void { var l:Long = (-128)+(-255); }
	def m6530():Void { var l:Long = (-128)+(256); }
	def m6531():Void { var l:Long = (-128)+(-256); }
	def m6532():Void { var l:Long = (-128)+(32767); }
	def m6533():Void { var l:Long = (-128)+(-32767); }
	def m6534():Void { var l:Long = (-128)+(32768); }
	def m6535():Void { var l:Long = (-128)+(-32768); }
	def m6536():Void { var l:Long = (-128)+(65535); }
	def m6537():Void { var l:Long = (-128)+(-65535); }
	def m6538():Void { var l:Long = (-128)+(65536); }
	def m6539():Void { var l:Long = (-128)+(-65536); }
	def m6540():Void { var l:Long = (-128)+(16777216); }
	def m6541():Void { var l:Long = (-128)+(-16777216); }
	def m6542():Void { var l:Long = (-128)+(16777217); }
	def m6543():Void { var l:Long = (-128)+(-16777217); }
	def m6544():Void { var l:Long = (-128)+(2147483647); }
	def m6545():Void { var l:Long = (-128)+(-2147483647); }
	def m6546():Void { var l:Long = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6547():Void { var l:Long = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6548():Void { var l:Long = (255)+(w2); }
	def m6549():Void { var l:Long = (255)+(w3); }
	def m6550():Void { var l:Long = (255)+(w4); }
	def m6551():Void { var l:Long = (255)+(w5); }
	def m6552():Void { var l:Long = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6553():Void { var l:Long = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6554():Void { var l:Long = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6555():Void { var l:Long = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6556():Void { var l:Long = (255)+(0); }
	def m6557():Void { var l:Long = (255)+(-0); }
	def m6558():Void { var l:Long = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6559():Void { var l:Long = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6560():Void { var l:Long = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6561():Void { var l:Long = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6562():Void { var l:Long = (255)+(127); }
	def m6563():Void { var l:Long = (255)+(-127); }
	def m6564():Void { var l:Long = (255)+(128); }
	def m6565():Void { var l:Long = (255)+(-128); }
	def m6566():Void { var l:Long = (255)+(255); }
	def m6567():Void { var l:Long = (255)+(-255); }
	def m6568():Void { var l:Long = (255)+(256); }
	def m6569():Void { var l:Long = (255)+(-256); }
	def m6570():Void { var l:Long = (255)+(32767); }
	def m6571():Void { var l:Long = (255)+(-32767); }
	def m6572():Void { var l:Long = (255)+(32768); }
	def m6573():Void { var l:Long = (255)+(-32768); }
	def m6574():Void { var l:Long = (255)+(65535); }
	def m6575():Void { var l:Long = (255)+(-65535); }
	def m6576():Void { var l:Long = (255)+(65536); }
	def m6577():Void { var l:Long = (255)+(-65536); }
	def m6578():Void { var l:Long = (255)+(16777216); }
	def m6579():Void { var l:Long = (255)+(-16777216); }
	def m6580():Void { var l:Long = (255)+(16777217); }
	def m6581():Void { var l:Long = (255)+(-16777217); }
	def m6582():Void { var l:Long = (255)+(2147483647); }
	def m6583():Void { var l:Long = (255)+(-2147483647); }
	def m6584():Void { var l:Long = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6585():Void { var l:Long = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6586():Void { var l:Long = (-255)+(w2); }
	def m6587():Void { var l:Long = (-255)+(w3); }
	def m6588():Void { var l:Long = (-255)+(w4); }
	def m6589():Void { var l:Long = (-255)+(w5); }
	def m6590():Void { var l:Long = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6591():Void { var l:Long = (-255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6592():Void { var l:Long = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6593():Void { var l:Long = (-255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-255)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6594():Void { var l:Long = (-255)+(0); }
	def m6595():Void { var l:Long = (-255)+(-0); }
	def m6596():Void { var l:Long = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6597():Void { var l:Long = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6598():Void { var l:Long = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6599():Void { var l:Long = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6600():Void { var l:Long = (-255)+(127); }
	def m6601():Void { var l:Long = (-255)+(-127); }
	def m6602():Void { var l:Long = (-255)+(128); }
	def m6603():Void { var l:Long = (-255)+(-128); }
	def m6604():Void { var l:Long = (-255)+(255); }
	def m6605():Void { var l:Long = (-255)+(-255); }
	def m6606():Void { var l:Long = (-255)+(256); }
	def m6607():Void { var l:Long = (-255)+(-256); }
	def m6608():Void { var l:Long = (-255)+(32767); }
	def m6609():Void { var l:Long = (-255)+(-32767); }
	def m6610():Void { var l:Long = (-255)+(32768); }
	def m6611():Void { var l:Long = (-255)+(-32768); }
	def m6612():Void { var l:Long = (-255)+(65535); }
	def m6613():Void { var l:Long = (-255)+(-65535); }
	def m6614():Void { var l:Long = (-255)+(65536); }
	def m6615():Void { var l:Long = (-255)+(-65536); }
	def m6616():Void { var l:Long = (-255)+(16777216); }
	def m6617():Void { var l:Long = (-255)+(-16777216); }
	def m6618():Void { var l:Long = (-255)+(16777217); }
	def m6619():Void { var l:Long = (-255)+(-16777217); }
	def m6620():Void { var l:Long = (-255)+(2147483647); }
	def m6621():Void { var l:Long = (-255)+(-2147483647); }
	def m6622():Void { var l:Long = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6623():Void { var l:Long = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6624():Void { var l:Long = (256)+(w2); }
	def m6625():Void { var l:Long = (256)+(w3); }
	def m6626():Void { var l:Long = (256)+(w4); }
	def m6627():Void { var l:Long = (256)+(w5); }
	def m6628():Void { var l:Long = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6629():Void { var l:Long = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6630():Void { var l:Long = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6631():Void { var l:Long = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6632():Void { var l:Long = (256)+(0); }
	def m6633():Void { var l:Long = (256)+(-0); }
	def m6634():Void { var l:Long = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6635():Void { var l:Long = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6636():Void { var l:Long = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6637():Void { var l:Long = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6638():Void { var l:Long = (256)+(127); }
	def m6639():Void { var l:Long = (256)+(-127); }
	def m6640():Void { var l:Long = (256)+(128); }
	def m6641():Void { var l:Long = (256)+(-128); }
	def m6642():Void { var l:Long = (256)+(255); }
	def m6643():Void { var l:Long = (256)+(-255); }
	def m6644():Void { var l:Long = (256)+(256); }
	def m6645():Void { var l:Long = (256)+(-256); }
	def m6646():Void { var l:Long = (256)+(32767); }
	def m6647():Void { var l:Long = (256)+(-32767); }
	def m6648():Void { var l:Long = (256)+(32768); }
	def m6649():Void { var l:Long = (256)+(-32768); }
	def m6650():Void { var l:Long = (256)+(65535); }
	def m6651():Void { var l:Long = (256)+(-65535); }
	def m6652():Void { var l:Long = (256)+(65536); }
	def m6653():Void { var l:Long = (256)+(-65536); }
	def m6654():Void { var l:Long = (256)+(16777216); }
	def m6655():Void { var l:Long = (256)+(-16777216); }
	def m6656():Void { var l:Long = (256)+(16777217); }
	def m6657():Void { var l:Long = (256)+(-16777217); }
	def m6658():Void { var l:Long = (256)+(2147483647); }
	def m6659():Void { var l:Long = (256)+(-2147483647); }
	def m6660():Void { var l:Long = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6661():Void { var l:Long = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6662():Void { var l:Long = (-256)+(w2); }
	def m6663():Void { var l:Long = (-256)+(w3); }
	def m6664():Void { var l:Long = (-256)+(w4); }
	def m6665():Void { var l:Long = (-256)+(w5); }
	def m6666():Void { var l:Long = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6667():Void { var l:Long = (-256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6668():Void { var l:Long = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6669():Void { var l:Long = (-256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-256)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6670():Void { var l:Long = (-256)+(0); }
	def m6671():Void { var l:Long = (-256)+(-0); }
	def m6672():Void { var l:Long = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6673():Void { var l:Long = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6674():Void { var l:Long = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6675():Void { var l:Long = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6676():Void { var l:Long = (-256)+(127); }
	def m6677():Void { var l:Long = (-256)+(-127); }
	def m6678():Void { var l:Long = (-256)+(128); }
	def m6679():Void { var l:Long = (-256)+(-128); }
	def m6680():Void { var l:Long = (-256)+(255); }
	def m6681():Void { var l:Long = (-256)+(-255); }
	def m6682():Void { var l:Long = (-256)+(256); }
	def m6683():Void { var l:Long = (-256)+(-256); }
	def m6684():Void { var l:Long = (-256)+(32767); }
	def m6685():Void { var l:Long = (-256)+(-32767); }
	def m6686():Void { var l:Long = (-256)+(32768); }
	def m6687():Void { var l:Long = (-256)+(-32768); }
	def m6688():Void { var l:Long = (-256)+(65535); }
	def m6689():Void { var l:Long = (-256)+(-65535); }
	def m6690():Void { var l:Long = (-256)+(65536); }
	def m6691():Void { var l:Long = (-256)+(-65536); }
	def m6692():Void { var l:Long = (-256)+(16777216); }
	def m6693():Void { var l:Long = (-256)+(-16777216); }
	def m6694():Void { var l:Long = (-256)+(16777217); }
	def m6695():Void { var l:Long = (-256)+(-16777217); }
	def m6696():Void { var l:Long = (-256)+(2147483647); }
	def m6697():Void { var l:Long = (-256)+(-2147483647); }
	def m6698():Void { var l:Long = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6699():Void { var l:Long = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6700():Void { var l:Long = (32767)+(w2); }
	def m6701():Void { var l:Long = (32767)+(w3); }
	def m6702():Void { var l:Long = (32767)+(w4); }
	def m6703():Void { var l:Long = (32767)+(w5); }
	def m6704():Void { var l:Long = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6705():Void { var l:Long = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6706():Void { var l:Long = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6707():Void { var l:Long = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6708():Void { var l:Long = (32767)+(0); }
	def m6709():Void { var l:Long = (32767)+(-0); }
	def m6710():Void { var l:Long = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6711():Void { var l:Long = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6712():Void { var l:Long = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6713():Void { var l:Long = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6714():Void { var l:Long = (32767)+(127); }
	def m6715():Void { var l:Long = (32767)+(-127); }
	def m6716():Void { var l:Long = (32767)+(128); }
	def m6717():Void { var l:Long = (32767)+(-128); }
	def m6718():Void { var l:Long = (32767)+(255); }
	def m6719():Void { var l:Long = (32767)+(-255); }
	def m6720():Void { var l:Long = (32767)+(256); }
	def m6721():Void { var l:Long = (32767)+(-256); }
	def m6722():Void { var l:Long = (32767)+(32767); }
	def m6723():Void { var l:Long = (32767)+(-32767); }
	def m6724():Void { var l:Long = (32767)+(32768); }
	def m6725():Void { var l:Long = (32767)+(-32768); }
	def m6726():Void { var l:Long = (32767)+(65535); }
	def m6727():Void { var l:Long = (32767)+(-65535); }
	def m6728():Void { var l:Long = (32767)+(65536); }
	def m6729():Void { var l:Long = (32767)+(-65536); }
	def m6730():Void { var l:Long = (32767)+(16777216); }
	def m6731():Void { var l:Long = (32767)+(-16777216); }
	def m6732():Void { var l:Long = (32767)+(16777217); }
	def m6733():Void { var l:Long = (32767)+(-16777217); }
	def m6734():Void { var l:Long = (32767)+(2147483647); }
	def m6735():Void { var l:Long = (32767)+(-2147483647); }
	def m6736():Void { var l:Long = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6737():Void { var l:Long = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6738():Void { var l:Long = (-32767)+(w2); }
	def m6739():Void { var l:Long = (-32767)+(w3); }
	def m6740():Void { var l:Long = (-32767)+(w4); }
	def m6741():Void { var l:Long = (-32767)+(w5); }
	def m6742():Void { var l:Long = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6743():Void { var l:Long = (-32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6744():Void { var l:Long = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6745():Void { var l:Long = (-32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32767)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6746():Void { var l:Long = (-32767)+(0); }
	def m6747():Void { var l:Long = (-32767)+(-0); }
	def m6748():Void { var l:Long = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6749():Void { var l:Long = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6750():Void { var l:Long = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6751():Void { var l:Long = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6752():Void { var l:Long = (-32767)+(127); }
	def m6753():Void { var l:Long = (-32767)+(-127); }
	def m6754():Void { var l:Long = (-32767)+(128); }
	def m6755():Void { var l:Long = (-32767)+(-128); }
	def m6756():Void { var l:Long = (-32767)+(255); }
	def m6757():Void { var l:Long = (-32767)+(-255); }
	def m6758():Void { var l:Long = (-32767)+(256); }
	def m6759():Void { var l:Long = (-32767)+(-256); }
	def m6760():Void { var l:Long = (-32767)+(32767); }
	def m6761():Void { var l:Long = (-32767)+(-32767); }
	def m6762():Void { var l:Long = (-32767)+(32768); }
	def m6763():Void { var l:Long = (-32767)+(-32768); }
	def m6764():Void { var l:Long = (-32767)+(65535); }
	def m6765():Void { var l:Long = (-32767)+(-65535); }
	def m6766():Void { var l:Long = (-32767)+(65536); }
	def m6767():Void { var l:Long = (-32767)+(-65536); }
	def m6768():Void { var l:Long = (-32767)+(16777216); }
	def m6769():Void { var l:Long = (-32767)+(-16777216); }
	def m6770():Void { var l:Long = (-32767)+(16777217); }
	def m6771():Void { var l:Long = (-32767)+(-16777217); }
	def m6772():Void { var l:Long = (-32767)+(2147483647); }
	def m6773():Void { var l:Long = (-32767)+(-2147483647); }
	def m6774():Void { var l:Long = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6775():Void { var l:Long = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6776():Void { var l:Long = (32768)+(w2); }
	def m6777():Void { var l:Long = (32768)+(w3); }
	def m6778():Void { var l:Long = (32768)+(w4); }
	def m6779():Void { var l:Long = (32768)+(w5); }
	def m6780():Void { var l:Long = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6781():Void { var l:Long = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6782():Void { var l:Long = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6783():Void { var l:Long = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6784():Void { var l:Long = (32768)+(0); }
	def m6785():Void { var l:Long = (32768)+(-0); }
	def m6786():Void { var l:Long = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6787():Void { var l:Long = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6788():Void { var l:Long = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6789():Void { var l:Long = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6790():Void { var l:Long = (32768)+(127); }
	def m6791():Void { var l:Long = (32768)+(-127); }
	def m6792():Void { var l:Long = (32768)+(128); }
	def m6793():Void { var l:Long = (32768)+(-128); }
	def m6794():Void { var l:Long = (32768)+(255); }
	def m6795():Void { var l:Long = (32768)+(-255); }
	def m6796():Void { var l:Long = (32768)+(256); }
	def m6797():Void { var l:Long = (32768)+(-256); }
	def m6798():Void { var l:Long = (32768)+(32767); }
	def m6799():Void { var l:Long = (32768)+(-32767); }
	def m6800():Void { var l:Long = (32768)+(32768); }
	def m6801():Void { var l:Long = (32768)+(-32768); }
	def m6802():Void { var l:Long = (32768)+(65535); }
	def m6803():Void { var l:Long = (32768)+(-65535); }
	def m6804():Void { var l:Long = (32768)+(65536); }
	def m6805():Void { var l:Long = (32768)+(-65536); }
	def m6806():Void { var l:Long = (32768)+(16777216); }
	def m6807():Void { var l:Long = (32768)+(-16777216); }
	def m6808():Void { var l:Long = (32768)+(16777217); }
	def m6809():Void { var l:Long = (32768)+(-16777217); }
	def m6810():Void { var l:Long = (32768)+(2147483647); }
	def m6811():Void { var l:Long = (32768)+(-2147483647); }
	def m6812():Void { var l:Long = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6813():Void { var l:Long = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6814():Void { var l:Long = (-32768)+(w2); }
	def m6815():Void { var l:Long = (-32768)+(w3); }
	def m6816():Void { var l:Long = (-32768)+(w4); }
	def m6817():Void { var l:Long = (-32768)+(w5); }
	def m6818():Void { var l:Long = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6819():Void { var l:Long = (-32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6820():Void { var l:Long = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6821():Void { var l:Long = (-32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32768)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6822():Void { var l:Long = (-32768)+(0); }
	def m6823():Void { var l:Long = (-32768)+(-0); }
	def m6824():Void { var l:Long = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6825():Void { var l:Long = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6826():Void { var l:Long = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6827():Void { var l:Long = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6828():Void { var l:Long = (-32768)+(127); }
	def m6829():Void { var l:Long = (-32768)+(-127); }
	def m6830():Void { var l:Long = (-32768)+(128); }
	def m6831():Void { var l:Long = (-32768)+(-128); }
	def m6832():Void { var l:Long = (-32768)+(255); }
	def m6833():Void { var l:Long = (-32768)+(-255); }
	def m6834():Void { var l:Long = (-32768)+(256); }
	def m6835():Void { var l:Long = (-32768)+(-256); }
	def m6836():Void { var l:Long = (-32768)+(32767); }
	def m6837():Void { var l:Long = (-32768)+(-32767); }
	def m6838():Void { var l:Long = (-32768)+(32768); }
	def m6839():Void { var l:Long = (-32768)+(-32768); }
	def m6840():Void { var l:Long = (-32768)+(65535); }
	def m6841():Void { var l:Long = (-32768)+(-65535); }
	def m6842():Void { var l:Long = (-32768)+(65536); }
	def m6843():Void { var l:Long = (-32768)+(-65536); }
	def m6844():Void { var l:Long = (-32768)+(16777216); }
	def m6845():Void { var l:Long = (-32768)+(-16777216); }
	def m6846():Void { var l:Long = (-32768)+(16777217); }
	def m6847():Void { var l:Long = (-32768)+(-16777217); }
	def m6848():Void { var l:Long = (-32768)+(2147483647); }
	def m6849():Void { var l:Long = (-32768)+(-2147483647); }
	def m6850():Void { var l:Long = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6851():Void { var l:Long = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6852():Void { var l:Long = (65535)+(w2); }
	def m6853():Void { var l:Long = (65535)+(w3); }
	def m6854():Void { var l:Long = (65535)+(w4); }
	def m6855():Void { var l:Long = (65535)+(w5); }
	def m6856():Void { var l:Long = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6857():Void { var l:Long = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6858():Void { var l:Long = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6859():Void { var l:Long = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6860():Void { var l:Long = (65535)+(0); }
	def m6861():Void { var l:Long = (65535)+(-0); }
	def m6862():Void { var l:Long = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6863():Void { var l:Long = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6864():Void { var l:Long = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6865():Void { var l:Long = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6866():Void { var l:Long = (65535)+(127); }
	def m6867():Void { var l:Long = (65535)+(-127); }
	def m6868():Void { var l:Long = (65535)+(128); }
	def m6869():Void { var l:Long = (65535)+(-128); }
	def m6870():Void { var l:Long = (65535)+(255); }
	def m6871():Void { var l:Long = (65535)+(-255); }
	def m6872():Void { var l:Long = (65535)+(256); }
	def m6873():Void { var l:Long = (65535)+(-256); }
	def m6874():Void { var l:Long = (65535)+(32767); }
	def m6875():Void { var l:Long = (65535)+(-32767); }
	def m6876():Void { var l:Long = (65535)+(32768); }
	def m6877():Void { var l:Long = (65535)+(-32768); }
	def m6878():Void { var l:Long = (65535)+(65535); }
	def m6879():Void { var l:Long = (65535)+(-65535); }
	def m6880():Void { var l:Long = (65535)+(65536); }
	def m6881():Void { var l:Long = (65535)+(-65536); }
	def m6882():Void { var l:Long = (65535)+(16777216); }
	def m6883():Void { var l:Long = (65535)+(-16777216); }
	def m6884():Void { var l:Long = (65535)+(16777217); }
	def m6885():Void { var l:Long = (65535)+(-16777217); }
	def m6886():Void { var l:Long = (65535)+(2147483647); }
	def m6887():Void { var l:Long = (65535)+(-2147483647); }
	def m6888():Void { var l:Long = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6889():Void { var l:Long = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6890():Void { var l:Long = (-65535)+(w2); }
	def m6891():Void { var l:Long = (-65535)+(w3); }
	def m6892():Void { var l:Long = (-65535)+(w4); }
	def m6893():Void { var l:Long = (-65535)+(w5); }
	def m6894():Void { var l:Long = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6895():Void { var l:Long = (-65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6896():Void { var l:Long = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6897():Void { var l:Long = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6898():Void { var l:Long = (-65535)+(0); }
	def m6899():Void { var l:Long = (-65535)+(-0); }
	def m6900():Void { var l:Long = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6901():Void { var l:Long = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6902():Void { var l:Long = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6903():Void { var l:Long = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6904():Void { var l:Long = (-65535)+(127); }
	def m6905():Void { var l:Long = (-65535)+(-127); }
	def m6906():Void { var l:Long = (-65535)+(128); }
	def m6907():Void { var l:Long = (-65535)+(-128); }
	def m6908():Void { var l:Long = (-65535)+(255); }
	def m6909():Void { var l:Long = (-65535)+(-255); }
	def m6910():Void { var l:Long = (-65535)+(256); }
	def m6911():Void { var l:Long = (-65535)+(-256); }
	def m6912():Void { var l:Long = (-65535)+(32767); }
	def m6913():Void { var l:Long = (-65535)+(-32767); }
	def m6914():Void { var l:Long = (-65535)+(32768); }
	def m6915():Void { var l:Long = (-65535)+(-32768); }
	def m6916():Void { var l:Long = (-65535)+(65535); }
	def m6917():Void { var l:Long = (-65535)+(-65535); }
	def m6918():Void { var l:Long = (-65535)+(65536); }
	def m6919():Void { var l:Long = (-65535)+(-65536); }
	def m6920():Void { var l:Long = (-65535)+(16777216); }
	def m6921():Void { var l:Long = (-65535)+(-16777216); }
	def m6922():Void { var l:Long = (-65535)+(16777217); }
	def m6923():Void { var l:Long = (-65535)+(-16777217); }
	def m6924():Void { var l:Long = (-65535)+(2147483647); }
	def m6925():Void { var l:Long = (-65535)+(-2147483647); }
	def m6926():Void { var l:Long = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6927():Void { var l:Long = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6928():Void { var l:Long = (65536)+(w2); }
	def m6929():Void { var l:Long = (65536)+(w3); }
	def m6930():Void { var l:Long = (65536)+(w4); }
	def m6931():Void { var l:Long = (65536)+(w5); }
	def m6932():Void { var l:Long = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6933():Void { var l:Long = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6934():Void { var l:Long = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6935():Void { var l:Long = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6936():Void { var l:Long = (65536)+(0); }
	def m6937():Void { var l:Long = (65536)+(-0); }
	def m6938():Void { var l:Long = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6939():Void { var l:Long = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6940():Void { var l:Long = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6941():Void { var l:Long = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6942():Void { var l:Long = (65536)+(127); }
	def m6943():Void { var l:Long = (65536)+(-127); }
	def m6944():Void { var l:Long = (65536)+(128); }
	def m6945():Void { var l:Long = (65536)+(-128); }
	def m6946():Void { var l:Long = (65536)+(255); }
	def m6947():Void { var l:Long = (65536)+(-255); }
	def m6948():Void { var l:Long = (65536)+(256); }
	def m6949():Void { var l:Long = (65536)+(-256); }
	def m6950():Void { var l:Long = (65536)+(32767); }
	def m6951():Void { var l:Long = (65536)+(-32767); }
	def m6952():Void { var l:Long = (65536)+(32768); }
	def m6953():Void { var l:Long = (65536)+(-32768); }
	def m6954():Void { var l:Long = (65536)+(65535); }
	def m6955():Void { var l:Long = (65536)+(-65535); }
	def m6956():Void { var l:Long = (65536)+(65536); }
	def m6957():Void { var l:Long = (65536)+(-65536); }
	def m6958():Void { var l:Long = (65536)+(16777216); }
	def m6959():Void { var l:Long = (65536)+(-16777216); }
	def m6960():Void { var l:Long = (65536)+(16777217); }
	def m6961():Void { var l:Long = (65536)+(-16777217); }
	def m6962():Void { var l:Long = (65536)+(2147483647); }
	def m6963():Void { var l:Long = (65536)+(-2147483647); }
	def m6964():Void { var l:Long = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6965():Void { var l:Long = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6966():Void { var l:Long = (-65536)+(w2); }
	def m6967():Void { var l:Long = (-65536)+(w3); }
	def m6968():Void { var l:Long = (-65536)+(w4); }
	def m6969():Void { var l:Long = (-65536)+(w5); }
	def m6970():Void { var l:Long = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m6971():Void { var l:Long = (-65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6972():Void { var l:Long = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m6973():Void { var l:Long = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m6974():Void { var l:Long = (-65536)+(0); }
	def m6975():Void { var l:Long = (-65536)+(-0); }
	def m6976():Void { var l:Long = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6977():Void { var l:Long = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6978():Void { var l:Long = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6979():Void { var l:Long = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6980():Void { var l:Long = (-65536)+(127); }
	def m6981():Void { var l:Long = (-65536)+(-127); }
	def m6982():Void { var l:Long = (-65536)+(128); }
	def m6983():Void { var l:Long = (-65536)+(-128); }
	def m6984():Void { var l:Long = (-65536)+(255); }
	def m6985():Void { var l:Long = (-65536)+(-255); }
	def m6986():Void { var l:Long = (-65536)+(256); }
	def m6987():Void { var l:Long = (-65536)+(-256); }
	def m6988():Void { var l:Long = (-65536)+(32767); }
	def m6989():Void { var l:Long = (-65536)+(-32767); }
	def m6990():Void { var l:Long = (-65536)+(32768); }
	def m6991():Void { var l:Long = (-65536)+(-32768); }
	def m6992():Void { var l:Long = (-65536)+(65535); }
	def m6993():Void { var l:Long = (-65536)+(-65535); }
	def m6994():Void { var l:Long = (-65536)+(65536); }
	def m6995():Void { var l:Long = (-65536)+(-65536); }
	def m6996():Void { var l:Long = (-65536)+(16777216); }
	def m6997():Void { var l:Long = (-65536)+(-16777216); }
	def m6998():Void { var l:Long = (-65536)+(16777217); }
	def m6999():Void { var l:Long = (-65536)+(-16777217); }
	def m7000():Void { var l:Long = (-65536)+(2147483647); }
	def m7001():Void { var l:Long = (-65536)+(-2147483647); }
	def m7002():Void { var l:Long = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7003():Void { var l:Long = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7004():Void { var l:Long = (16777216)+(w2); }
	def m7005():Void { var l:Long = (16777216)+(w3); }
	def m7006():Void { var l:Long = (16777216)+(w4); }
	def m7007():Void { var l:Long = (16777216)+(w5); }
	def m7008():Void { var l:Long = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7009():Void { var l:Long = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7010():Void { var l:Long = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7011():Void { var l:Long = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7012():Void { var l:Long = (16777216)+(0); }
	def m7013():Void { var l:Long = (16777216)+(-0); }
	def m7014():Void { var l:Long = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7015():Void { var l:Long = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7016():Void { var l:Long = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7017():Void { var l:Long = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7018():Void { var l:Long = (16777216)+(127); }
	def m7019():Void { var l:Long = (16777216)+(-127); }
	def m7020():Void { var l:Long = (16777216)+(128); }
	def m7021():Void { var l:Long = (16777216)+(-128); }
	def m7022():Void { var l:Long = (16777216)+(255); }
	def m7023():Void { var l:Long = (16777216)+(-255); }
	def m7024():Void { var l:Long = (16777216)+(256); }
	def m7025():Void { var l:Long = (16777216)+(-256); }
	def m7026():Void { var l:Long = (16777216)+(32767); }
	def m7027():Void { var l:Long = (16777216)+(-32767); }
	def m7028():Void { var l:Long = (16777216)+(32768); }
	def m7029():Void { var l:Long = (16777216)+(-32768); }
	def m7030():Void { var l:Long = (16777216)+(65535); }
	def m7031():Void { var l:Long = (16777216)+(-65535); }
	def m7032():Void { var l:Long = (16777216)+(65536); }
	def m7033():Void { var l:Long = (16777216)+(-65536); }
	def m7034():Void { var l:Long = (16777216)+(16777216); }
	def m7035():Void { var l:Long = (16777216)+(-16777216); }
	def m7036():Void { var l:Long = (16777216)+(16777217); }
	def m7037():Void { var l:Long = (16777216)+(-16777217); }
	def m7038():Void { var l:Long = (16777216)+(2147483647); }
	def m7039():Void { var l:Long = (16777216)+(-2147483647); }
	def m7040():Void { var l:Long = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7041():Void { var l:Long = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7042():Void { var l:Long = (-16777216)+(w2); }
	def m7043():Void { var l:Long = (-16777216)+(w3); }
	def m7044():Void { var l:Long = (-16777216)+(w4); }
	def m7045():Void { var l:Long = (-16777216)+(w5); }
	def m7046():Void { var l:Long = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7047():Void { var l:Long = (-16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7048():Void { var l:Long = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7049():Void { var l:Long = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7050():Void { var l:Long = (-16777216)+(0); }
	def m7051():Void { var l:Long = (-16777216)+(-0); }
	def m7052():Void { var l:Long = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7053():Void { var l:Long = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7054():Void { var l:Long = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7055():Void { var l:Long = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7056():Void { var l:Long = (-16777216)+(127); }
	def m7057():Void { var l:Long = (-16777216)+(-127); }
	def m7058():Void { var l:Long = (-16777216)+(128); }
	def m7059():Void { var l:Long = (-16777216)+(-128); }
	def m7060():Void { var l:Long = (-16777216)+(255); }
	def m7061():Void { var l:Long = (-16777216)+(-255); }
	def m7062():Void { var l:Long = (-16777216)+(256); }
	def m7063():Void { var l:Long = (-16777216)+(-256); }
	def m7064():Void { var l:Long = (-16777216)+(32767); }
	def m7065():Void { var l:Long = (-16777216)+(-32767); }
	def m7066():Void { var l:Long = (-16777216)+(32768); }
	def m7067():Void { var l:Long = (-16777216)+(-32768); }
	def m7068():Void { var l:Long = (-16777216)+(65535); }
	def m7069():Void { var l:Long = (-16777216)+(-65535); }
	def m7070():Void { var l:Long = (-16777216)+(65536); }
	def m7071():Void { var l:Long = (-16777216)+(-65536); }
	def m7072():Void { var l:Long = (-16777216)+(16777216); }
	def m7073():Void { var l:Long = (-16777216)+(-16777216); }
	def m7074():Void { var l:Long = (-16777216)+(16777217); }
	def m7075():Void { var l:Long = (-16777216)+(-16777217); }
	def m7076():Void { var l:Long = (-16777216)+(2147483647); }
	def m7077():Void { var l:Long = (-16777216)+(-2147483647); }
	def m7078():Void { var l:Long = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7079():Void { var l:Long = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7080():Void { var l:Long = (16777217)+(w2); }
	def m7081():Void { var l:Long = (16777217)+(w3); }
	def m7082():Void { var l:Long = (16777217)+(w4); }
	def m7083():Void { var l:Long = (16777217)+(w5); }
	def m7084():Void { var l:Long = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7085():Void { var l:Long = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7086():Void { var l:Long = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7087():Void { var l:Long = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7088():Void { var l:Long = (16777217)+(0); }
	def m7089():Void { var l:Long = (16777217)+(-0); }
	def m7090():Void { var l:Long = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7091():Void { var l:Long = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7092():Void { var l:Long = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7093():Void { var l:Long = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7094():Void { var l:Long = (16777217)+(127); }
	def m7095():Void { var l:Long = (16777217)+(-127); }
	def m7096():Void { var l:Long = (16777217)+(128); }
	def m7097():Void { var l:Long = (16777217)+(-128); }
	def m7098():Void { var l:Long = (16777217)+(255); }
	def m7099():Void { var l:Long = (16777217)+(-255); }
	def m7100():Void { var l:Long = (16777217)+(256); }
	def m7101():Void { var l:Long = (16777217)+(-256); }
	def m7102():Void { var l:Long = (16777217)+(32767); }
	def m7103():Void { var l:Long = (16777217)+(-32767); }
	def m7104():Void { var l:Long = (16777217)+(32768); }
	def m7105():Void { var l:Long = (16777217)+(-32768); }
	def m7106():Void { var l:Long = (16777217)+(65535); }
	def m7107():Void { var l:Long = (16777217)+(-65535); }
	def m7108():Void { var l:Long = (16777217)+(65536); }
	def m7109():Void { var l:Long = (16777217)+(-65536); }
	def m7110():Void { var l:Long = (16777217)+(16777216); }
	def m7111():Void { var l:Long = (16777217)+(-16777216); }
	def m7112():Void { var l:Long = (16777217)+(16777217); }
	def m7113():Void { var l:Long = (16777217)+(-16777217); }
	def m7114():Void { var l:Long = (16777217)+(2147483647); }
	def m7115():Void { var l:Long = (16777217)+(-2147483647); }
	def m7116():Void { var l:Long = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7117():Void { var l:Long = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7118():Void { var l:Long = (-16777217)+(w2); }
	def m7119():Void { var l:Long = (-16777217)+(w3); }
	def m7120():Void { var l:Long = (-16777217)+(w4); }
	def m7121():Void { var l:Long = (-16777217)+(w5); }
	def m7122():Void { var l:Long = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7123():Void { var l:Long = (-16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7124():Void { var l:Long = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7125():Void { var l:Long = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7126():Void { var l:Long = (-16777217)+(0); }
	def m7127():Void { var l:Long = (-16777217)+(-0); }
	def m7128():Void { var l:Long = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7129():Void { var l:Long = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7130():Void { var l:Long = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7131():Void { var l:Long = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7132():Void { var l:Long = (-16777217)+(127); }
	def m7133():Void { var l:Long = (-16777217)+(-127); }
	def m7134():Void { var l:Long = (-16777217)+(128); }
	def m7135():Void { var l:Long = (-16777217)+(-128); }
	def m7136():Void { var l:Long = (-16777217)+(255); }
	def m7137():Void { var l:Long = (-16777217)+(-255); }
	def m7138():Void { var l:Long = (-16777217)+(256); }
	def m7139():Void { var l:Long = (-16777217)+(-256); }
	def m7140():Void { var l:Long = (-16777217)+(32767); }
	def m7141():Void { var l:Long = (-16777217)+(-32767); }
	def m7142():Void { var l:Long = (-16777217)+(32768); }
	def m7143():Void { var l:Long = (-16777217)+(-32768); }
	def m7144():Void { var l:Long = (-16777217)+(65535); }
	def m7145():Void { var l:Long = (-16777217)+(-65535); }
	def m7146():Void { var l:Long = (-16777217)+(65536); }
	def m7147():Void { var l:Long = (-16777217)+(-65536); }
	def m7148():Void { var l:Long = (-16777217)+(16777216); }
	def m7149():Void { var l:Long = (-16777217)+(-16777216); }
	def m7150():Void { var l:Long = (-16777217)+(16777217); }
	def m7151():Void { var l:Long = (-16777217)+(-16777217); }
	def m7152():Void { var l:Long = (-16777217)+(2147483647); }
	def m7153():Void { var l:Long = (-16777217)+(-2147483647); }
	def m7154():Void { var l:Long = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7155():Void { var l:Long = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7156():Void { var l:Long = (2147483647)+(w2); }
	def m7157():Void { var l:Long = (2147483647)+(w3); }
	def m7158():Void { var l:Long = (2147483647)+(w4); }
	def m7159():Void { var l:Long = (2147483647)+(w5); }
	def m7160():Void { var l:Long = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7161():Void { var l:Long = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7162():Void { var l:Long = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7163():Void { var l:Long = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7164():Void { var l:Long = (2147483647)+(0); }
	def m7165():Void { var l:Long = (2147483647)+(-0); }
	def m7166():Void { var l:Long = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7167():Void { var l:Long = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7168():Void { var l:Long = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7169():Void { var l:Long = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7170():Void { var l:Long = (2147483647)+(127); }
	def m7171():Void { var l:Long = (2147483647)+(-127); }
	def m7172():Void { var l:Long = (2147483647)+(128); }
	def m7173():Void { var l:Long = (2147483647)+(-128); }
	def m7174():Void { var l:Long = (2147483647)+(255); }
	def m7175():Void { var l:Long = (2147483647)+(-255); }
	def m7176():Void { var l:Long = (2147483647)+(256); }
	def m7177():Void { var l:Long = (2147483647)+(-256); }
	def m7178():Void { var l:Long = (2147483647)+(32767); }
	def m7179():Void { var l:Long = (2147483647)+(-32767); }
	def m7180():Void { var l:Long = (2147483647)+(32768); }
	def m7181():Void { var l:Long = (2147483647)+(-32768); }
	def m7182():Void { var l:Long = (2147483647)+(65535); }
	def m7183():Void { var l:Long = (2147483647)+(-65535); }
	def m7184():Void { var l:Long = (2147483647)+(65536); }
	def m7185():Void { var l:Long = (2147483647)+(-65536); }
	def m7186():Void { var l:Long = (2147483647)+(16777216); }
	def m7187():Void { var l:Long = (2147483647)+(-16777216); }
	def m7188():Void { var l:Long = (2147483647)+(16777217); }
	def m7189():Void { var l:Long = (2147483647)+(-16777217); }
	def m7190():Void { var l:Long = (2147483647)+(2147483647); }
	def m7191():Void { var l:Long = (2147483647)+(-2147483647); }
	def m7192():Void { var l:Long = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7193():Void { var l:Long = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7194():Void { var l:Long = (-2147483647)+(w2); }
	def m7195():Void { var l:Long = (-2147483647)+(w3); }
	def m7196():Void { var l:Long = (-2147483647)+(w4); }
	def m7197():Void { var l:Long = (-2147483647)+(w5); }
	def m7198():Void { var l:Long = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7199():Void { var l:Long = (-2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7200():Void { var l:Long = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7201():Void { var l:Long = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7202():Void { var l:Long = (-2147483647)+(0); }
	def m7203():Void { var l:Long = (-2147483647)+(-0); }
	def m7204():Void { var l:Long = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7205():Void { var l:Long = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7206():Void { var l:Long = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7207():Void { var l:Long = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7208():Void { var l:Long = (-2147483647)+(127); }
	def m7209():Void { var l:Long = (-2147483647)+(-127); }
	def m7210():Void { var l:Long = (-2147483647)+(128); }
	def m7211():Void { var l:Long = (-2147483647)+(-128); }
	def m7212():Void { var l:Long = (-2147483647)+(255); }
	def m7213():Void { var l:Long = (-2147483647)+(-255); }
	def m7214():Void { var l:Long = (-2147483647)+(256); }
	def m7215():Void { var l:Long = (-2147483647)+(-256); }
	def m7216():Void { var l:Long = (-2147483647)+(32767); }
	def m7217():Void { var l:Long = (-2147483647)+(-32767); }
	def m7218():Void { var l:Long = (-2147483647)+(32768); }
	def m7219():Void { var l:Long = (-2147483647)+(-32768); }
	def m7220():Void { var l:Long = (-2147483647)+(65535); }
	def m7221():Void { var l:Long = (-2147483647)+(-65535); }
	def m7222():Void { var l:Long = (-2147483647)+(65536); }
	def m7223():Void { var l:Long = (-2147483647)+(-65536); }
	def m7224():Void { var l:Long = (-2147483647)+(16777216); }
	def m7225():Void { var l:Long = (-2147483647)+(-16777216); }
	def m7226():Void { var l:Long = (-2147483647)+(16777217); }
	def m7227():Void { var l:Long = (-2147483647)+(-16777217); }
	def m7228():Void { var l:Long = (-2147483647)+(2147483647); }
	def m7229():Void { var l:Long = (-2147483647)+(-2147483647); }
	def m7230():Void { var l:Short = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7231():Void { var l:Short = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7232():Void { var l:Short = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7233():Void { var l:Short = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7234():Void { var l:Short = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7235():Void { var l:Short = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7236():Void { var l:Short = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7237():Void { var l:Short = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7238():Void { var l:Short = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7239():Void { var l:Short = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7240():Void { var l:Short = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7241():Void { var l:Short = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7242():Void { var l:Short = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7243():Void { var l:Short = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7244():Void { var l:Short = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7245():Void { var l:Short = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7246():Void { var l:Short = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7247():Void { var l:Short = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7248():Void { var l:Short = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7249():Void { var l:Short = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7250():Void { var l:Short = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7251():Void { var l:Short = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7252():Void { var l:Short = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7253():Void { var l:Short = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7254():Void { var l:Short = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7255():Void { var l:Short = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7256():Void { var l:Short = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7257():Void { var l:Short = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7258():Void { var l:Short = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7259():Void { var l:Short = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7260():Void { var l:Short = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7261():Void { var l:Short = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7262():Void { var l:Short = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7263():Void { var l:Short = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7264():Void { var l:Short = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7265():Void { var l:Short = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7266():Void { var l:Short = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7267():Void { var l:Short = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7268():Void { var l:Short = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7269():Void { var l:Short = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7270():Void { var l:Short = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7271():Void { var l:Short = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7272():Void { var l:Short = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7273():Void { var l:Short = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7274():Void { var l:Short = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7275():Void { var l:Short = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7276():Void { var l:Short = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7277():Void { var l:Short = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7278():Void { var l:Short = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7279():Void { var l:Short = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7280():Void { var l:Short = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7281():Void { var l:Short = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7282():Void { var l:Short = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7283():Void { var l:Short = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7284():Void { var l:Short = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7285():Void { var l:Short = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7286():Void { var l:Short = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7287():Void { var l:Short = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7288():Void { var l:Short = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7289():Void { var l:Short = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7290():Void { var l:Short = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7291():Void { var l:Short = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7292():Void { var l:Short = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7293():Void { var l:Short = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7294():Void { var l:Short = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7295():Void { var l:Short = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7296():Void { var l:Short = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7297():Void { var l:Short = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7298():Void { var l:Short = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7299():Void { var l:Short = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7300():Void { var l:Short = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7301():Void { var l:Short = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7302():Void { var l:Short = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7303():Void { var l:Short = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7304():Void { var l:Short = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7305():Void { var l:Short = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7306():Void { var l:Short = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7307():Void { var l:Short = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7308():Void { var l:Short = (w2)+(w2); }
	def m7309():Void { var l:Short = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7310():Void { var l:Short = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7311():Void { var l:Short = (w2)+(w5); }
	def m7312():Void { var l:Short = (w2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w2) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7313():Void { var l:Short = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m7314():Void { var l:Short = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m7315():Void { var l:Short = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m7316():Void { var l:Short = (w2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7317():Void { var l:Short = (w2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7318():Void { var l:Short = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7319():Void { var l:Short = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7320():Void { var l:Short = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7321():Void { var l:Short = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7322():Void { var l:Short = (w2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7323():Void { var l:Short = (w2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7324():Void { var l:Short = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7325():Void { var l:Short = (w2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7326():Void { var l:Short = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7327():Void { var l:Short = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7328():Void { var l:Short = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7329():Void { var l:Short = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7330():Void { var l:Short = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7331():Void { var l:Short = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7332():Void { var l:Short = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7333():Void { var l:Short = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7334():Void { var l:Short = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7335():Void { var l:Short = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7336():Void { var l:Short = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7337():Void { var l:Short = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7338():Void { var l:Short = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7339():Void { var l:Short = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7340():Void { var l:Short = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7341():Void { var l:Short = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7342():Void { var l:Short = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7343():Void { var l:Short = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7344():Void { var l:Short = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7345():Void { var l:Short = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7346():Void { var l:Short = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7347():Void { var l:Short = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7348():Void { var l:Short = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7349():Void { var l:Short = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7350():Void { var l:Short = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7351():Void { var l:Short = (w3)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7352():Void { var l:Short = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7353():Void { var l:Short = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7354():Void { var l:Short = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7355():Void { var l:Short = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7356():Void { var l:Short = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7357():Void { var l:Short = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7358():Void { var l:Short = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7359():Void { var l:Short = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7360():Void { var l:Short = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7361():Void { var l:Short = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7362():Void { var l:Short = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7363():Void { var l:Short = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7364():Void { var l:Short = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7365():Void { var l:Short = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7366():Void { var l:Short = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7367():Void { var l:Short = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7368():Void { var l:Short = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7369():Void { var l:Short = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7370():Void { var l:Short = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7371():Void { var l:Short = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7372():Void { var l:Short = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7373():Void { var l:Short = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7374():Void { var l:Short = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7375():Void { var l:Short = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7376():Void { var l:Short = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7377():Void { var l:Short = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7378():Void { var l:Short = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7379():Void { var l:Short = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7380():Void { var l:Short = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7381():Void { var l:Short = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7382():Void { var l:Short = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7383():Void { var l:Short = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7384():Void { var l:Short = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7385():Void { var l:Short = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7386():Void { var l:Short = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7387():Void { var l:Short = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7388():Void { var l:Short = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m7389():Void { var l:Short = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7390():Void { var l:Short = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7391():Void { var l:Short = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m7392():Void { var l:Short = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7393():Void { var l:Short = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7394():Void { var l:Short = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7395():Void { var l:Short = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7396():Void { var l:Short = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7397():Void { var l:Short = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7398():Void { var l:Short = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7399():Void { var l:Short = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7400():Void { var l:Short = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7401():Void { var l:Short = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7402():Void { var l:Short = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7403():Void { var l:Short = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7404():Void { var l:Short = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7405():Void { var l:Short = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7406():Void { var l:Short = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7407():Void { var l:Short = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7408():Void { var l:Short = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7409():Void { var l:Short = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7410():Void { var l:Short = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7411():Void { var l:Short = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7412():Void { var l:Short = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7413():Void { var l:Short = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7414():Void { var l:Short = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7415():Void { var l:Short = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7416():Void { var l:Short = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7417():Void { var l:Short = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7418():Void { var l:Short = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7419():Void { var l:Short = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7420():Void { var l:Short = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7421():Void { var l:Short = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7422():Void { var l:Short = (w5)+(w2); }
	def m7423():Void { var l:Short = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7424():Void { var l:Short = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7425():Void { var l:Short = (w5)+(w5); }
	def m7426():Void { var l:Short = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7427():Void { var l:Short = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7428():Void { var l:Short = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7429():Void { var l:Short = (w5)+(w9); }
	def m7430():Void { var l:Short = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7431():Void { var l:Short = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7432():Void { var l:Short = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7433():Void { var l:Short = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7434():Void { var l:Short = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7435():Void { var l:Short = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7436():Void { var l:Short = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7437():Void { var l:Short = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7438():Void { var l:Short = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7439():Void { var l:Short = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7440():Void { var l:Short = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7441():Void { var l:Short = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7442():Void { var l:Short = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7443():Void { var l:Short = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7444():Void { var l:Short = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7445():Void { var l:Short = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7446():Void { var l:Short = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7447():Void { var l:Short = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7448():Void { var l:Short = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7449():Void { var l:Short = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7450():Void { var l:Short = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7451():Void { var l:Short = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7452():Void { var l:Short = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7453():Void { var l:Short = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7454():Void { var l:Short = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7455():Void { var l:Short = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7456():Void { var l:Short = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7457():Void { var l:Short = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7458():Void { var l:Short = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7459():Void { var l:Short = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7460():Void { var l:Short = (w6)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w2)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7461():Void { var l:Short = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m7462():Void { var l:Short = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m7463():Void { var l:Short = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m7464():Void { var l:Short = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7465():Void { var l:Short = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m7466():Void { var l:Short = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m7467():Void { var l:Short = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m7468():Void { var l:Short = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m7469():Void { var l:Short = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m7470():Void { var l:Short = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7471():Void { var l:Short = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7472():Void { var l:Short = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7473():Void { var l:Short = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7474():Void { var l:Short = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m7475():Void { var l:Short = (w6)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7476():Void { var l:Short = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m7477():Void { var l:Short = (w6)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w6) + x10.lang.Byte.operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7478():Void { var l:Short = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m7479():Void { var l:Short = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m7480():Void { var l:Short = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m7481():Void { var l:Short = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m7482():Void { var l:Short = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m7483():Void { var l:Short = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m7484():Void { var l:Short = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m7485():Void { var l:Short = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m7486():Void { var l:Short = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m7487():Void { var l:Short = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m7488():Void { var l:Short = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m7489():Void { var l:Short = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m7490():Void { var l:Short = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m7491():Void { var l:Short = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m7492():Void { var l:Short = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m7493():Void { var l:Short = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m7494():Void { var l:Short = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m7495():Void { var l:Short = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m7496():Void { var l:Short = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7497():Void { var l:Short = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7498():Void { var l:Short = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m7499():Void { var l:Short = (w7)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7500():Void { var l:Short = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m7501():Void { var l:Short = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m7502():Void { var l:Short = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m7503():Void { var l:Short = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7504():Void { var l:Short = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m7505():Void { var l:Short = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m7506():Void { var l:Short = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7507():Void { var l:Short = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7508():Void { var l:Short = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7509():Void { var l:Short = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7510():Void { var l:Short = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7511():Void { var l:Short = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7512():Void { var l:Short = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7513():Void { var l:Short = (w7)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7514():Void { var l:Short = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7515():Void { var l:Short = (w7)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7516():Void { var l:Short = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7517():Void { var l:Short = (w7)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7518():Void { var l:Short = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7519():Void { var l:Short = (w7)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7520():Void { var l:Short = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7521():Void { var l:Short = (w7)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7522():Void { var l:Short = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7523():Void { var l:Short = (w7)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7524():Void { var l:Short = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7525():Void { var l:Short = (w7)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7526():Void { var l:Short = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7527():Void { var l:Short = (w7)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7528():Void { var l:Short = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7529():Void { var l:Short = (w7)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7530():Void { var l:Short = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7531():Void { var l:Short = (w7)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7532():Void { var l:Short = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7533():Void { var l:Short = (w7)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7534():Void { var l:Short = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7535():Void { var l:Short = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7536():Void { var l:Short = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m7537():Void { var l:Short = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m7538():Void { var l:Short = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7539():Void { var l:Short = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m7540():Void { var l:Short = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m7541():Void { var l:Short = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m7542():Void { var l:Short = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7543():Void { var l:Short = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m7544():Void { var l:Short = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m7545():Void { var l:Short = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m7546():Void { var l:Short = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7547():Void { var l:Short = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7548():Void { var l:Short = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7549():Void { var l:Short = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7550():Void { var l:Short = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m7551():Void { var l:Short = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m7552():Void { var l:Short = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m7553():Void { var l:Short = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m7554():Void { var l:Short = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m7555():Void { var l:Short = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m7556():Void { var l:Short = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m7557():Void { var l:Short = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m7558():Void { var l:Short = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m7559():Void { var l:Short = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m7560():Void { var l:Short = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m7561():Void { var l:Short = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m7562():Void { var l:Short = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m7563():Void { var l:Short = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m7564():Void { var l:Short = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m7565():Void { var l:Short = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m7566():Void { var l:Short = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m7567():Void { var l:Short = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m7568():Void { var l:Short = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m7569():Void { var l:Short = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m7570():Void { var l:Short = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m7571():Void { var l:Short = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m7572():Void { var l:Short = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7573():Void { var l:Short = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7574():Void { var l:Short = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m7575():Void { var l:Short = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m7576():Void { var l:Short = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m7577():Void { var l:Short = (w9)+(w5); }
	def m7578():Void { var l:Short = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m7579():Void { var l:Short = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m7580():Void { var l:Short = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m7581():Void { var l:Short = (w9)+(w9); }
	def m7582():Void { var l:Short = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m7583():Void { var l:Short = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m7584():Void { var l:Short = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7585():Void { var l:Short = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7586():Void { var l:Short = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7587():Void { var l:Short = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7588():Void { var l:Short = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m7589():Void { var l:Short = (w9)+(-127); }
	def m7590():Void { var l:Short = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m7591():Void { var l:Short = (w9)+(-128); }
	def m7592():Void { var l:Short = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m7593():Void { var l:Short = (w9)+(-255); }
	def m7594():Void { var l:Short = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m7595():Void { var l:Short = (w9)+(-256); }
	def m7596():Void { var l:Short = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m7597():Void { var l:Short = (w9)+(-32767); }
	def m7598():Void { var l:Short = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m7599():Void { var l:Short = (w9)+(-32768); }
	def m7600():Void { var l:Short = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m7601():Void { var l:Short = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m7602():Void { var l:Short = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m7603():Void { var l:Short = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m7604():Void { var l:Short = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m7605():Void { var l:Short = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m7606():Void { var l:Short = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m7607():Void { var l:Short = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m7608():Void { var l:Short = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m7609():Void { var l:Short = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m7610():Void { var l:Short = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7611():Void { var l:Short = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7612():Void { var l:Short = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7613():Void { var l:Short = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7614():Void { var l:Short = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7615():Void { var l:Short = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7616():Void { var l:Short = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7617():Void { var l:Short = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7618():Void { var l:Short = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7619():Void { var l:Short = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7620():Void { var l:Short = (0)+(0); }
	def m7621():Void { var l:Short = (0)+(-0); }
	def m7622():Void { var l:Short = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7623():Void { var l:Short = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7624():Void { var l:Short = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7625():Void { var l:Short = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7626():Void { var l:Short = (0)+(127); }
	def m7627():Void { var l:Short = (0)+(-127); }
	def m7628():Void { var l:Short = (0)+(128); }
	def m7629():Void { var l:Short = (0)+(-128); }
	def m7630():Void { var l:Short = (0)+(255); }
	def m7631():Void { var l:Short = (0)+(-255); }
	def m7632():Void { var l:Short = (0)+(256); }
	def m7633():Void { var l:Short = (0)+(-256); }
	def m7634():Void { var l:Short = (0)+(32767); }
	def m7635():Void { var l:Short = (0)+(-32767); }
	def m7636():Void { var l:Short = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7637():Void { var l:Short = (0)+(-32768); }
	def m7638():Void { var l:Short = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7639():Void { var l:Short = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7640():Void { var l:Short = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7641():Void { var l:Short = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7642():Void { var l:Short = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7643():Void { var l:Short = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7644():Void { var l:Short = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7645():Void { var l:Short = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7646():Void { var l:Short = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7647():Void { var l:Short = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7648():Void { var l:Short = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7649():Void { var l:Short = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7650():Void { var l:Short = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7651():Void { var l:Short = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7652():Void { var l:Short = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7653():Void { var l:Short = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7654():Void { var l:Short = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7655():Void { var l:Short = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7656():Void { var l:Short = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7657():Void { var l:Short = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7658():Void { var l:Short = (-0)+(0); }
	def m7659():Void { var l:Short = (-0)+(-0); }
	def m7660():Void { var l:Short = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7661():Void { var l:Short = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7662():Void { var l:Short = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7663():Void { var l:Short = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7664():Void { var l:Short = (-0)+(127); }
	def m7665():Void { var l:Short = (-0)+(-127); }
	def m7666():Void { var l:Short = (-0)+(128); }
	def m7667():Void { var l:Short = (-0)+(-128); }
	def m7668():Void { var l:Short = (-0)+(255); }
	def m7669():Void { var l:Short = (-0)+(-255); }
	def m7670():Void { var l:Short = (-0)+(256); }
	def m7671():Void { var l:Short = (-0)+(-256); }
	def m7672():Void { var l:Short = (-0)+(32767); }
	def m7673():Void { var l:Short = (-0)+(-32767); }
	def m7674():Void { var l:Short = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7675():Void { var l:Short = (-0)+(-32768); }
	def m7676():Void { var l:Short = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7677():Void { var l:Short = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7678():Void { var l:Short = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7679():Void { var l:Short = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7680():Void { var l:Short = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7681():Void { var l:Short = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7682():Void { var l:Short = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7683():Void { var l:Short = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7684():Void { var l:Short = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7685():Void { var l:Short = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7686():Void { var l:Short = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7687():Void { var l:Short = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7688():Void { var l:Short = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7689():Void { var l:Short = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7690():Void { var l:Short = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7691():Void { var l:Short = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7692():Void { var l:Short = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7693():Void { var l:Short = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7694():Void { var l:Short = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7695():Void { var l:Short = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7696():Void { var l:Short = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7697():Void { var l:Short = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7698():Void { var l:Short = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7699():Void { var l:Short = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7700():Void { var l:Short = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7701():Void { var l:Short = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7702():Void { var l:Short = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7703():Void { var l:Short = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7704():Void { var l:Short = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7705():Void { var l:Short = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7706():Void { var l:Short = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7707():Void { var l:Short = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7708():Void { var l:Short = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7709():Void { var l:Short = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7710():Void { var l:Short = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7711():Void { var l:Short = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7712():Void { var l:Short = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7713():Void { var l:Short = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7714():Void { var l:Short = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7715():Void { var l:Short = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7716():Void { var l:Short = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7717():Void { var l:Short = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7718():Void { var l:Short = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7719():Void { var l:Short = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7720():Void { var l:Short = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7721():Void { var l:Short = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7722():Void { var l:Short = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7723():Void { var l:Short = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7724():Void { var l:Short = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7725():Void { var l:Short = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7726():Void { var l:Short = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7727():Void { var l:Short = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7728():Void { var l:Short = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7729():Void { var l:Short = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7730():Void { var l:Short = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7731():Void { var l:Short = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7732():Void { var l:Short = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7733():Void { var l:Short = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7734():Void { var l:Short = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7735():Void { var l:Short = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7736():Void { var l:Short = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7737():Void { var l:Short = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7738():Void { var l:Short = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7739():Void { var l:Short = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7740():Void { var l:Short = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7741():Void { var l:Short = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7742():Void { var l:Short = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7743():Void { var l:Short = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7744():Void { var l:Short = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7745():Void { var l:Short = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7746():Void { var l:Short = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7747():Void { var l:Short = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7748():Void { var l:Short = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7749():Void { var l:Short = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7750():Void { var l:Short = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7751():Void { var l:Short = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7752():Void { var l:Short = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7753():Void { var l:Short = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7754():Void { var l:Short = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7755():Void { var l:Short = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7756():Void { var l:Short = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7757():Void { var l:Short = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7758():Void { var l:Short = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7759():Void { var l:Short = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7760():Void { var l:Short = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7761():Void { var l:Short = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7762():Void { var l:Short = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7763():Void { var l:Short = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7764():Void { var l:Short = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7765():Void { var l:Short = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7766():Void { var l:Short = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7767():Void { var l:Short = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7768():Void { var l:Short = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7769():Void { var l:Short = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7770():Void { var l:Short = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7771():Void { var l:Short = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7772():Void { var l:Short = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7773():Void { var l:Short = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7774():Void { var l:Short = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7775():Void { var l:Short = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7776():Void { var l:Short = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7777():Void { var l:Short = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7778():Void { var l:Short = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7779():Void { var l:Short = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7780():Void { var l:Short = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7781():Void { var l:Short = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7782():Void { var l:Short = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7783():Void { var l:Short = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7784():Void { var l:Short = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7785():Void { var l:Short = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7786():Void { var l:Short = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7787():Void { var l:Short = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7788():Void { var l:Short = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7789():Void { var l:Short = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7790():Void { var l:Short = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7791():Void { var l:Short = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7792():Void { var l:Short = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7793():Void { var l:Short = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7794():Void { var l:Short = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7795():Void { var l:Short = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7796():Void { var l:Short = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7797():Void { var l:Short = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7798():Void { var l:Short = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7799():Void { var l:Short = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7800():Void { var l:Short = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7801():Void { var l:Short = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7802():Void { var l:Short = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7803():Void { var l:Short = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7804():Void { var l:Short = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7805():Void { var l:Short = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7806():Void { var l:Short = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7807():Void { var l:Short = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7808():Void { var l:Short = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7809():Void { var l:Short = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7810():Void { var l:Short = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7811():Void { var l:Short = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7812():Void { var l:Short = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7813():Void { var l:Short = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7814():Void { var l:Short = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7815():Void { var l:Short = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7816():Void { var l:Short = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7817():Void { var l:Short = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7818():Void { var l:Short = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7819():Void { var l:Short = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7820():Void { var l:Short = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7821():Void { var l:Short = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7822():Void { var l:Short = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7823():Void { var l:Short = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7824():Void { var l:Short = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7825():Void { var l:Short = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7826():Void { var l:Short = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7827():Void { var l:Short = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7828():Void { var l:Short = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7829():Void { var l:Short = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7830():Void { var l:Short = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7831():Void { var l:Short = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7832():Void { var l:Short = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7833():Void { var l:Short = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7834():Void { var l:Short = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7835():Void { var l:Short = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7836():Void { var l:Short = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7837():Void { var l:Short = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7838():Void { var l:Short = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7839():Void { var l:Short = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7840():Void { var l:Short = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7841():Void { var l:Short = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7842():Void { var l:Short = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7843():Void { var l:Short = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7844():Void { var l:Short = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7845():Void { var l:Short = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7846():Void { var l:Short = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7847():Void { var l:Short = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7848():Void { var l:Short = (127)+(0); }
	def m7849():Void { var l:Short = (127)+(-0); }
	def m7850():Void { var l:Short = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7851():Void { var l:Short = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7852():Void { var l:Short = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7853():Void { var l:Short = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7854():Void { var l:Short = (127)+(127); }
	def m7855():Void { var l:Short = (127)+(-127); }
	def m7856():Void { var l:Short = (127)+(128); }
	def m7857():Void { var l:Short = (127)+(-128); }
	def m7858():Void { var l:Short = (127)+(255); }
	def m7859():Void { var l:Short = (127)+(-255); }
	def m7860():Void { var l:Short = (127)+(256); }
	def m7861():Void { var l:Short = (127)+(-256); }
	def m7862():Void { var l:Short = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7863():Void { var l:Short = (127)+(-32767); }
	def m7864():Void { var l:Short = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7865():Void { var l:Short = (127)+(-32768); }
	def m7866():Void { var l:Short = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7867():Void { var l:Short = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7868():Void { var l:Short = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7869():Void { var l:Short = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7870():Void { var l:Short = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7871():Void { var l:Short = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7872():Void { var l:Short = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7873():Void { var l:Short = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7874():Void { var l:Short = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7875():Void { var l:Short = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7876():Void { var l:Short = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7877():Void { var l:Short = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7878():Void { var l:Short = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7879():Void { var l:Short = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7880():Void { var l:Short = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7881():Void { var l:Short = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7882():Void { var l:Short = (-127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-127)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7883():Void { var l:Short = (-127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7884():Void { var l:Short = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7885():Void { var l:Short = (-127)+(w9); }
	def m7886():Void { var l:Short = (-127)+(0); }
	def m7887():Void { var l:Short = (-127)+(-0); }
	def m7888():Void { var l:Short = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7889():Void { var l:Short = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7890():Void { var l:Short = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7891():Void { var l:Short = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7892():Void { var l:Short = (-127)+(127); }
	def m7893():Void { var l:Short = (-127)+(-127); }
	def m7894():Void { var l:Short = (-127)+(128); }
	def m7895():Void { var l:Short = (-127)+(-128); }
	def m7896():Void { var l:Short = (-127)+(255); }
	def m7897():Void { var l:Short = (-127)+(-255); }
	def m7898():Void { var l:Short = (-127)+(256); }
	def m7899():Void { var l:Short = (-127)+(-256); }
	def m7900():Void { var l:Short = (-127)+(32767); }
	def m7901():Void { var l:Short = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7902():Void { var l:Short = (-127)+(32768); }
	def m7903():Void { var l:Short = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7904():Void { var l:Short = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7905():Void { var l:Short = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7906():Void { var l:Short = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7907():Void { var l:Short = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7908():Void { var l:Short = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7909():Void { var l:Short = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7910():Void { var l:Short = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7911():Void { var l:Short = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7912():Void { var l:Short = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7913():Void { var l:Short = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7914():Void { var l:Short = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7915():Void { var l:Short = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7916():Void { var l:Short = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7917():Void { var l:Short = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7918():Void { var l:Short = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7919():Void { var l:Short = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7920():Void { var l:Short = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7921():Void { var l:Short = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7922():Void { var l:Short = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7923():Void { var l:Short = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m7924():Void { var l:Short = (128)+(0); }
	def m7925():Void { var l:Short = (128)+(-0); }
	def m7926():Void { var l:Short = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7927():Void { var l:Short = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7928():Void { var l:Short = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7929():Void { var l:Short = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7930():Void { var l:Short = (128)+(127); }
	def m7931():Void { var l:Short = (128)+(-127); }
	def m7932():Void { var l:Short = (128)+(128); }
	def m7933():Void { var l:Short = (128)+(-128); }
	def m7934():Void { var l:Short = (128)+(255); }
	def m7935():Void { var l:Short = (128)+(-255); }
	def m7936():Void { var l:Short = (128)+(256); }
	def m7937():Void { var l:Short = (128)+(-256); }
	def m7938():Void { var l:Short = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7939():Void { var l:Short = (128)+(-32767); }
	def m7940():Void { var l:Short = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7941():Void { var l:Short = (128)+(-32768); }
	def m7942():Void { var l:Short = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7943():Void { var l:Short = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7944():Void { var l:Short = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7945():Void { var l:Short = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7946():Void { var l:Short = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7947():Void { var l:Short = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7948():Void { var l:Short = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7949():Void { var l:Short = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7950():Void { var l:Short = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7951():Void { var l:Short = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7952():Void { var l:Short = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7953():Void { var l:Short = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7954():Void { var l:Short = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7955():Void { var l:Short = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7956():Void { var l:Short = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7957():Void { var l:Short = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7958():Void { var l:Short = (-128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Byte.operator_as((-128)) + (TestInstanceOperators.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7959():Void { var l:Short = (-128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7960():Void { var l:Short = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7961():Void { var l:Short = (-128)+(w9); }
	def m7962():Void { var l:Short = (-128)+(0); }
	def m7963():Void { var l:Short = (-128)+(-0); }
	def m7964():Void { var l:Short = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7965():Void { var l:Short = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7966():Void { var l:Short = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7967():Void { var l:Short = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7968():Void { var l:Short = (-128)+(127); }
	def m7969():Void { var l:Short = (-128)+(-127); }
	def m7970():Void { var l:Short = (-128)+(128); }
	def m7971():Void { var l:Short = (-128)+(-128); }
	def m7972():Void { var l:Short = (-128)+(255); }
	def m7973():Void { var l:Short = (-128)+(-255); }
	def m7974():Void { var l:Short = (-128)+(256); }
	def m7975():Void { var l:Short = (-128)+(-256); }
	def m7976():Void { var l:Short = (-128)+(32767); }
	def m7977():Void { var l:Short = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7978():Void { var l:Short = (-128)+(32768); }
	def m7979():Void { var l:Short = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7980():Void { var l:Short = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7981():Void { var l:Short = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7982():Void { var l:Short = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7983():Void { var l:Short = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7984():Void { var l:Short = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7985():Void { var l:Short = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7986():Void { var l:Short = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7987():Void { var l:Short = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7988():Void { var l:Short = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7989():Void { var l:Short = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7990():Void { var l:Short = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7991():Void { var l:Short = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7992():Void { var l:Short = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7993():Void { var l:Short = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7994():Void { var l:Short = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7995():Void { var l:Short = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7996():Void { var l:Short = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m7997():Void { var l:Short = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7998():Void { var l:Short = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m7999():Void { var l:Short = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8000():Void { var l:Short = (255)+(0); }
	def m8001():Void { var l:Short = (255)+(-0); }
	def m8002():Void { var l:Short = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8003():Void { var l:Short = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8004():Void { var l:Short = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8005():Void { var l:Short = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8006():Void { var l:Short = (255)+(127); }
	def m8007():Void { var l:Short = (255)+(-127); }
	def m8008():Void { var l:Short = (255)+(128); }
	def m8009():Void { var l:Short = (255)+(-128); }
	def m8010():Void { var l:Short = (255)+(255); }
	def m8011():Void { var l:Short = (255)+(-255); }
	def m8012():Void { var l:Short = (255)+(256); }
	def m8013():Void { var l:Short = (255)+(-256); }
	def m8014():Void { var l:Short = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8015():Void { var l:Short = (255)+(-32767); }
	def m8016():Void { var l:Short = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8017():Void { var l:Short = (255)+(-32768); }
	def m8018():Void { var l:Short = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8019():Void { var l:Short = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8020():Void { var l:Short = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8021():Void { var l:Short = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8022():Void { var l:Short = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8023():Void { var l:Short = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8024():Void { var l:Short = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8025():Void { var l:Short = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8026():Void { var l:Short = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8027():Void { var l:Short = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8028():Void { var l:Short = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8029():Void { var l:Short = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8030():Void { var l:Short = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8031():Void { var l:Short = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8032():Void { var l:Short = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8033():Void { var l:Short = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8034():Void { var l:Short = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8035():Void { var l:Short = (-255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8036():Void { var l:Short = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8037():Void { var l:Short = (-255)+(w9); }
	def m8038():Void { var l:Short = (-255)+(0); }
	def m8039():Void { var l:Short = (-255)+(-0); }
	def m8040():Void { var l:Short = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8041():Void { var l:Short = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8042():Void { var l:Short = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8043():Void { var l:Short = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8044():Void { var l:Short = (-255)+(127); }
	def m8045():Void { var l:Short = (-255)+(-127); }
	def m8046():Void { var l:Short = (-255)+(128); }
	def m8047():Void { var l:Short = (-255)+(-128); }
	def m8048():Void { var l:Short = (-255)+(255); }
	def m8049():Void { var l:Short = (-255)+(-255); }
	def m8050():Void { var l:Short = (-255)+(256); }
	def m8051():Void { var l:Short = (-255)+(-256); }
	def m8052():Void { var l:Short = (-255)+(32767); }
	def m8053():Void { var l:Short = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8054():Void { var l:Short = (-255)+(32768); }
	def m8055():Void { var l:Short = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8056():Void { var l:Short = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8057():Void { var l:Short = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8058():Void { var l:Short = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8059():Void { var l:Short = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8060():Void { var l:Short = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8061():Void { var l:Short = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8062():Void { var l:Short = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8063():Void { var l:Short = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8064():Void { var l:Short = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8065():Void { var l:Short = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8066():Void { var l:Short = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8067():Void { var l:Short = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8068():Void { var l:Short = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8069():Void { var l:Short = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8070():Void { var l:Short = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8071():Void { var l:Short = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8072():Void { var l:Short = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8073():Void { var l:Short = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8074():Void { var l:Short = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8075():Void { var l:Short = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8076():Void { var l:Short = (256)+(0); }
	def m8077():Void { var l:Short = (256)+(-0); }
	def m8078():Void { var l:Short = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8079():Void { var l:Short = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8080():Void { var l:Short = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8081():Void { var l:Short = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8082():Void { var l:Short = (256)+(127); }
	def m8083():Void { var l:Short = (256)+(-127); }
	def m8084():Void { var l:Short = (256)+(128); }
	def m8085():Void { var l:Short = (256)+(-128); }
	def m8086():Void { var l:Short = (256)+(255); }
	def m8087():Void { var l:Short = (256)+(-255); }
	def m8088():Void { var l:Short = (256)+(256); }
	def m8089():Void { var l:Short = (256)+(-256); }
	def m8090():Void { var l:Short = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8091():Void { var l:Short = (256)+(-32767); }
	def m8092():Void { var l:Short = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8093():Void { var l:Short = (256)+(-32768); }
	def m8094():Void { var l:Short = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8095():Void { var l:Short = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8096():Void { var l:Short = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8097():Void { var l:Short = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8098():Void { var l:Short = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8099():Void { var l:Short = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8100():Void { var l:Short = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8101():Void { var l:Short = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8102():Void { var l:Short = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8103():Void { var l:Short = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8104():Void { var l:Short = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8105():Void { var l:Short = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8106():Void { var l:Short = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8107():Void { var l:Short = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8108():Void { var l:Short = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8109():Void { var l:Short = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8110():Void { var l:Short = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8111():Void { var l:Short = (-256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8112():Void { var l:Short = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8113():Void { var l:Short = (-256)+(w9); }
	def m8114():Void { var l:Short = (-256)+(0); }
	def m8115():Void { var l:Short = (-256)+(-0); }
	def m8116():Void { var l:Short = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8117():Void { var l:Short = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8118():Void { var l:Short = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8119():Void { var l:Short = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8120():Void { var l:Short = (-256)+(127); }
	def m8121():Void { var l:Short = (-256)+(-127); }
	def m8122():Void { var l:Short = (-256)+(128); }
	def m8123():Void { var l:Short = (-256)+(-128); }
	def m8124():Void { var l:Short = (-256)+(255); }
	def m8125():Void { var l:Short = (-256)+(-255); }
	def m8126():Void { var l:Short = (-256)+(256); }
	def m8127():Void { var l:Short = (-256)+(-256); }
	def m8128():Void { var l:Short = (-256)+(32767); }
	def m8129():Void { var l:Short = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8130():Void { var l:Short = (-256)+(32768); }
	def m8131():Void { var l:Short = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8132():Void { var l:Short = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8133():Void { var l:Short = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8134():Void { var l:Short = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8135():Void { var l:Short = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8136():Void { var l:Short = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8137():Void { var l:Short = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8138():Void { var l:Short = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8139():Void { var l:Short = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8140():Void { var l:Short = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8141():Void { var l:Short = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8142():Void { var l:Short = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8143():Void { var l:Short = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8144():Void { var l:Short = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8145():Void { var l:Short = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8146():Void { var l:Short = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8147():Void { var l:Short = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8148():Void { var l:Short = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8149():Void { var l:Short = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8150():Void { var l:Short = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8151():Void { var l:Short = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8152():Void { var l:Short = (32767)+(0); }
	def m8153():Void { var l:Short = (32767)+(-0); }
	def m8154():Void { var l:Short = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8155():Void { var l:Short = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8156():Void { var l:Short = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8157():Void { var l:Short = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8158():Void { var l:Short = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8159():Void { var l:Short = (32767)+(-127); }
	def m8160():Void { var l:Short = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8161():Void { var l:Short = (32767)+(-128); }
	def m8162():Void { var l:Short = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8163():Void { var l:Short = (32767)+(-255); }
	def m8164():Void { var l:Short = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8165():Void { var l:Short = (32767)+(-256); }
	def m8166():Void { var l:Short = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8167():Void { var l:Short = (32767)+(-32767); }
	def m8168():Void { var l:Short = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8169():Void { var l:Short = (32767)+(-32768); }
	def m8170():Void { var l:Short = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8171():Void { var l:Short = (32767)+(-65535); }
	def m8172():Void { var l:Short = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8173():Void { var l:Short = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8174():Void { var l:Short = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8175():Void { var l:Short = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8176():Void { var l:Short = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8177():Void { var l:Short = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8178():Void { var l:Short = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8179():Void { var l:Short = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8180():Void { var l:Short = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8181():Void { var l:Short = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8182():Void { var l:Short = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8183():Void { var l:Short = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8184():Void { var l:Short = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8185():Void { var l:Short = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8186():Void { var l:Short = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8187():Void { var l:Short = (-32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8188():Void { var l:Short = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8189():Void { var l:Short = (-32767)+(w9); }
	def m8190():Void { var l:Short = (-32767)+(0); }
	def m8191():Void { var l:Short = (-32767)+(-0); }
	def m8192():Void { var l:Short = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8193():Void { var l:Short = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8194():Void { var l:Short = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8195():Void { var l:Short = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8196():Void { var l:Short = (-32767)+(127); }
	def m8197():Void { var l:Short = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8198():Void { var l:Short = (-32767)+(128); }
	def m8199():Void { var l:Short = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8200():Void { var l:Short = (-32767)+(255); }
	def m8201():Void { var l:Short = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8202():Void { var l:Short = (-32767)+(256); }
	def m8203():Void { var l:Short = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8204():Void { var l:Short = (-32767)+(32767); }
	def m8205():Void { var l:Short = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8206():Void { var l:Short = (-32767)+(32768); }
	def m8207():Void { var l:Short = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8208():Void { var l:Short = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8209():Void { var l:Short = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8210():Void { var l:Short = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8211():Void { var l:Short = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8212():Void { var l:Short = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8213():Void { var l:Short = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8214():Void { var l:Short = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8215():Void { var l:Short = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8216():Void { var l:Short = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8217():Void { var l:Short = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8218():Void { var l:Short = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8219():Void { var l:Short = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8220():Void { var l:Short = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8221():Void { var l:Short = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8222():Void { var l:Short = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8223():Void { var l:Short = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8224():Void { var l:Short = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8225():Void { var l:Short = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8226():Void { var l:Short = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8227():Void { var l:Short = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8228():Void { var l:Short = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8229():Void { var l:Short = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8230():Void { var l:Short = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8231():Void { var l:Short = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8232():Void { var l:Short = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8233():Void { var l:Short = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8234():Void { var l:Short = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8235():Void { var l:Short = (32768)+(-127); }
	def m8236():Void { var l:Short = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8237():Void { var l:Short = (32768)+(-128); }
	def m8238():Void { var l:Short = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8239():Void { var l:Short = (32768)+(-255); }
	def m8240():Void { var l:Short = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8241():Void { var l:Short = (32768)+(-256); }
	def m8242():Void { var l:Short = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8243():Void { var l:Short = (32768)+(-32767); }
	def m8244():Void { var l:Short = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8245():Void { var l:Short = (32768)+(-32768); }
	def m8246():Void { var l:Short = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8247():Void { var l:Short = (32768)+(-65535); }
	def m8248():Void { var l:Short = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8249():Void { var l:Short = (32768)+(-65536); }
	def m8250():Void { var l:Short = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8251():Void { var l:Short = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8252():Void { var l:Short = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8253():Void { var l:Short = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8254():Void { var l:Short = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8255():Void { var l:Short = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8256():Void { var l:Short = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8257():Void { var l:Short = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8258():Void { var l:Short = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8259():Void { var l:Short = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8260():Void { var l:Short = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8261():Void { var l:Short = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8262():Void { var l:Short = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8263():Void { var l:Short = (-32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8264():Void { var l:Short = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8265():Void { var l:Short = (-32768)+(w9); }
	def m8266():Void { var l:Short = (-32768)+(0); }
	def m8267():Void { var l:Short = (-32768)+(-0); }
	def m8268():Void { var l:Short = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8269():Void { var l:Short = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8270():Void { var l:Short = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8271():Void { var l:Short = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8272():Void { var l:Short = (-32768)+(127); }
	def m8273():Void { var l:Short = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8274():Void { var l:Short = (-32768)+(128); }
	def m8275():Void { var l:Short = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8276():Void { var l:Short = (-32768)+(255); }
	def m8277():Void { var l:Short = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8278():Void { var l:Short = (-32768)+(256); }
	def m8279():Void { var l:Short = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8280():Void { var l:Short = (-32768)+(32767); }
	def m8281():Void { var l:Short = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8282():Void { var l:Short = (-32768)+(32768); }
	def m8283():Void { var l:Short = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8284():Void { var l:Short = (-32768)+(65535); }
	def m8285():Void { var l:Short = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8286():Void { var l:Short = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8287():Void { var l:Short = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8288():Void { var l:Short = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8289():Void { var l:Short = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8290():Void { var l:Short = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8291():Void { var l:Short = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8292():Void { var l:Short = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8293():Void { var l:Short = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8294():Void { var l:Short = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8295():Void { var l:Short = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8296():Void { var l:Short = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8297():Void { var l:Short = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8298():Void { var l:Short = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8299():Void { var l:Short = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8300():Void { var l:Short = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8301():Void { var l:Short = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8302():Void { var l:Short = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8303():Void { var l:Short = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8304():Void { var l:Short = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8305():Void { var l:Short = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8306():Void { var l:Short = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8307():Void { var l:Short = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8308():Void { var l:Short = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8309():Void { var l:Short = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8310():Void { var l:Short = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8311():Void { var l:Short = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8312():Void { var l:Short = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8313():Void { var l:Short = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8314():Void { var l:Short = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8315():Void { var l:Short = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8316():Void { var l:Short = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8317():Void { var l:Short = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8318():Void { var l:Short = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8319():Void { var l:Short = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8320():Void { var l:Short = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8321():Void { var l:Short = (65535)+(-32768); }
	def m8322():Void { var l:Short = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8323():Void { var l:Short = (65535)+(-65535); }
	def m8324():Void { var l:Short = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8325():Void { var l:Short = (65535)+(-65536); }
	def m8326():Void { var l:Short = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8327():Void { var l:Short = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8328():Void { var l:Short = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8329():Void { var l:Short = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8330():Void { var l:Short = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8331():Void { var l:Short = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8332():Void { var l:Short = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8333():Void { var l:Short = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8334():Void { var l:Short = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8335():Void { var l:Short = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8336():Void { var l:Short = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8337():Void { var l:Short = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8338():Void { var l:Short = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8339():Void { var l:Short = (-65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8340():Void { var l:Short = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8341():Void { var l:Short = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8342():Void { var l:Short = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8343():Void { var l:Short = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8344():Void { var l:Short = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8345():Void { var l:Short = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8346():Void { var l:Short = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8347():Void { var l:Short = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8348():Void { var l:Short = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8349():Void { var l:Short = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8350():Void { var l:Short = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8351():Void { var l:Short = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8352():Void { var l:Short = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8353():Void { var l:Short = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8354():Void { var l:Short = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8355():Void { var l:Short = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8356():Void { var l:Short = (-65535)+(32767); }
	def m8357():Void { var l:Short = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8358():Void { var l:Short = (-65535)+(32768); }
	def m8359():Void { var l:Short = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8360():Void { var l:Short = (-65535)+(65535); }
	def m8361():Void { var l:Short = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8362():Void { var l:Short = (-65535)+(65536); }
	def m8363():Void { var l:Short = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8364():Void { var l:Short = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8365():Void { var l:Short = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8366():Void { var l:Short = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8367():Void { var l:Short = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8368():Void { var l:Short = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8369():Void { var l:Short = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8370():Void { var l:Short = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8371():Void { var l:Short = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8372():Void { var l:Short = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8373():Void { var l:Short = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8374():Void { var l:Short = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8375():Void { var l:Short = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8376():Void { var l:Short = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8377():Void { var l:Short = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8378():Void { var l:Short = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8379():Void { var l:Short = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8380():Void { var l:Short = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8381():Void { var l:Short = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8382():Void { var l:Short = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8383():Void { var l:Short = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8384():Void { var l:Short = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8385():Void { var l:Short = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8386():Void { var l:Short = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8387():Void { var l:Short = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8388():Void { var l:Short = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8389():Void { var l:Short = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8390():Void { var l:Short = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8391():Void { var l:Short = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8392():Void { var l:Short = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8393():Void { var l:Short = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8394():Void { var l:Short = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8395():Void { var l:Short = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8396():Void { var l:Short = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8397():Void { var l:Short = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8398():Void { var l:Short = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8399():Void { var l:Short = (65536)+(-65535); }
	def m8400():Void { var l:Short = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8401():Void { var l:Short = (65536)+(-65536); }
	def m8402():Void { var l:Short = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8403():Void { var l:Short = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8404():Void { var l:Short = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8405():Void { var l:Short = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8406():Void { var l:Short = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8407():Void { var l:Short = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8408():Void { var l:Short = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8409():Void { var l:Short = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8410():Void { var l:Short = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8411():Void { var l:Short = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8412():Void { var l:Short = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8413():Void { var l:Short = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8414():Void { var l:Short = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8415():Void { var l:Short = (-65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8416():Void { var l:Short = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8417():Void { var l:Short = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8418():Void { var l:Short = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8419():Void { var l:Short = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8420():Void { var l:Short = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8421():Void { var l:Short = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8422():Void { var l:Short = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8423():Void { var l:Short = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8424():Void { var l:Short = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8425():Void { var l:Short = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8426():Void { var l:Short = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8427():Void { var l:Short = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8428():Void { var l:Short = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8429():Void { var l:Short = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8430():Void { var l:Short = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8431():Void { var l:Short = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8432():Void { var l:Short = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8433():Void { var l:Short = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8434():Void { var l:Short = (-65536)+(32768); }
	def m8435():Void { var l:Short = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8436():Void { var l:Short = (-65536)+(65535); }
	def m8437():Void { var l:Short = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8438():Void { var l:Short = (-65536)+(65536); }
	def m8439():Void { var l:Short = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8440():Void { var l:Short = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8441():Void { var l:Short = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8442():Void { var l:Short = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8443():Void { var l:Short = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8444():Void { var l:Short = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8445():Void { var l:Short = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8446():Void { var l:Short = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8447():Void { var l:Short = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8448():Void { var l:Short = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8449():Void { var l:Short = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8450():Void { var l:Short = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8451():Void { var l:Short = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8452():Void { var l:Short = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8453():Void { var l:Short = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8454():Void { var l:Short = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8455():Void { var l:Short = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8456():Void { var l:Short = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8457():Void { var l:Short = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8458():Void { var l:Short = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8459():Void { var l:Short = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8460():Void { var l:Short = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8461():Void { var l:Short = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8462():Void { var l:Short = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8463():Void { var l:Short = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8464():Void { var l:Short = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8465():Void { var l:Short = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8466():Void { var l:Short = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8467():Void { var l:Short = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8468():Void { var l:Short = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8469():Void { var l:Short = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8470():Void { var l:Short = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8471():Void { var l:Short = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8472():Void { var l:Short = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8473():Void { var l:Short = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8474():Void { var l:Short = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8475():Void { var l:Short = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8476():Void { var l:Short = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8477():Void { var l:Short = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8478():Void { var l:Short = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8479():Void { var l:Short = (16777216)+(-16777216); }
	def m8480():Void { var l:Short = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8481():Void { var l:Short = (16777216)+(-16777217); }
	def m8482():Void { var l:Short = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8483():Void { var l:Short = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8484():Void { var l:Short = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8485():Void { var l:Short = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8486():Void { var l:Short = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8487():Void { var l:Short = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8488():Void { var l:Short = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8489():Void { var l:Short = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8490():Void { var l:Short = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8491():Void { var l:Short = (-16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8492():Void { var l:Short = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8493():Void { var l:Short = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8494():Void { var l:Short = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8495():Void { var l:Short = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8496():Void { var l:Short = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8497():Void { var l:Short = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8498():Void { var l:Short = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8499():Void { var l:Short = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8500():Void { var l:Short = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8501():Void { var l:Short = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8502():Void { var l:Short = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8503():Void { var l:Short = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8504():Void { var l:Short = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8505():Void { var l:Short = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8506():Void { var l:Short = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8507():Void { var l:Short = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8508():Void { var l:Short = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8509():Void { var l:Short = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8510():Void { var l:Short = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8511():Void { var l:Short = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8512():Void { var l:Short = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8513():Void { var l:Short = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8514():Void { var l:Short = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8515():Void { var l:Short = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8516():Void { var l:Short = (-16777216)+(16777216); }
	def m8517():Void { var l:Short = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8518():Void { var l:Short = (-16777216)+(16777217); }
	def m8519():Void { var l:Short = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8520():Void { var l:Short = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8521():Void { var l:Short = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8522():Void { var l:Short = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8523():Void { var l:Short = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8524():Void { var l:Short = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8525():Void { var l:Short = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8526():Void { var l:Short = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8527():Void { var l:Short = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8528():Void { var l:Short = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8529():Void { var l:Short = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8530():Void { var l:Short = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8531():Void { var l:Short = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8532():Void { var l:Short = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8533():Void { var l:Short = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8534():Void { var l:Short = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8535():Void { var l:Short = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8536():Void { var l:Short = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8537():Void { var l:Short = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8538():Void { var l:Short = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8539():Void { var l:Short = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8540():Void { var l:Short = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8541():Void { var l:Short = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8542():Void { var l:Short = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8543():Void { var l:Short = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8544():Void { var l:Short = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8545():Void { var l:Short = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8546():Void { var l:Short = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8547():Void { var l:Short = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8548():Void { var l:Short = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8549():Void { var l:Short = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8550():Void { var l:Short = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8551():Void { var l:Short = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8552():Void { var l:Short = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8553():Void { var l:Short = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8554():Void { var l:Short = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8555():Void { var l:Short = (16777217)+(-16777216); }
	def m8556():Void { var l:Short = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8557():Void { var l:Short = (16777217)+(-16777217); }
	def m8558():Void { var l:Short = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8559():Void { var l:Short = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8560():Void { var l:Short = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8561():Void { var l:Short = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8562():Void { var l:Short = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8563():Void { var l:Short = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8564():Void { var l:Short = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8565():Void { var l:Short = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8566():Void { var l:Short = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8567():Void { var l:Short = (-16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8568():Void { var l:Short = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8569():Void { var l:Short = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8570():Void { var l:Short = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8571():Void { var l:Short = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8572():Void { var l:Short = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8573():Void { var l:Short = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8574():Void { var l:Short = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8575():Void { var l:Short = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8576():Void { var l:Short = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8577():Void { var l:Short = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8578():Void { var l:Short = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8579():Void { var l:Short = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8580():Void { var l:Short = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8581():Void { var l:Short = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8582():Void { var l:Short = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8583():Void { var l:Short = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8584():Void { var l:Short = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8585():Void { var l:Short = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8586():Void { var l:Short = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8587():Void { var l:Short = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8588():Void { var l:Short = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8589():Void { var l:Short = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8590():Void { var l:Short = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8591():Void { var l:Short = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8592():Void { var l:Short = (-16777217)+(16777216); }
	def m8593():Void { var l:Short = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8594():Void { var l:Short = (-16777217)+(16777217); }
	def m8595():Void { var l:Short = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8596():Void { var l:Short = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8597():Void { var l:Short = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8598():Void { var l:Short = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8599():Void { var l:Short = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8600():Void { var l:Short = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8601():Void { var l:Short = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8602():Void { var l:Short = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8603():Void { var l:Short = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8604():Void { var l:Short = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8605():Void { var l:Short = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8606():Void { var l:Short = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8607():Void { var l:Short = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8608():Void { var l:Short = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8609():Void { var l:Short = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8610():Void { var l:Short = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8611():Void { var l:Short = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8612():Void { var l:Short = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8613():Void { var l:Short = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8614():Void { var l:Short = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8615():Void { var l:Short = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8616():Void { var l:Short = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8617():Void { var l:Short = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8618():Void { var l:Short = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8619():Void { var l:Short = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8620():Void { var l:Short = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8621():Void { var l:Short = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8622():Void { var l:Short = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8623():Void { var l:Short = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8624():Void { var l:Short = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8625():Void { var l:Short = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8626():Void { var l:Short = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8627():Void { var l:Short = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8628():Void { var l:Short = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8629():Void { var l:Short = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8630():Void { var l:Short = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8631():Void { var l:Short = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8632():Void { var l:Short = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8633():Void { var l:Short = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8634():Void { var l:Short = (2147483647)+(2147483647); }
	def m8635():Void { var l:Short = (2147483647)+(-2147483647); }
	def m8636():Void { var l:Short = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8637():Void { var l:Short = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8638():Void { var l:Short = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8639():Void { var l:Short = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8640():Void { var l:Short = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8641():Void { var l:Short = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8642():Void { var l:Short = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8643():Void { var l:Short = (-2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8644():Void { var l:Short = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8645():Void { var l:Short = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8646():Void { var l:Short = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8647():Void { var l:Short = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8648():Void { var l:Short = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8649():Void { var l:Short = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8650():Void { var l:Short = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8651():Void { var l:Short = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8652():Void { var l:Short = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8653():Void { var l:Short = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8654():Void { var l:Short = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8655():Void { var l:Short = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8656():Void { var l:Short = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8657():Void { var l:Short = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8658():Void { var l:Short = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8659():Void { var l:Short = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8660():Void { var l:Short = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8661():Void { var l:Short = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8662():Void { var l:Short = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8663():Void { var l:Short = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8664():Void { var l:Short = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8665():Void { var l:Short = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8666():Void { var l:Short = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8667():Void { var l:Short = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8668():Void { var l:Short = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8669():Void { var l:Short = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8670():Void { var l:Short = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8671():Void { var l:Short = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8672():Void { var l:Short = (-2147483647)+(2147483647); }
	def m8673():Void { var l:Short = (-2147483647)+(-2147483647); }
	def m8674():Void { var l:UByte = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8675():Void { var l:UByte = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8676():Void { var l:UByte = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8677():Void { var l:UByte = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8678():Void { var l:UByte = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8679():Void { var l:UByte = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8680():Void { var l:UByte = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8681():Void { var l:UByte = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8682():Void { var l:UByte = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8683():Void { var l:UByte = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8684():Void { var l:UByte = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8685():Void { var l:UByte = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8686():Void { var l:UByte = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8687():Void { var l:UByte = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8688():Void { var l:UByte = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8689():Void { var l:UByte = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8690():Void { var l:UByte = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8691():Void { var l:UByte = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8692():Void { var l:UByte = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8693():Void { var l:UByte = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8694():Void { var l:UByte = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8695():Void { var l:UByte = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8696():Void { var l:UByte = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8697():Void { var l:UByte = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8698():Void { var l:UByte = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8699():Void { var l:UByte = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8700():Void { var l:UByte = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8701():Void { var l:UByte = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8702():Void { var l:UByte = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8703():Void { var l:UByte = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8704():Void { var l:UByte = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8705():Void { var l:UByte = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8706():Void { var l:UByte = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8707():Void { var l:UByte = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8708():Void { var l:UByte = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8709():Void { var l:UByte = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8710():Void { var l:UByte = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8711():Void { var l:UByte = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8712():Void { var l:UByte = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8713():Void { var l:UByte = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8714():Void { var l:UByte = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8715():Void { var l:UByte = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8716():Void { var l:UByte = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8717():Void { var l:UByte = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8718():Void { var l:UByte = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8719():Void { var l:UByte = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8720():Void { var l:UByte = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8721():Void { var l:UByte = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8722():Void { var l:UByte = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8723():Void { var l:UByte = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8724():Void { var l:UByte = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8725():Void { var l:UByte = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8726():Void { var l:UByte = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8727():Void { var l:UByte = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8728():Void { var l:UByte = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8729():Void { var l:UByte = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8730():Void { var l:UByte = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8731():Void { var l:UByte = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8732():Void { var l:UByte = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8733():Void { var l:UByte = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8734():Void { var l:UByte = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8735():Void { var l:UByte = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8736():Void { var l:UByte = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8737():Void { var l:UByte = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8738():Void { var l:UByte = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8739():Void { var l:UByte = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8740():Void { var l:UByte = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8741():Void { var l:UByte = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8742():Void { var l:UByte = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8743():Void { var l:UByte = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8744():Void { var l:UByte = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8745():Void { var l:UByte = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8746():Void { var l:UByte = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8747():Void { var l:UByte = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8748():Void { var l:UByte = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8749():Void { var l:UByte = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8750():Void { var l:UByte = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8751():Void { var l:UByte = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8752():Void { var l:UByte = (w2)+(w2); }
	def m8753():Void { var l:UByte = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8754():Void { var l:UByte = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8755():Void { var l:UByte = (w2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8756():Void { var l:UByte = (w2)+(w6); }
	def m8757():Void { var l:UByte = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m8758():Void { var l:UByte = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m8759():Void { var l:UByte = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m8760():Void { var l:UByte = (w2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8761():Void { var l:UByte = (w2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8762():Void { var l:UByte = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8763():Void { var l:UByte = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8764():Void { var l:UByte = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8765():Void { var l:UByte = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8766():Void { var l:UByte = (w2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8767():Void { var l:UByte = (w2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8768():Void { var l:UByte = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8769():Void { var l:UByte = (w2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8770():Void { var l:UByte = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8771():Void { var l:UByte = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8772():Void { var l:UByte = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8773():Void { var l:UByte = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8774():Void { var l:UByte = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8775():Void { var l:UByte = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8776():Void { var l:UByte = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8777():Void { var l:UByte = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8778():Void { var l:UByte = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8779():Void { var l:UByte = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8780():Void { var l:UByte = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8781():Void { var l:UByte = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8782():Void { var l:UByte = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8783():Void { var l:UByte = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8784():Void { var l:UByte = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8785():Void { var l:UByte = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8786():Void { var l:UByte = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8787():Void { var l:UByte = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8788():Void { var l:UByte = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8789():Void { var l:UByte = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8790():Void { var l:UByte = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8791():Void { var l:UByte = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8792():Void { var l:UByte = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8793():Void { var l:UByte = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8794():Void { var l:UByte = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m8795():Void { var l:UByte = (w3)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8796():Void { var l:UByte = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m8797():Void { var l:UByte = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m8798():Void { var l:UByte = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8799():Void { var l:UByte = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8800():Void { var l:UByte = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8801():Void { var l:UByte = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8802():Void { var l:UByte = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8803():Void { var l:UByte = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8804():Void { var l:UByte = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8805():Void { var l:UByte = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8806():Void { var l:UByte = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8807():Void { var l:UByte = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8808():Void { var l:UByte = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8809():Void { var l:UByte = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8810():Void { var l:UByte = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8811():Void { var l:UByte = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8812():Void { var l:UByte = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8813():Void { var l:UByte = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8814():Void { var l:UByte = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8815():Void { var l:UByte = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8816():Void { var l:UByte = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8817():Void { var l:UByte = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8818():Void { var l:UByte = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8819():Void { var l:UByte = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8820():Void { var l:UByte = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8821():Void { var l:UByte = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8822():Void { var l:UByte = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8823():Void { var l:UByte = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8824():Void { var l:UByte = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8825():Void { var l:UByte = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8826():Void { var l:UByte = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8827():Void { var l:UByte = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8828():Void { var l:UByte = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8829():Void { var l:UByte = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8830():Void { var l:UByte = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8831():Void { var l:UByte = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8832():Void { var l:UByte = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m8833():Void { var l:UByte = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m8834():Void { var l:UByte = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8835():Void { var l:UByte = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m8836():Void { var l:UByte = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8837():Void { var l:UByte = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8838():Void { var l:UByte = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8839():Void { var l:UByte = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8840():Void { var l:UByte = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8841():Void { var l:UByte = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8842():Void { var l:UByte = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8843():Void { var l:UByte = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8844():Void { var l:UByte = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8845():Void { var l:UByte = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8846():Void { var l:UByte = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8847():Void { var l:UByte = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8848():Void { var l:UByte = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8849():Void { var l:UByte = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8850():Void { var l:UByte = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8851():Void { var l:UByte = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8852():Void { var l:UByte = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8853():Void { var l:UByte = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8854():Void { var l:UByte = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8855():Void { var l:UByte = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8856():Void { var l:UByte = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8857():Void { var l:UByte = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8858():Void { var l:UByte = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8859():Void { var l:UByte = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8860():Void { var l:UByte = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8861():Void { var l:UByte = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8862():Void { var l:UByte = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8863():Void { var l:UByte = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8864():Void { var l:UByte = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8865():Void { var l:UByte = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8866():Void { var l:UByte = (w5)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + x10.lang.Short.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8867():Void { var l:UByte = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8868():Void { var l:UByte = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8869():Void { var l:UByte = (w5)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8870():Void { var l:UByte = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m8871():Void { var l:UByte = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8872():Void { var l:UByte = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8873():Void { var l:UByte = (w5)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w5) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m8874():Void { var l:UByte = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8875():Void { var l:UByte = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8876():Void { var l:UByte = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8877():Void { var l:UByte = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8878():Void { var l:UByte = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8879():Void { var l:UByte = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8880():Void { var l:UByte = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8881():Void { var l:UByte = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8882():Void { var l:UByte = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8883():Void { var l:UByte = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8884():Void { var l:UByte = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8885():Void { var l:UByte = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8886():Void { var l:UByte = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8887():Void { var l:UByte = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8888():Void { var l:UByte = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8889():Void { var l:UByte = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8890():Void { var l:UByte = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8891():Void { var l:UByte = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8892():Void { var l:UByte = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8893():Void { var l:UByte = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8894():Void { var l:UByte = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8895():Void { var l:UByte = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8896():Void { var l:UByte = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8897():Void { var l:UByte = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8898():Void { var l:UByte = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8899():Void { var l:UByte = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8900():Void { var l:UByte = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8901():Void { var l:UByte = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8902():Void { var l:UByte = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8903():Void { var l:UByte = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8904():Void { var l:UByte = (w6)+(w2); }
	def m8905():Void { var l:UByte = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8906():Void { var l:UByte = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8907():Void { var l:UByte = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8908():Void { var l:UByte = (w6)+(w6); }
	def m8909():Void { var l:UByte = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8910():Void { var l:UByte = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8911():Void { var l:UByte = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m8912():Void { var l:UByte = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m8913():Void { var l:UByte = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m8914():Void { var l:UByte = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8915():Void { var l:UByte = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8916():Void { var l:UByte = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8917():Void { var l:UByte = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8918():Void { var l:UByte = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m8919():Void { var l:UByte = (w6)+(-127); }
	def m8920():Void { var l:UByte = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m8921():Void { var l:UByte = (w6)+(-128); }
	def m8922():Void { var l:UByte = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m8923():Void { var l:UByte = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m8924():Void { var l:UByte = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m8925():Void { var l:UByte = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m8926():Void { var l:UByte = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m8927():Void { var l:UByte = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m8928():Void { var l:UByte = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m8929():Void { var l:UByte = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m8930():Void { var l:UByte = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m8931():Void { var l:UByte = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m8932():Void { var l:UByte = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m8933():Void { var l:UByte = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m8934():Void { var l:UByte = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m8935():Void { var l:UByte = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m8936():Void { var l:UByte = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m8937():Void { var l:UByte = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m8938():Void { var l:UByte = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m8939():Void { var l:UByte = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m8940():Void { var l:UByte = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8941():Void { var l:UByte = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8942():Void { var l:UByte = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m8943():Void { var l:UByte = (w7)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8944():Void { var l:UByte = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m8945():Void { var l:UByte = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m8946():Void { var l:UByte = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m8947():Void { var l:UByte = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8948():Void { var l:UByte = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m8949():Void { var l:UByte = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m8950():Void { var l:UByte = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8951():Void { var l:UByte = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8952():Void { var l:UByte = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8953():Void { var l:UByte = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8954():Void { var l:UByte = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8955():Void { var l:UByte = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8956():Void { var l:UByte = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8957():Void { var l:UByte = (w7)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8958():Void { var l:UByte = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8959():Void { var l:UByte = (w7)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8960():Void { var l:UByte = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8961():Void { var l:UByte = (w7)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8962():Void { var l:UByte = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8963():Void { var l:UByte = (w7)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8964():Void { var l:UByte = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8965():Void { var l:UByte = (w7)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8966():Void { var l:UByte = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8967():Void { var l:UByte = (w7)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8968():Void { var l:UByte = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8969():Void { var l:UByte = (w7)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8970():Void { var l:UByte = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8971():Void { var l:UByte = (w7)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8972():Void { var l:UByte = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8973():Void { var l:UByte = (w7)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8974():Void { var l:UByte = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8975():Void { var l:UByte = (w7)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8976():Void { var l:UByte = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8977():Void { var l:UByte = (w7)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8978():Void { var l:UByte = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8979():Void { var l:UByte = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8980():Void { var l:UByte = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m8981():Void { var l:UByte = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m8982():Void { var l:UByte = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8983():Void { var l:UByte = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m8984():Void { var l:UByte = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m8985():Void { var l:UByte = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m8986():Void { var l:UByte = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8987():Void { var l:UByte = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m8988():Void { var l:UByte = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m8989():Void { var l:UByte = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m8990():Void { var l:UByte = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8991():Void { var l:UByte = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8992():Void { var l:UByte = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8993():Void { var l:UByte = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8994():Void { var l:UByte = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m8995():Void { var l:UByte = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m8996():Void { var l:UByte = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m8997():Void { var l:UByte = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m8998():Void { var l:UByte = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m8999():Void { var l:UByte = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m9000():Void { var l:UByte = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m9001():Void { var l:UByte = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m9002():Void { var l:UByte = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m9003():Void { var l:UByte = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m9004():Void { var l:UByte = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m9005():Void { var l:UByte = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m9006():Void { var l:UByte = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m9007():Void { var l:UByte = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m9008():Void { var l:UByte = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m9009():Void { var l:UByte = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m9010():Void { var l:UByte = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m9011():Void { var l:UByte = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m9012():Void { var l:UByte = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m9013():Void { var l:UByte = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m9014():Void { var l:UByte = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m9015():Void { var l:UByte = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m9016():Void { var l:UByte = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9017():Void { var l:UByte = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9018():Void { var l:UByte = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m9019():Void { var l:UByte = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m9020():Void { var l:UByte = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m9021():Void { var l:UByte = (w9)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w5)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9022():Void { var l:UByte = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m9023():Void { var l:UByte = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m9024():Void { var l:UByte = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m9025():Void { var l:UByte = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9026():Void { var l:UByte = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m9027():Void { var l:UByte = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m9028():Void { var l:UByte = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9029():Void { var l:UByte = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9030():Void { var l:UByte = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9031():Void { var l:UByte = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9032():Void { var l:UByte = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m9033():Void { var l:UByte = (w9)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9034():Void { var l:UByte = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m9035():Void { var l:UByte = (w9)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9036():Void { var l:UByte = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m9037():Void { var l:UByte = (w9)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9038():Void { var l:UByte = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m9039():Void { var l:UByte = (w9)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9040():Void { var l:UByte = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m9041():Void { var l:UByte = (w9)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9042():Void { var l:UByte = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m9043():Void { var l:UByte = (w9)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w9) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9044():Void { var l:UByte = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m9045():Void { var l:UByte = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m9046():Void { var l:UByte = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m9047():Void { var l:UByte = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m9048():Void { var l:UByte = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m9049():Void { var l:UByte = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m9050():Void { var l:UByte = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m9051():Void { var l:UByte = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m9052():Void { var l:UByte = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m9053():Void { var l:UByte = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m9054():Void { var l:UByte = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9055():Void { var l:UByte = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9056():Void { var l:UByte = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9057():Void { var l:UByte = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9058():Void { var l:UByte = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9059():Void { var l:UByte = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9060():Void { var l:UByte = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9061():Void { var l:UByte = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9062():Void { var l:UByte = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9063():Void { var l:UByte = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9064():Void { var l:UByte = (0)+(0); }
	def m9065():Void { var l:UByte = (0)+(-0); }
	def m9066():Void { var l:UByte = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9067():Void { var l:UByte = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9068():Void { var l:UByte = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9069():Void { var l:UByte = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9070():Void { var l:UByte = (0)+(127); }
	def m9071():Void { var l:UByte = (0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9072():Void { var l:UByte = (0)+(128); }
	def m9073():Void { var l:UByte = (0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9074():Void { var l:UByte = (0)+(255); }
	def m9075():Void { var l:UByte = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9076():Void { var l:UByte = (0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9077():Void { var l:UByte = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9078():Void { var l:UByte = (0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9079():Void { var l:UByte = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9080():Void { var l:UByte = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9081():Void { var l:UByte = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9082():Void { var l:UByte = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9083():Void { var l:UByte = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9084():Void { var l:UByte = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9085():Void { var l:UByte = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9086():Void { var l:UByte = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9087():Void { var l:UByte = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9088():Void { var l:UByte = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9089():Void { var l:UByte = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9090():Void { var l:UByte = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9091():Void { var l:UByte = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9092():Void { var l:UByte = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9093():Void { var l:UByte = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9094():Void { var l:UByte = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9095():Void { var l:UByte = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9096():Void { var l:UByte = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9097():Void { var l:UByte = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9098():Void { var l:UByte = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9099():Void { var l:UByte = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9100():Void { var l:UByte = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9101():Void { var l:UByte = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9102():Void { var l:UByte = (-0)+(0); }
	def m9103():Void { var l:UByte = (-0)+(-0); }
	def m9104():Void { var l:UByte = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9105():Void { var l:UByte = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9106():Void { var l:UByte = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9107():Void { var l:UByte = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9108():Void { var l:UByte = (-0)+(127); }
	def m9109():Void { var l:UByte = (-0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9110():Void { var l:UByte = (-0)+(128); }
	def m9111():Void { var l:UByte = (-0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9112():Void { var l:UByte = (-0)+(255); }
	def m9113():Void { var l:UByte = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9114():Void { var l:UByte = (-0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9115():Void { var l:UByte = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9116():Void { var l:UByte = (-0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9117():Void { var l:UByte = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9118():Void { var l:UByte = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9119():Void { var l:UByte = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9120():Void { var l:UByte = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9121():Void { var l:UByte = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9122():Void { var l:UByte = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9123():Void { var l:UByte = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9124():Void { var l:UByte = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9125():Void { var l:UByte = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9126():Void { var l:UByte = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9127():Void { var l:UByte = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9128():Void { var l:UByte = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9129():Void { var l:UByte = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9130():Void { var l:UByte = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9131():Void { var l:UByte = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9132():Void { var l:UByte = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9133():Void { var l:UByte = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9134():Void { var l:UByte = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9135():Void { var l:UByte = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9136():Void { var l:UByte = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9137():Void { var l:UByte = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9138():Void { var l:UByte = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9139():Void { var l:UByte = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9140():Void { var l:UByte = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9141():Void { var l:UByte = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9142():Void { var l:UByte = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9143():Void { var l:UByte = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9144():Void { var l:UByte = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9145():Void { var l:UByte = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9146():Void { var l:UByte = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9147():Void { var l:UByte = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9148():Void { var l:UByte = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9149():Void { var l:UByte = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9150():Void { var l:UByte = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9151():Void { var l:UByte = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9152():Void { var l:UByte = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9153():Void { var l:UByte = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9154():Void { var l:UByte = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9155():Void { var l:UByte = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9156():Void { var l:UByte = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9157():Void { var l:UByte = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9158():Void { var l:UByte = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9159():Void { var l:UByte = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9160():Void { var l:UByte = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9161():Void { var l:UByte = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9162():Void { var l:UByte = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9163():Void { var l:UByte = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9164():Void { var l:UByte = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9165():Void { var l:UByte = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9166():Void { var l:UByte = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9167():Void { var l:UByte = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9168():Void { var l:UByte = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9169():Void { var l:UByte = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9170():Void { var l:UByte = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9171():Void { var l:UByte = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9172():Void { var l:UByte = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9173():Void { var l:UByte = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9174():Void { var l:UByte = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9175():Void { var l:UByte = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9176():Void { var l:UByte = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9177():Void { var l:UByte = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9178():Void { var l:UByte = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9179():Void { var l:UByte = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9180():Void { var l:UByte = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9181():Void { var l:UByte = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9182():Void { var l:UByte = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9183():Void { var l:UByte = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9184():Void { var l:UByte = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9185():Void { var l:UByte = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9186():Void { var l:UByte = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9187():Void { var l:UByte = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9188():Void { var l:UByte = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9189():Void { var l:UByte = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9190():Void { var l:UByte = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9191():Void { var l:UByte = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9192():Void { var l:UByte = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9193():Void { var l:UByte = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9194():Void { var l:UByte = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9195():Void { var l:UByte = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9196():Void { var l:UByte = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9197():Void { var l:UByte = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9198():Void { var l:UByte = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9199():Void { var l:UByte = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9200():Void { var l:UByte = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9201():Void { var l:UByte = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9202():Void { var l:UByte = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9203():Void { var l:UByte = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9204():Void { var l:UByte = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9205():Void { var l:UByte = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9206():Void { var l:UByte = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9207():Void { var l:UByte = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9208():Void { var l:UByte = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9209():Void { var l:UByte = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9210():Void { var l:UByte = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9211():Void { var l:UByte = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9212():Void { var l:UByte = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9213():Void { var l:UByte = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9214():Void { var l:UByte = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9215():Void { var l:UByte = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9216():Void { var l:UByte = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9217():Void { var l:UByte = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9218():Void { var l:UByte = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9219():Void { var l:UByte = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9220():Void { var l:UByte = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9221():Void { var l:UByte = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9222():Void { var l:UByte = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9223():Void { var l:UByte = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9224():Void { var l:UByte = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9225():Void { var l:UByte = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9226():Void { var l:UByte = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9227():Void { var l:UByte = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9228():Void { var l:UByte = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9229():Void { var l:UByte = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9230():Void { var l:UByte = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9231():Void { var l:UByte = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9232():Void { var l:UByte = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9233():Void { var l:UByte = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9234():Void { var l:UByte = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9235():Void { var l:UByte = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9236():Void { var l:UByte = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9237():Void { var l:UByte = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9238():Void { var l:UByte = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9239():Void { var l:UByte = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9240():Void { var l:UByte = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9241():Void { var l:UByte = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9242():Void { var l:UByte = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9243():Void { var l:UByte = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9244():Void { var l:UByte = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9245():Void { var l:UByte = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9246():Void { var l:UByte = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9247():Void { var l:UByte = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9248():Void { var l:UByte = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9249():Void { var l:UByte = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9250():Void { var l:UByte = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9251():Void { var l:UByte = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9252():Void { var l:UByte = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9253():Void { var l:UByte = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9254():Void { var l:UByte = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9255():Void { var l:UByte = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9256():Void { var l:UByte = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9257():Void { var l:UByte = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9258():Void { var l:UByte = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9259():Void { var l:UByte = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9260():Void { var l:UByte = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9261():Void { var l:UByte = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9262():Void { var l:UByte = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9263():Void { var l:UByte = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9264():Void { var l:UByte = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9265():Void { var l:UByte = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9266():Void { var l:UByte = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9267():Void { var l:UByte = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9268():Void { var l:UByte = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9269():Void { var l:UByte = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9270():Void { var l:UByte = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9271():Void { var l:UByte = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9272():Void { var l:UByte = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9273():Void { var l:UByte = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9274():Void { var l:UByte = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9275():Void { var l:UByte = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9276():Void { var l:UByte = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9277():Void { var l:UByte = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9278():Void { var l:UByte = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9279():Void { var l:UByte = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9280():Void { var l:UByte = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9281():Void { var l:UByte = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9282():Void { var l:UByte = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9283():Void { var l:UByte = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9284():Void { var l:UByte = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9285():Void { var l:UByte = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9286():Void { var l:UByte = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9287():Void { var l:UByte = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9288():Void { var l:UByte = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9289():Void { var l:UByte = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9290():Void { var l:UByte = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9291():Void { var l:UByte = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9292():Void { var l:UByte = (127)+(0); }
	def m9293():Void { var l:UByte = (127)+(-0); }
	def m9294():Void { var l:UByte = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9295():Void { var l:UByte = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9296():Void { var l:UByte = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9297():Void { var l:UByte = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9298():Void { var l:UByte = (127)+(127); }
	def m9299():Void { var l:UByte = (127)+(-127); }
	def m9300():Void { var l:UByte = (127)+(128); }
	def m9301():Void { var l:UByte = (127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9302():Void { var l:UByte = (127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9303():Void { var l:UByte = (127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9304():Void { var l:UByte = (127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9305():Void { var l:UByte = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9306():Void { var l:UByte = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9307():Void { var l:UByte = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9308():Void { var l:UByte = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9309():Void { var l:UByte = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9310():Void { var l:UByte = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9311():Void { var l:UByte = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9312():Void { var l:UByte = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9313():Void { var l:UByte = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9314():Void { var l:UByte = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9315():Void { var l:UByte = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9316():Void { var l:UByte = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9317():Void { var l:UByte = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9318():Void { var l:UByte = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9319():Void { var l:UByte = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9320():Void { var l:UByte = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9321():Void { var l:UByte = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9322():Void { var l:UByte = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9323():Void { var l:UByte = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9324():Void { var l:UByte = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9325():Void { var l:UByte = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9326():Void { var l:UByte = (-127)+(w6); }
	def m9327():Void { var l:UByte = (-127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9328():Void { var l:UByte = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9329():Void { var l:UByte = (-127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-127)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9330():Void { var l:UByte = (-127)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9331():Void { var l:UByte = (-127)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9332():Void { var l:UByte = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9333():Void { var l:UByte = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9334():Void { var l:UByte = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9335():Void { var l:UByte = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9336():Void { var l:UByte = (-127)+(127); }
	def m9337():Void { var l:UByte = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9338():Void { var l:UByte = (-127)+(128); }
	def m9339():Void { var l:UByte = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9340():Void { var l:UByte = (-127)+(255); }
	def m9341():Void { var l:UByte = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9342():Void { var l:UByte = (-127)+(256); }
	def m9343():Void { var l:UByte = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9344():Void { var l:UByte = (-127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9345():Void { var l:UByte = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9346():Void { var l:UByte = (-127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9347():Void { var l:UByte = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9348():Void { var l:UByte = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9349():Void { var l:UByte = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9350():Void { var l:UByte = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9351():Void { var l:UByte = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9352():Void { var l:UByte = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9353():Void { var l:UByte = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9354():Void { var l:UByte = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9355():Void { var l:UByte = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9356():Void { var l:UByte = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9357():Void { var l:UByte = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9358():Void { var l:UByte = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9359():Void { var l:UByte = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9360():Void { var l:UByte = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9361():Void { var l:UByte = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9362():Void { var l:UByte = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9363():Void { var l:UByte = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9364():Void { var l:UByte = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9365():Void { var l:UByte = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9366():Void { var l:UByte = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9367():Void { var l:UByte = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9368():Void { var l:UByte = (128)+(0); }
	def m9369():Void { var l:UByte = (128)+(-0); }
	def m9370():Void { var l:UByte = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9371():Void { var l:UByte = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9372():Void { var l:UByte = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9373():Void { var l:UByte = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9374():Void { var l:UByte = (128)+(127); }
	def m9375():Void { var l:UByte = (128)+(-127); }
	def m9376():Void { var l:UByte = (128)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9377():Void { var l:UByte = (128)+(-128); }
	def m9378():Void { var l:UByte = (128)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9379():Void { var l:UByte = (128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9380():Void { var l:UByte = (128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9381():Void { var l:UByte = (128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9382():Void { var l:UByte = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9383():Void { var l:UByte = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9384():Void { var l:UByte = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9385():Void { var l:UByte = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9386():Void { var l:UByte = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9387():Void { var l:UByte = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9388():Void { var l:UByte = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9389():Void { var l:UByte = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9390():Void { var l:UByte = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9391():Void { var l:UByte = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9392():Void { var l:UByte = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9393():Void { var l:UByte = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9394():Void { var l:UByte = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9395():Void { var l:UByte = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9396():Void { var l:UByte = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9397():Void { var l:UByte = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9398():Void { var l:UByte = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9399():Void { var l:UByte = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9400():Void { var l:UByte = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9401():Void { var l:UByte = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9402():Void { var l:UByte = (-128)+(w6); }
	def m9403():Void { var l:UByte = (-128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9404():Void { var l:UByte = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9405():Void { var l:UByte = (-128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-128)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9406():Void { var l:UByte = (-128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9407():Void { var l:UByte = (-128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9408():Void { var l:UByte = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9409():Void { var l:UByte = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9410():Void { var l:UByte = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9411():Void { var l:UByte = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9412():Void { var l:UByte = (-128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9413():Void { var l:UByte = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9414():Void { var l:UByte = (-128)+(128); }
	def m9415():Void { var l:UByte = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9416():Void { var l:UByte = (-128)+(255); }
	def m9417():Void { var l:UByte = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9418():Void { var l:UByte = (-128)+(256); }
	def m9419():Void { var l:UByte = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9420():Void { var l:UByte = (-128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9421():Void { var l:UByte = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9422():Void { var l:UByte = (-128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9423():Void { var l:UByte = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9424():Void { var l:UByte = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9425():Void { var l:UByte = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9426():Void { var l:UByte = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9427():Void { var l:UByte = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9428():Void { var l:UByte = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9429():Void { var l:UByte = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9430():Void { var l:UByte = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9431():Void { var l:UByte = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9432():Void { var l:UByte = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9433():Void { var l:UByte = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9434():Void { var l:UByte = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9435():Void { var l:UByte = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9436():Void { var l:UByte = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9437():Void { var l:UByte = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9438():Void { var l:UByte = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9439():Void { var l:UByte = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9440():Void { var l:UByte = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9441():Void { var l:UByte = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9442():Void { var l:UByte = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9443():Void { var l:UByte = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9444():Void { var l:UByte = (255)+(0); }
	def m9445():Void { var l:UByte = (255)+(-0); }
	def m9446():Void { var l:UByte = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9447():Void { var l:UByte = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9448():Void { var l:UByte = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9449():Void { var l:UByte = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9450():Void { var l:UByte = (255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9451():Void { var l:UByte = (255)+(-127); }
	def m9452():Void { var l:UByte = (255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9453():Void { var l:UByte = (255)+(-128); }
	def m9454():Void { var l:UByte = (255)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9455():Void { var l:UByte = (255)+(-255); }
	def m9456():Void { var l:UByte = (255)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9457():Void { var l:UByte = (255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9458():Void { var l:UByte = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9459():Void { var l:UByte = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9460():Void { var l:UByte = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9461():Void { var l:UByte = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9462():Void { var l:UByte = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9463():Void { var l:UByte = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9464():Void { var l:UByte = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9465():Void { var l:UByte = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9466():Void { var l:UByte = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9467():Void { var l:UByte = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9468():Void { var l:UByte = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9469():Void { var l:UByte = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9470():Void { var l:UByte = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9471():Void { var l:UByte = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9472():Void { var l:UByte = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9473():Void { var l:UByte = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9474():Void { var l:UByte = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9475():Void { var l:UByte = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9476():Void { var l:UByte = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9477():Void { var l:UByte = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9478():Void { var l:UByte = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9479():Void { var l:UByte = (-255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9480():Void { var l:UByte = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9481():Void { var l:UByte = (-255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-255)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9482():Void { var l:UByte = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9483():Void { var l:UByte = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9484():Void { var l:UByte = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9485():Void { var l:UByte = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9486():Void { var l:UByte = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9487():Void { var l:UByte = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9488():Void { var l:UByte = (-255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9489():Void { var l:UByte = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9490():Void { var l:UByte = (-255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9491():Void { var l:UByte = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9492():Void { var l:UByte = (-255)+(255); }
	def m9493():Void { var l:UByte = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9494():Void { var l:UByte = (-255)+(256); }
	def m9495():Void { var l:UByte = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9496():Void { var l:UByte = (-255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9497():Void { var l:UByte = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9498():Void { var l:UByte = (-255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9499():Void { var l:UByte = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9500():Void { var l:UByte = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9501():Void { var l:UByte = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9502():Void { var l:UByte = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9503():Void { var l:UByte = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9504():Void { var l:UByte = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9505():Void { var l:UByte = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9506():Void { var l:UByte = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9507():Void { var l:UByte = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9508():Void { var l:UByte = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9509():Void { var l:UByte = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9510():Void { var l:UByte = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9511():Void { var l:UByte = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9512():Void { var l:UByte = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9513():Void { var l:UByte = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9514():Void { var l:UByte = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9515():Void { var l:UByte = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9516():Void { var l:UByte = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9517():Void { var l:UByte = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9518():Void { var l:UByte = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9519():Void { var l:UByte = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9520():Void { var l:UByte = (256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9521():Void { var l:UByte = (256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9522():Void { var l:UByte = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9523():Void { var l:UByte = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9524():Void { var l:UByte = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9525():Void { var l:UByte = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9526():Void { var l:UByte = (256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9527():Void { var l:UByte = (256)+(-127); }
	def m9528():Void { var l:UByte = (256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9529():Void { var l:UByte = (256)+(-128); }
	def m9530():Void { var l:UByte = (256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9531():Void { var l:UByte = (256)+(-255); }
	def m9532():Void { var l:UByte = (256)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9533():Void { var l:UByte = (256)+(-256); }
	def m9534():Void { var l:UByte = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9535():Void { var l:UByte = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9536():Void { var l:UByte = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9537():Void { var l:UByte = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9538():Void { var l:UByte = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9539():Void { var l:UByte = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9540():Void { var l:UByte = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9541():Void { var l:UByte = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9542():Void { var l:UByte = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9543():Void { var l:UByte = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9544():Void { var l:UByte = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9545():Void { var l:UByte = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9546():Void { var l:UByte = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9547():Void { var l:UByte = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9548():Void { var l:UByte = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9549():Void { var l:UByte = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9550():Void { var l:UByte = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9551():Void { var l:UByte = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9552():Void { var l:UByte = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9553():Void { var l:UByte = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9554():Void { var l:UByte = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9555():Void { var l:UByte = (-256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9556():Void { var l:UByte = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9557():Void { var l:UByte = (-256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-256)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9558():Void { var l:UByte = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9559():Void { var l:UByte = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9560():Void { var l:UByte = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9561():Void { var l:UByte = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9562():Void { var l:UByte = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9563():Void { var l:UByte = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9564():Void { var l:UByte = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9565():Void { var l:UByte = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9566():Void { var l:UByte = (-256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9567():Void { var l:UByte = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9568():Void { var l:UByte = (-256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9569():Void { var l:UByte = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9570():Void { var l:UByte = (-256)+(256); }
	def m9571():Void { var l:UByte = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9572():Void { var l:UByte = (-256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9573():Void { var l:UByte = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9574():Void { var l:UByte = (-256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9575():Void { var l:UByte = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9576():Void { var l:UByte = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9577():Void { var l:UByte = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9578():Void { var l:UByte = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9579():Void { var l:UByte = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9580():Void { var l:UByte = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9581():Void { var l:UByte = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9582():Void { var l:UByte = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9583():Void { var l:UByte = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9584():Void { var l:UByte = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9585():Void { var l:UByte = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9586():Void { var l:UByte = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9587():Void { var l:UByte = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9588():Void { var l:UByte = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9589():Void { var l:UByte = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9590():Void { var l:UByte = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9591():Void { var l:UByte = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9592():Void { var l:UByte = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9593():Void { var l:UByte = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9594():Void { var l:UByte = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9595():Void { var l:UByte = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9596():Void { var l:UByte = (32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9597():Void { var l:UByte = (32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9598():Void { var l:UByte = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9599():Void { var l:UByte = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9600():Void { var l:UByte = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9601():Void { var l:UByte = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9602():Void { var l:UByte = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9603():Void { var l:UByte = (32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9604():Void { var l:UByte = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9605():Void { var l:UByte = (32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9606():Void { var l:UByte = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9607():Void { var l:UByte = (32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9608():Void { var l:UByte = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9609():Void { var l:UByte = (32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9610():Void { var l:UByte = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9611():Void { var l:UByte = (32767)+(-32767); }
	def m9612():Void { var l:UByte = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9613():Void { var l:UByte = (32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9614():Void { var l:UByte = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9615():Void { var l:UByte = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9616():Void { var l:UByte = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9617():Void { var l:UByte = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9618():Void { var l:UByte = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9619():Void { var l:UByte = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9620():Void { var l:UByte = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9621():Void { var l:UByte = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9622():Void { var l:UByte = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9623():Void { var l:UByte = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9624():Void { var l:UByte = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9625():Void { var l:UByte = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9626():Void { var l:UByte = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9627():Void { var l:UByte = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9628():Void { var l:UByte = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9629():Void { var l:UByte = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9630():Void { var l:UByte = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9631():Void { var l:UByte = (-32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9632():Void { var l:UByte = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9633():Void { var l:UByte = (-32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32767)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9634():Void { var l:UByte = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9635():Void { var l:UByte = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9636():Void { var l:UByte = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9637():Void { var l:UByte = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9638():Void { var l:UByte = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9639():Void { var l:UByte = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9640():Void { var l:UByte = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9641():Void { var l:UByte = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9642():Void { var l:UByte = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9643():Void { var l:UByte = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9644():Void { var l:UByte = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9645():Void { var l:UByte = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9646():Void { var l:UByte = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9647():Void { var l:UByte = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9648():Void { var l:UByte = (-32767)+(32767); }
	def m9649():Void { var l:UByte = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9650():Void { var l:UByte = (-32767)+(32768); }
	def m9651():Void { var l:UByte = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9652():Void { var l:UByte = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9653():Void { var l:UByte = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9654():Void { var l:UByte = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9655():Void { var l:UByte = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9656():Void { var l:UByte = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9657():Void { var l:UByte = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9658():Void { var l:UByte = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9659():Void { var l:UByte = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9660():Void { var l:UByte = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9661():Void { var l:UByte = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9662():Void { var l:UByte = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9663():Void { var l:UByte = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9664():Void { var l:UByte = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9665():Void { var l:UByte = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9666():Void { var l:UByte = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9667():Void { var l:UByte = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9668():Void { var l:UByte = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9669():Void { var l:UByte = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9670():Void { var l:UByte = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9671():Void { var l:UByte = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9672():Void { var l:UByte = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9673():Void { var l:UByte = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9674():Void { var l:UByte = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9675():Void { var l:UByte = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9676():Void { var l:UByte = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9677():Void { var l:UByte = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9678():Void { var l:UByte = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9679():Void { var l:UByte = (32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9680():Void { var l:UByte = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9681():Void { var l:UByte = (32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9682():Void { var l:UByte = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9683():Void { var l:UByte = (32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9684():Void { var l:UByte = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9685():Void { var l:UByte = (32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9686():Void { var l:UByte = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9687():Void { var l:UByte = (32768)+(-32767); }
	def m9688():Void { var l:UByte = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9689():Void { var l:UByte = (32768)+(-32768); }
	def m9690():Void { var l:UByte = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9691():Void { var l:UByte = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9692():Void { var l:UByte = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9693():Void { var l:UByte = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9694():Void { var l:UByte = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9695():Void { var l:UByte = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9696():Void { var l:UByte = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9697():Void { var l:UByte = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9698():Void { var l:UByte = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9699():Void { var l:UByte = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9700():Void { var l:UByte = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9701():Void { var l:UByte = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9702():Void { var l:UByte = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9703():Void { var l:UByte = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9704():Void { var l:UByte = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9705():Void { var l:UByte = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9706():Void { var l:UByte = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9707():Void { var l:UByte = (-32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9708():Void { var l:UByte = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9709():Void { var l:UByte = (-32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.operator_as((-32768)) + (TestInstanceOperators.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9710():Void { var l:UByte = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9711():Void { var l:UByte = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9712():Void { var l:UByte = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9713():Void { var l:UByte = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9714():Void { var l:UByte = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9715():Void { var l:UByte = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9716():Void { var l:UByte = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9717():Void { var l:UByte = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9718():Void { var l:UByte = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9719():Void { var l:UByte = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9720():Void { var l:UByte = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9721():Void { var l:UByte = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9722():Void { var l:UByte = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9723():Void { var l:UByte = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9724():Void { var l:UByte = (-32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9725():Void { var l:UByte = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9726():Void { var l:UByte = (-32768)+(32768); }
	def m9727():Void { var l:UByte = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9728():Void { var l:UByte = (-32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9729():Void { var l:UByte = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9730():Void { var l:UByte = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9731():Void { var l:UByte = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9732():Void { var l:UByte = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9733():Void { var l:UByte = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9734():Void { var l:UByte = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9735():Void { var l:UByte = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9736():Void { var l:UByte = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9737():Void { var l:UByte = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9738():Void { var l:UByte = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9739():Void { var l:UByte = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9740():Void { var l:UByte = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9741():Void { var l:UByte = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9742():Void { var l:UByte = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9743():Void { var l:UByte = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9744():Void { var l:UByte = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9745():Void { var l:UByte = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9746():Void { var l:UByte = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9747():Void { var l:UByte = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9748():Void { var l:UByte = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9749():Void { var l:UByte = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9750():Void { var l:UByte = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9751():Void { var l:UByte = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9752():Void { var l:UByte = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9753():Void { var l:UByte = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9754():Void { var l:UByte = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9755():Void { var l:UByte = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9756():Void { var l:UByte = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9757():Void { var l:UByte = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9758():Void { var l:UByte = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9759():Void { var l:UByte = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9760():Void { var l:UByte = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9761():Void { var l:UByte = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9762():Void { var l:UByte = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9763():Void { var l:UByte = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9764():Void { var l:UByte = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9765():Void { var l:UByte = (65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9766():Void { var l:UByte = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9767():Void { var l:UByte = (65535)+(-65535); }
	def m9768():Void { var l:UByte = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9769():Void { var l:UByte = (65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9770():Void { var l:UByte = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9771():Void { var l:UByte = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9772():Void { var l:UByte = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9773():Void { var l:UByte = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9774():Void { var l:UByte = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9775():Void { var l:UByte = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9776():Void { var l:UByte = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9777():Void { var l:UByte = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9778():Void { var l:UByte = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9779():Void { var l:UByte = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9780():Void { var l:UByte = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9781():Void { var l:UByte = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9782():Void { var l:UByte = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9783():Void { var l:UByte = (-65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9784():Void { var l:UByte = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9785():Void { var l:UByte = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9786():Void { var l:UByte = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9787():Void { var l:UByte = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9788():Void { var l:UByte = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9789():Void { var l:UByte = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9790():Void { var l:UByte = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9791():Void { var l:UByte = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9792():Void { var l:UByte = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9793():Void { var l:UByte = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9794():Void { var l:UByte = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9795():Void { var l:UByte = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9796():Void { var l:UByte = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9797():Void { var l:UByte = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9798():Void { var l:UByte = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9799():Void { var l:UByte = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9800():Void { var l:UByte = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9801():Void { var l:UByte = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9802():Void { var l:UByte = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9803():Void { var l:UByte = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9804():Void { var l:UByte = (-65535)+(65535); }
	def m9805():Void { var l:UByte = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9806():Void { var l:UByte = (-65535)+(65536); }
	def m9807():Void { var l:UByte = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9808():Void { var l:UByte = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9809():Void { var l:UByte = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9810():Void { var l:UByte = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9811():Void { var l:UByte = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9812():Void { var l:UByte = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9813():Void { var l:UByte = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9814():Void { var l:UByte = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9815():Void { var l:UByte = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9816():Void { var l:UByte = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9817():Void { var l:UByte = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9818():Void { var l:UByte = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9819():Void { var l:UByte = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9820():Void { var l:UByte = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9821():Void { var l:UByte = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9822():Void { var l:UByte = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9823():Void { var l:UByte = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9824():Void { var l:UByte = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9825():Void { var l:UByte = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9826():Void { var l:UByte = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9827():Void { var l:UByte = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9828():Void { var l:UByte = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9829():Void { var l:UByte = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9830():Void { var l:UByte = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9831():Void { var l:UByte = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9832():Void { var l:UByte = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9833():Void { var l:UByte = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9834():Void { var l:UByte = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9835():Void { var l:UByte = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9836():Void { var l:UByte = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9837():Void { var l:UByte = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9838():Void { var l:UByte = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9839():Void { var l:UByte = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9840():Void { var l:UByte = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9841():Void { var l:UByte = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9842():Void { var l:UByte = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9843():Void { var l:UByte = (65536)+(-65535); }
	def m9844():Void { var l:UByte = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9845():Void { var l:UByte = (65536)+(-65536); }
	def m9846():Void { var l:UByte = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9847():Void { var l:UByte = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9848():Void { var l:UByte = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9849():Void { var l:UByte = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9850():Void { var l:UByte = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9851():Void { var l:UByte = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9852():Void { var l:UByte = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9853():Void { var l:UByte = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9854():Void { var l:UByte = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9855():Void { var l:UByte = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9856():Void { var l:UByte = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9857():Void { var l:UByte = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9858():Void { var l:UByte = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9859():Void { var l:UByte = (-65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9860():Void { var l:UByte = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9861():Void { var l:UByte = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9862():Void { var l:UByte = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9863():Void { var l:UByte = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9864():Void { var l:UByte = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9865():Void { var l:UByte = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9866():Void { var l:UByte = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9867():Void { var l:UByte = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9868():Void { var l:UByte = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9869():Void { var l:UByte = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9870():Void { var l:UByte = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9871():Void { var l:UByte = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9872():Void { var l:UByte = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9873():Void { var l:UByte = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9874():Void { var l:UByte = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9875():Void { var l:UByte = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9876():Void { var l:UByte = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9877():Void { var l:UByte = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9878():Void { var l:UByte = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9879():Void { var l:UByte = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9880():Void { var l:UByte = (-65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9881():Void { var l:UByte = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9882():Void { var l:UByte = (-65536)+(65536); }
	def m9883():Void { var l:UByte = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9884():Void { var l:UByte = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9885():Void { var l:UByte = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9886():Void { var l:UByte = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9887():Void { var l:UByte = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9888():Void { var l:UByte = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9889():Void { var l:UByte = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9890():Void { var l:UByte = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9891():Void { var l:UByte = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9892():Void { var l:UByte = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9893():Void { var l:UByte = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9894():Void { var l:UByte = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9895():Void { var l:UByte = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9896():Void { var l:UByte = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9897():Void { var l:UByte = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9898():Void { var l:UByte = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9899():Void { var l:UByte = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9900():Void { var l:UByte = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9901():Void { var l:UByte = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9902():Void { var l:UByte = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9903():Void { var l:UByte = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9904():Void { var l:UByte = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9905():Void { var l:UByte = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9906():Void { var l:UByte = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9907():Void { var l:UByte = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9908():Void { var l:UByte = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9909():Void { var l:UByte = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9910():Void { var l:UByte = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9911():Void { var l:UByte = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9912():Void { var l:UByte = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9913():Void { var l:UByte = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9914():Void { var l:UByte = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9915():Void { var l:UByte = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9916():Void { var l:UByte = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9917():Void { var l:UByte = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9918():Void { var l:UByte = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9919():Void { var l:UByte = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9920():Void { var l:UByte = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9921():Void { var l:UByte = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9922():Void { var l:UByte = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9923():Void { var l:UByte = (16777216)+(-16777216); }
	def m9924():Void { var l:UByte = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9925():Void { var l:UByte = (16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9926():Void { var l:UByte = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9927():Void { var l:UByte = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9928():Void { var l:UByte = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9929():Void { var l:UByte = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9930():Void { var l:UByte = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9931():Void { var l:UByte = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9932():Void { var l:UByte = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9933():Void { var l:UByte = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9934():Void { var l:UByte = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9935():Void { var l:UByte = (-16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9936():Void { var l:UByte = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9937():Void { var l:UByte = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9938():Void { var l:UByte = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9939():Void { var l:UByte = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9940():Void { var l:UByte = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9941():Void { var l:UByte = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9942():Void { var l:UByte = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9943():Void { var l:UByte = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9944():Void { var l:UByte = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9945():Void { var l:UByte = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9946():Void { var l:UByte = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9947():Void { var l:UByte = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9948():Void { var l:UByte = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9949():Void { var l:UByte = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9950():Void { var l:UByte = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9951():Void { var l:UByte = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9952():Void { var l:UByte = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9953():Void { var l:UByte = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9954():Void { var l:UByte = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9955():Void { var l:UByte = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9956():Void { var l:UByte = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9957():Void { var l:UByte = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9958():Void { var l:UByte = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9959():Void { var l:UByte = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9960():Void { var l:UByte = (-16777216)+(16777216); }
	def m9961():Void { var l:UByte = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9962():Void { var l:UByte = (-16777216)+(16777217); }
	def m9963():Void { var l:UByte = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9964():Void { var l:UByte = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9965():Void { var l:UByte = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9966():Void { var l:UByte = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9967():Void { var l:UByte = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9968():Void { var l:UByte = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9969():Void { var l:UByte = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9970():Void { var l:UByte = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9971():Void { var l:UByte = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9972():Void { var l:UByte = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m9973():Void { var l:UByte = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9974():Void { var l:UByte = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m9975():Void { var l:UByte = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m9976():Void { var l:UByte = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9977():Void { var l:UByte = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9978():Void { var l:UByte = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9979():Void { var l:UByte = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9980():Void { var l:UByte = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9981():Void { var l:UByte = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9982():Void { var l:UByte = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9983():Void { var l:UByte = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9984():Void { var l:UByte = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9985():Void { var l:UByte = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9986():Void { var l:UByte = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9987():Void { var l:UByte = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9988():Void { var l:UByte = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9989():Void { var l:UByte = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9990():Void { var l:UByte = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9991():Void { var l:UByte = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9992():Void { var l:UByte = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9993():Void { var l:UByte = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9994():Void { var l:UByte = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9995():Void { var l:UByte = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9996():Void { var l:UByte = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9997():Void { var l:UByte = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9998():Void { var l:UByte = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9999():Void { var l:UByte = (16777217)+(-16777216); }
	def m10000():Void { var l:UByte = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10001():Void { var l:UByte = (16777217)+(-16777217); }
	def m10002():Void { var l:UByte = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10003():Void { var l:UByte = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10004():Void { var l:UByte = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10005():Void { var l:UByte = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10006():Void { var l:UByte = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10007():Void { var l:UByte = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10008():Void { var l:UByte = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10009():Void { var l:UByte = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10010():Void { var l:UByte = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10011():Void { var l:UByte = (-16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m10012():Void { var l:UByte = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10013():Void { var l:UByte = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10014():Void { var l:UByte = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10015():Void { var l:UByte = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10016():Void { var l:UByte = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10017():Void { var l:UByte = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10018():Void { var l:UByte = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10019():Void { var l:UByte = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10020():Void { var l:UByte = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10021():Void { var l:UByte = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10022():Void { var l:UByte = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10023():Void { var l:UByte = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10024():Void { var l:UByte = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10025():Void { var l:UByte = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10026():Void { var l:UByte = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10027():Void { var l:UByte = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10028():Void { var l:UByte = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10029():Void { var l:UByte = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10030():Void { var l:UByte = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10031():Void { var l:UByte = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10032():Void { var l:UByte = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10033():Void { var l:UByte = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10034():Void { var l:UByte = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10035():Void { var l:UByte = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10036():Void { var l:UByte = (-16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10037():Void { var l:UByte = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10038():Void { var l:UByte = (-16777217)+(16777217); }
	def m10039():Void { var l:UByte = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10040():Void { var l:UByte = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10041():Void { var l:UByte = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10042():Void { var l:UByte = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10043():Void { var l:UByte = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10044():Void { var l:UByte = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10045():Void { var l:UByte = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10046():Void { var l:UByte = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10047():Void { var l:UByte = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10048():Void { var l:UByte = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10049():Void { var l:UByte = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m10050():Void { var l:UByte = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10051():Void { var l:UByte = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10052():Void { var l:UByte = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10053():Void { var l:UByte = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10054():Void { var l:UByte = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10055():Void { var l:UByte = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10056():Void { var l:UByte = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10057():Void { var l:UByte = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10058():Void { var l:UByte = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10059():Void { var l:UByte = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10060():Void { var l:UByte = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10061():Void { var l:UByte = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10062():Void { var l:UByte = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10063():Void { var l:UByte = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10064():Void { var l:UByte = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10065():Void { var l:UByte = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10066():Void { var l:UByte = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10067():Void { var l:UByte = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10068():Void { var l:UByte = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10069():Void { var l:UByte = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10070():Void { var l:UByte = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10071():Void { var l:UByte = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10072():Void { var l:UByte = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10073():Void { var l:UByte = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10074():Void { var l:UByte = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10075():Void { var l:UByte = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10076():Void { var l:UByte = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10077():Void { var l:UByte = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10078():Void { var l:UByte = (2147483647)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10079():Void { var l:UByte = (2147483647)+(-2147483647); }
	def m10080():Void { var l:UByte = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10081():Void { var l:UByte = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10082():Void { var l:UByte = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10083():Void { var l:UByte = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10084():Void { var l:UByte = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10085():Void { var l:UByte = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10086():Void { var l:UByte = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10087():Void { var l:UByte = (-2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m10088():Void { var l:UByte = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10089():Void { var l:UByte = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10090():Void { var l:UByte = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10091():Void { var l:UByte = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10092():Void { var l:UByte = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10093():Void { var l:UByte = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10094():Void { var l:UByte = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10095():Void { var l:UByte = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10096():Void { var l:UByte = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10097():Void { var l:UByte = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10098():Void { var l:UByte = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10099():Void { var l:UByte = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10100():Void { var l:UByte = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10101():Void { var l:UByte = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10102():Void { var l:UByte = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10103():Void { var l:UByte = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10104():Void { var l:UByte = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10105():Void { var l:UByte = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10106():Void { var l:UByte = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10107():Void { var l:UByte = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10108():Void { var l:UByte = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10109():Void { var l:UByte = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10110():Void { var l:UByte = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10111():Void { var l:UByte = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10112():Void { var l:UByte = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10113():Void { var l:UByte = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10114():Void { var l:UByte = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10115():Void { var l:UByte = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10116():Void { var l:UByte = (-2147483647)+(2147483647); }
	def m10117():Void { var l:UByte = (-2147483647)+(-2147483647); }
	def m10118():Void { var l:UInt = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10119():Void { var l:UInt = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10120():Void { var l:UInt = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10121():Void { var l:UInt = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10122():Void { var l:UInt = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10123():Void { var l:UInt = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10124():Void { var l:UInt = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10125():Void { var l:UInt = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10126():Void { var l:UInt = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10127():Void { var l:UInt = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10128():Void { var l:UInt = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10129():Void { var l:UInt = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10130():Void { var l:UInt = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10131():Void { var l:UInt = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10132():Void { var l:UInt = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10133():Void { var l:UInt = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10134():Void { var l:UInt = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10135():Void { var l:UInt = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10136():Void { var l:UInt = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10137():Void { var l:UInt = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10138():Void { var l:UInt = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10139():Void { var l:UInt = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10140():Void { var l:UInt = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10141():Void { var l:UInt = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10142():Void { var l:UInt = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10143():Void { var l:UInt = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10144():Void { var l:UInt = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10145():Void { var l:UInt = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10146():Void { var l:UInt = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10147():Void { var l:UInt = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10148():Void { var l:UInt = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10149():Void { var l:UInt = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10150():Void { var l:UInt = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10151():Void { var l:UInt = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10152():Void { var l:UInt = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10153():Void { var l:UInt = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10154():Void { var l:UInt = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10155():Void { var l:UInt = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10156():Void { var l:UInt = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10157():Void { var l:UInt = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10158():Void { var l:UInt = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10159():Void { var l:UInt = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10160():Void { var l:UInt = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10161():Void { var l:UInt = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10162():Void { var l:UInt = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10163():Void { var l:UInt = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10164():Void { var l:UInt = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10165():Void { var l:UInt = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10166():Void { var l:UInt = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10167():Void { var l:UInt = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10168():Void { var l:UInt = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10169():Void { var l:UInt = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10170():Void { var l:UInt = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10171():Void { var l:UInt = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10172():Void { var l:UInt = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10173():Void { var l:UInt = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10174():Void { var l:UInt = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10175():Void { var l:UInt = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10176():Void { var l:UInt = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10177():Void { var l:UInt = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10178():Void { var l:UInt = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10179():Void { var l:UInt = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10180():Void { var l:UInt = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10181():Void { var l:UInt = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10182():Void { var l:UInt = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10183():Void { var l:UInt = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10184():Void { var l:UInt = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10185():Void { var l:UInt = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10186():Void { var l:UInt = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10187():Void { var l:UInt = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10188():Void { var l:UInt = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10189():Void { var l:UInt = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10190():Void { var l:UInt = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10191():Void { var l:UInt = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10192():Void { var l:UInt = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10193():Void { var l:UInt = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10194():Void { var l:UInt = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10195():Void { var l:UInt = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10196():Void { var l:UInt = (w2)+(w2); }
	def m10197():Void { var l:UInt = (w2)+(w3); }
	def m10198():Void { var l:UInt = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10199():Void { var l:UInt = (w2)+(w5); }
	def m10200():Void { var l:UInt = (w2)+(w6); }
	def m10201():Void { var l:UInt = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m10202():Void { var l:UInt = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m10203():Void { var l:UInt = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m10204():Void { var l:UInt = (w2)+(0); }
	def m10205():Void { var l:UInt = (w2)+(-0); }
	def m10206():Void { var l:UInt = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10207():Void { var l:UInt = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10208():Void { var l:UInt = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10209():Void { var l:UInt = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10210():Void { var l:UInt = (w2)+(127); }
	def m10211():Void { var l:UInt = (w2)+(-127); }
	def m10212():Void { var l:UInt = (w2)+(128); }
	def m10213():Void { var l:UInt = (w2)+(-128); }
	def m10214():Void { var l:UInt = (w2)+(255); }
	def m10215():Void { var l:UInt = (w2)+(-255); }
	def m10216():Void { var l:UInt = (w2)+(256); }
	def m10217():Void { var l:UInt = (w2)+(-256); }
	def m10218():Void { var l:UInt = (w2)+(32767); }
	def m10219():Void { var l:UInt = (w2)+(-32767); }
	def m10220():Void { var l:UInt = (w2)+(32768); }
	def m10221():Void { var l:UInt = (w2)+(-32768); }
	def m10222():Void { var l:UInt = (w2)+(65535); }
	def m10223():Void { var l:UInt = (w2)+(-65535); }
	def m10224():Void { var l:UInt = (w2)+(65536); }
	def m10225():Void { var l:UInt = (w2)+(-65536); }
	def m10226():Void { var l:UInt = (w2)+(16777216); }
	def m10227():Void { var l:UInt = (w2)+(-16777216); }
	def m10228():Void { var l:UInt = (w2)+(16777217); }
	def m10229():Void { var l:UInt = (w2)+(-16777217); }
	def m10230():Void { var l:UInt = (w2)+(2147483647); }
	def m10231():Void { var l:UInt = (w2)+(-2147483647); }
	def m10232():Void { var l:UInt = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10233():Void { var l:UInt = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10234():Void { var l:UInt = (w3)+(w2); }
	def m10235():Void { var l:UInt = (w3)+(w3); }
	def m10236():Void { var l:UInt = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10237():Void { var l:UInt = (w3)+(w5); }
	def m10238():Void { var l:UInt = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10239():Void { var l:UInt = (w3)+(w7); }
	def m10240():Void { var l:UInt = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10241():Void { var l:UInt = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10242():Void { var l:UInt = (w3)+(0); }
	def m10243():Void { var l:UInt = (w3)+(-0); }
	def m10244():Void { var l:UInt = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10245():Void { var l:UInt = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10246():Void { var l:UInt = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10247():Void { var l:UInt = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10248():Void { var l:UInt = (w3)+(127); }
	def m10249():Void { var l:UInt = (w3)+(-127); }
	def m10250():Void { var l:UInt = (w3)+(128); }
	def m10251():Void { var l:UInt = (w3)+(-128); }
	def m10252():Void { var l:UInt = (w3)+(255); }
	def m10253():Void { var l:UInt = (w3)+(-255); }
	def m10254():Void { var l:UInt = (w3)+(256); }
	def m10255():Void { var l:UInt = (w3)+(-256); }
	def m10256():Void { var l:UInt = (w3)+(32767); }
	def m10257():Void { var l:UInt = (w3)+(-32767); }
	def m10258():Void { var l:UInt = (w3)+(32768); }
	def m10259():Void { var l:UInt = (w3)+(-32768); }
	def m10260():Void { var l:UInt = (w3)+(65535); }
	def m10261():Void { var l:UInt = (w3)+(-65535); }
	def m10262():Void { var l:UInt = (w3)+(65536); }
	def m10263():Void { var l:UInt = (w3)+(-65536); }
	def m10264():Void { var l:UInt = (w3)+(16777216); }
	def m10265():Void { var l:UInt = (w3)+(-16777216); }
	def m10266():Void { var l:UInt = (w3)+(16777217); }
	def m10267():Void { var l:UInt = (w3)+(-16777217); }
	def m10268():Void { var l:UInt = (w3)+(2147483647); }
	def m10269():Void { var l:UInt = (w3)+(-2147483647); }
	def m10270():Void { var l:UInt = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10271():Void { var l:UInt = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10272():Void { var l:UInt = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10273():Void { var l:UInt = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10274():Void { var l:UInt = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10275():Void { var l:UInt = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10276():Void { var l:UInt = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m10277():Void { var l:UInt = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m10278():Void { var l:UInt = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10279():Void { var l:UInt = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m10280():Void { var l:UInt = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10281():Void { var l:UInt = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10282():Void { var l:UInt = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10283():Void { var l:UInt = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10284():Void { var l:UInt = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10285():Void { var l:UInt = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10286():Void { var l:UInt = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10287():Void { var l:UInt = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10288():Void { var l:UInt = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10289():Void { var l:UInt = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10290():Void { var l:UInt = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10291():Void { var l:UInt = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10292():Void { var l:UInt = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10293():Void { var l:UInt = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10294():Void { var l:UInt = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10295():Void { var l:UInt = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10296():Void { var l:UInt = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10297():Void { var l:UInt = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10298():Void { var l:UInt = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10299():Void { var l:UInt = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10300():Void { var l:UInt = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10301():Void { var l:UInt = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10302():Void { var l:UInt = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10303():Void { var l:UInt = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10304():Void { var l:UInt = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10305():Void { var l:UInt = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10306():Void { var l:UInt = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10307():Void { var l:UInt = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10308():Void { var l:UInt = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10309():Void { var l:UInt = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10310():Void { var l:UInt = (w5)+(w2); }
	def m10311():Void { var l:UInt = (w5)+(w3); }
	def m10312():Void { var l:UInt = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10313():Void { var l:UInt = (w5)+(w5); }
	def m10314():Void { var l:UInt = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m10315():Void { var l:UInt = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m10316():Void { var l:UInt = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m10317():Void { var l:UInt = (w5)+(w9); }
	def m10318():Void { var l:UInt = (w5)+(0); }
	def m10319():Void { var l:UInt = (w5)+(-0); }
	def m10320():Void { var l:UInt = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10321():Void { var l:UInt = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10322():Void { var l:UInt = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10323():Void { var l:UInt = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10324():Void { var l:UInt = (w5)+(127); }
	def m10325():Void { var l:UInt = (w5)+(-127); }
	def m10326():Void { var l:UInt = (w5)+(128); }
	def m10327():Void { var l:UInt = (w5)+(-128); }
	def m10328():Void { var l:UInt = (w5)+(255); }
	def m10329():Void { var l:UInt = (w5)+(-255); }
	def m10330():Void { var l:UInt = (w5)+(256); }
	def m10331():Void { var l:UInt = (w5)+(-256); }
	def m10332():Void { var l:UInt = (w5)+(32767); }
	def m10333():Void { var l:UInt = (w5)+(-32767); }
	def m10334():Void { var l:UInt = (w5)+(32768); }
	def m10335():Void { var l:UInt = (w5)+(-32768); }
	def m10336():Void { var l:UInt = (w5)+(65535); }
	def m10337():Void { var l:UInt = (w5)+(-65535); }
	def m10338():Void { var l:UInt = (w5)+(65536); }
	def m10339():Void { var l:UInt = (w5)+(-65536); }
	def m10340():Void { var l:UInt = (w5)+(16777216); }
	def m10341():Void { var l:UInt = (w5)+(-16777216); }
	def m10342():Void { var l:UInt = (w5)+(16777217); }
	def m10343():Void { var l:UInt = (w5)+(-16777217); }
	def m10344():Void { var l:UInt = (w5)+(2147483647); }
	def m10345():Void { var l:UInt = (w5)+(-2147483647); }
	def m10346():Void { var l:UInt = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10347():Void { var l:UInt = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10348():Void { var l:UInt = (w6)+(w2); }
	def m10349():Void { var l:UInt = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10350():Void { var l:UInt = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10351():Void { var l:UInt = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m10352():Void { var l:UInt = (w6)+(w6); }
	def m10353():Void { var l:UInt = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m10354():Void { var l:UInt = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m10355():Void { var l:UInt = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m10356():Void { var l:UInt = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m10357():Void { var l:UInt = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m10358():Void { var l:UInt = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10359():Void { var l:UInt = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10360():Void { var l:UInt = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10361():Void { var l:UInt = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10362():Void { var l:UInt = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m10363():Void { var l:UInt = (w6)+(-127); }
	def m10364():Void { var l:UInt = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m10365():Void { var l:UInt = (w6)+(-128); }
	def m10366():Void { var l:UInt = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m10367():Void { var l:UInt = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m10368():Void { var l:UInt = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m10369():Void { var l:UInt = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m10370():Void { var l:UInt = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m10371():Void { var l:UInt = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m10372():Void { var l:UInt = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m10373():Void { var l:UInt = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m10374():Void { var l:UInt = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m10375():Void { var l:UInt = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m10376():Void { var l:UInt = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m10377():Void { var l:UInt = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m10378():Void { var l:UInt = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m10379():Void { var l:UInt = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m10380():Void { var l:UInt = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m10381():Void { var l:UInt = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m10382():Void { var l:UInt = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m10383():Void { var l:UInt = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m10384():Void { var l:UInt = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10385():Void { var l:UInt = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10386():Void { var l:UInt = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m10387():Void { var l:UInt = (w7)+(w3); }
	def m10388():Void { var l:UInt = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10389():Void { var l:UInt = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m10390():Void { var l:UInt = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m10391():Void { var l:UInt = (w7)+(w7); }
	def m10392():Void { var l:UInt = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10393():Void { var l:UInt = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m10394():Void { var l:UInt = (w7)+(0); }
	def m10395():Void { var l:UInt = (w7)+(-0); }
	def m10396():Void { var l:UInt = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10397():Void { var l:UInt = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10398():Void { var l:UInt = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10399():Void { var l:UInt = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10400():Void { var l:UInt = (w7)+(127); }
	def m10401():Void { var l:UInt = (w7)+(-127); }
	def m10402():Void { var l:UInt = (w7)+(128); }
	def m10403():Void { var l:UInt = (w7)+(-128); }
	def m10404():Void { var l:UInt = (w7)+(255); }
	def m10405():Void { var l:UInt = (w7)+(-255); }
	def m10406():Void { var l:UInt = (w7)+(256); }
	def m10407():Void { var l:UInt = (w7)+(-256); }
	def m10408():Void { var l:UInt = (w7)+(32767); }
	def m10409():Void { var l:UInt = (w7)+(-32767); }
	def m10410():Void { var l:UInt = (w7)+(32768); }
	def m10411():Void { var l:UInt = (w7)+(-32768); }
	def m10412():Void { var l:UInt = (w7)+(65535); }
	def m10413():Void { var l:UInt = (w7)+(-65535); }
	def m10414():Void { var l:UInt = (w7)+(65536); }
	def m10415():Void { var l:UInt = (w7)+(-65536); }
	def m10416():Void { var l:UInt = (w7)+(16777216); }
	def m10417():Void { var l:UInt = (w7)+(-16777216); }
	def m10418():Void { var l:UInt = (w7)+(16777217); }
	def m10419():Void { var l:UInt = (w7)+(-16777217); }
	def m10420():Void { var l:UInt = (w7)+(2147483647); }
	def m10421():Void { var l:UInt = (w7)+(-2147483647); }
	def m10422():Void { var l:UInt = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10423():Void { var l:UInt = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10424():Void { var l:UInt = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m10425():Void { var l:UInt = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m10426():Void { var l:UInt = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10427():Void { var l:UInt = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m10428():Void { var l:UInt = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m10429():Void { var l:UInt = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m10430():Void { var l:UInt = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10431():Void { var l:UInt = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m10432():Void { var l:UInt = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m10433():Void { var l:UInt = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m10434():Void { var l:UInt = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10435():Void { var l:UInt = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10436():Void { var l:UInt = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10437():Void { var l:UInt = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10438():Void { var l:UInt = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m10439():Void { var l:UInt = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m10440():Void { var l:UInt = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m10441():Void { var l:UInt = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m10442():Void { var l:UInt = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m10443():Void { var l:UInt = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m10444():Void { var l:UInt = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m10445():Void { var l:UInt = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m10446():Void { var l:UInt = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m10447():Void { var l:UInt = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m10448():Void { var l:UInt = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m10449():Void { var l:UInt = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m10450():Void { var l:UInt = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m10451():Void { var l:UInt = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m10452():Void { var l:UInt = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m10453():Void { var l:UInt = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m10454():Void { var l:UInt = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m10455():Void { var l:UInt = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m10456():Void { var l:UInt = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m10457():Void { var l:UInt = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m10458():Void { var l:UInt = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m10459():Void { var l:UInt = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m10460():Void { var l:UInt = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10461():Void { var l:UInt = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10462():Void { var l:UInt = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m10463():Void { var l:UInt = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m10464():Void { var l:UInt = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m10465():Void { var l:UInt = (w9)+(w5); }
	def m10466():Void { var l:UInt = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m10467():Void { var l:UInt = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m10468():Void { var l:UInt = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m10469():Void { var l:UInt = (w9)+(w9); }
	def m10470():Void { var l:UInt = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m10471():Void { var l:UInt = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m10472():Void { var l:UInt = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10473():Void { var l:UInt = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10474():Void { var l:UInt = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10475():Void { var l:UInt = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10476():Void { var l:UInt = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m10477():Void { var l:UInt = (w9)+(-127); }
	def m10478():Void { var l:UInt = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m10479():Void { var l:UInt = (w9)+(-128); }
	def m10480():Void { var l:UInt = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m10481():Void { var l:UInt = (w9)+(-255); }
	def m10482():Void { var l:UInt = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m10483():Void { var l:UInt = (w9)+(-256); }
	def m10484():Void { var l:UInt = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m10485():Void { var l:UInt = (w9)+(-32767); }
	def m10486():Void { var l:UInt = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m10487():Void { var l:UInt = (w9)+(-32768); }
	def m10488():Void { var l:UInt = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m10489():Void { var l:UInt = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m10490():Void { var l:UInt = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m10491():Void { var l:UInt = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m10492():Void { var l:UInt = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m10493():Void { var l:UInt = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m10494():Void { var l:UInt = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m10495():Void { var l:UInt = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m10496():Void { var l:UInt = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m10497():Void { var l:UInt = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m10498():Void { var l:UInt = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10499():Void { var l:UInt = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10500():Void { var l:UInt = (0)+(w2); }
	def m10501():Void { var l:UInt = (0)+(w3); }
	def m10502():Void { var l:UInt = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10503():Void { var l:UInt = (0)+(w5); }
	def m10504():Void { var l:UInt = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10505():Void { var l:UInt = (0)+(w7); }
	def m10506():Void { var l:UInt = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10507():Void { var l:UInt = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10508():Void { var l:UInt = (0)+(0); }
	def m10509():Void { var l:UInt = (0)+(-0); }
	def m10510():Void { var l:UInt = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10511():Void { var l:UInt = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10512():Void { var l:UInt = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10513():Void { var l:UInt = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10514():Void { var l:UInt = (0)+(127); }
	def m10515():Void { var l:UInt = (0)+(-127); }
	def m10516():Void { var l:UInt = (0)+(128); }
	def m10517():Void { var l:UInt = (0)+(-128); }
	def m10518():Void { var l:UInt = (0)+(255); }
	def m10519():Void { var l:UInt = (0)+(-255); }
	def m10520():Void { var l:UInt = (0)+(256); }
	def m10521():Void { var l:UInt = (0)+(-256); }
	def m10522():Void { var l:UInt = (0)+(32767); }
	def m10523():Void { var l:UInt = (0)+(-32767); }
	def m10524():Void { var l:UInt = (0)+(32768); }
	def m10525():Void { var l:UInt = (0)+(-32768); }
	def m10526():Void { var l:UInt = (0)+(65535); }
	def m10527():Void { var l:UInt = (0)+(-65535); }
	def m10528():Void { var l:UInt = (0)+(65536); }
	def m10529():Void { var l:UInt = (0)+(-65536); }
	def m10530():Void { var l:UInt = (0)+(16777216); }
	def m10531():Void { var l:UInt = (0)+(-16777216); }
	def m10532():Void { var l:UInt = (0)+(16777217); }
	def m10533():Void { var l:UInt = (0)+(-16777217); }
	def m10534():Void { var l:UInt = (0)+(2147483647); }
	def m10535():Void { var l:UInt = (0)+(-2147483647); }
	def m10536():Void { var l:UInt = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10537():Void { var l:UInt = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10538():Void { var l:UInt = (-0)+(w2); }
	def m10539():Void { var l:UInt = (-0)+(w3); }
	def m10540():Void { var l:UInt = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10541():Void { var l:UInt = (-0)+(w5); }
	def m10542():Void { var l:UInt = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10543():Void { var l:UInt = (-0)+(w7); }
	def m10544():Void { var l:UInt = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10545():Void { var l:UInt = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10546():Void { var l:UInt = (-0)+(0); }
	def m10547():Void { var l:UInt = (-0)+(-0); }
	def m10548():Void { var l:UInt = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10549():Void { var l:UInt = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10550():Void { var l:UInt = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10551():Void { var l:UInt = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10552():Void { var l:UInt = (-0)+(127); }
	def m10553():Void { var l:UInt = (-0)+(-127); }
	def m10554():Void { var l:UInt = (-0)+(128); }
	def m10555():Void { var l:UInt = (-0)+(-128); }
	def m10556():Void { var l:UInt = (-0)+(255); }
	def m10557():Void { var l:UInt = (-0)+(-255); }
	def m10558():Void { var l:UInt = (-0)+(256); }
	def m10559():Void { var l:UInt = (-0)+(-256); }
	def m10560():Void { var l:UInt = (-0)+(32767); }
	def m10561():Void { var l:UInt = (-0)+(-32767); }
	def m10562():Void { var l:UInt = (-0)+(32768); }
	def m10563():Void { var l:UInt = (-0)+(-32768); }
	def m10564():Void { var l:UInt = (-0)+(65535); }
	def m10565():Void { var l:UInt = (-0)+(-65535); }
	def m10566():Void { var l:UInt = (-0)+(65536); }
	def m10567():Void { var l:UInt = (-0)+(-65536); }
	def m10568():Void { var l:UInt = (-0)+(16777216); }
	def m10569():Void { var l:UInt = (-0)+(-16777216); }
	def m10570():Void { var l:UInt = (-0)+(16777217); }
	def m10571():Void { var l:UInt = (-0)+(-16777217); }
	def m10572():Void { var l:UInt = (-0)+(2147483647); }
	def m10573():Void { var l:UInt = (-0)+(-2147483647); }
	def m10574():Void { var l:UInt = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10575():Void { var l:UInt = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10576():Void { var l:UInt = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10577():Void { var l:UInt = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10578():Void { var l:UInt = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10579():Void { var l:UInt = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10580():Void { var l:UInt = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10581():Void { var l:UInt = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10582():Void { var l:UInt = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10583():Void { var l:UInt = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10584():Void { var l:UInt = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10585():Void { var l:UInt = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10586():Void { var l:UInt = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10587():Void { var l:UInt = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10588():Void { var l:UInt = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10589():Void { var l:UInt = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10590():Void { var l:UInt = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10591():Void { var l:UInt = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10592():Void { var l:UInt = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10593():Void { var l:UInt = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10594():Void { var l:UInt = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10595():Void { var l:UInt = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10596():Void { var l:UInt = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10597():Void { var l:UInt = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10598():Void { var l:UInt = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10599():Void { var l:UInt = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10600():Void { var l:UInt = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10601():Void { var l:UInt = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10602():Void { var l:UInt = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10603():Void { var l:UInt = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10604():Void { var l:UInt = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10605():Void { var l:UInt = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10606():Void { var l:UInt = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10607():Void { var l:UInt = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10608():Void { var l:UInt = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10609():Void { var l:UInt = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10610():Void { var l:UInt = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10611():Void { var l:UInt = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10612():Void { var l:UInt = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10613():Void { var l:UInt = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10614():Void { var l:UInt = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10615():Void { var l:UInt = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10616():Void { var l:UInt = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10617():Void { var l:UInt = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10618():Void { var l:UInt = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10619():Void { var l:UInt = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10620():Void { var l:UInt = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10621():Void { var l:UInt = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10622():Void { var l:UInt = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10623():Void { var l:UInt = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10624():Void { var l:UInt = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10625():Void { var l:UInt = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10626():Void { var l:UInt = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10627():Void { var l:UInt = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10628():Void { var l:UInt = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10629():Void { var l:UInt = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10630():Void { var l:UInt = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10631():Void { var l:UInt = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10632():Void { var l:UInt = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10633():Void { var l:UInt = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10634():Void { var l:UInt = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10635():Void { var l:UInt = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10636():Void { var l:UInt = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10637():Void { var l:UInt = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10638():Void { var l:UInt = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10639():Void { var l:UInt = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10640():Void { var l:UInt = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10641():Void { var l:UInt = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10642():Void { var l:UInt = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10643():Void { var l:UInt = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10644():Void { var l:UInt = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10645():Void { var l:UInt = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10646():Void { var l:UInt = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10647():Void { var l:UInt = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10648():Void { var l:UInt = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10649():Void { var l:UInt = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10650():Void { var l:UInt = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10651():Void { var l:UInt = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10652():Void { var l:UInt = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10653():Void { var l:UInt = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10654():Void { var l:UInt = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10655():Void { var l:UInt = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10656():Void { var l:UInt = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10657():Void { var l:UInt = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10658():Void { var l:UInt = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10659():Void { var l:UInt = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10660():Void { var l:UInt = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10661():Void { var l:UInt = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10662():Void { var l:UInt = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10663():Void { var l:UInt = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10664():Void { var l:UInt = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10665():Void { var l:UInt = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10666():Void { var l:UInt = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10667():Void { var l:UInt = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10668():Void { var l:UInt = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10669():Void { var l:UInt = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10670():Void { var l:UInt = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10671():Void { var l:UInt = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10672():Void { var l:UInt = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10673():Void { var l:UInt = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10674():Void { var l:UInt = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10675():Void { var l:UInt = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10676():Void { var l:UInt = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10677():Void { var l:UInt = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10678():Void { var l:UInt = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10679():Void { var l:UInt = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10680():Void { var l:UInt = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10681():Void { var l:UInt = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10682():Void { var l:UInt = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10683():Void { var l:UInt = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10684():Void { var l:UInt = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10685():Void { var l:UInt = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10686():Void { var l:UInt = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10687():Void { var l:UInt = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10688():Void { var l:UInt = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10689():Void { var l:UInt = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10690():Void { var l:UInt = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10691():Void { var l:UInt = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10692():Void { var l:UInt = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10693():Void { var l:UInt = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10694():Void { var l:UInt = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10695():Void { var l:UInt = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10696():Void { var l:UInt = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10697():Void { var l:UInt = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10698():Void { var l:UInt = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10699():Void { var l:UInt = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10700():Void { var l:UInt = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10701():Void { var l:UInt = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10702():Void { var l:UInt = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10703():Void { var l:UInt = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10704():Void { var l:UInt = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10705():Void { var l:UInt = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10706():Void { var l:UInt = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10707():Void { var l:UInt = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10708():Void { var l:UInt = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10709():Void { var l:UInt = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10710():Void { var l:UInt = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10711():Void { var l:UInt = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10712():Void { var l:UInt = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10713():Void { var l:UInt = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10714():Void { var l:UInt = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10715():Void { var l:UInt = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10716():Void { var l:UInt = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10717():Void { var l:UInt = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10718():Void { var l:UInt = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10719():Void { var l:UInt = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10720():Void { var l:UInt = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10721():Void { var l:UInt = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10722():Void { var l:UInt = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10723():Void { var l:UInt = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10724():Void { var l:UInt = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10725():Void { var l:UInt = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10726():Void { var l:UInt = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10727():Void { var l:UInt = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10728():Void { var l:UInt = (127)+(w2); }
	def m10729():Void { var l:UInt = (127)+(w3); }
	def m10730():Void { var l:UInt = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10731():Void { var l:UInt = (127)+(w5); }
	def m10732():Void { var l:UInt = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10733():Void { var l:UInt = (127)+(w7); }
	def m10734():Void { var l:UInt = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10735():Void { var l:UInt = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10736():Void { var l:UInt = (127)+(0); }
	def m10737():Void { var l:UInt = (127)+(-0); }
	def m10738():Void { var l:UInt = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10739():Void { var l:UInt = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10740():Void { var l:UInt = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10741():Void { var l:UInt = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10742():Void { var l:UInt = (127)+(127); }
	def m10743():Void { var l:UInt = (127)+(-127); }
	def m10744():Void { var l:UInt = (127)+(128); }
	def m10745():Void { var l:UInt = (127)+(-128); }
	def m10746():Void { var l:UInt = (127)+(255); }
	def m10747():Void { var l:UInt = (127)+(-255); }
	def m10748():Void { var l:UInt = (127)+(256); }
	def m10749():Void { var l:UInt = (127)+(-256); }
	def m10750():Void { var l:UInt = (127)+(32767); }
	def m10751():Void { var l:UInt = (127)+(-32767); }
	def m10752():Void { var l:UInt = (127)+(32768); }
	def m10753():Void { var l:UInt = (127)+(-32768); }
	def m10754():Void { var l:UInt = (127)+(65535); }
	def m10755():Void { var l:UInt = (127)+(-65535); }
	def m10756():Void { var l:UInt = (127)+(65536); }
	def m10757():Void { var l:UInt = (127)+(-65536); }
	def m10758():Void { var l:UInt = (127)+(16777216); }
	def m10759():Void { var l:UInt = (127)+(-16777216); }
	def m10760():Void { var l:UInt = (127)+(16777217); }
	def m10761():Void { var l:UInt = (127)+(-16777217); }
	def m10762():Void { var l:UInt = (127)+(2147483647); }
	def m10763():Void { var l:UInt = (127)+(-2147483647); }
	def m10764():Void { var l:UInt = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10765():Void { var l:UInt = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10766():Void { var l:UInt = (-127)+(w2); }
	def m10767():Void { var l:UInt = (-127)+(w3); }
	def m10768():Void { var l:UInt = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10769():Void { var l:UInt = (-127)+(w5); }
	def m10770():Void { var l:UInt = (-127)+(w6); }
	def m10771():Void { var l:UInt = (-127)+(w7); }
	def m10772():Void { var l:UInt = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10773():Void { var l:UInt = (-127)+(w9); }
	def m10774():Void { var l:UInt = (-127)+(0); }
	def m10775():Void { var l:UInt = (-127)+(-0); }
	def m10776():Void { var l:UInt = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10777():Void { var l:UInt = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10778():Void { var l:UInt = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10779():Void { var l:UInt = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10780():Void { var l:UInt = (-127)+(127); }
	def m10781():Void { var l:UInt = (-127)+(-127); }
	def m10782():Void { var l:UInt = (-127)+(128); }
	def m10783():Void { var l:UInt = (-127)+(-128); }
	def m10784():Void { var l:UInt = (-127)+(255); }
	def m10785():Void { var l:UInt = (-127)+(-255); }
	def m10786():Void { var l:UInt = (-127)+(256); }
	def m10787():Void { var l:UInt = (-127)+(-256); }
	def m10788():Void { var l:UInt = (-127)+(32767); }
	def m10789():Void { var l:UInt = (-127)+(-32767); }
	def m10790():Void { var l:UInt = (-127)+(32768); }
	def m10791():Void { var l:UInt = (-127)+(-32768); }
	def m10792():Void { var l:UInt = (-127)+(65535); }
	def m10793():Void { var l:UInt = (-127)+(-65535); }
	def m10794():Void { var l:UInt = (-127)+(65536); }
	def m10795():Void { var l:UInt = (-127)+(-65536); }
	def m10796():Void { var l:UInt = (-127)+(16777216); }
	def m10797():Void { var l:UInt = (-127)+(-16777216); }
	def m10798():Void { var l:UInt = (-127)+(16777217); }
	def m10799():Void { var l:UInt = (-127)+(-16777217); }
	def m10800():Void { var l:UInt = (-127)+(2147483647); }
	def m10801():Void { var l:UInt = (-127)+(-2147483647); }
	def m10802():Void { var l:UInt = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10803():Void { var l:UInt = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10804():Void { var l:UInt = (128)+(w2); }
	def m10805():Void { var l:UInt = (128)+(w3); }
	def m10806():Void { var l:UInt = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10807():Void { var l:UInt = (128)+(w5); }
	def m10808():Void { var l:UInt = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10809():Void { var l:UInt = (128)+(w7); }
	def m10810():Void { var l:UInt = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10811():Void { var l:UInt = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10812():Void { var l:UInt = (128)+(0); }
	def m10813():Void { var l:UInt = (128)+(-0); }
	def m10814():Void { var l:UInt = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10815():Void { var l:UInt = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10816():Void { var l:UInt = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10817():Void { var l:UInt = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10818():Void { var l:UInt = (128)+(127); }
	def m10819():Void { var l:UInt = (128)+(-127); }
	def m10820():Void { var l:UInt = (128)+(128); }
	def m10821():Void { var l:UInt = (128)+(-128); }
	def m10822():Void { var l:UInt = (128)+(255); }
	def m10823():Void { var l:UInt = (128)+(-255); }
	def m10824():Void { var l:UInt = (128)+(256); }
	def m10825():Void { var l:UInt = (128)+(-256); }
	def m10826():Void { var l:UInt = (128)+(32767); }
	def m10827():Void { var l:UInt = (128)+(-32767); }
	def m10828():Void { var l:UInt = (128)+(32768); }
	def m10829():Void { var l:UInt = (128)+(-32768); }
	def m10830():Void { var l:UInt = (128)+(65535); }
	def m10831():Void { var l:UInt = (128)+(-65535); }
	def m10832():Void { var l:UInt = (128)+(65536); }
	def m10833():Void { var l:UInt = (128)+(-65536); }
	def m10834():Void { var l:UInt = (128)+(16777216); }
	def m10835():Void { var l:UInt = (128)+(-16777216); }
	def m10836():Void { var l:UInt = (128)+(16777217); }
	def m10837():Void { var l:UInt = (128)+(-16777217); }
	def m10838():Void { var l:UInt = (128)+(2147483647); }
	def m10839():Void { var l:UInt = (128)+(-2147483647); }
	def m10840():Void { var l:UInt = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10841():Void { var l:UInt = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10842():Void { var l:UInt = (-128)+(w2); }
	def m10843():Void { var l:UInt = (-128)+(w3); }
	def m10844():Void { var l:UInt = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10845():Void { var l:UInt = (-128)+(w5); }
	def m10846():Void { var l:UInt = (-128)+(w6); }
	def m10847():Void { var l:UInt = (-128)+(w7); }
	def m10848():Void { var l:UInt = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10849():Void { var l:UInt = (-128)+(w9); }
	def m10850():Void { var l:UInt = (-128)+(0); }
	def m10851():Void { var l:UInt = (-128)+(-0); }
	def m10852():Void { var l:UInt = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10853():Void { var l:UInt = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10854():Void { var l:UInt = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10855():Void { var l:UInt = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10856():Void { var l:UInt = (-128)+(127); }
	def m10857():Void { var l:UInt = (-128)+(-127); }
	def m10858():Void { var l:UInt = (-128)+(128); }
	def m10859():Void { var l:UInt = (-128)+(-128); }
	def m10860():Void { var l:UInt = (-128)+(255); }
	def m10861():Void { var l:UInt = (-128)+(-255); }
	def m10862():Void { var l:UInt = (-128)+(256); }
	def m10863():Void { var l:UInt = (-128)+(-256); }
	def m10864():Void { var l:UInt = (-128)+(32767); }
	def m10865():Void { var l:UInt = (-128)+(-32767); }
	def m10866():Void { var l:UInt = (-128)+(32768); }
	def m10867():Void { var l:UInt = (-128)+(-32768); }
	def m10868():Void { var l:UInt = (-128)+(65535); }
	def m10869():Void { var l:UInt = (-128)+(-65535); }
	def m10870():Void { var l:UInt = (-128)+(65536); }
	def m10871():Void { var l:UInt = (-128)+(-65536); }
	def m10872():Void { var l:UInt = (-128)+(16777216); }
	def m10873():Void { var l:UInt = (-128)+(-16777216); }
	def m10874():Void { var l:UInt = (-128)+(16777217); }
	def m10875():Void { var l:UInt = (-128)+(-16777217); }
	def m10876():Void { var l:UInt = (-128)+(2147483647); }
	def m10877():Void { var l:UInt = (-128)+(-2147483647); }
	def m10878():Void { var l:UInt = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10879():Void { var l:UInt = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10880():Void { var l:UInt = (255)+(w2); }
	def m10881():Void { var l:UInt = (255)+(w3); }
	def m10882():Void { var l:UInt = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10883():Void { var l:UInt = (255)+(w5); }
	def m10884():Void { var l:UInt = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10885():Void { var l:UInt = (255)+(w7); }
	def m10886():Void { var l:UInt = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10887():Void { var l:UInt = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10888():Void { var l:UInt = (255)+(0); }
	def m10889():Void { var l:UInt = (255)+(-0); }
	def m10890():Void { var l:UInt = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10891():Void { var l:UInt = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10892():Void { var l:UInt = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10893():Void { var l:UInt = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10894():Void { var l:UInt = (255)+(127); }
	def m10895():Void { var l:UInt = (255)+(-127); }
	def m10896():Void { var l:UInt = (255)+(128); }
	def m10897():Void { var l:UInt = (255)+(-128); }
	def m10898():Void { var l:UInt = (255)+(255); }
	def m10899():Void { var l:UInt = (255)+(-255); }
	def m10900():Void { var l:UInt = (255)+(256); }
	def m10901():Void { var l:UInt = (255)+(-256); }
	def m10902():Void { var l:UInt = (255)+(32767); }
	def m10903():Void { var l:UInt = (255)+(-32767); }
	def m10904():Void { var l:UInt = (255)+(32768); }
	def m10905():Void { var l:UInt = (255)+(-32768); }
	def m10906():Void { var l:UInt = (255)+(65535); }
	def m10907():Void { var l:UInt = (255)+(-65535); }
	def m10908():Void { var l:UInt = (255)+(65536); }
	def m10909():Void { var l:UInt = (255)+(-65536); }
	def m10910():Void { var l:UInt = (255)+(16777216); }
	def m10911():Void { var l:UInt = (255)+(-16777216); }
	def m10912():Void { var l:UInt = (255)+(16777217); }
	def m10913():Void { var l:UInt = (255)+(-16777217); }
	def m10914():Void { var l:UInt = (255)+(2147483647); }
	def m10915():Void { var l:UInt = (255)+(-2147483647); }
	def m10916():Void { var l:UInt = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10917():Void { var l:UInt = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10918():Void { var l:UInt = (-255)+(w2); }
	def m10919():Void { var l:UInt = (-255)+(w3); }
	def m10920():Void { var l:UInt = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10921():Void { var l:UInt = (-255)+(w5); }
	def m10922():Void { var l:UInt = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10923():Void { var l:UInt = (-255)+(w7); }
	def m10924():Void { var l:UInt = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10925():Void { var l:UInt = (-255)+(w9); }
	def m10926():Void { var l:UInt = (-255)+(0); }
	def m10927():Void { var l:UInt = (-255)+(-0); }
	def m10928():Void { var l:UInt = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10929():Void { var l:UInt = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10930():Void { var l:UInt = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10931():Void { var l:UInt = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10932():Void { var l:UInt = (-255)+(127); }
	def m10933():Void { var l:UInt = (-255)+(-127); }
	def m10934():Void { var l:UInt = (-255)+(128); }
	def m10935():Void { var l:UInt = (-255)+(-128); }
	def m10936():Void { var l:UInt = (-255)+(255); }
	def m10937():Void { var l:UInt = (-255)+(-255); }
	def m10938():Void { var l:UInt = (-255)+(256); }
	def m10939():Void { var l:UInt = (-255)+(-256); }
	def m10940():Void { var l:UInt = (-255)+(32767); }
	def m10941():Void { var l:UInt = (-255)+(-32767); }
	def m10942():Void { var l:UInt = (-255)+(32768); }
	def m10943():Void { var l:UInt = (-255)+(-32768); }
	def m10944():Void { var l:UInt = (-255)+(65535); }
	def m10945():Void { var l:UInt = (-255)+(-65535); }
	def m10946():Void { var l:UInt = (-255)+(65536); }
	def m10947():Void { var l:UInt = (-255)+(-65536); }
	def m10948():Void { var l:UInt = (-255)+(16777216); }
	def m10949():Void { var l:UInt = (-255)+(-16777216); }
	def m10950():Void { var l:UInt = (-255)+(16777217); }
	def m10951():Void { var l:UInt = (-255)+(-16777217); }
	def m10952():Void { var l:UInt = (-255)+(2147483647); }
	def m10953():Void { var l:UInt = (-255)+(-2147483647); }
	def m10954():Void { var l:UInt = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10955():Void { var l:UInt = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10956():Void { var l:UInt = (256)+(w2); }
	def m10957():Void { var l:UInt = (256)+(w3); }
	def m10958():Void { var l:UInt = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10959():Void { var l:UInt = (256)+(w5); }
	def m10960():Void { var l:UInt = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10961():Void { var l:UInt = (256)+(w7); }
	def m10962():Void { var l:UInt = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m10963():Void { var l:UInt = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m10964():Void { var l:UInt = (256)+(0); }
	def m10965():Void { var l:UInt = (256)+(-0); }
	def m10966():Void { var l:UInt = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10967():Void { var l:UInt = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10968():Void { var l:UInt = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10969():Void { var l:UInt = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10970():Void { var l:UInt = (256)+(127); }
	def m10971():Void { var l:UInt = (256)+(-127); }
	def m10972():Void { var l:UInt = (256)+(128); }
	def m10973():Void { var l:UInt = (256)+(-128); }
	def m10974():Void { var l:UInt = (256)+(255); }
	def m10975():Void { var l:UInt = (256)+(-255); }
	def m10976():Void { var l:UInt = (256)+(256); }
	def m10977():Void { var l:UInt = (256)+(-256); }
	def m10978():Void { var l:UInt = (256)+(32767); }
	def m10979():Void { var l:UInt = (256)+(-32767); }
	def m10980():Void { var l:UInt = (256)+(32768); }
	def m10981():Void { var l:UInt = (256)+(-32768); }
	def m10982():Void { var l:UInt = (256)+(65535); }
	def m10983():Void { var l:UInt = (256)+(-65535); }
	def m10984():Void { var l:UInt = (256)+(65536); }
	def m10985():Void { var l:UInt = (256)+(-65536); }
	def m10986():Void { var l:UInt = (256)+(16777216); }
	def m10987():Void { var l:UInt = (256)+(-16777216); }
	def m10988():Void { var l:UInt = (256)+(16777217); }
	def m10989():Void { var l:UInt = (256)+(-16777217); }
	def m10990():Void { var l:UInt = (256)+(2147483647); }
	def m10991():Void { var l:UInt = (256)+(-2147483647); }
	def m10992():Void { var l:UInt = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10993():Void { var l:UInt = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10994():Void { var l:UInt = (-256)+(w2); }
	def m10995():Void { var l:UInt = (-256)+(w3); }
	def m10996():Void { var l:UInt = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10997():Void { var l:UInt = (-256)+(w5); }
	def m10998():Void { var l:UInt = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m10999():Void { var l:UInt = (-256)+(w7); }
	def m11000():Void { var l:UInt = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11001():Void { var l:UInt = (-256)+(w9); }
	def m11002():Void { var l:UInt = (-256)+(0); }
	def m11003():Void { var l:UInt = (-256)+(-0); }
	def m11004():Void { var l:UInt = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11005():Void { var l:UInt = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11006():Void { var l:UInt = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11007():Void { var l:UInt = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11008():Void { var l:UInt = (-256)+(127); }
	def m11009():Void { var l:UInt = (-256)+(-127); }
	def m11010():Void { var l:UInt = (-256)+(128); }
	def m11011():Void { var l:UInt = (-256)+(-128); }
	def m11012():Void { var l:UInt = (-256)+(255); }
	def m11013():Void { var l:UInt = (-256)+(-255); }
	def m11014():Void { var l:UInt = (-256)+(256); }
	def m11015():Void { var l:UInt = (-256)+(-256); }
	def m11016():Void { var l:UInt = (-256)+(32767); }
	def m11017():Void { var l:UInt = (-256)+(-32767); }
	def m11018():Void { var l:UInt = (-256)+(32768); }
	def m11019():Void { var l:UInt = (-256)+(-32768); }
	def m11020():Void { var l:UInt = (-256)+(65535); }
	def m11021():Void { var l:UInt = (-256)+(-65535); }
	def m11022():Void { var l:UInt = (-256)+(65536); }
	def m11023():Void { var l:UInt = (-256)+(-65536); }
	def m11024():Void { var l:UInt = (-256)+(16777216); }
	def m11025():Void { var l:UInt = (-256)+(-16777216); }
	def m11026():Void { var l:UInt = (-256)+(16777217); }
	def m11027():Void { var l:UInt = (-256)+(-16777217); }
	def m11028():Void { var l:UInt = (-256)+(2147483647); }
	def m11029():Void { var l:UInt = (-256)+(-2147483647); }
	def m11030():Void { var l:UInt = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11031():Void { var l:UInt = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11032():Void { var l:UInt = (32767)+(w2); }
	def m11033():Void { var l:UInt = (32767)+(w3); }
	def m11034():Void { var l:UInt = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11035():Void { var l:UInt = (32767)+(w5); }
	def m11036():Void { var l:UInt = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11037():Void { var l:UInt = (32767)+(w7); }
	def m11038():Void { var l:UInt = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11039():Void { var l:UInt = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11040():Void { var l:UInt = (32767)+(0); }
	def m11041():Void { var l:UInt = (32767)+(-0); }
	def m11042():Void { var l:UInt = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11043():Void { var l:UInt = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11044():Void { var l:UInt = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11045():Void { var l:UInt = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11046():Void { var l:UInt = (32767)+(127); }
	def m11047():Void { var l:UInt = (32767)+(-127); }
	def m11048():Void { var l:UInt = (32767)+(128); }
	def m11049():Void { var l:UInt = (32767)+(-128); }
	def m11050():Void { var l:UInt = (32767)+(255); }
	def m11051():Void { var l:UInt = (32767)+(-255); }
	def m11052():Void { var l:UInt = (32767)+(256); }
	def m11053():Void { var l:UInt = (32767)+(-256); }
	def m11054():Void { var l:UInt = (32767)+(32767); }
	def m11055():Void { var l:UInt = (32767)+(-32767); }
	def m11056():Void { var l:UInt = (32767)+(32768); }
	def m11057():Void { var l:UInt = (32767)+(-32768); }
	def m11058():Void { var l:UInt = (32767)+(65535); }
	def m11059():Void { var l:UInt = (32767)+(-65535); }
	def m11060():Void { var l:UInt = (32767)+(65536); }
	def m11061():Void { var l:UInt = (32767)+(-65536); }
	def m11062():Void { var l:UInt = (32767)+(16777216); }
	def m11063():Void { var l:UInt = (32767)+(-16777216); }
	def m11064():Void { var l:UInt = (32767)+(16777217); }
	def m11065():Void { var l:UInt = (32767)+(-16777217); }
	def m11066():Void { var l:UInt = (32767)+(2147483647); }
	def m11067():Void { var l:UInt = (32767)+(-2147483647); }
	def m11068():Void { var l:UInt = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11069():Void { var l:UInt = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11070():Void { var l:UInt = (-32767)+(w2); }
	def m11071():Void { var l:UInt = (-32767)+(w3); }
	def m11072():Void { var l:UInt = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11073():Void { var l:UInt = (-32767)+(w5); }
	def m11074():Void { var l:UInt = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11075():Void { var l:UInt = (-32767)+(w7); }
	def m11076():Void { var l:UInt = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11077():Void { var l:UInt = (-32767)+(w9); }
	def m11078():Void { var l:UInt = (-32767)+(0); }
	def m11079():Void { var l:UInt = (-32767)+(-0); }
	def m11080():Void { var l:UInt = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11081():Void { var l:UInt = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11082():Void { var l:UInt = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11083():Void { var l:UInt = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11084():Void { var l:UInt = (-32767)+(127); }
	def m11085():Void { var l:UInt = (-32767)+(-127); }
	def m11086():Void { var l:UInt = (-32767)+(128); }
	def m11087():Void { var l:UInt = (-32767)+(-128); }
	def m11088():Void { var l:UInt = (-32767)+(255); }
	def m11089():Void { var l:UInt = (-32767)+(-255); }
	def m11090():Void { var l:UInt = (-32767)+(256); }
	def m11091():Void { var l:UInt = (-32767)+(-256); }
	def m11092():Void { var l:UInt = (-32767)+(32767); }
	def m11093():Void { var l:UInt = (-32767)+(-32767); }
	def m11094():Void { var l:UInt = (-32767)+(32768); }
	def m11095():Void { var l:UInt = (-32767)+(-32768); }
	def m11096():Void { var l:UInt = (-32767)+(65535); }
	def m11097():Void { var l:UInt = (-32767)+(-65535); }
	def m11098():Void { var l:UInt = (-32767)+(65536); }
	def m11099():Void { var l:UInt = (-32767)+(-65536); }
	def m11100():Void { var l:UInt = (-32767)+(16777216); }
	def m11101():Void { var l:UInt = (-32767)+(-16777216); }
	def m11102():Void { var l:UInt = (-32767)+(16777217); }
	def m11103():Void { var l:UInt = (-32767)+(-16777217); }
	def m11104():Void { var l:UInt = (-32767)+(2147483647); }
	def m11105():Void { var l:UInt = (-32767)+(-2147483647); }
	def m11106():Void { var l:UInt = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11107():Void { var l:UInt = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11108():Void { var l:UInt = (32768)+(w2); }
	def m11109():Void { var l:UInt = (32768)+(w3); }
	def m11110():Void { var l:UInt = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11111():Void { var l:UInt = (32768)+(w5); }
	def m11112():Void { var l:UInt = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11113():Void { var l:UInt = (32768)+(w7); }
	def m11114():Void { var l:UInt = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11115():Void { var l:UInt = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11116():Void { var l:UInt = (32768)+(0); }
	def m11117():Void { var l:UInt = (32768)+(-0); }
	def m11118():Void { var l:UInt = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11119():Void { var l:UInt = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11120():Void { var l:UInt = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11121():Void { var l:UInt = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11122():Void { var l:UInt = (32768)+(127); }
	def m11123():Void { var l:UInt = (32768)+(-127); }
	def m11124():Void { var l:UInt = (32768)+(128); }
	def m11125():Void { var l:UInt = (32768)+(-128); }
	def m11126():Void { var l:UInt = (32768)+(255); }
	def m11127():Void { var l:UInt = (32768)+(-255); }
	def m11128():Void { var l:UInt = (32768)+(256); }
	def m11129():Void { var l:UInt = (32768)+(-256); }
	def m11130():Void { var l:UInt = (32768)+(32767); }
	def m11131():Void { var l:UInt = (32768)+(-32767); }
	def m11132():Void { var l:UInt = (32768)+(32768); }
	def m11133():Void { var l:UInt = (32768)+(-32768); }
	def m11134():Void { var l:UInt = (32768)+(65535); }
	def m11135():Void { var l:UInt = (32768)+(-65535); }
	def m11136():Void { var l:UInt = (32768)+(65536); }
	def m11137():Void { var l:UInt = (32768)+(-65536); }
	def m11138():Void { var l:UInt = (32768)+(16777216); }
	def m11139():Void { var l:UInt = (32768)+(-16777216); }
	def m11140():Void { var l:UInt = (32768)+(16777217); }
	def m11141():Void { var l:UInt = (32768)+(-16777217); }
	def m11142():Void { var l:UInt = (32768)+(2147483647); }
	def m11143():Void { var l:UInt = (32768)+(-2147483647); }
	def m11144():Void { var l:UInt = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11145():Void { var l:UInt = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11146():Void { var l:UInt = (-32768)+(w2); }
	def m11147():Void { var l:UInt = (-32768)+(w3); }
	def m11148():Void { var l:UInt = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11149():Void { var l:UInt = (-32768)+(w5); }
	def m11150():Void { var l:UInt = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11151():Void { var l:UInt = (-32768)+(w7); }
	def m11152():Void { var l:UInt = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11153():Void { var l:UInt = (-32768)+(w9); }
	def m11154():Void { var l:UInt = (-32768)+(0); }
	def m11155():Void { var l:UInt = (-32768)+(-0); }
	def m11156():Void { var l:UInt = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11157():Void { var l:UInt = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11158():Void { var l:UInt = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11159():Void { var l:UInt = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11160():Void { var l:UInt = (-32768)+(127); }
	def m11161():Void { var l:UInt = (-32768)+(-127); }
	def m11162():Void { var l:UInt = (-32768)+(128); }
	def m11163():Void { var l:UInt = (-32768)+(-128); }
	def m11164():Void { var l:UInt = (-32768)+(255); }
	def m11165():Void { var l:UInt = (-32768)+(-255); }
	def m11166():Void { var l:UInt = (-32768)+(256); }
	def m11167():Void { var l:UInt = (-32768)+(-256); }
	def m11168():Void { var l:UInt = (-32768)+(32767); }
	def m11169():Void { var l:UInt = (-32768)+(-32767); }
	def m11170():Void { var l:UInt = (-32768)+(32768); }
	def m11171():Void { var l:UInt = (-32768)+(-32768); }
	def m11172():Void { var l:UInt = (-32768)+(65535); }
	def m11173():Void { var l:UInt = (-32768)+(-65535); }
	def m11174():Void { var l:UInt = (-32768)+(65536); }
	def m11175():Void { var l:UInt = (-32768)+(-65536); }
	def m11176():Void { var l:UInt = (-32768)+(16777216); }
	def m11177():Void { var l:UInt = (-32768)+(-16777216); }
	def m11178():Void { var l:UInt = (-32768)+(16777217); }
	def m11179():Void { var l:UInt = (-32768)+(-16777217); }
	def m11180():Void { var l:UInt = (-32768)+(2147483647); }
	def m11181():Void { var l:UInt = (-32768)+(-2147483647); }
	def m11182():Void { var l:UInt = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11183():Void { var l:UInt = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11184():Void { var l:UInt = (65535)+(w2); }
	def m11185():Void { var l:UInt = (65535)+(w3); }
	def m11186():Void { var l:UInt = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11187():Void { var l:UInt = (65535)+(w5); }
	def m11188():Void { var l:UInt = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11189():Void { var l:UInt = (65535)+(w7); }
	def m11190():Void { var l:UInt = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11191():Void { var l:UInt = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11192():Void { var l:UInt = (65535)+(0); }
	def m11193():Void { var l:UInt = (65535)+(-0); }
	def m11194():Void { var l:UInt = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11195():Void { var l:UInt = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11196():Void { var l:UInt = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11197():Void { var l:UInt = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11198():Void { var l:UInt = (65535)+(127); }
	def m11199():Void { var l:UInt = (65535)+(-127); }
	def m11200():Void { var l:UInt = (65535)+(128); }
	def m11201():Void { var l:UInt = (65535)+(-128); }
	def m11202():Void { var l:UInt = (65535)+(255); }
	def m11203():Void { var l:UInt = (65535)+(-255); }
	def m11204():Void { var l:UInt = (65535)+(256); }
	def m11205():Void { var l:UInt = (65535)+(-256); }
	def m11206():Void { var l:UInt = (65535)+(32767); }
	def m11207():Void { var l:UInt = (65535)+(-32767); }
	def m11208():Void { var l:UInt = (65535)+(32768); }
	def m11209():Void { var l:UInt = (65535)+(-32768); }
	def m11210():Void { var l:UInt = (65535)+(65535); }
	def m11211():Void { var l:UInt = (65535)+(-65535); }
	def m11212():Void { var l:UInt = (65535)+(65536); }
	def m11213():Void { var l:UInt = (65535)+(-65536); }
	def m11214():Void { var l:UInt = (65535)+(16777216); }
	def m11215():Void { var l:UInt = (65535)+(-16777216); }
	def m11216():Void { var l:UInt = (65535)+(16777217); }
	def m11217():Void { var l:UInt = (65535)+(-16777217); }
	def m11218():Void { var l:UInt = (65535)+(2147483647); }
	def m11219():Void { var l:UInt = (65535)+(-2147483647); }
	def m11220():Void { var l:UInt = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11221():Void { var l:UInt = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11222():Void { var l:UInt = (-65535)+(w2); }
	def m11223():Void { var l:UInt = (-65535)+(w3); }
	def m11224():Void { var l:UInt = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11225():Void { var l:UInt = (-65535)+(w5); }
	def m11226():Void { var l:UInt = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11227():Void { var l:UInt = (-65535)+(w7); }
	def m11228():Void { var l:UInt = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11229():Void { var l:UInt = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11230():Void { var l:UInt = (-65535)+(0); }
	def m11231():Void { var l:UInt = (-65535)+(-0); }
	def m11232():Void { var l:UInt = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11233():Void { var l:UInt = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11234():Void { var l:UInt = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11235():Void { var l:UInt = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11236():Void { var l:UInt = (-65535)+(127); }
	def m11237():Void { var l:UInt = (-65535)+(-127); }
	def m11238():Void { var l:UInt = (-65535)+(128); }
	def m11239():Void { var l:UInt = (-65535)+(-128); }
	def m11240():Void { var l:UInt = (-65535)+(255); }
	def m11241():Void { var l:UInt = (-65535)+(-255); }
	def m11242():Void { var l:UInt = (-65535)+(256); }
	def m11243():Void { var l:UInt = (-65535)+(-256); }
	def m11244():Void { var l:UInt = (-65535)+(32767); }
	def m11245():Void { var l:UInt = (-65535)+(-32767); }
	def m11246():Void { var l:UInt = (-65535)+(32768); }
	def m11247():Void { var l:UInt = (-65535)+(-32768); }
	def m11248():Void { var l:UInt = (-65535)+(65535); }
	def m11249():Void { var l:UInt = (-65535)+(-65535); }
	def m11250():Void { var l:UInt = (-65535)+(65536); }
	def m11251():Void { var l:UInt = (-65535)+(-65536); }
	def m11252():Void { var l:UInt = (-65535)+(16777216); }
	def m11253():Void { var l:UInt = (-65535)+(-16777216); }
	def m11254():Void { var l:UInt = (-65535)+(16777217); }
	def m11255():Void { var l:UInt = (-65535)+(-16777217); }
	def m11256():Void { var l:UInt = (-65535)+(2147483647); }
	def m11257():Void { var l:UInt = (-65535)+(-2147483647); }
	def m11258():Void { var l:UInt = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11259():Void { var l:UInt = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11260():Void { var l:UInt = (65536)+(w2); }
	def m11261():Void { var l:UInt = (65536)+(w3); }
	def m11262():Void { var l:UInt = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11263():Void { var l:UInt = (65536)+(w5); }
	def m11264():Void { var l:UInt = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11265():Void { var l:UInt = (65536)+(w7); }
	def m11266():Void { var l:UInt = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11267():Void { var l:UInt = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11268():Void { var l:UInt = (65536)+(0); }
	def m11269():Void { var l:UInt = (65536)+(-0); }
	def m11270():Void { var l:UInt = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11271():Void { var l:UInt = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11272():Void { var l:UInt = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11273():Void { var l:UInt = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11274():Void { var l:UInt = (65536)+(127); }
	def m11275():Void { var l:UInt = (65536)+(-127); }
	def m11276():Void { var l:UInt = (65536)+(128); }
	def m11277():Void { var l:UInt = (65536)+(-128); }
	def m11278():Void { var l:UInt = (65536)+(255); }
	def m11279():Void { var l:UInt = (65536)+(-255); }
	def m11280():Void { var l:UInt = (65536)+(256); }
	def m11281():Void { var l:UInt = (65536)+(-256); }
	def m11282():Void { var l:UInt = (65536)+(32767); }
	def m11283():Void { var l:UInt = (65536)+(-32767); }
	def m11284():Void { var l:UInt = (65536)+(32768); }
	def m11285():Void { var l:UInt = (65536)+(-32768); }
	def m11286():Void { var l:UInt = (65536)+(65535); }
	def m11287():Void { var l:UInt = (65536)+(-65535); }
	def m11288():Void { var l:UInt = (65536)+(65536); }
	def m11289():Void { var l:UInt = (65536)+(-65536); }
	def m11290():Void { var l:UInt = (65536)+(16777216); }
	def m11291():Void { var l:UInt = (65536)+(-16777216); }
	def m11292():Void { var l:UInt = (65536)+(16777217); }
	def m11293():Void { var l:UInt = (65536)+(-16777217); }
	def m11294():Void { var l:UInt = (65536)+(2147483647); }
	def m11295():Void { var l:UInt = (65536)+(-2147483647); }
	def m11296():Void { var l:UInt = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11297():Void { var l:UInt = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11298():Void { var l:UInt = (-65536)+(w2); }
	def m11299():Void { var l:UInt = (-65536)+(w3); }
	def m11300():Void { var l:UInt = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11301():Void { var l:UInt = (-65536)+(w5); }
	def m11302():Void { var l:UInt = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11303():Void { var l:UInt = (-65536)+(w7); }
	def m11304():Void { var l:UInt = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11305():Void { var l:UInt = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11306():Void { var l:UInt = (-65536)+(0); }
	def m11307():Void { var l:UInt = (-65536)+(-0); }
	def m11308():Void { var l:UInt = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11309():Void { var l:UInt = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11310():Void { var l:UInt = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11311():Void { var l:UInt = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11312():Void { var l:UInt = (-65536)+(127); }
	def m11313():Void { var l:UInt = (-65536)+(-127); }
	def m11314():Void { var l:UInt = (-65536)+(128); }
	def m11315():Void { var l:UInt = (-65536)+(-128); }
	def m11316():Void { var l:UInt = (-65536)+(255); }
	def m11317():Void { var l:UInt = (-65536)+(-255); }
	def m11318():Void { var l:UInt = (-65536)+(256); }
	def m11319():Void { var l:UInt = (-65536)+(-256); }
	def m11320():Void { var l:UInt = (-65536)+(32767); }
	def m11321():Void { var l:UInt = (-65536)+(-32767); }
	def m11322():Void { var l:UInt = (-65536)+(32768); }
	def m11323():Void { var l:UInt = (-65536)+(-32768); }
	def m11324():Void { var l:UInt = (-65536)+(65535); }
	def m11325():Void { var l:UInt = (-65536)+(-65535); }
	def m11326():Void { var l:UInt = (-65536)+(65536); }
	def m11327():Void { var l:UInt = (-65536)+(-65536); }
	def m11328():Void { var l:UInt = (-65536)+(16777216); }
	def m11329():Void { var l:UInt = (-65536)+(-16777216); }
	def m11330():Void { var l:UInt = (-65536)+(16777217); }
	def m11331():Void { var l:UInt = (-65536)+(-16777217); }
	def m11332():Void { var l:UInt = (-65536)+(2147483647); }
	def m11333():Void { var l:UInt = (-65536)+(-2147483647); }
	def m11334():Void { var l:UInt = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11335():Void { var l:UInt = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11336():Void { var l:UInt = (16777216)+(w2); }
	def m11337():Void { var l:UInt = (16777216)+(w3); }
	def m11338():Void { var l:UInt = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11339():Void { var l:UInt = (16777216)+(w5); }
	def m11340():Void { var l:UInt = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11341():Void { var l:UInt = (16777216)+(w7); }
	def m11342():Void { var l:UInt = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11343():Void { var l:UInt = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11344():Void { var l:UInt = (16777216)+(0); }
	def m11345():Void { var l:UInt = (16777216)+(-0); }
	def m11346():Void { var l:UInt = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11347():Void { var l:UInt = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11348():Void { var l:UInt = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11349():Void { var l:UInt = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11350():Void { var l:UInt = (16777216)+(127); }
	def m11351():Void { var l:UInt = (16777216)+(-127); }
	def m11352():Void { var l:UInt = (16777216)+(128); }
	def m11353():Void { var l:UInt = (16777216)+(-128); }
	def m11354():Void { var l:UInt = (16777216)+(255); }
	def m11355():Void { var l:UInt = (16777216)+(-255); }
	def m11356():Void { var l:UInt = (16777216)+(256); }
	def m11357():Void { var l:UInt = (16777216)+(-256); }
	def m11358():Void { var l:UInt = (16777216)+(32767); }
	def m11359():Void { var l:UInt = (16777216)+(-32767); }
	def m11360():Void { var l:UInt = (16777216)+(32768); }
	def m11361():Void { var l:UInt = (16777216)+(-32768); }
	def m11362():Void { var l:UInt = (16777216)+(65535); }
	def m11363():Void { var l:UInt = (16777216)+(-65535); }
	def m11364():Void { var l:UInt = (16777216)+(65536); }
	def m11365():Void { var l:UInt = (16777216)+(-65536); }
	def m11366():Void { var l:UInt = (16777216)+(16777216); }
	def m11367():Void { var l:UInt = (16777216)+(-16777216); }
	def m11368():Void { var l:UInt = (16777216)+(16777217); }
	def m11369():Void { var l:UInt = (16777216)+(-16777217); }
	def m11370():Void { var l:UInt = (16777216)+(2147483647); }
	def m11371():Void { var l:UInt = (16777216)+(-2147483647); }
	def m11372():Void { var l:UInt = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11373():Void { var l:UInt = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11374():Void { var l:UInt = (-16777216)+(w2); }
	def m11375():Void { var l:UInt = (-16777216)+(w3); }
	def m11376():Void { var l:UInt = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11377():Void { var l:UInt = (-16777216)+(w5); }
	def m11378():Void { var l:UInt = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11379():Void { var l:UInt = (-16777216)+(w7); }
	def m11380():Void { var l:UInt = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11381():Void { var l:UInt = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11382():Void { var l:UInt = (-16777216)+(0); }
	def m11383():Void { var l:UInt = (-16777216)+(-0); }
	def m11384():Void { var l:UInt = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11385():Void { var l:UInt = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11386():Void { var l:UInt = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11387():Void { var l:UInt = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11388():Void { var l:UInt = (-16777216)+(127); }
	def m11389():Void { var l:UInt = (-16777216)+(-127); }
	def m11390():Void { var l:UInt = (-16777216)+(128); }
	def m11391():Void { var l:UInt = (-16777216)+(-128); }
	def m11392():Void { var l:UInt = (-16777216)+(255); }
	def m11393():Void { var l:UInt = (-16777216)+(-255); }
	def m11394():Void { var l:UInt = (-16777216)+(256); }
	def m11395():Void { var l:UInt = (-16777216)+(-256); }
	def m11396():Void { var l:UInt = (-16777216)+(32767); }
	def m11397():Void { var l:UInt = (-16777216)+(-32767); }
	def m11398():Void { var l:UInt = (-16777216)+(32768); }
	def m11399():Void { var l:UInt = (-16777216)+(-32768); }
	def m11400():Void { var l:UInt = (-16777216)+(65535); }
	def m11401():Void { var l:UInt = (-16777216)+(-65535); }
	def m11402():Void { var l:UInt = (-16777216)+(65536); }
	def m11403():Void { var l:UInt = (-16777216)+(-65536); }
	def m11404():Void { var l:UInt = (-16777216)+(16777216); }
	def m11405():Void { var l:UInt = (-16777216)+(-16777216); }
	def m11406():Void { var l:UInt = (-16777216)+(16777217); }
	def m11407():Void { var l:UInt = (-16777216)+(-16777217); }
	def m11408():Void { var l:UInt = (-16777216)+(2147483647); }
	def m11409():Void { var l:UInt = (-16777216)+(-2147483647); }
	def m11410():Void { var l:UInt = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11411():Void { var l:UInt = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11412():Void { var l:UInt = (16777217)+(w2); }
	def m11413():Void { var l:UInt = (16777217)+(w3); }
	def m11414():Void { var l:UInt = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11415():Void { var l:UInt = (16777217)+(w5); }
	def m11416():Void { var l:UInt = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11417():Void { var l:UInt = (16777217)+(w7); }
	def m11418():Void { var l:UInt = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11419():Void { var l:UInt = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11420():Void { var l:UInt = (16777217)+(0); }
	def m11421():Void { var l:UInt = (16777217)+(-0); }
	def m11422():Void { var l:UInt = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11423():Void { var l:UInt = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11424():Void { var l:UInt = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11425():Void { var l:UInt = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11426():Void { var l:UInt = (16777217)+(127); }
	def m11427():Void { var l:UInt = (16777217)+(-127); }
	def m11428():Void { var l:UInt = (16777217)+(128); }
	def m11429():Void { var l:UInt = (16777217)+(-128); }
	def m11430():Void { var l:UInt = (16777217)+(255); }
	def m11431():Void { var l:UInt = (16777217)+(-255); }
	def m11432():Void { var l:UInt = (16777217)+(256); }
	def m11433():Void { var l:UInt = (16777217)+(-256); }
	def m11434():Void { var l:UInt = (16777217)+(32767); }
	def m11435():Void { var l:UInt = (16777217)+(-32767); }
	def m11436():Void { var l:UInt = (16777217)+(32768); }
	def m11437():Void { var l:UInt = (16777217)+(-32768); }
	def m11438():Void { var l:UInt = (16777217)+(65535); }
	def m11439():Void { var l:UInt = (16777217)+(-65535); }
	def m11440():Void { var l:UInt = (16777217)+(65536); }
	def m11441():Void { var l:UInt = (16777217)+(-65536); }
	def m11442():Void { var l:UInt = (16777217)+(16777216); }
	def m11443():Void { var l:UInt = (16777217)+(-16777216); }
	def m11444():Void { var l:UInt = (16777217)+(16777217); }
	def m11445():Void { var l:UInt = (16777217)+(-16777217); }
	def m11446():Void { var l:UInt = (16777217)+(2147483647); }
	def m11447():Void { var l:UInt = (16777217)+(-2147483647); }
	def m11448():Void { var l:UInt = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11449():Void { var l:UInt = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11450():Void { var l:UInt = (-16777217)+(w2); }
	def m11451():Void { var l:UInt = (-16777217)+(w3); }
	def m11452():Void { var l:UInt = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11453():Void { var l:UInt = (-16777217)+(w5); }
	def m11454():Void { var l:UInt = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11455():Void { var l:UInt = (-16777217)+(w7); }
	def m11456():Void { var l:UInt = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11457():Void { var l:UInt = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11458():Void { var l:UInt = (-16777217)+(0); }
	def m11459():Void { var l:UInt = (-16777217)+(-0); }
	def m11460():Void { var l:UInt = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11461():Void { var l:UInt = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11462():Void { var l:UInt = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11463():Void { var l:UInt = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11464():Void { var l:UInt = (-16777217)+(127); }
	def m11465():Void { var l:UInt = (-16777217)+(-127); }
	def m11466():Void { var l:UInt = (-16777217)+(128); }
	def m11467():Void { var l:UInt = (-16777217)+(-128); }
	def m11468():Void { var l:UInt = (-16777217)+(255); }
	def m11469():Void { var l:UInt = (-16777217)+(-255); }
	def m11470():Void { var l:UInt = (-16777217)+(256); }
	def m11471():Void { var l:UInt = (-16777217)+(-256); }
	def m11472():Void { var l:UInt = (-16777217)+(32767); }
	def m11473():Void { var l:UInt = (-16777217)+(-32767); }
	def m11474():Void { var l:UInt = (-16777217)+(32768); }
	def m11475():Void { var l:UInt = (-16777217)+(-32768); }
	def m11476():Void { var l:UInt = (-16777217)+(65535); }
	def m11477():Void { var l:UInt = (-16777217)+(-65535); }
	def m11478():Void { var l:UInt = (-16777217)+(65536); }
	def m11479():Void { var l:UInt = (-16777217)+(-65536); }
	def m11480():Void { var l:UInt = (-16777217)+(16777216); }
	def m11481():Void { var l:UInt = (-16777217)+(-16777216); }
	def m11482():Void { var l:UInt = (-16777217)+(16777217); }
	def m11483():Void { var l:UInt = (-16777217)+(-16777217); }
	def m11484():Void { var l:UInt = (-16777217)+(2147483647); }
	def m11485():Void { var l:UInt = (-16777217)+(-2147483647); }
	def m11486():Void { var l:UInt = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11487():Void { var l:UInt = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11488():Void { var l:UInt = (2147483647)+(w2); }
	def m11489():Void { var l:UInt = (2147483647)+(w3); }
	def m11490():Void { var l:UInt = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11491():Void { var l:UInt = (2147483647)+(w5); }
	def m11492():Void { var l:UInt = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11493():Void { var l:UInt = (2147483647)+(w7); }
	def m11494():Void { var l:UInt = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11495():Void { var l:UInt = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11496():Void { var l:UInt = (2147483647)+(0); }
	def m11497():Void { var l:UInt = (2147483647)+(-0); }
	def m11498():Void { var l:UInt = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11499():Void { var l:UInt = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11500():Void { var l:UInt = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11501():Void { var l:UInt = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11502():Void { var l:UInt = (2147483647)+(127); }
	def m11503():Void { var l:UInt = (2147483647)+(-127); }
	def m11504():Void { var l:UInt = (2147483647)+(128); }
	def m11505():Void { var l:UInt = (2147483647)+(-128); }
	def m11506():Void { var l:UInt = (2147483647)+(255); }
	def m11507():Void { var l:UInt = (2147483647)+(-255); }
	def m11508():Void { var l:UInt = (2147483647)+(256); }
	def m11509():Void { var l:UInt = (2147483647)+(-256); }
	def m11510():Void { var l:UInt = (2147483647)+(32767); }
	def m11511():Void { var l:UInt = (2147483647)+(-32767); }
	def m11512():Void { var l:UInt = (2147483647)+(32768); }
	def m11513():Void { var l:UInt = (2147483647)+(-32768); }
	def m11514():Void { var l:UInt = (2147483647)+(65535); }
	def m11515():Void { var l:UInt = (2147483647)+(-65535); }
	def m11516():Void { var l:UInt = (2147483647)+(65536); }
	def m11517():Void { var l:UInt = (2147483647)+(-65536); }
	def m11518():Void { var l:UInt = (2147483647)+(16777216); }
	def m11519():Void { var l:UInt = (2147483647)+(-16777216); }
	def m11520():Void { var l:UInt = (2147483647)+(16777217); }
	def m11521():Void { var l:UInt = (2147483647)+(-16777217); }
	def m11522():Void { var l:UInt = (2147483647)+(2147483647); }
	def m11523():Void { var l:UInt = (2147483647)+(-2147483647); }
	def m11524():Void { var l:UInt = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11525():Void { var l:UInt = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11526():Void { var l:UInt = (-2147483647)+(w2); }
	def m11527():Void { var l:UInt = (-2147483647)+(w3); }
	def m11528():Void { var l:UInt = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11529():Void { var l:UInt = (-2147483647)+(w5); }
	def m11530():Void { var l:UInt = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11531():Void { var l:UInt = (-2147483647)+(w7); }
	def m11532():Void { var l:UInt = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11533():Void { var l:UInt = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11534():Void { var l:UInt = (-2147483647)+(0); }
	def m11535():Void { var l:UInt = (-2147483647)+(-0); }
	def m11536():Void { var l:UInt = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11537():Void { var l:UInt = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11538():Void { var l:UInt = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11539():Void { var l:UInt = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11540():Void { var l:UInt = (-2147483647)+(127); }
	def m11541():Void { var l:UInt = (-2147483647)+(-127); }
	def m11542():Void { var l:UInt = (-2147483647)+(128); }
	def m11543():Void { var l:UInt = (-2147483647)+(-128); }
	def m11544():Void { var l:UInt = (-2147483647)+(255); }
	def m11545():Void { var l:UInt = (-2147483647)+(-255); }
	def m11546():Void { var l:UInt = (-2147483647)+(256); }
	def m11547():Void { var l:UInt = (-2147483647)+(-256); }
	def m11548():Void { var l:UInt = (-2147483647)+(32767); }
	def m11549():Void { var l:UInt = (-2147483647)+(-32767); }
	def m11550():Void { var l:UInt = (-2147483647)+(32768); }
	def m11551():Void { var l:UInt = (-2147483647)+(-32768); }
	def m11552():Void { var l:UInt = (-2147483647)+(65535); }
	def m11553():Void { var l:UInt = (-2147483647)+(-65535); }
	def m11554():Void { var l:UInt = (-2147483647)+(65536); }
	def m11555():Void { var l:UInt = (-2147483647)+(-65536); }
	def m11556():Void { var l:UInt = (-2147483647)+(16777216); }
	def m11557():Void { var l:UInt = (-2147483647)+(-16777216); }
	def m11558():Void { var l:UInt = (-2147483647)+(16777217); }
	def m11559():Void { var l:UInt = (-2147483647)+(-16777217); }
	def m11560():Void { var l:UInt = (-2147483647)+(2147483647); }
	def m11561():Void { var l:UInt = (-2147483647)+(-2147483647); }
	def m11562():Void { var l:ULong = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11563():Void { var l:ULong = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11564():Void { var l:ULong = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11565():Void { var l:ULong = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11566():Void { var l:ULong = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11567():Void { var l:ULong = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11568():Void { var l:ULong = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11569():Void { var l:ULong = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11570():Void { var l:ULong = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11571():Void { var l:ULong = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11572():Void { var l:ULong = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11573():Void { var l:ULong = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11574():Void { var l:ULong = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11575():Void { var l:ULong = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11576():Void { var l:ULong = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11577():Void { var l:ULong = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11578():Void { var l:ULong = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11579():Void { var l:ULong = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11580():Void { var l:ULong = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11581():Void { var l:ULong = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11582():Void { var l:ULong = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11583():Void { var l:ULong = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11584():Void { var l:ULong = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11585():Void { var l:ULong = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11586():Void { var l:ULong = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11587():Void { var l:ULong = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11588():Void { var l:ULong = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11589():Void { var l:ULong = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11590():Void { var l:ULong = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11591():Void { var l:ULong = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11592():Void { var l:ULong = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11593():Void { var l:ULong = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11594():Void { var l:ULong = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11595():Void { var l:ULong = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11596():Void { var l:ULong = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11597():Void { var l:ULong = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11598():Void { var l:ULong = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11599():Void { var l:ULong = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11600():Void { var l:ULong = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11601():Void { var l:ULong = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11602():Void { var l:ULong = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11603():Void { var l:ULong = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11604():Void { var l:ULong = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11605():Void { var l:ULong = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11606():Void { var l:ULong = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11607():Void { var l:ULong = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11608():Void { var l:ULong = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11609():Void { var l:ULong = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11610():Void { var l:ULong = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11611():Void { var l:ULong = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11612():Void { var l:ULong = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11613():Void { var l:ULong = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11614():Void { var l:ULong = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11615():Void { var l:ULong = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11616():Void { var l:ULong = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11617():Void { var l:ULong = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11618():Void { var l:ULong = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11619():Void { var l:ULong = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11620():Void { var l:ULong = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11621():Void { var l:ULong = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11622():Void { var l:ULong = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11623():Void { var l:ULong = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11624():Void { var l:ULong = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11625():Void { var l:ULong = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11626():Void { var l:ULong = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11627():Void { var l:ULong = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11628():Void { var l:ULong = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11629():Void { var l:ULong = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11630():Void { var l:ULong = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11631():Void { var l:ULong = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11632():Void { var l:ULong = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11633():Void { var l:ULong = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11634():Void { var l:ULong = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11635():Void { var l:ULong = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11636():Void { var l:ULong = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11637():Void { var l:ULong = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11638():Void { var l:ULong = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11639():Void { var l:ULong = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11640():Void { var l:ULong = (w2)+(w2); }
	def m11641():Void { var l:ULong = (w2)+(w3); }
	def m11642():Void { var l:ULong = (w2)+(w4); }
	def m11643():Void { var l:ULong = (w2)+(w5); }
	def m11644():Void { var l:ULong = (w2)+(w6); }
	def m11645():Void { var l:ULong = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m11646():Void { var l:ULong = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m11647():Void { var l:ULong = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m11648():Void { var l:ULong = (w2)+(0); }
	def m11649():Void { var l:ULong = (w2)+(-0); }
	def m11650():Void { var l:ULong = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11651():Void { var l:ULong = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11652():Void { var l:ULong = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11653():Void { var l:ULong = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11654():Void { var l:ULong = (w2)+(127); }
	def m11655():Void { var l:ULong = (w2)+(-127); }
	def m11656():Void { var l:ULong = (w2)+(128); }
	def m11657():Void { var l:ULong = (w2)+(-128); }
	def m11658():Void { var l:ULong = (w2)+(255); }
	def m11659():Void { var l:ULong = (w2)+(-255); }
	def m11660():Void { var l:ULong = (w2)+(256); }
	def m11661():Void { var l:ULong = (w2)+(-256); }
	def m11662():Void { var l:ULong = (w2)+(32767); }
	def m11663():Void { var l:ULong = (w2)+(-32767); }
	def m11664():Void { var l:ULong = (w2)+(32768); }
	def m11665():Void { var l:ULong = (w2)+(-32768); }
	def m11666():Void { var l:ULong = (w2)+(65535); }
	def m11667():Void { var l:ULong = (w2)+(-65535); }
	def m11668():Void { var l:ULong = (w2)+(65536); }
	def m11669():Void { var l:ULong = (w2)+(-65536); }
	def m11670():Void { var l:ULong = (w2)+(16777216); }
	def m11671():Void { var l:ULong = (w2)+(-16777216); }
	def m11672():Void { var l:ULong = (w2)+(16777217); }
	def m11673():Void { var l:ULong = (w2)+(-16777217); }
	def m11674():Void { var l:ULong = (w2)+(2147483647); }
	def m11675():Void { var l:ULong = (w2)+(-2147483647); }
	def m11676():Void { var l:ULong = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11677():Void { var l:ULong = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11678():Void { var l:ULong = (w3)+(w2); }
	def m11679():Void { var l:ULong = (w3)+(w3); }
	def m11680():Void { var l:ULong = (w3)+(w4); }
	def m11681():Void { var l:ULong = (w3)+(w5); }
	def m11682():Void { var l:ULong = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11683():Void { var l:ULong = (w3)+(w7); }
	def m11684():Void { var l:ULong = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11685():Void { var l:ULong = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11686():Void { var l:ULong = (w3)+(0); }
	def m11687():Void { var l:ULong = (w3)+(-0); }
	def m11688():Void { var l:ULong = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11689():Void { var l:ULong = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11690():Void { var l:ULong = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11691():Void { var l:ULong = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11692():Void { var l:ULong = (w3)+(127); }
	def m11693():Void { var l:ULong = (w3)+(-127); }
	def m11694():Void { var l:ULong = (w3)+(128); }
	def m11695():Void { var l:ULong = (w3)+(-128); }
	def m11696():Void { var l:ULong = (w3)+(255); }
	def m11697():Void { var l:ULong = (w3)+(-255); }
	def m11698():Void { var l:ULong = (w3)+(256); }
	def m11699():Void { var l:ULong = (w3)+(-256); }
	def m11700():Void { var l:ULong = (w3)+(32767); }
	def m11701():Void { var l:ULong = (w3)+(-32767); }
	def m11702():Void { var l:ULong = (w3)+(32768); }
	def m11703():Void { var l:ULong = (w3)+(-32768); }
	def m11704():Void { var l:ULong = (w3)+(65535); }
	def m11705():Void { var l:ULong = (w3)+(-65535); }
	def m11706():Void { var l:ULong = (w3)+(65536); }
	def m11707():Void { var l:ULong = (w3)+(-65536); }
	def m11708():Void { var l:ULong = (w3)+(16777216); }
	def m11709():Void { var l:ULong = (w3)+(-16777216); }
	def m11710():Void { var l:ULong = (w3)+(16777217); }
	def m11711():Void { var l:ULong = (w3)+(-16777217); }
	def m11712():Void { var l:ULong = (w3)+(2147483647); }
	def m11713():Void { var l:ULong = (w3)+(-2147483647); }
	def m11714():Void { var l:ULong = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11715():Void { var l:ULong = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11716():Void { var l:ULong = (w4)+(w2); }
	def m11717():Void { var l:ULong = (w4)+(w3); }
	def m11718():Void { var l:ULong = (w4)+(w4); }
	def m11719():Void { var l:ULong = (w4)+(w5); }
	def m11720():Void { var l:ULong = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m11721():Void { var l:ULong = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m11722():Void { var l:ULong = (w4)+(w8); }
	def m11723():Void { var l:ULong = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m11724():Void { var l:ULong = (w4)+(0); }
	def m11725():Void { var l:ULong = (w4)+(-0); }
	def m11726():Void { var l:ULong = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11727():Void { var l:ULong = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11728():Void { var l:ULong = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11729():Void { var l:ULong = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11730():Void { var l:ULong = (w4)+(127); }
	def m11731():Void { var l:ULong = (w4)+(-127); }
	def m11732():Void { var l:ULong = (w4)+(128); }
	def m11733():Void { var l:ULong = (w4)+(-128); }
	def m11734():Void { var l:ULong = (w4)+(255); }
	def m11735():Void { var l:ULong = (w4)+(-255); }
	def m11736():Void { var l:ULong = (w4)+(256); }
	def m11737():Void { var l:ULong = (w4)+(-256); }
	def m11738():Void { var l:ULong = (w4)+(32767); }
	def m11739():Void { var l:ULong = (w4)+(-32767); }
	def m11740():Void { var l:ULong = (w4)+(32768); }
	def m11741():Void { var l:ULong = (w4)+(-32768); }
	def m11742():Void { var l:ULong = (w4)+(65535); }
	def m11743():Void { var l:ULong = (w4)+(-65535); }
	def m11744():Void { var l:ULong = (w4)+(65536); }
	def m11745():Void { var l:ULong = (w4)+(-65536); }
	def m11746():Void { var l:ULong = (w4)+(16777216); }
	def m11747():Void { var l:ULong = (w4)+(-16777216); }
	def m11748():Void { var l:ULong = (w4)+(16777217); }
	def m11749():Void { var l:ULong = (w4)+(-16777217); }
	def m11750():Void { var l:ULong = (w4)+(2147483647); }
	def m11751():Void { var l:ULong = (w4)+(-2147483647); }
	def m11752():Void { var l:ULong = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11753():Void { var l:ULong = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11754():Void { var l:ULong = (w5)+(w2); }
	def m11755():Void { var l:ULong = (w5)+(w3); }
	def m11756():Void { var l:ULong = (w5)+(w4); }
	def m11757():Void { var l:ULong = (w5)+(w5); }
	def m11758():Void { var l:ULong = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m11759():Void { var l:ULong = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m11760():Void { var l:ULong = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m11761():Void { var l:ULong = (w5)+(w9); }
	def m11762():Void { var l:ULong = (w5)+(0); }
	def m11763():Void { var l:ULong = (w5)+(-0); }
	def m11764():Void { var l:ULong = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11765():Void { var l:ULong = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11766():Void { var l:ULong = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11767():Void { var l:ULong = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11768():Void { var l:ULong = (w5)+(127); }
	def m11769():Void { var l:ULong = (w5)+(-127); }
	def m11770():Void { var l:ULong = (w5)+(128); }
	def m11771():Void { var l:ULong = (w5)+(-128); }
	def m11772():Void { var l:ULong = (w5)+(255); }
	def m11773():Void { var l:ULong = (w5)+(-255); }
	def m11774():Void { var l:ULong = (w5)+(256); }
	def m11775():Void { var l:ULong = (w5)+(-256); }
	def m11776():Void { var l:ULong = (w5)+(32767); }
	def m11777():Void { var l:ULong = (w5)+(-32767); }
	def m11778():Void { var l:ULong = (w5)+(32768); }
	def m11779():Void { var l:ULong = (w5)+(-32768); }
	def m11780():Void { var l:ULong = (w5)+(65535); }
	def m11781():Void { var l:ULong = (w5)+(-65535); }
	def m11782():Void { var l:ULong = (w5)+(65536); }
	def m11783():Void { var l:ULong = (w5)+(-65536); }
	def m11784():Void { var l:ULong = (w5)+(16777216); }
	def m11785():Void { var l:ULong = (w5)+(-16777216); }
	def m11786():Void { var l:ULong = (w5)+(16777217); }
	def m11787():Void { var l:ULong = (w5)+(-16777217); }
	def m11788():Void { var l:ULong = (w5)+(2147483647); }
	def m11789():Void { var l:ULong = (w5)+(-2147483647); }
	def m11790():Void { var l:ULong = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11791():Void { var l:ULong = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11792():Void { var l:ULong = (w6)+(w2); }
	def m11793():Void { var l:ULong = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m11794():Void { var l:ULong = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m11795():Void { var l:ULong = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m11796():Void { var l:ULong = (w6)+(w6); }
	def m11797():Void { var l:ULong = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m11798():Void { var l:ULong = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m11799():Void { var l:ULong = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m11800():Void { var l:ULong = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m11801():Void { var l:ULong = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m11802():Void { var l:ULong = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11803():Void { var l:ULong = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11804():Void { var l:ULong = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11805():Void { var l:ULong = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11806():Void { var l:ULong = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m11807():Void { var l:ULong = (w6)+(-127); }
	def m11808():Void { var l:ULong = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m11809():Void { var l:ULong = (w6)+(-128); }
	def m11810():Void { var l:ULong = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m11811():Void { var l:ULong = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m11812():Void { var l:ULong = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m11813():Void { var l:ULong = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m11814():Void { var l:ULong = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m11815():Void { var l:ULong = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m11816():Void { var l:ULong = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m11817():Void { var l:ULong = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m11818():Void { var l:ULong = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m11819():Void { var l:ULong = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m11820():Void { var l:ULong = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m11821():Void { var l:ULong = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m11822():Void { var l:ULong = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m11823():Void { var l:ULong = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m11824():Void { var l:ULong = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m11825():Void { var l:ULong = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m11826():Void { var l:ULong = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m11827():Void { var l:ULong = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m11828():Void { var l:ULong = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11829():Void { var l:ULong = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11830():Void { var l:ULong = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m11831():Void { var l:ULong = (w7)+(w3); }
	def m11832():Void { var l:ULong = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11833():Void { var l:ULong = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m11834():Void { var l:ULong = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m11835():Void { var l:ULong = (w7)+(w7); }
	def m11836():Void { var l:ULong = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11837():Void { var l:ULong = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m11838():Void { var l:ULong = (w7)+(0); }
	def m11839():Void { var l:ULong = (w7)+(-0); }
	def m11840():Void { var l:ULong = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11841():Void { var l:ULong = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11842():Void { var l:ULong = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11843():Void { var l:ULong = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11844():Void { var l:ULong = (w7)+(127); }
	def m11845():Void { var l:ULong = (w7)+(-127); }
	def m11846():Void { var l:ULong = (w7)+(128); }
	def m11847():Void { var l:ULong = (w7)+(-128); }
	def m11848():Void { var l:ULong = (w7)+(255); }
	def m11849():Void { var l:ULong = (w7)+(-255); }
	def m11850():Void { var l:ULong = (w7)+(256); }
	def m11851():Void { var l:ULong = (w7)+(-256); }
	def m11852():Void { var l:ULong = (w7)+(32767); }
	def m11853():Void { var l:ULong = (w7)+(-32767); }
	def m11854():Void { var l:ULong = (w7)+(32768); }
	def m11855():Void { var l:ULong = (w7)+(-32768); }
	def m11856():Void { var l:ULong = (w7)+(65535); }
	def m11857():Void { var l:ULong = (w7)+(-65535); }
	def m11858():Void { var l:ULong = (w7)+(65536); }
	def m11859():Void { var l:ULong = (w7)+(-65536); }
	def m11860():Void { var l:ULong = (w7)+(16777216); }
	def m11861():Void { var l:ULong = (w7)+(-16777216); }
	def m11862():Void { var l:ULong = (w7)+(16777217); }
	def m11863():Void { var l:ULong = (w7)+(-16777217); }
	def m11864():Void { var l:ULong = (w7)+(2147483647); }
	def m11865():Void { var l:ULong = (w7)+(-2147483647); }
	def m11866():Void { var l:ULong = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11867():Void { var l:ULong = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11868():Void { var l:ULong = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m11869():Void { var l:ULong = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m11870():Void { var l:ULong = (w8)+(w4); }
	def m11871():Void { var l:ULong = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m11872():Void { var l:ULong = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m11873():Void { var l:ULong = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m11874():Void { var l:ULong = (w8)+(w8); }
	def m11875():Void { var l:ULong = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m11876():Void { var l:ULong = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m11877():Void { var l:ULong = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m11878():Void { var l:ULong = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11879():Void { var l:ULong = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11880():Void { var l:ULong = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11881():Void { var l:ULong = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11882():Void { var l:ULong = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m11883():Void { var l:ULong = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m11884():Void { var l:ULong = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m11885():Void { var l:ULong = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m11886():Void { var l:ULong = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m11887():Void { var l:ULong = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m11888():Void { var l:ULong = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m11889():Void { var l:ULong = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m11890():Void { var l:ULong = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m11891():Void { var l:ULong = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m11892():Void { var l:ULong = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m11893():Void { var l:ULong = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m11894():Void { var l:ULong = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m11895():Void { var l:ULong = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m11896():Void { var l:ULong = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m11897():Void { var l:ULong = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m11898():Void { var l:ULong = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m11899():Void { var l:ULong = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m11900():Void { var l:ULong = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m11901():Void { var l:ULong = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m11902():Void { var l:ULong = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m11903():Void { var l:ULong = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m11904():Void { var l:ULong = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11905():Void { var l:ULong = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11906():Void { var l:ULong = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m11907():Void { var l:ULong = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m11908():Void { var l:ULong = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m11909():Void { var l:ULong = (w9)+(w5); }
	def m11910():Void { var l:ULong = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m11911():Void { var l:ULong = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m11912():Void { var l:ULong = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m11913():Void { var l:ULong = (w9)+(w9); }
	def m11914():Void { var l:ULong = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m11915():Void { var l:ULong = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m11916():Void { var l:ULong = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11917():Void { var l:ULong = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11918():Void { var l:ULong = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11919():Void { var l:ULong = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11920():Void { var l:ULong = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m11921():Void { var l:ULong = (w9)+(-127); }
	def m11922():Void { var l:ULong = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m11923():Void { var l:ULong = (w9)+(-128); }
	def m11924():Void { var l:ULong = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m11925():Void { var l:ULong = (w9)+(-255); }
	def m11926():Void { var l:ULong = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m11927():Void { var l:ULong = (w9)+(-256); }
	def m11928():Void { var l:ULong = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m11929():Void { var l:ULong = (w9)+(-32767); }
	def m11930():Void { var l:ULong = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m11931():Void { var l:ULong = (w9)+(-32768); }
	def m11932():Void { var l:ULong = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m11933():Void { var l:ULong = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m11934():Void { var l:ULong = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m11935():Void { var l:ULong = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m11936():Void { var l:ULong = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m11937():Void { var l:ULong = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m11938():Void { var l:ULong = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m11939():Void { var l:ULong = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m11940():Void { var l:ULong = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m11941():Void { var l:ULong = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m11942():Void { var l:ULong = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11943():Void { var l:ULong = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11944():Void { var l:ULong = (0)+(w2); }
	def m11945():Void { var l:ULong = (0)+(w3); }
	def m11946():Void { var l:ULong = (0)+(w4); }
	def m11947():Void { var l:ULong = (0)+(w5); }
	def m11948():Void { var l:ULong = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11949():Void { var l:ULong = (0)+(w7); }
	def m11950():Void { var l:ULong = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11951():Void { var l:ULong = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11952():Void { var l:ULong = (0)+(0); }
	def m11953():Void { var l:ULong = (0)+(-0); }
	def m11954():Void { var l:ULong = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11955():Void { var l:ULong = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11956():Void { var l:ULong = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11957():Void { var l:ULong = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11958():Void { var l:ULong = (0)+(127); }
	def m11959():Void { var l:ULong = (0)+(-127); }
	def m11960():Void { var l:ULong = (0)+(128); }
	def m11961():Void { var l:ULong = (0)+(-128); }
	def m11962():Void { var l:ULong = (0)+(255); }
	def m11963():Void { var l:ULong = (0)+(-255); }
	def m11964():Void { var l:ULong = (0)+(256); }
	def m11965():Void { var l:ULong = (0)+(-256); }
	def m11966():Void { var l:ULong = (0)+(32767); }
	def m11967():Void { var l:ULong = (0)+(-32767); }
	def m11968():Void { var l:ULong = (0)+(32768); }
	def m11969():Void { var l:ULong = (0)+(-32768); }
	def m11970():Void { var l:ULong = (0)+(65535); }
	def m11971():Void { var l:ULong = (0)+(-65535); }
	def m11972():Void { var l:ULong = (0)+(65536); }
	def m11973():Void { var l:ULong = (0)+(-65536); }
	def m11974():Void { var l:ULong = (0)+(16777216); }
	def m11975():Void { var l:ULong = (0)+(-16777216); }
	def m11976():Void { var l:ULong = (0)+(16777217); }
	def m11977():Void { var l:ULong = (0)+(-16777217); }
	def m11978():Void { var l:ULong = (0)+(2147483647); }
	def m11979():Void { var l:ULong = (0)+(-2147483647); }
	def m11980():Void { var l:ULong = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11981():Void { var l:ULong = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11982():Void { var l:ULong = (-0)+(w2); }
	def m11983():Void { var l:ULong = (-0)+(w3); }
	def m11984():Void { var l:ULong = (-0)+(w4); }
	def m11985():Void { var l:ULong = (-0)+(w5); }
	def m11986():Void { var l:ULong = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m11987():Void { var l:ULong = (-0)+(w7); }
	def m11988():Void { var l:ULong = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m11989():Void { var l:ULong = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m11990():Void { var l:ULong = (-0)+(0); }
	def m11991():Void { var l:ULong = (-0)+(-0); }
	def m11992():Void { var l:ULong = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11993():Void { var l:ULong = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11994():Void { var l:ULong = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11995():Void { var l:ULong = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11996():Void { var l:ULong = (-0)+(127); }
	def m11997():Void { var l:ULong = (-0)+(-127); }
	def m11998():Void { var l:ULong = (-0)+(128); }
	def m11999():Void { var l:ULong = (-0)+(-128); }
	def m12000():Void { var l:ULong = (-0)+(255); }
	def m12001():Void { var l:ULong = (-0)+(-255); }
	def m12002():Void { var l:ULong = (-0)+(256); }
	def m12003():Void { var l:ULong = (-0)+(-256); }
	def m12004():Void { var l:ULong = (-0)+(32767); }
	def m12005():Void { var l:ULong = (-0)+(-32767); }
	def m12006():Void { var l:ULong = (-0)+(32768); }
	def m12007():Void { var l:ULong = (-0)+(-32768); }
	def m12008():Void { var l:ULong = (-0)+(65535); }
	def m12009():Void { var l:ULong = (-0)+(-65535); }
	def m12010():Void { var l:ULong = (-0)+(65536); }
	def m12011():Void { var l:ULong = (-0)+(-65536); }
	def m12012():Void { var l:ULong = (-0)+(16777216); }
	def m12013():Void { var l:ULong = (-0)+(-16777216); }
	def m12014():Void { var l:ULong = (-0)+(16777217); }
	def m12015():Void { var l:ULong = (-0)+(-16777217); }
	def m12016():Void { var l:ULong = (-0)+(2147483647); }
	def m12017():Void { var l:ULong = (-0)+(-2147483647); }
	def m12018():Void { var l:ULong = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12019():Void { var l:ULong = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12020():Void { var l:ULong = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12021():Void { var l:ULong = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12022():Void { var l:ULong = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12023():Void { var l:ULong = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12024():Void { var l:ULong = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12025():Void { var l:ULong = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12026():Void { var l:ULong = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12027():Void { var l:ULong = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12028():Void { var l:ULong = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12029():Void { var l:ULong = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12030():Void { var l:ULong = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12031():Void { var l:ULong = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12032():Void { var l:ULong = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12033():Void { var l:ULong = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12034():Void { var l:ULong = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12035():Void { var l:ULong = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12036():Void { var l:ULong = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12037():Void { var l:ULong = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12038():Void { var l:ULong = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12039():Void { var l:ULong = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12040():Void { var l:ULong = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12041():Void { var l:ULong = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12042():Void { var l:ULong = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12043():Void { var l:ULong = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12044():Void { var l:ULong = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12045():Void { var l:ULong = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12046():Void { var l:ULong = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12047():Void { var l:ULong = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12048():Void { var l:ULong = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12049():Void { var l:ULong = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12050():Void { var l:ULong = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12051():Void { var l:ULong = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12052():Void { var l:ULong = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12053():Void { var l:ULong = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12054():Void { var l:ULong = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12055():Void { var l:ULong = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12056():Void { var l:ULong = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12057():Void { var l:ULong = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12058():Void { var l:ULong = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12059():Void { var l:ULong = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12060():Void { var l:ULong = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12061():Void { var l:ULong = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12062():Void { var l:ULong = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12063():Void { var l:ULong = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12064():Void { var l:ULong = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12065():Void { var l:ULong = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12066():Void { var l:ULong = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12067():Void { var l:ULong = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12068():Void { var l:ULong = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12069():Void { var l:ULong = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12070():Void { var l:ULong = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12071():Void { var l:ULong = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12072():Void { var l:ULong = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12073():Void { var l:ULong = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12074():Void { var l:ULong = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12075():Void { var l:ULong = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12076():Void { var l:ULong = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12077():Void { var l:ULong = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12078():Void { var l:ULong = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12079():Void { var l:ULong = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12080():Void { var l:ULong = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12081():Void { var l:ULong = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12082():Void { var l:ULong = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12083():Void { var l:ULong = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12084():Void { var l:ULong = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12085():Void { var l:ULong = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12086():Void { var l:ULong = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12087():Void { var l:ULong = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12088():Void { var l:ULong = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12089():Void { var l:ULong = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12090():Void { var l:ULong = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12091():Void { var l:ULong = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12092():Void { var l:ULong = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12093():Void { var l:ULong = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12094():Void { var l:ULong = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12095():Void { var l:ULong = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12096():Void { var l:ULong = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12097():Void { var l:ULong = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12098():Void { var l:ULong = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12099():Void { var l:ULong = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12100():Void { var l:ULong = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12101():Void { var l:ULong = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12102():Void { var l:ULong = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12103():Void { var l:ULong = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12104():Void { var l:ULong = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12105():Void { var l:ULong = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12106():Void { var l:ULong = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12107():Void { var l:ULong = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12108():Void { var l:ULong = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12109():Void { var l:ULong = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12110():Void { var l:ULong = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12111():Void { var l:ULong = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12112():Void { var l:ULong = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12113():Void { var l:ULong = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12114():Void { var l:ULong = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12115():Void { var l:ULong = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12116():Void { var l:ULong = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12117():Void { var l:ULong = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12118():Void { var l:ULong = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12119():Void { var l:ULong = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12120():Void { var l:ULong = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12121():Void { var l:ULong = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12122():Void { var l:ULong = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12123():Void { var l:ULong = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12124():Void { var l:ULong = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12125():Void { var l:ULong = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12126():Void { var l:ULong = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12127():Void { var l:ULong = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12128():Void { var l:ULong = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12129():Void { var l:ULong = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12130():Void { var l:ULong = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12131():Void { var l:ULong = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12132():Void { var l:ULong = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12133():Void { var l:ULong = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12134():Void { var l:ULong = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12135():Void { var l:ULong = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12136():Void { var l:ULong = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12137():Void { var l:ULong = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12138():Void { var l:ULong = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12139():Void { var l:ULong = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12140():Void { var l:ULong = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12141():Void { var l:ULong = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12142():Void { var l:ULong = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12143():Void { var l:ULong = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12144():Void { var l:ULong = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12145():Void { var l:ULong = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12146():Void { var l:ULong = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12147():Void { var l:ULong = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12148():Void { var l:ULong = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12149():Void { var l:ULong = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12150():Void { var l:ULong = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12151():Void { var l:ULong = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12152():Void { var l:ULong = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12153():Void { var l:ULong = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12154():Void { var l:ULong = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12155():Void { var l:ULong = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12156():Void { var l:ULong = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12157():Void { var l:ULong = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12158():Void { var l:ULong = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12159():Void { var l:ULong = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12160():Void { var l:ULong = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12161():Void { var l:ULong = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12162():Void { var l:ULong = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12163():Void { var l:ULong = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12164():Void { var l:ULong = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12165():Void { var l:ULong = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12166():Void { var l:ULong = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12167():Void { var l:ULong = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12168():Void { var l:ULong = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12169():Void { var l:ULong = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12170():Void { var l:ULong = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12171():Void { var l:ULong = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12172():Void { var l:ULong = (127)+(w2); }
	def m12173():Void { var l:ULong = (127)+(w3); }
	def m12174():Void { var l:ULong = (127)+(w4); }
	def m12175():Void { var l:ULong = (127)+(w5); }
	def m12176():Void { var l:ULong = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12177():Void { var l:ULong = (127)+(w7); }
	def m12178():Void { var l:ULong = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12179():Void { var l:ULong = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12180():Void { var l:ULong = (127)+(0); }
	def m12181():Void { var l:ULong = (127)+(-0); }
	def m12182():Void { var l:ULong = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12183():Void { var l:ULong = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12184():Void { var l:ULong = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12185():Void { var l:ULong = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12186():Void { var l:ULong = (127)+(127); }
	def m12187():Void { var l:ULong = (127)+(-127); }
	def m12188():Void { var l:ULong = (127)+(128); }
	def m12189():Void { var l:ULong = (127)+(-128); }
	def m12190():Void { var l:ULong = (127)+(255); }
	def m12191():Void { var l:ULong = (127)+(-255); }
	def m12192():Void { var l:ULong = (127)+(256); }
	def m12193():Void { var l:ULong = (127)+(-256); }
	def m12194():Void { var l:ULong = (127)+(32767); }
	def m12195():Void { var l:ULong = (127)+(-32767); }
	def m12196():Void { var l:ULong = (127)+(32768); }
	def m12197():Void { var l:ULong = (127)+(-32768); }
	def m12198():Void { var l:ULong = (127)+(65535); }
	def m12199():Void { var l:ULong = (127)+(-65535); }
	def m12200():Void { var l:ULong = (127)+(65536); }
	def m12201():Void { var l:ULong = (127)+(-65536); }
	def m12202():Void { var l:ULong = (127)+(16777216); }
	def m12203():Void { var l:ULong = (127)+(-16777216); }
	def m12204():Void { var l:ULong = (127)+(16777217); }
	def m12205():Void { var l:ULong = (127)+(-16777217); }
	def m12206():Void { var l:ULong = (127)+(2147483647); }
	def m12207():Void { var l:ULong = (127)+(-2147483647); }
	def m12208():Void { var l:ULong = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12209():Void { var l:ULong = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12210():Void { var l:ULong = (-127)+(w2); }
	def m12211():Void { var l:ULong = (-127)+(w3); }
	def m12212():Void { var l:ULong = (-127)+(w4); }
	def m12213():Void { var l:ULong = (-127)+(w5); }
	def m12214():Void { var l:ULong = (-127)+(w6); }
	def m12215():Void { var l:ULong = (-127)+(w7); }
	def m12216():Void { var l:ULong = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12217():Void { var l:ULong = (-127)+(w9); }
	def m12218():Void { var l:ULong = (-127)+(0); }
	def m12219():Void { var l:ULong = (-127)+(-0); }
	def m12220():Void { var l:ULong = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12221():Void { var l:ULong = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12222():Void { var l:ULong = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12223():Void { var l:ULong = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12224():Void { var l:ULong = (-127)+(127); }
	def m12225():Void { var l:ULong = (-127)+(-127); }
	def m12226():Void { var l:ULong = (-127)+(128); }
	def m12227():Void { var l:ULong = (-127)+(-128); }
	def m12228():Void { var l:ULong = (-127)+(255); }
	def m12229():Void { var l:ULong = (-127)+(-255); }
	def m12230():Void { var l:ULong = (-127)+(256); }
	def m12231():Void { var l:ULong = (-127)+(-256); }
	def m12232():Void { var l:ULong = (-127)+(32767); }
	def m12233():Void { var l:ULong = (-127)+(-32767); }
	def m12234():Void { var l:ULong = (-127)+(32768); }
	def m12235():Void { var l:ULong = (-127)+(-32768); }
	def m12236():Void { var l:ULong = (-127)+(65535); }
	def m12237():Void { var l:ULong = (-127)+(-65535); }
	def m12238():Void { var l:ULong = (-127)+(65536); }
	def m12239():Void { var l:ULong = (-127)+(-65536); }
	def m12240():Void { var l:ULong = (-127)+(16777216); }
	def m12241():Void { var l:ULong = (-127)+(-16777216); }
	def m12242():Void { var l:ULong = (-127)+(16777217); }
	def m12243():Void { var l:ULong = (-127)+(-16777217); }
	def m12244():Void { var l:ULong = (-127)+(2147483647); }
	def m12245():Void { var l:ULong = (-127)+(-2147483647); }
	def m12246():Void { var l:ULong = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12247():Void { var l:ULong = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12248():Void { var l:ULong = (128)+(w2); }
	def m12249():Void { var l:ULong = (128)+(w3); }
	def m12250():Void { var l:ULong = (128)+(w4); }
	def m12251():Void { var l:ULong = (128)+(w5); }
	def m12252():Void { var l:ULong = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12253():Void { var l:ULong = (128)+(w7); }
	def m12254():Void { var l:ULong = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12255():Void { var l:ULong = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12256():Void { var l:ULong = (128)+(0); }
	def m12257():Void { var l:ULong = (128)+(-0); }
	def m12258():Void { var l:ULong = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12259():Void { var l:ULong = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12260():Void { var l:ULong = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12261():Void { var l:ULong = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12262():Void { var l:ULong = (128)+(127); }
	def m12263():Void { var l:ULong = (128)+(-127); }
	def m12264():Void { var l:ULong = (128)+(128); }
	def m12265():Void { var l:ULong = (128)+(-128); }
	def m12266():Void { var l:ULong = (128)+(255); }
	def m12267():Void { var l:ULong = (128)+(-255); }
	def m12268():Void { var l:ULong = (128)+(256); }
	def m12269():Void { var l:ULong = (128)+(-256); }
	def m12270():Void { var l:ULong = (128)+(32767); }
	def m12271():Void { var l:ULong = (128)+(-32767); }
	def m12272():Void { var l:ULong = (128)+(32768); }
	def m12273():Void { var l:ULong = (128)+(-32768); }
	def m12274():Void { var l:ULong = (128)+(65535); }
	def m12275():Void { var l:ULong = (128)+(-65535); }
	def m12276():Void { var l:ULong = (128)+(65536); }
	def m12277():Void { var l:ULong = (128)+(-65536); }
	def m12278():Void { var l:ULong = (128)+(16777216); }
	def m12279():Void { var l:ULong = (128)+(-16777216); }
	def m12280():Void { var l:ULong = (128)+(16777217); }
	def m12281():Void { var l:ULong = (128)+(-16777217); }
	def m12282():Void { var l:ULong = (128)+(2147483647); }
	def m12283():Void { var l:ULong = (128)+(-2147483647); }
	def m12284():Void { var l:ULong = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12285():Void { var l:ULong = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12286():Void { var l:ULong = (-128)+(w2); }
	def m12287():Void { var l:ULong = (-128)+(w3); }
	def m12288():Void { var l:ULong = (-128)+(w4); }
	def m12289():Void { var l:ULong = (-128)+(w5); }
	def m12290():Void { var l:ULong = (-128)+(w6); }
	def m12291():Void { var l:ULong = (-128)+(w7); }
	def m12292():Void { var l:ULong = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12293():Void { var l:ULong = (-128)+(w9); }
	def m12294():Void { var l:ULong = (-128)+(0); }
	def m12295():Void { var l:ULong = (-128)+(-0); }
	def m12296():Void { var l:ULong = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12297():Void { var l:ULong = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12298():Void { var l:ULong = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12299():Void { var l:ULong = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12300():Void { var l:ULong = (-128)+(127); }
	def m12301():Void { var l:ULong = (-128)+(-127); }
	def m12302():Void { var l:ULong = (-128)+(128); }
	def m12303():Void { var l:ULong = (-128)+(-128); }
	def m12304():Void { var l:ULong = (-128)+(255); }
	def m12305():Void { var l:ULong = (-128)+(-255); }
	def m12306():Void { var l:ULong = (-128)+(256); }
	def m12307():Void { var l:ULong = (-128)+(-256); }
	def m12308():Void { var l:ULong = (-128)+(32767); }
	def m12309():Void { var l:ULong = (-128)+(-32767); }
	def m12310():Void { var l:ULong = (-128)+(32768); }
	def m12311():Void { var l:ULong = (-128)+(-32768); }
	def m12312():Void { var l:ULong = (-128)+(65535); }
	def m12313():Void { var l:ULong = (-128)+(-65535); }
	def m12314():Void { var l:ULong = (-128)+(65536); }
	def m12315():Void { var l:ULong = (-128)+(-65536); }
	def m12316():Void { var l:ULong = (-128)+(16777216); }
	def m12317():Void { var l:ULong = (-128)+(-16777216); }
	def m12318():Void { var l:ULong = (-128)+(16777217); }
	def m12319():Void { var l:ULong = (-128)+(-16777217); }
	def m12320():Void { var l:ULong = (-128)+(2147483647); }
	def m12321():Void { var l:ULong = (-128)+(-2147483647); }
	def m12322():Void { var l:ULong = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12323():Void { var l:ULong = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12324():Void { var l:ULong = (255)+(w2); }
	def m12325():Void { var l:ULong = (255)+(w3); }
	def m12326():Void { var l:ULong = (255)+(w4); }
	def m12327():Void { var l:ULong = (255)+(w5); }
	def m12328():Void { var l:ULong = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12329():Void { var l:ULong = (255)+(w7); }
	def m12330():Void { var l:ULong = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12331():Void { var l:ULong = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12332():Void { var l:ULong = (255)+(0); }
	def m12333():Void { var l:ULong = (255)+(-0); }
	def m12334():Void { var l:ULong = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12335():Void { var l:ULong = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12336():Void { var l:ULong = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12337():Void { var l:ULong = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12338():Void { var l:ULong = (255)+(127); }
	def m12339():Void { var l:ULong = (255)+(-127); }
	def m12340():Void { var l:ULong = (255)+(128); }
	def m12341():Void { var l:ULong = (255)+(-128); }
	def m12342():Void { var l:ULong = (255)+(255); }
	def m12343():Void { var l:ULong = (255)+(-255); }
	def m12344():Void { var l:ULong = (255)+(256); }
	def m12345():Void { var l:ULong = (255)+(-256); }
	def m12346():Void { var l:ULong = (255)+(32767); }
	def m12347():Void { var l:ULong = (255)+(-32767); }
	def m12348():Void { var l:ULong = (255)+(32768); }
	def m12349():Void { var l:ULong = (255)+(-32768); }
	def m12350():Void { var l:ULong = (255)+(65535); }
	def m12351():Void { var l:ULong = (255)+(-65535); }
	def m12352():Void { var l:ULong = (255)+(65536); }
	def m12353():Void { var l:ULong = (255)+(-65536); }
	def m12354():Void { var l:ULong = (255)+(16777216); }
	def m12355():Void { var l:ULong = (255)+(-16777216); }
	def m12356():Void { var l:ULong = (255)+(16777217); }
	def m12357():Void { var l:ULong = (255)+(-16777217); }
	def m12358():Void { var l:ULong = (255)+(2147483647); }
	def m12359():Void { var l:ULong = (255)+(-2147483647); }
	def m12360():Void { var l:ULong = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12361():Void { var l:ULong = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12362():Void { var l:ULong = (-255)+(w2); }
	def m12363():Void { var l:ULong = (-255)+(w3); }
	def m12364():Void { var l:ULong = (-255)+(w4); }
	def m12365():Void { var l:ULong = (-255)+(w5); }
	def m12366():Void { var l:ULong = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12367():Void { var l:ULong = (-255)+(w7); }
	def m12368():Void { var l:ULong = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12369():Void { var l:ULong = (-255)+(w9); }
	def m12370():Void { var l:ULong = (-255)+(0); }
	def m12371():Void { var l:ULong = (-255)+(-0); }
	def m12372():Void { var l:ULong = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12373():Void { var l:ULong = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12374():Void { var l:ULong = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12375():Void { var l:ULong = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12376():Void { var l:ULong = (-255)+(127); }
	def m12377():Void { var l:ULong = (-255)+(-127); }
	def m12378():Void { var l:ULong = (-255)+(128); }
	def m12379():Void { var l:ULong = (-255)+(-128); }
	def m12380():Void { var l:ULong = (-255)+(255); }
	def m12381():Void { var l:ULong = (-255)+(-255); }
	def m12382():Void { var l:ULong = (-255)+(256); }
	def m12383():Void { var l:ULong = (-255)+(-256); }
	def m12384():Void { var l:ULong = (-255)+(32767); }
	def m12385():Void { var l:ULong = (-255)+(-32767); }
	def m12386():Void { var l:ULong = (-255)+(32768); }
	def m12387():Void { var l:ULong = (-255)+(-32768); }
	def m12388():Void { var l:ULong = (-255)+(65535); }
	def m12389():Void { var l:ULong = (-255)+(-65535); }
	def m12390():Void { var l:ULong = (-255)+(65536); }
	def m12391():Void { var l:ULong = (-255)+(-65536); }
	def m12392():Void { var l:ULong = (-255)+(16777216); }
	def m12393():Void { var l:ULong = (-255)+(-16777216); }
	def m12394():Void { var l:ULong = (-255)+(16777217); }
	def m12395():Void { var l:ULong = (-255)+(-16777217); }
	def m12396():Void { var l:ULong = (-255)+(2147483647); }
	def m12397():Void { var l:ULong = (-255)+(-2147483647); }
	def m12398():Void { var l:ULong = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12399():Void { var l:ULong = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12400():Void { var l:ULong = (256)+(w2); }
	def m12401():Void { var l:ULong = (256)+(w3); }
	def m12402():Void { var l:ULong = (256)+(w4); }
	def m12403():Void { var l:ULong = (256)+(w5); }
	def m12404():Void { var l:ULong = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12405():Void { var l:ULong = (256)+(w7); }
	def m12406():Void { var l:ULong = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12407():Void { var l:ULong = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12408():Void { var l:ULong = (256)+(0); }
	def m12409():Void { var l:ULong = (256)+(-0); }
	def m12410():Void { var l:ULong = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12411():Void { var l:ULong = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12412():Void { var l:ULong = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12413():Void { var l:ULong = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12414():Void { var l:ULong = (256)+(127); }
	def m12415():Void { var l:ULong = (256)+(-127); }
	def m12416():Void { var l:ULong = (256)+(128); }
	def m12417():Void { var l:ULong = (256)+(-128); }
	def m12418():Void { var l:ULong = (256)+(255); }
	def m12419():Void { var l:ULong = (256)+(-255); }
	def m12420():Void { var l:ULong = (256)+(256); }
	def m12421():Void { var l:ULong = (256)+(-256); }
	def m12422():Void { var l:ULong = (256)+(32767); }
	def m12423():Void { var l:ULong = (256)+(-32767); }
	def m12424():Void { var l:ULong = (256)+(32768); }
	def m12425():Void { var l:ULong = (256)+(-32768); }
	def m12426():Void { var l:ULong = (256)+(65535); }
	def m12427():Void { var l:ULong = (256)+(-65535); }
	def m12428():Void { var l:ULong = (256)+(65536); }
	def m12429():Void { var l:ULong = (256)+(-65536); }
	def m12430():Void { var l:ULong = (256)+(16777216); }
	def m12431():Void { var l:ULong = (256)+(-16777216); }
	def m12432():Void { var l:ULong = (256)+(16777217); }
	def m12433():Void { var l:ULong = (256)+(-16777217); }
	def m12434():Void { var l:ULong = (256)+(2147483647); }
	def m12435():Void { var l:ULong = (256)+(-2147483647); }
	def m12436():Void { var l:ULong = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12437():Void { var l:ULong = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12438():Void { var l:ULong = (-256)+(w2); }
	def m12439():Void { var l:ULong = (-256)+(w3); }
	def m12440():Void { var l:ULong = (-256)+(w4); }
	def m12441():Void { var l:ULong = (-256)+(w5); }
	def m12442():Void { var l:ULong = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12443():Void { var l:ULong = (-256)+(w7); }
	def m12444():Void { var l:ULong = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12445():Void { var l:ULong = (-256)+(w9); }
	def m12446():Void { var l:ULong = (-256)+(0); }
	def m12447():Void { var l:ULong = (-256)+(-0); }
	def m12448():Void { var l:ULong = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12449():Void { var l:ULong = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12450():Void { var l:ULong = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12451():Void { var l:ULong = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12452():Void { var l:ULong = (-256)+(127); }
	def m12453():Void { var l:ULong = (-256)+(-127); }
	def m12454():Void { var l:ULong = (-256)+(128); }
	def m12455():Void { var l:ULong = (-256)+(-128); }
	def m12456():Void { var l:ULong = (-256)+(255); }
	def m12457():Void { var l:ULong = (-256)+(-255); }
	def m12458():Void { var l:ULong = (-256)+(256); }
	def m12459():Void { var l:ULong = (-256)+(-256); }
	def m12460():Void { var l:ULong = (-256)+(32767); }
	def m12461():Void { var l:ULong = (-256)+(-32767); }
	def m12462():Void { var l:ULong = (-256)+(32768); }
	def m12463():Void { var l:ULong = (-256)+(-32768); }
	def m12464():Void { var l:ULong = (-256)+(65535); }
	def m12465():Void { var l:ULong = (-256)+(-65535); }
	def m12466():Void { var l:ULong = (-256)+(65536); }
	def m12467():Void { var l:ULong = (-256)+(-65536); }
	def m12468():Void { var l:ULong = (-256)+(16777216); }
	def m12469():Void { var l:ULong = (-256)+(-16777216); }
	def m12470():Void { var l:ULong = (-256)+(16777217); }
	def m12471():Void { var l:ULong = (-256)+(-16777217); }
	def m12472():Void { var l:ULong = (-256)+(2147483647); }
	def m12473():Void { var l:ULong = (-256)+(-2147483647); }
	def m12474():Void { var l:ULong = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12475():Void { var l:ULong = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12476():Void { var l:ULong = (32767)+(w2); }
	def m12477():Void { var l:ULong = (32767)+(w3); }
	def m12478():Void { var l:ULong = (32767)+(w4); }
	def m12479():Void { var l:ULong = (32767)+(w5); }
	def m12480():Void { var l:ULong = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12481():Void { var l:ULong = (32767)+(w7); }
	def m12482():Void { var l:ULong = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12483():Void { var l:ULong = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12484():Void { var l:ULong = (32767)+(0); }
	def m12485():Void { var l:ULong = (32767)+(-0); }
	def m12486():Void { var l:ULong = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12487():Void { var l:ULong = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12488():Void { var l:ULong = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12489():Void { var l:ULong = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12490():Void { var l:ULong = (32767)+(127); }
	def m12491():Void { var l:ULong = (32767)+(-127); }
	def m12492():Void { var l:ULong = (32767)+(128); }
	def m12493():Void { var l:ULong = (32767)+(-128); }
	def m12494():Void { var l:ULong = (32767)+(255); }
	def m12495():Void { var l:ULong = (32767)+(-255); }
	def m12496():Void { var l:ULong = (32767)+(256); }
	def m12497():Void { var l:ULong = (32767)+(-256); }
	def m12498():Void { var l:ULong = (32767)+(32767); }
	def m12499():Void { var l:ULong = (32767)+(-32767); }
	def m12500():Void { var l:ULong = (32767)+(32768); }
	def m12501():Void { var l:ULong = (32767)+(-32768); }
	def m12502():Void { var l:ULong = (32767)+(65535); }
	def m12503():Void { var l:ULong = (32767)+(-65535); }
	def m12504():Void { var l:ULong = (32767)+(65536); }
	def m12505():Void { var l:ULong = (32767)+(-65536); }
	def m12506():Void { var l:ULong = (32767)+(16777216); }
	def m12507():Void { var l:ULong = (32767)+(-16777216); }
	def m12508():Void { var l:ULong = (32767)+(16777217); }
	def m12509():Void { var l:ULong = (32767)+(-16777217); }
	def m12510():Void { var l:ULong = (32767)+(2147483647); }
	def m12511():Void { var l:ULong = (32767)+(-2147483647); }
	def m12512():Void { var l:ULong = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12513():Void { var l:ULong = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12514():Void { var l:ULong = (-32767)+(w2); }
	def m12515():Void { var l:ULong = (-32767)+(w3); }
	def m12516():Void { var l:ULong = (-32767)+(w4); }
	def m12517():Void { var l:ULong = (-32767)+(w5); }
	def m12518():Void { var l:ULong = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12519():Void { var l:ULong = (-32767)+(w7); }
	def m12520():Void { var l:ULong = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12521():Void { var l:ULong = (-32767)+(w9); }
	def m12522():Void { var l:ULong = (-32767)+(0); }
	def m12523():Void { var l:ULong = (-32767)+(-0); }
	def m12524():Void { var l:ULong = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12525():Void { var l:ULong = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12526():Void { var l:ULong = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12527():Void { var l:ULong = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12528():Void { var l:ULong = (-32767)+(127); }
	def m12529():Void { var l:ULong = (-32767)+(-127); }
	def m12530():Void { var l:ULong = (-32767)+(128); }
	def m12531():Void { var l:ULong = (-32767)+(-128); }
	def m12532():Void { var l:ULong = (-32767)+(255); }
	def m12533():Void { var l:ULong = (-32767)+(-255); }
	def m12534():Void { var l:ULong = (-32767)+(256); }
	def m12535():Void { var l:ULong = (-32767)+(-256); }
	def m12536():Void { var l:ULong = (-32767)+(32767); }
	def m12537():Void { var l:ULong = (-32767)+(-32767); }
	def m12538():Void { var l:ULong = (-32767)+(32768); }
	def m12539():Void { var l:ULong = (-32767)+(-32768); }
	def m12540():Void { var l:ULong = (-32767)+(65535); }
	def m12541():Void { var l:ULong = (-32767)+(-65535); }
	def m12542():Void { var l:ULong = (-32767)+(65536); }
	def m12543():Void { var l:ULong = (-32767)+(-65536); }
	def m12544():Void { var l:ULong = (-32767)+(16777216); }
	def m12545():Void { var l:ULong = (-32767)+(-16777216); }
	def m12546():Void { var l:ULong = (-32767)+(16777217); }
	def m12547():Void { var l:ULong = (-32767)+(-16777217); }
	def m12548():Void { var l:ULong = (-32767)+(2147483647); }
	def m12549():Void { var l:ULong = (-32767)+(-2147483647); }
	def m12550():Void { var l:ULong = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12551():Void { var l:ULong = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12552():Void { var l:ULong = (32768)+(w2); }
	def m12553():Void { var l:ULong = (32768)+(w3); }
	def m12554():Void { var l:ULong = (32768)+(w4); }
	def m12555():Void { var l:ULong = (32768)+(w5); }
	def m12556():Void { var l:ULong = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12557():Void { var l:ULong = (32768)+(w7); }
	def m12558():Void { var l:ULong = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12559():Void { var l:ULong = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12560():Void { var l:ULong = (32768)+(0); }
	def m12561():Void { var l:ULong = (32768)+(-0); }
	def m12562():Void { var l:ULong = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12563():Void { var l:ULong = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12564():Void { var l:ULong = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12565():Void { var l:ULong = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12566():Void { var l:ULong = (32768)+(127); }
	def m12567():Void { var l:ULong = (32768)+(-127); }
	def m12568():Void { var l:ULong = (32768)+(128); }
	def m12569():Void { var l:ULong = (32768)+(-128); }
	def m12570():Void { var l:ULong = (32768)+(255); }
	def m12571():Void { var l:ULong = (32768)+(-255); }
	def m12572():Void { var l:ULong = (32768)+(256); }
	def m12573():Void { var l:ULong = (32768)+(-256); }
	def m12574():Void { var l:ULong = (32768)+(32767); }
	def m12575():Void { var l:ULong = (32768)+(-32767); }
	def m12576():Void { var l:ULong = (32768)+(32768); }
	def m12577():Void { var l:ULong = (32768)+(-32768); }
	def m12578():Void { var l:ULong = (32768)+(65535); }
	def m12579():Void { var l:ULong = (32768)+(-65535); }
	def m12580():Void { var l:ULong = (32768)+(65536); }
	def m12581():Void { var l:ULong = (32768)+(-65536); }
	def m12582():Void { var l:ULong = (32768)+(16777216); }
	def m12583():Void { var l:ULong = (32768)+(-16777216); }
	def m12584():Void { var l:ULong = (32768)+(16777217); }
	def m12585():Void { var l:ULong = (32768)+(-16777217); }
	def m12586():Void { var l:ULong = (32768)+(2147483647); }
	def m12587():Void { var l:ULong = (32768)+(-2147483647); }
	def m12588():Void { var l:ULong = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12589():Void { var l:ULong = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12590():Void { var l:ULong = (-32768)+(w2); }
	def m12591():Void { var l:ULong = (-32768)+(w3); }
	def m12592():Void { var l:ULong = (-32768)+(w4); }
	def m12593():Void { var l:ULong = (-32768)+(w5); }
	def m12594():Void { var l:ULong = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12595():Void { var l:ULong = (-32768)+(w7); }
	def m12596():Void { var l:ULong = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12597():Void { var l:ULong = (-32768)+(w9); }
	def m12598():Void { var l:ULong = (-32768)+(0); }
	def m12599():Void { var l:ULong = (-32768)+(-0); }
	def m12600():Void { var l:ULong = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12601():Void { var l:ULong = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12602():Void { var l:ULong = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12603():Void { var l:ULong = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12604():Void { var l:ULong = (-32768)+(127); }
	def m12605():Void { var l:ULong = (-32768)+(-127); }
	def m12606():Void { var l:ULong = (-32768)+(128); }
	def m12607():Void { var l:ULong = (-32768)+(-128); }
	def m12608():Void { var l:ULong = (-32768)+(255); }
	def m12609():Void { var l:ULong = (-32768)+(-255); }
	def m12610():Void { var l:ULong = (-32768)+(256); }
	def m12611():Void { var l:ULong = (-32768)+(-256); }
	def m12612():Void { var l:ULong = (-32768)+(32767); }
	def m12613():Void { var l:ULong = (-32768)+(-32767); }
	def m12614():Void { var l:ULong = (-32768)+(32768); }
	def m12615():Void { var l:ULong = (-32768)+(-32768); }
	def m12616():Void { var l:ULong = (-32768)+(65535); }
	def m12617():Void { var l:ULong = (-32768)+(-65535); }
	def m12618():Void { var l:ULong = (-32768)+(65536); }
	def m12619():Void { var l:ULong = (-32768)+(-65536); }
	def m12620():Void { var l:ULong = (-32768)+(16777216); }
	def m12621():Void { var l:ULong = (-32768)+(-16777216); }
	def m12622():Void { var l:ULong = (-32768)+(16777217); }
	def m12623():Void { var l:ULong = (-32768)+(-16777217); }
	def m12624():Void { var l:ULong = (-32768)+(2147483647); }
	def m12625():Void { var l:ULong = (-32768)+(-2147483647); }
	def m12626():Void { var l:ULong = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12627():Void { var l:ULong = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12628():Void { var l:ULong = (65535)+(w2); }
	def m12629():Void { var l:ULong = (65535)+(w3); }
	def m12630():Void { var l:ULong = (65535)+(w4); }
	def m12631():Void { var l:ULong = (65535)+(w5); }
	def m12632():Void { var l:ULong = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12633():Void { var l:ULong = (65535)+(w7); }
	def m12634():Void { var l:ULong = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12635():Void { var l:ULong = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12636():Void { var l:ULong = (65535)+(0); }
	def m12637():Void { var l:ULong = (65535)+(-0); }
	def m12638():Void { var l:ULong = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12639():Void { var l:ULong = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12640():Void { var l:ULong = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12641():Void { var l:ULong = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12642():Void { var l:ULong = (65535)+(127); }
	def m12643():Void { var l:ULong = (65535)+(-127); }
	def m12644():Void { var l:ULong = (65535)+(128); }
	def m12645():Void { var l:ULong = (65535)+(-128); }
	def m12646():Void { var l:ULong = (65535)+(255); }
	def m12647():Void { var l:ULong = (65535)+(-255); }
	def m12648():Void { var l:ULong = (65535)+(256); }
	def m12649():Void { var l:ULong = (65535)+(-256); }
	def m12650():Void { var l:ULong = (65535)+(32767); }
	def m12651():Void { var l:ULong = (65535)+(-32767); }
	def m12652():Void { var l:ULong = (65535)+(32768); }
	def m12653():Void { var l:ULong = (65535)+(-32768); }
	def m12654():Void { var l:ULong = (65535)+(65535); }
	def m12655():Void { var l:ULong = (65535)+(-65535); }
	def m12656():Void { var l:ULong = (65535)+(65536); }
	def m12657():Void { var l:ULong = (65535)+(-65536); }
	def m12658():Void { var l:ULong = (65535)+(16777216); }
	def m12659():Void { var l:ULong = (65535)+(-16777216); }
	def m12660():Void { var l:ULong = (65535)+(16777217); }
	def m12661():Void { var l:ULong = (65535)+(-16777217); }
	def m12662():Void { var l:ULong = (65535)+(2147483647); }
	def m12663():Void { var l:ULong = (65535)+(-2147483647); }
	def m12664():Void { var l:ULong = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12665():Void { var l:ULong = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12666():Void { var l:ULong = (-65535)+(w2); }
	def m12667():Void { var l:ULong = (-65535)+(w3); }
	def m12668():Void { var l:ULong = (-65535)+(w4); }
	def m12669():Void { var l:ULong = (-65535)+(w5); }
	def m12670():Void { var l:ULong = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12671():Void { var l:ULong = (-65535)+(w7); }
	def m12672():Void { var l:ULong = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12673():Void { var l:ULong = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12674():Void { var l:ULong = (-65535)+(0); }
	def m12675():Void { var l:ULong = (-65535)+(-0); }
	def m12676():Void { var l:ULong = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12677():Void { var l:ULong = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12678():Void { var l:ULong = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12679():Void { var l:ULong = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12680():Void { var l:ULong = (-65535)+(127); }
	def m12681():Void { var l:ULong = (-65535)+(-127); }
	def m12682():Void { var l:ULong = (-65535)+(128); }
	def m12683():Void { var l:ULong = (-65535)+(-128); }
	def m12684():Void { var l:ULong = (-65535)+(255); }
	def m12685():Void { var l:ULong = (-65535)+(-255); }
	def m12686():Void { var l:ULong = (-65535)+(256); }
	def m12687():Void { var l:ULong = (-65535)+(-256); }
	def m12688():Void { var l:ULong = (-65535)+(32767); }
	def m12689():Void { var l:ULong = (-65535)+(-32767); }
	def m12690():Void { var l:ULong = (-65535)+(32768); }
	def m12691():Void { var l:ULong = (-65535)+(-32768); }
	def m12692():Void { var l:ULong = (-65535)+(65535); }
	def m12693():Void { var l:ULong = (-65535)+(-65535); }
	def m12694():Void { var l:ULong = (-65535)+(65536); }
	def m12695():Void { var l:ULong = (-65535)+(-65536); }
	def m12696():Void { var l:ULong = (-65535)+(16777216); }
	def m12697():Void { var l:ULong = (-65535)+(-16777216); }
	def m12698():Void { var l:ULong = (-65535)+(16777217); }
	def m12699():Void { var l:ULong = (-65535)+(-16777217); }
	def m12700():Void { var l:ULong = (-65535)+(2147483647); }
	def m12701():Void { var l:ULong = (-65535)+(-2147483647); }
	def m12702():Void { var l:ULong = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12703():Void { var l:ULong = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12704():Void { var l:ULong = (65536)+(w2); }
	def m12705():Void { var l:ULong = (65536)+(w3); }
	def m12706():Void { var l:ULong = (65536)+(w4); }
	def m12707():Void { var l:ULong = (65536)+(w5); }
	def m12708():Void { var l:ULong = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12709():Void { var l:ULong = (65536)+(w7); }
	def m12710():Void { var l:ULong = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12711():Void { var l:ULong = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12712():Void { var l:ULong = (65536)+(0); }
	def m12713():Void { var l:ULong = (65536)+(-0); }
	def m12714():Void { var l:ULong = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12715():Void { var l:ULong = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12716():Void { var l:ULong = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12717():Void { var l:ULong = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12718():Void { var l:ULong = (65536)+(127); }
	def m12719():Void { var l:ULong = (65536)+(-127); }
	def m12720():Void { var l:ULong = (65536)+(128); }
	def m12721():Void { var l:ULong = (65536)+(-128); }
	def m12722():Void { var l:ULong = (65536)+(255); }
	def m12723():Void { var l:ULong = (65536)+(-255); }
	def m12724():Void { var l:ULong = (65536)+(256); }
	def m12725():Void { var l:ULong = (65536)+(-256); }
	def m12726():Void { var l:ULong = (65536)+(32767); }
	def m12727():Void { var l:ULong = (65536)+(-32767); }
	def m12728():Void { var l:ULong = (65536)+(32768); }
	def m12729():Void { var l:ULong = (65536)+(-32768); }
	def m12730():Void { var l:ULong = (65536)+(65535); }
	def m12731():Void { var l:ULong = (65536)+(-65535); }
	def m12732():Void { var l:ULong = (65536)+(65536); }
	def m12733():Void { var l:ULong = (65536)+(-65536); }
	def m12734():Void { var l:ULong = (65536)+(16777216); }
	def m12735():Void { var l:ULong = (65536)+(-16777216); }
	def m12736():Void { var l:ULong = (65536)+(16777217); }
	def m12737():Void { var l:ULong = (65536)+(-16777217); }
	def m12738():Void { var l:ULong = (65536)+(2147483647); }
	def m12739():Void { var l:ULong = (65536)+(-2147483647); }
	def m12740():Void { var l:ULong = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12741():Void { var l:ULong = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12742():Void { var l:ULong = (-65536)+(w2); }
	def m12743():Void { var l:ULong = (-65536)+(w3); }
	def m12744():Void { var l:ULong = (-65536)+(w4); }
	def m12745():Void { var l:ULong = (-65536)+(w5); }
	def m12746():Void { var l:ULong = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12747():Void { var l:ULong = (-65536)+(w7); }
	def m12748():Void { var l:ULong = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12749():Void { var l:ULong = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12750():Void { var l:ULong = (-65536)+(0); }
	def m12751():Void { var l:ULong = (-65536)+(-0); }
	def m12752():Void { var l:ULong = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12753():Void { var l:ULong = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12754():Void { var l:ULong = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12755():Void { var l:ULong = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12756():Void { var l:ULong = (-65536)+(127); }
	def m12757():Void { var l:ULong = (-65536)+(-127); }
	def m12758():Void { var l:ULong = (-65536)+(128); }
	def m12759():Void { var l:ULong = (-65536)+(-128); }
	def m12760():Void { var l:ULong = (-65536)+(255); }
	def m12761():Void { var l:ULong = (-65536)+(-255); }
	def m12762():Void { var l:ULong = (-65536)+(256); }
	def m12763():Void { var l:ULong = (-65536)+(-256); }
	def m12764():Void { var l:ULong = (-65536)+(32767); }
	def m12765():Void { var l:ULong = (-65536)+(-32767); }
	def m12766():Void { var l:ULong = (-65536)+(32768); }
	def m12767():Void { var l:ULong = (-65536)+(-32768); }
	def m12768():Void { var l:ULong = (-65536)+(65535); }
	def m12769():Void { var l:ULong = (-65536)+(-65535); }
	def m12770():Void { var l:ULong = (-65536)+(65536); }
	def m12771():Void { var l:ULong = (-65536)+(-65536); }
	def m12772():Void { var l:ULong = (-65536)+(16777216); }
	def m12773():Void { var l:ULong = (-65536)+(-16777216); }
	def m12774():Void { var l:ULong = (-65536)+(16777217); }
	def m12775():Void { var l:ULong = (-65536)+(-16777217); }
	def m12776():Void { var l:ULong = (-65536)+(2147483647); }
	def m12777():Void { var l:ULong = (-65536)+(-2147483647); }
	def m12778():Void { var l:ULong = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12779():Void { var l:ULong = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12780():Void { var l:ULong = (16777216)+(w2); }
	def m12781():Void { var l:ULong = (16777216)+(w3); }
	def m12782():Void { var l:ULong = (16777216)+(w4); }
	def m12783():Void { var l:ULong = (16777216)+(w5); }
	def m12784():Void { var l:ULong = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12785():Void { var l:ULong = (16777216)+(w7); }
	def m12786():Void { var l:ULong = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12787():Void { var l:ULong = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12788():Void { var l:ULong = (16777216)+(0); }
	def m12789():Void { var l:ULong = (16777216)+(-0); }
	def m12790():Void { var l:ULong = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12791():Void { var l:ULong = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12792():Void { var l:ULong = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12793():Void { var l:ULong = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12794():Void { var l:ULong = (16777216)+(127); }
	def m12795():Void { var l:ULong = (16777216)+(-127); }
	def m12796():Void { var l:ULong = (16777216)+(128); }
	def m12797():Void { var l:ULong = (16777216)+(-128); }
	def m12798():Void { var l:ULong = (16777216)+(255); }
	def m12799():Void { var l:ULong = (16777216)+(-255); }
	def m12800():Void { var l:ULong = (16777216)+(256); }
	def m12801():Void { var l:ULong = (16777216)+(-256); }
	def m12802():Void { var l:ULong = (16777216)+(32767); }
	def m12803():Void { var l:ULong = (16777216)+(-32767); }
	def m12804():Void { var l:ULong = (16777216)+(32768); }
	def m12805():Void { var l:ULong = (16777216)+(-32768); }
	def m12806():Void { var l:ULong = (16777216)+(65535); }
	def m12807():Void { var l:ULong = (16777216)+(-65535); }
	def m12808():Void { var l:ULong = (16777216)+(65536); }
	def m12809():Void { var l:ULong = (16777216)+(-65536); }
	def m12810():Void { var l:ULong = (16777216)+(16777216); }
	def m12811():Void { var l:ULong = (16777216)+(-16777216); }
	def m12812():Void { var l:ULong = (16777216)+(16777217); }
	def m12813():Void { var l:ULong = (16777216)+(-16777217); }
	def m12814():Void { var l:ULong = (16777216)+(2147483647); }
	def m12815():Void { var l:ULong = (16777216)+(-2147483647); }
	def m12816():Void { var l:ULong = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12817():Void { var l:ULong = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12818():Void { var l:ULong = (-16777216)+(w2); }
	def m12819():Void { var l:ULong = (-16777216)+(w3); }
	def m12820():Void { var l:ULong = (-16777216)+(w4); }
	def m12821():Void { var l:ULong = (-16777216)+(w5); }
	def m12822():Void { var l:ULong = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12823():Void { var l:ULong = (-16777216)+(w7); }
	def m12824():Void { var l:ULong = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12825():Void { var l:ULong = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12826():Void { var l:ULong = (-16777216)+(0); }
	def m12827():Void { var l:ULong = (-16777216)+(-0); }
	def m12828():Void { var l:ULong = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12829():Void { var l:ULong = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12830():Void { var l:ULong = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12831():Void { var l:ULong = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12832():Void { var l:ULong = (-16777216)+(127); }
	def m12833():Void { var l:ULong = (-16777216)+(-127); }
	def m12834():Void { var l:ULong = (-16777216)+(128); }
	def m12835():Void { var l:ULong = (-16777216)+(-128); }
	def m12836():Void { var l:ULong = (-16777216)+(255); }
	def m12837():Void { var l:ULong = (-16777216)+(-255); }
	def m12838():Void { var l:ULong = (-16777216)+(256); }
	def m12839():Void { var l:ULong = (-16777216)+(-256); }
	def m12840():Void { var l:ULong = (-16777216)+(32767); }
	def m12841():Void { var l:ULong = (-16777216)+(-32767); }
	def m12842():Void { var l:ULong = (-16777216)+(32768); }
	def m12843():Void { var l:ULong = (-16777216)+(-32768); }
	def m12844():Void { var l:ULong = (-16777216)+(65535); }
	def m12845():Void { var l:ULong = (-16777216)+(-65535); }
	def m12846():Void { var l:ULong = (-16777216)+(65536); }
	def m12847():Void { var l:ULong = (-16777216)+(-65536); }
	def m12848():Void { var l:ULong = (-16777216)+(16777216); }
	def m12849():Void { var l:ULong = (-16777216)+(-16777216); }
	def m12850():Void { var l:ULong = (-16777216)+(16777217); }
	def m12851():Void { var l:ULong = (-16777216)+(-16777217); }
	def m12852():Void { var l:ULong = (-16777216)+(2147483647); }
	def m12853():Void { var l:ULong = (-16777216)+(-2147483647); }
	def m12854():Void { var l:ULong = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12855():Void { var l:ULong = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12856():Void { var l:ULong = (16777217)+(w2); }
	def m12857():Void { var l:ULong = (16777217)+(w3); }
	def m12858():Void { var l:ULong = (16777217)+(w4); }
	def m12859():Void { var l:ULong = (16777217)+(w5); }
	def m12860():Void { var l:ULong = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12861():Void { var l:ULong = (16777217)+(w7); }
	def m12862():Void { var l:ULong = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12863():Void { var l:ULong = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12864():Void { var l:ULong = (16777217)+(0); }
	def m12865():Void { var l:ULong = (16777217)+(-0); }
	def m12866():Void { var l:ULong = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12867():Void { var l:ULong = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12868():Void { var l:ULong = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12869():Void { var l:ULong = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12870():Void { var l:ULong = (16777217)+(127); }
	def m12871():Void { var l:ULong = (16777217)+(-127); }
	def m12872():Void { var l:ULong = (16777217)+(128); }
	def m12873():Void { var l:ULong = (16777217)+(-128); }
	def m12874():Void { var l:ULong = (16777217)+(255); }
	def m12875():Void { var l:ULong = (16777217)+(-255); }
	def m12876():Void { var l:ULong = (16777217)+(256); }
	def m12877():Void { var l:ULong = (16777217)+(-256); }
	def m12878():Void { var l:ULong = (16777217)+(32767); }
	def m12879():Void { var l:ULong = (16777217)+(-32767); }
	def m12880():Void { var l:ULong = (16777217)+(32768); }
	def m12881():Void { var l:ULong = (16777217)+(-32768); }
	def m12882():Void { var l:ULong = (16777217)+(65535); }
	def m12883():Void { var l:ULong = (16777217)+(-65535); }
	def m12884():Void { var l:ULong = (16777217)+(65536); }
	def m12885():Void { var l:ULong = (16777217)+(-65536); }
	def m12886():Void { var l:ULong = (16777217)+(16777216); }
	def m12887():Void { var l:ULong = (16777217)+(-16777216); }
	def m12888():Void { var l:ULong = (16777217)+(16777217); }
	def m12889():Void { var l:ULong = (16777217)+(-16777217); }
	def m12890():Void { var l:ULong = (16777217)+(2147483647); }
	def m12891():Void { var l:ULong = (16777217)+(-2147483647); }
	def m12892():Void { var l:ULong = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12893():Void { var l:ULong = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12894():Void { var l:ULong = (-16777217)+(w2); }
	def m12895():Void { var l:ULong = (-16777217)+(w3); }
	def m12896():Void { var l:ULong = (-16777217)+(w4); }
	def m12897():Void { var l:ULong = (-16777217)+(w5); }
	def m12898():Void { var l:ULong = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12899():Void { var l:ULong = (-16777217)+(w7); }
	def m12900():Void { var l:ULong = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12901():Void { var l:ULong = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12902():Void { var l:ULong = (-16777217)+(0); }
	def m12903():Void { var l:ULong = (-16777217)+(-0); }
	def m12904():Void { var l:ULong = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12905():Void { var l:ULong = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12906():Void { var l:ULong = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12907():Void { var l:ULong = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12908():Void { var l:ULong = (-16777217)+(127); }
	def m12909():Void { var l:ULong = (-16777217)+(-127); }
	def m12910():Void { var l:ULong = (-16777217)+(128); }
	def m12911():Void { var l:ULong = (-16777217)+(-128); }
	def m12912():Void { var l:ULong = (-16777217)+(255); }
	def m12913():Void { var l:ULong = (-16777217)+(-255); }
	def m12914():Void { var l:ULong = (-16777217)+(256); }
	def m12915():Void { var l:ULong = (-16777217)+(-256); }
	def m12916():Void { var l:ULong = (-16777217)+(32767); }
	def m12917():Void { var l:ULong = (-16777217)+(-32767); }
	def m12918():Void { var l:ULong = (-16777217)+(32768); }
	def m12919():Void { var l:ULong = (-16777217)+(-32768); }
	def m12920():Void { var l:ULong = (-16777217)+(65535); }
	def m12921():Void { var l:ULong = (-16777217)+(-65535); }
	def m12922():Void { var l:ULong = (-16777217)+(65536); }
	def m12923():Void { var l:ULong = (-16777217)+(-65536); }
	def m12924():Void { var l:ULong = (-16777217)+(16777216); }
	def m12925():Void { var l:ULong = (-16777217)+(-16777216); }
	def m12926():Void { var l:ULong = (-16777217)+(16777217); }
	def m12927():Void { var l:ULong = (-16777217)+(-16777217); }
	def m12928():Void { var l:ULong = (-16777217)+(2147483647); }
	def m12929():Void { var l:ULong = (-16777217)+(-2147483647); }
	def m12930():Void { var l:ULong = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12931():Void { var l:ULong = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12932():Void { var l:ULong = (2147483647)+(w2); }
	def m12933():Void { var l:ULong = (2147483647)+(w3); }
	def m12934():Void { var l:ULong = (2147483647)+(w4); }
	def m12935():Void { var l:ULong = (2147483647)+(w5); }
	def m12936():Void { var l:ULong = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12937():Void { var l:ULong = (2147483647)+(w7); }
	def m12938():Void { var l:ULong = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12939():Void { var l:ULong = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12940():Void { var l:ULong = (2147483647)+(0); }
	def m12941():Void { var l:ULong = (2147483647)+(-0); }
	def m12942():Void { var l:ULong = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12943():Void { var l:ULong = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12944():Void { var l:ULong = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12945():Void { var l:ULong = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12946():Void { var l:ULong = (2147483647)+(127); }
	def m12947():Void { var l:ULong = (2147483647)+(-127); }
	def m12948():Void { var l:ULong = (2147483647)+(128); }
	def m12949():Void { var l:ULong = (2147483647)+(-128); }
	def m12950():Void { var l:ULong = (2147483647)+(255); }
	def m12951():Void { var l:ULong = (2147483647)+(-255); }
	def m12952():Void { var l:ULong = (2147483647)+(256); }
	def m12953():Void { var l:ULong = (2147483647)+(-256); }
	def m12954():Void { var l:ULong = (2147483647)+(32767); }
	def m12955():Void { var l:ULong = (2147483647)+(-32767); }
	def m12956():Void { var l:ULong = (2147483647)+(32768); }
	def m12957():Void { var l:ULong = (2147483647)+(-32768); }
	def m12958():Void { var l:ULong = (2147483647)+(65535); }
	def m12959():Void { var l:ULong = (2147483647)+(-65535); }
	def m12960():Void { var l:ULong = (2147483647)+(65536); }
	def m12961():Void { var l:ULong = (2147483647)+(-65536); }
	def m12962():Void { var l:ULong = (2147483647)+(16777216); }
	def m12963():Void { var l:ULong = (2147483647)+(-16777216); }
	def m12964():Void { var l:ULong = (2147483647)+(16777217); }
	def m12965():Void { var l:ULong = (2147483647)+(-16777217); }
	def m12966():Void { var l:ULong = (2147483647)+(2147483647); }
	def m12967():Void { var l:ULong = (2147483647)+(-2147483647); }
	def m12968():Void { var l:ULong = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12969():Void { var l:ULong = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12970():Void { var l:ULong = (-2147483647)+(w2); }
	def m12971():Void { var l:ULong = (-2147483647)+(w3); }
	def m12972():Void { var l:ULong = (-2147483647)+(w4); }
	def m12973():Void { var l:ULong = (-2147483647)+(w5); }
	def m12974():Void { var l:ULong = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m12975():Void { var l:ULong = (-2147483647)+(w7); }
	def m12976():Void { var l:ULong = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m12977():Void { var l:ULong = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m12978():Void { var l:ULong = (-2147483647)+(0); }
	def m12979():Void { var l:ULong = (-2147483647)+(-0); }
	def m12980():Void { var l:ULong = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12981():Void { var l:ULong = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12982():Void { var l:ULong = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12983():Void { var l:ULong = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12984():Void { var l:ULong = (-2147483647)+(127); }
	def m12985():Void { var l:ULong = (-2147483647)+(-127); }
	def m12986():Void { var l:ULong = (-2147483647)+(128); }
	def m12987():Void { var l:ULong = (-2147483647)+(-128); }
	def m12988():Void { var l:ULong = (-2147483647)+(255); }
	def m12989():Void { var l:ULong = (-2147483647)+(-255); }
	def m12990():Void { var l:ULong = (-2147483647)+(256); }
	def m12991():Void { var l:ULong = (-2147483647)+(-256); }
	def m12992():Void { var l:ULong = (-2147483647)+(32767); }
	def m12993():Void { var l:ULong = (-2147483647)+(-32767); }
	def m12994():Void { var l:ULong = (-2147483647)+(32768); }
	def m12995():Void { var l:ULong = (-2147483647)+(-32768); }
	def m12996():Void { var l:ULong = (-2147483647)+(65535); }
	def m12997():Void { var l:ULong = (-2147483647)+(-65535); }
	def m12998():Void { var l:ULong = (-2147483647)+(65536); }
	def m12999():Void { var l:ULong = (-2147483647)+(-65536); }
	def m13000():Void { var l:ULong = (-2147483647)+(16777216); }
	def m13001():Void { var l:ULong = (-2147483647)+(-16777216); }
	def m13002():Void { var l:ULong = (-2147483647)+(16777217); }
	def m13003():Void { var l:ULong = (-2147483647)+(-16777217); }
	def m13004():Void { var l:ULong = (-2147483647)+(2147483647); }
	def m13005():Void { var l:ULong = (-2147483647)+(-2147483647); }
	def m13006():Void { var l:UShort = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13007():Void { var l:UShort = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13008():Void { var l:UShort = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13009():Void { var l:UShort = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13010():Void { var l:UShort = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13011():Void { var l:UShort = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13012():Void { var l:UShort = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13013():Void { var l:UShort = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13014():Void { var l:UShort = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13015():Void { var l:UShort = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13016():Void { var l:UShort = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13017():Void { var l:UShort = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13018():Void { var l:UShort = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13019():Void { var l:UShort = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13020():Void { var l:UShort = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13021():Void { var l:UShort = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13022():Void { var l:UShort = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13023():Void { var l:UShort = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13024():Void { var l:UShort = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13025():Void { var l:UShort = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13026():Void { var l:UShort = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13027():Void { var l:UShort = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13028():Void { var l:UShort = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13029():Void { var l:UShort = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13030():Void { var l:UShort = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13031():Void { var l:UShort = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13032():Void { var l:UShort = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13033():Void { var l:UShort = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13034():Void { var l:UShort = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13035():Void { var l:UShort = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13036():Void { var l:UShort = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13037():Void { var l:UShort = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13038():Void { var l:UShort = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13039():Void { var l:UShort = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13040():Void { var l:UShort = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13041():Void { var l:UShort = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13042():Void { var l:UShort = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13043():Void { var l:UShort = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13044():Void { var l:UShort = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13045():Void { var l:UShort = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13046():Void { var l:UShort = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13047():Void { var l:UShort = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13048():Void { var l:UShort = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13049():Void { var l:UShort = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13050():Void { var l:UShort = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13051():Void { var l:UShort = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13052():Void { var l:UShort = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13053():Void { var l:UShort = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13054():Void { var l:UShort = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13055():Void { var l:UShort = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13056():Void { var l:UShort = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13057():Void { var l:UShort = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13058():Void { var l:UShort = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13059():Void { var l:UShort = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13060():Void { var l:UShort = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13061():Void { var l:UShort = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13062():Void { var l:UShort = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13063():Void { var l:UShort = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13064():Void { var l:UShort = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13065():Void { var l:UShort = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13066():Void { var l:UShort = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13067():Void { var l:UShort = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13068():Void { var l:UShort = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13069():Void { var l:UShort = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13070():Void { var l:UShort = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13071():Void { var l:UShort = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13072():Void { var l:UShort = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13073():Void { var l:UShort = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13074():Void { var l:UShort = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13075():Void { var l:UShort = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13076():Void { var l:UShort = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13077():Void { var l:UShort = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13078():Void { var l:UShort = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13079():Void { var l:UShort = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13080():Void { var l:UShort = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13081():Void { var l:UShort = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13082():Void { var l:UShort = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13083():Void { var l:UShort = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13084():Void { var l:UShort = (w2)+(w2); }
	def m13085():Void { var l:UShort = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13086():Void { var l:UShort = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13087():Void { var l:UShort = (w2)+(w5); }
	def m13088():Void { var l:UShort = (w2)+(w6); }
	def m13089():Void { var l:UShort = (w2)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m13090():Void { var l:UShort = (w2)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m13091():Void { var l:UShort = (w2)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Byte, y: x10.lang.Byte): x10.lang.Byte in x10.lang.Byte cannot be called with arguments (x10.lang.Byte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m13092():Void { var l:UShort = (w2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13093():Void { var l:UShort = (w2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13094():Void { var l:UShort = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13095():Void { var l:UShort = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13096():Void { var l:UShort = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13097():Void { var l:UShort = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13098():Void { var l:UShort = (w2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13099():Void { var l:UShort = (w2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13100():Void { var l:UShort = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13101():Void { var l:UShort = (w2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13102():Void { var l:UShort = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13103():Void { var l:UShort = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13104():Void { var l:UShort = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13105():Void { var l:UShort = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13106():Void { var l:UShort = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13107():Void { var l:UShort = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13108():Void { var l:UShort = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13109():Void { var l:UShort = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13110():Void { var l:UShort = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13111():Void { var l:UShort = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13112():Void { var l:UShort = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13113():Void { var l:UShort = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13114():Void { var l:UShort = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13115():Void { var l:UShort = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13116():Void { var l:UShort = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13117():Void { var l:UShort = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13118():Void { var l:UShort = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13119():Void { var l:UShort = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2)) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13120():Void { var l:UShort = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13121():Void { var l:UShort = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13122():Void { var l:UShort = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13123():Void { var l:UShort = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13124():Void { var l:UShort = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13125():Void { var l:UShort = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13126():Void { var l:UShort = (w3)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13127():Void { var l:UShort = (w3)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13128():Void { var l:UShort = (w3)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13129():Void { var l:UShort = (w3)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int cannot be called with arguments (x10.lang.Int, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13130():Void { var l:UShort = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13131():Void { var l:UShort = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13132():Void { var l:UShort = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13133():Void { var l:UShort = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13134():Void { var l:UShort = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13135():Void { var l:UShort = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13136():Void { var l:UShort = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13137():Void { var l:UShort = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13138():Void { var l:UShort = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13139():Void { var l:UShort = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13140():Void { var l:UShort = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13141():Void { var l:UShort = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13142():Void { var l:UShort = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13143():Void { var l:UShort = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13144():Void { var l:UShort = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13145():Void { var l:UShort = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13146():Void { var l:UShort = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13147():Void { var l:UShort = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13148():Void { var l:UShort = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13149():Void { var l:UShort = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13150():Void { var l:UShort = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13151():Void { var l:UShort = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13152():Void { var l:UShort = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13153():Void { var l:UShort = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13154():Void { var l:UShort = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13155():Void { var l:UShort = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13156():Void { var l:UShort = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13157():Void { var l:UShort = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w3) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13158():Void { var l:UShort = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13159():Void { var l:UShort = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13160():Void { var l:UShort = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13161():Void { var l:UShort = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13162():Void { var l:UShort = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13163():Void { var l:UShort = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13164():Void { var l:UShort = (w4)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m13165():Void { var l:UShort = (w4)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m13166():Void { var l:UShort = (w4)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13167():Void { var l:UShort = (w4)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Long, y: x10.lang.Long): x10.lang.Long in x10.lang.Long cannot be called with arguments (x10.lang.Long, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m13168():Void { var l:UShort = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13169():Void { var l:UShort = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13170():Void { var l:UShort = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13171():Void { var l:UShort = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13172():Void { var l:UShort = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13173():Void { var l:UShort = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13174():Void { var l:UShort = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13175():Void { var l:UShort = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13176():Void { var l:UShort = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13177():Void { var l:UShort = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13178():Void { var l:UShort = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13179():Void { var l:UShort = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13180():Void { var l:UShort = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13181():Void { var l:UShort = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13182():Void { var l:UShort = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13183():Void { var l:UShort = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13184():Void { var l:UShort = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13185():Void { var l:UShort = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13186():Void { var l:UShort = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13187():Void { var l:UShort = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13188():Void { var l:UShort = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13189():Void { var l:UShort = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13190():Void { var l:UShort = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13191():Void { var l:UShort = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13192():Void { var l:UShort = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13193():Void { var l:UShort = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13194():Void { var l:UShort = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13195():Void { var l:UShort = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13196():Void { var l:UShort = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13197():Void { var l:UShort = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13198():Void { var l:UShort = (w5)+(w2); }
	def m13199():Void { var l:UShort = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13200():Void { var l:UShort = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((TestInstanceOperators.this.w5)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13201():Void { var l:UShort = (w5)+(w5); }
	def m13202():Void { var l:UShort = (w5)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m13203():Void { var l:UShort = (w5)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m13204():Void { var l:UShort = (w5)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Short, y: x10.lang.Short): x10.lang.Short in x10.lang.Short cannot be called with arguments (x10.lang.Short, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m13205():Void { var l:UShort = (w5)+(w9); }
	def m13206():Void { var l:UShort = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13207():Void { var l:UShort = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13208():Void { var l:UShort = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13209():Void { var l:UShort = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13210():Void { var l:UShort = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13211():Void { var l:UShort = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13212():Void { var l:UShort = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13213():Void { var l:UShort = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13214():Void { var l:UShort = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13215():Void { var l:UShort = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13216():Void { var l:UShort = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13217():Void { var l:UShort = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13218():Void { var l:UShort = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13219():Void { var l:UShort = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13220():Void { var l:UShort = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13221():Void { var l:UShort = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13222():Void { var l:UShort = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13223():Void { var l:UShort = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13224():Void { var l:UShort = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13225():Void { var l:UShort = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13226():Void { var l:UShort = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13227():Void { var l:UShort = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13228():Void { var l:UShort = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13229():Void { var l:UShort = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13230():Void { var l:UShort = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13231():Void { var l:UShort = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13232():Void { var l:UShort = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13233():Void { var l:UShort = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5)) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13234():Void { var l:UShort = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13235():Void { var l:UShort = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13236():Void { var l:UShort = (w6)+(w2); }
	def m13237():Void { var l:UShort = (w6)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m13238():Void { var l:UShort = (w6)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m13239():Void { var l:UShort = (w6)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m13240():Void { var l:UShort = (w6)+(w6); }
	def m13241():Void { var l:UShort = (w6)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m13242():Void { var l:UShort = (w6)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m13243():Void { var l:UShort = (w6)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m13244():Void { var l:UShort = (w6)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m13245():Void { var l:UShort = (w6)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==0})
	def m13246():Void { var l:UShort = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13247():Void { var l:UShort = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13248():Void { var l:UShort = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13249():Void { var l:UShort = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13250():Void { var l:UShort = (w6)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==127})
	def m13251():Void { var l:UShort = (w6)+(-127); }
	def m13252():Void { var l:UShort = (w6)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==128})
	def m13253():Void { var l:UShort = (w6)+(-128); }
	def m13254():Void { var l:UShort = (w6)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==255})
	def m13255():Void { var l:UShort = (w6)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m13256():Void { var l:UShort = (w6)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==256})
	def m13257():Void { var l:UShort = (w6)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m13258():Void { var l:UShort = (w6)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32767})
	def m13259():Void { var l:UShort = (w6)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m13260():Void { var l:UShort = (w6)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==32768})
	def m13261():Void { var l:UShort = (w6)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m13262():Void { var l:UShort = (w6)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65535})
	def m13263():Void { var l:UShort = (w6)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m13264():Void { var l:UShort = (w6)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==65536})
	def m13265():Void { var l:UShort = (w6)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m13266():Void { var l:UShort = (w6)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777216})
	def m13267():Void { var l:UShort = (w6)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m13268():Void { var l:UShort = (w6)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==16777217})
	def m13269():Void { var l:UShort = (w6)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m13270():Void { var l:UShort = (w6)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==2147483647})
	def m13271():Void { var l:UShort = (w6)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UByte, y: x10.lang.UByte): x10.lang.UByte in x10.lang.UByte cannot be called with arguments (x10.lang.UByte, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m13272():Void { var l:UShort = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13273():Void { var l:UShort = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13274():Void { var l:UShort = (w7)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Byte)
	def m13275():Void { var l:UShort = (w7)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13276():Void { var l:UShort = (w7)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m13277():Void { var l:UShort = (w7)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.Short)
	def m13278():Void { var l:UShort = (w7)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UByte)
	def m13279():Void { var l:UShort = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13280():Void { var l:UShort = (w7)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m13281():Void { var l:UShort = (w7)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UInt, y: x10.lang.UInt): x10.lang.UInt in x10.lang.UInt cannot be called with arguments (x10.lang.UInt, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.UInt		 Found type: x10.lang.UShort)
	def m13282():Void { var l:UShort = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13283():Void { var l:UShort = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13284():Void { var l:UShort = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13285():Void { var l:UShort = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13286():Void { var l:UShort = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13287():Void { var l:UShort = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13288():Void { var l:UShort = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13289():Void { var l:UShort = (w7)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13290():Void { var l:UShort = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13291():Void { var l:UShort = (w7)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13292():Void { var l:UShort = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13293():Void { var l:UShort = (w7)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13294():Void { var l:UShort = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13295():Void { var l:UShort = (w7)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13296():Void { var l:UShort = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13297():Void { var l:UShort = (w7)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13298():Void { var l:UShort = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13299():Void { var l:UShort = (w7)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13300():Void { var l:UShort = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13301():Void { var l:UShort = (w7)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13302():Void { var l:UShort = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13303():Void { var l:UShort = (w7)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13304():Void { var l:UShort = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13305():Void { var l:UShort = (w7)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13306():Void { var l:UShort = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13307():Void { var l:UShort = (w7)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13308():Void { var l:UShort = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13309():Void { var l:UShort = (w7)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w7) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13310():Void { var l:UShort = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13311():Void { var l:UShort = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13312():Void { var l:UShort = (w8)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Byte)
	def m13313():Void { var l:UShort = (w8)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int)
	def m13314():Void { var l:UShort = (w8)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13315():Void { var l:UShort = (w8)+(w5); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Short);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Short)
	def m13316():Void { var l:UShort = (w8)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UByte)
	def m13317():Void { var l:UShort = (w8)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UInt)
	def m13318():Void { var l:UShort = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (TestInstanceOperators.this.w8) + (TestInstanceOperators.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13319():Void { var l:UShort = (w8)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.UShort)
	def m13320():Void { var l:UShort = (w8)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m13321():Void { var l:UShort = (w8)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==0})
	def m13322():Void { var l:UShort = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13323():Void { var l:UShort = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13324():Void { var l:UShort = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13325():Void { var l:UShort = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13326():Void { var l:UShort = (w8)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==127})
	def m13327():Void { var l:UShort = (w8)+(-127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-127});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-127})
	def m13328():Void { var l:UShort = (w8)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==128})
	def m13329():Void { var l:UShort = (w8)+(-128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-128});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-128})
	def m13330():Void { var l:UShort = (w8)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==255})
	def m13331():Void { var l:UShort = (w8)+(-255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-255});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-255})
	def m13332():Void { var l:UShort = (w8)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==256})
	def m13333():Void { var l:UShort = (w8)+(-256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-256});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-256})
	def m13334():Void { var l:UShort = (w8)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32767})
	def m13335():Void { var l:UShort = (w8)+(-32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32767});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32767})
	def m13336():Void { var l:UShort = (w8)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==32768})
	def m13337():Void { var l:UShort = (w8)+(-32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-32768});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-32768})
	def m13338():Void { var l:UShort = (w8)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65535})
	def m13339():Void { var l:UShort = (w8)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65535})
	def m13340():Void { var l:UShort = (w8)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==65536})
	def m13341():Void { var l:UShort = (w8)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-65536})
	def m13342():Void { var l:UShort = (w8)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777216})
	def m13343():Void { var l:UShort = (w8)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777216})
	def m13344():Void { var l:UShort = (w8)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==16777217})
	def m13345():Void { var l:UShort = (w8)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-16777217})
	def m13346():Void { var l:UShort = (w8)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==2147483647})
	def m13347():Void { var l:UShort = (w8)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.ULong, y: x10.lang.ULong): x10.lang.ULong in x10.lang.ULong cannot be called with arguments (x10.lang.ULong, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.ULong		 Found type: x10.lang.Int{self==-2147483647})
	def m13348():Void { var l:UShort = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13349():Void { var l:UShort = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13350():Void { var l:UShort = (w9)+(w2); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Byte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Byte)
	def m13351():Void { var l:UShort = (w9)+(w3); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13352():Void { var l:UShort = (w9)+(w4); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Long);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13353():Void { var l:UShort = (w9)+(w5); }
	def m13354():Void { var l:UShort = (w9)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UByte)
	def m13355():Void { var l:UShort = (w9)+(w7); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.UInt);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13356():Void { var l:UShort = (w9)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13357():Void { var l:UShort = (w9)+(w9); }
	def m13358():Void { var l:UShort = (w9)+(0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m13359():Void { var l:UShort = (w9)+(-0); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==0});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==0})
	def m13360():Void { var l:UShort = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13361():Void { var l:UShort = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13362():Void { var l:UShort = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13363():Void { var l:UShort = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13364():Void { var l:UShort = (w9)+(127); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==127});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==127})
	def m13365():Void { var l:UShort = (w9)+(-127); }
	def m13366():Void { var l:UShort = (w9)+(128); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==128});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==128})
	def m13367():Void { var l:UShort = (w9)+(-128); }
	def m13368():Void { var l:UShort = (w9)+(255); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==255});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==255})
	def m13369():Void { var l:UShort = (w9)+(-255); }
	def m13370():Void { var l:UShort = (w9)+(256); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==256});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==256})
	def m13371():Void { var l:UShort = (w9)+(-256); }
	def m13372():Void { var l:UShort = (w9)+(32767); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32767});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32767})
	def m13373():Void { var l:UShort = (w9)+(-32767); }
	def m13374():Void { var l:UShort = (w9)+(32768); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==32768});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==32768})
	def m13375():Void { var l:UShort = (w9)+(-32768); }
	def m13376():Void { var l:UShort = (w9)+(65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65535})
	def m13377():Void { var l:UShort = (w9)+(-65535); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65535});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m13378():Void { var l:UShort = (w9)+(65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==65536})
	def m13379():Void { var l:UShort = (w9)+(-65536); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-65536});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m13380():Void { var l:UShort = (w9)+(16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777216})
	def m13381():Void { var l:UShort = (w9)+(-16777216); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777216});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m13382():Void { var l:UShort = (w9)+(16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==16777217})
	def m13383():Void { var l:UShort = (w9)+(-16777217); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-16777217});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m13384():Void { var l:UShort = (w9)+(2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==2147483647})
	def m13385():Void { var l:UShort = (w9)+(-2147483647); }  // ERR (Semantic Error: Method operator+(x: x10.lang.UShort, y: x10.lang.UShort): x10.lang.UShort in x10.lang.UShort cannot be called with arguments (x10.lang.UShort, x10.lang.Int{self==-2147483647});    Invalid Parameter.		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m13386():Void { var l:UShort = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13387():Void { var l:UShort = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13388():Void { var l:UShort = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13389():Void { var l:UShort = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13390():Void { var l:UShort = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13391():Void { var l:UShort = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13392():Void { var l:UShort = (0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13393():Void { var l:UShort = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13394():Void { var l:UShort = (0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13395():Void { var l:UShort = (0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13396():Void { var l:UShort = (0)+(0); }
	def m13397():Void { var l:UShort = (0)+(-0); }
	def m13398():Void { var l:UShort = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13399():Void { var l:UShort = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13400():Void { var l:UShort = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13401():Void { var l:UShort = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13402():Void { var l:UShort = (0)+(127); }
	def m13403():Void { var l:UShort = (0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13404():Void { var l:UShort = (0)+(128); }
	def m13405():Void { var l:UShort = (0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13406():Void { var l:UShort = (0)+(255); }
	def m13407():Void { var l:UShort = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13408():Void { var l:UShort = (0)+(256); }
	def m13409():Void { var l:UShort = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13410():Void { var l:UShort = (0)+(32767); }
	def m13411():Void { var l:UShort = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13412():Void { var l:UShort = (0)+(32768); }
	def m13413():Void { var l:UShort = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13414():Void { var l:UShort = (0)+(65535); }
	def m13415():Void { var l:UShort = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13416():Void { var l:UShort = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13417():Void { var l:UShort = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13418():Void { var l:UShort = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13419():Void { var l:UShort = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13420():Void { var l:UShort = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13421():Void { var l:UShort = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13422():Void { var l:UShort = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13423():Void { var l:UShort = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13424():Void { var l:UShort = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13425():Void { var l:UShort = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13426():Void { var l:UShort = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13427():Void { var l:UShort = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13428():Void { var l:UShort = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13429():Void { var l:UShort = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13430():Void { var l:UShort = (-0)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13431():Void { var l:UShort = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13432():Void { var l:UShort = (-0)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13433():Void { var l:UShort = (-0)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==0} cannot be called with arguments (x10.lang.Int{self==0}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13434():Void { var l:UShort = (-0)+(0); }
	def m13435():Void { var l:UShort = (-0)+(-0); }
	def m13436():Void { var l:UShort = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13437():Void { var l:UShort = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13438():Void { var l:UShort = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13439():Void { var l:UShort = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13440():Void { var l:UShort = (-0)+(127); }
	def m13441():Void { var l:UShort = (-0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13442():Void { var l:UShort = (-0)+(128); }
	def m13443():Void { var l:UShort = (-0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13444():Void { var l:UShort = (-0)+(255); }
	def m13445():Void { var l:UShort = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13446():Void { var l:UShort = (-0)+(256); }
	def m13447():Void { var l:UShort = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13448():Void { var l:UShort = (-0)+(32767); }
	def m13449():Void { var l:UShort = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13450():Void { var l:UShort = (-0)+(32768); }
	def m13451():Void { var l:UShort = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13452():Void { var l:UShort = (-0)+(65535); }
	def m13453():Void { var l:UShort = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13454():Void { var l:UShort = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13455():Void { var l:UShort = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13456():Void { var l:UShort = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13457():Void { var l:UShort = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13458():Void { var l:UShort = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13459():Void { var l:UShort = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13460():Void { var l:UShort = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13461():Void { var l:UShort = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13462():Void { var l:UShort = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13463():Void { var l:UShort = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13464():Void { var l:UShort = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13465():Void { var l:UShort = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13466():Void { var l:UShort = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13467():Void { var l:UShort = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13468():Void { var l:UShort = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13469():Void { var l:UShort = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13470():Void { var l:UShort = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13471():Void { var l:UShort = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13472():Void { var l:UShort = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13473():Void { var l:UShort = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13474():Void { var l:UShort = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13475():Void { var l:UShort = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13476():Void { var l:UShort = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13477():Void { var l:UShort = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13478():Void { var l:UShort = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13479():Void { var l:UShort = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13480():Void { var l:UShort = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13481():Void { var l:UShort = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13482():Void { var l:UShort = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13483():Void { var l:UShort = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13484():Void { var l:UShort = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13485():Void { var l:UShort = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13486():Void { var l:UShort = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13487():Void { var l:UShort = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13488():Void { var l:UShort = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13489():Void { var l:UShort = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13490():Void { var l:UShort = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13491():Void { var l:UShort = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13492():Void { var l:UShort = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13493():Void { var l:UShort = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13494():Void { var l:UShort = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13495():Void { var l:UShort = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13496():Void { var l:UShort = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13497():Void { var l:UShort = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13498():Void { var l:UShort = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13499():Void { var l:UShort = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13500():Void { var l:UShort = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13501():Void { var l:UShort = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13502():Void { var l:UShort = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13503():Void { var l:UShort = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13504():Void { var l:UShort = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13505():Void { var l:UShort = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13506():Void { var l:UShort = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13507():Void { var l:UShort = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13508():Void { var l:UShort = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13509():Void { var l:UShort = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13510():Void { var l:UShort = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13511():Void { var l:UShort = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13512():Void { var l:UShort = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13513():Void { var l:UShort = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13514():Void { var l:UShort = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13515():Void { var l:UShort = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13516():Void { var l:UShort = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13517():Void { var l:UShort = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13518():Void { var l:UShort = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13519():Void { var l:UShort = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13520():Void { var l:UShort = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13521():Void { var l:UShort = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13522():Void { var l:UShort = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13523():Void { var l:UShort = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13524():Void { var l:UShort = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13525():Void { var l:UShort = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13526():Void { var l:UShort = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13527():Void { var l:UShort = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13528():Void { var l:UShort = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13529():Void { var l:UShort = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13530():Void { var l:UShort = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13531():Void { var l:UShort = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13532():Void { var l:UShort = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13533():Void { var l:UShort = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13534():Void { var l:UShort = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13535():Void { var l:UShort = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13536():Void { var l:UShort = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13537():Void { var l:UShort = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13538():Void { var l:UShort = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13539():Void { var l:UShort = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13540():Void { var l:UShort = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13541():Void { var l:UShort = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13542():Void { var l:UShort = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13543():Void { var l:UShort = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13544():Void { var l:UShort = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13545():Void { var l:UShort = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13546():Void { var l:UShort = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13547():Void { var l:UShort = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13548():Void { var l:UShort = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13549():Void { var l:UShort = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13550():Void { var l:UShort = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13551():Void { var l:UShort = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13552():Void { var l:UShort = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13553():Void { var l:UShort = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13554():Void { var l:UShort = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13555():Void { var l:UShort = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13556():Void { var l:UShort = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13557():Void { var l:UShort = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13558():Void { var l:UShort = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13559():Void { var l:UShort = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13560():Void { var l:UShort = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13561():Void { var l:UShort = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13562():Void { var l:UShort = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13563():Void { var l:UShort = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13564():Void { var l:UShort = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13565():Void { var l:UShort = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13566():Void { var l:UShort = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13567():Void { var l:UShort = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13568():Void { var l:UShort = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13569():Void { var l:UShort = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13570():Void { var l:UShort = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13571():Void { var l:UShort = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13572():Void { var l:UShort = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13573():Void { var l:UShort = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13574():Void { var l:UShort = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13575():Void { var l:UShort = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13576():Void { var l:UShort = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13577():Void { var l:UShort = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13578():Void { var l:UShort = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13579():Void { var l:UShort = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13580():Void { var l:UShort = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13581():Void { var l:UShort = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13582():Void { var l:UShort = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13583():Void { var l:UShort = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13584():Void { var l:UShort = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13585():Void { var l:UShort = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((TestInstanceOperators.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13586():Void { var l:UShort = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13587():Void { var l:UShort = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13588():Void { var l:UShort = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13589():Void { var l:UShort = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13590():Void { var l:UShort = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13591():Void { var l:UShort = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13592():Void { var l:UShort = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13593():Void { var l:UShort = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13594():Void { var l:UShort = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13595():Void { var l:UShort = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13596():Void { var l:UShort = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13597():Void { var l:UShort = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13598():Void { var l:UShort = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13599():Void { var l:UShort = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13600():Void { var l:UShort = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13601():Void { var l:UShort = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13602():Void { var l:UShort = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13603():Void { var l:UShort = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13604():Void { var l:UShort = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13605():Void { var l:UShort = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13606():Void { var l:UShort = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13607():Void { var l:UShort = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13608():Void { var l:UShort = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13609():Void { var l:UShort = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13610():Void { var l:UShort = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13611():Void { var l:UShort = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13612():Void { var l:UShort = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13613():Void { var l:UShort = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13614():Void { var l:UShort = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13615():Void { var l:UShort = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13616():Void { var l:UShort = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13617():Void { var l:UShort = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13618():Void { var l:UShort = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13619():Void { var l:UShort = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13620():Void { var l:UShort = (127)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13621():Void { var l:UShort = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13622():Void { var l:UShort = (127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13623():Void { var l:UShort = (127)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==127} cannot be called with arguments (x10.lang.Int{self==127}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13624():Void { var l:UShort = (127)+(0); }
	def m13625():Void { var l:UShort = (127)+(-0); }
	def m13626():Void { var l:UShort = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13627():Void { var l:UShort = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13628():Void { var l:UShort = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13629():Void { var l:UShort = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13630():Void { var l:UShort = (127)+(127); }
	def m13631():Void { var l:UShort = (127)+(-127); }
	def m13632():Void { var l:UShort = (127)+(128); }
	def m13633():Void { var l:UShort = (127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13634():Void { var l:UShort = (127)+(255); }
	def m13635():Void { var l:UShort = (127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13636():Void { var l:UShort = (127)+(256); }
	def m13637():Void { var l:UShort = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13638():Void { var l:UShort = (127)+(32767); }
	def m13639():Void { var l:UShort = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13640():Void { var l:UShort = (127)+(32768); }
	def m13641():Void { var l:UShort = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13642():Void { var l:UShort = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13643():Void { var l:UShort = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13644():Void { var l:UShort = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13645():Void { var l:UShort = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13646():Void { var l:UShort = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13647():Void { var l:UShort = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13648():Void { var l:UShort = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13649():Void { var l:UShort = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13650():Void { var l:UShort = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13651():Void { var l:UShort = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13652():Void { var l:UShort = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13653():Void { var l:UShort = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13654():Void { var l:UShort = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13655():Void { var l:UShort = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13656():Void { var l:UShort = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13657():Void { var l:UShort = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13658():Void { var l:UShort = (-127)+(w6); }
	def m13659():Void { var l:UShort = (-127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13660():Void { var l:UShort = (-127)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-127} cannot be called with arguments (x10.lang.Int{self==-127}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13661():Void { var l:UShort = (-127)+(w9); }
	def m13662():Void { var l:UShort = (-127)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13663():Void { var l:UShort = (-127)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13664():Void { var l:UShort = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13665():Void { var l:UShort = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13666():Void { var l:UShort = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13667():Void { var l:UShort = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13668():Void { var l:UShort = (-127)+(127); }
	def m13669():Void { var l:UShort = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13670():Void { var l:UShort = (-127)+(128); }
	def m13671():Void { var l:UShort = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13672():Void { var l:UShort = (-127)+(255); }
	def m13673():Void { var l:UShort = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13674():Void { var l:UShort = (-127)+(256); }
	def m13675():Void { var l:UShort = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13676():Void { var l:UShort = (-127)+(32767); }
	def m13677():Void { var l:UShort = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13678():Void { var l:UShort = (-127)+(32768); }
	def m13679():Void { var l:UShort = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13680():Void { var l:UShort = (-127)+(65535); }
	def m13681():Void { var l:UShort = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13682():Void { var l:UShort = (-127)+(65536); }
	def m13683():Void { var l:UShort = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13684():Void { var l:UShort = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13685():Void { var l:UShort = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13686():Void { var l:UShort = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13687():Void { var l:UShort = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13688():Void { var l:UShort = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13689():Void { var l:UShort = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13690():Void { var l:UShort = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13691():Void { var l:UShort = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13692():Void { var l:UShort = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13693():Void { var l:UShort = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13694():Void { var l:UShort = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13695():Void { var l:UShort = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13696():Void { var l:UShort = (128)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13697():Void { var l:UShort = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13698():Void { var l:UShort = (128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13699():Void { var l:UShort = (128)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==128} cannot be called with arguments (x10.lang.Int{self==128}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13700():Void { var l:UShort = (128)+(0); }
	def m13701():Void { var l:UShort = (128)+(-0); }
	def m13702():Void { var l:UShort = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13703():Void { var l:UShort = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13704():Void { var l:UShort = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13705():Void { var l:UShort = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13706():Void { var l:UShort = (128)+(127); }
	def m13707():Void { var l:UShort = (128)+(-127); }
	def m13708():Void { var l:UShort = (128)+(128); }
	def m13709():Void { var l:UShort = (128)+(-128); }
	def m13710():Void { var l:UShort = (128)+(255); }
	def m13711():Void { var l:UShort = (128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13712():Void { var l:UShort = (128)+(256); }
	def m13713():Void { var l:UShort = (128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13714():Void { var l:UShort = (128)+(32767); }
	def m13715():Void { var l:UShort = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13716():Void { var l:UShort = (128)+(32768); }
	def m13717():Void { var l:UShort = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13718():Void { var l:UShort = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13719():Void { var l:UShort = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13720():Void { var l:UShort = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13721():Void { var l:UShort = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13722():Void { var l:UShort = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13723():Void { var l:UShort = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13724():Void { var l:UShort = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13725():Void { var l:UShort = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13726():Void { var l:UShort = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13727():Void { var l:UShort = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13728():Void { var l:UShort = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13729():Void { var l:UShort = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13730():Void { var l:UShort = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13731():Void { var l:UShort = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13732():Void { var l:UShort = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13733():Void { var l:UShort = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13734():Void { var l:UShort = (-128)+(w6); }
	def m13735():Void { var l:UShort = (-128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13736():Void { var l:UShort = (-128)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-128} cannot be called with arguments (x10.lang.Int{self==-128}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13737():Void { var l:UShort = (-128)+(w9); }
	def m13738():Void { var l:UShort = (-128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13739():Void { var l:UShort = (-128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13740():Void { var l:UShort = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13741():Void { var l:UShort = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13742():Void { var l:UShort = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13743():Void { var l:UShort = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13744():Void { var l:UShort = (-128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13745():Void { var l:UShort = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13746():Void { var l:UShort = (-128)+(128); }
	def m13747():Void { var l:UShort = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13748():Void { var l:UShort = (-128)+(255); }
	def m13749():Void { var l:UShort = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13750():Void { var l:UShort = (-128)+(256); }
	def m13751():Void { var l:UShort = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13752():Void { var l:UShort = (-128)+(32767); }
	def m13753():Void { var l:UShort = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13754():Void { var l:UShort = (-128)+(32768); }
	def m13755():Void { var l:UShort = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13756():Void { var l:UShort = (-128)+(65535); }
	def m13757():Void { var l:UShort = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13758():Void { var l:UShort = (-128)+(65536); }
	def m13759():Void { var l:UShort = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13760():Void { var l:UShort = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13761():Void { var l:UShort = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13762():Void { var l:UShort = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13763():Void { var l:UShort = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13764():Void { var l:UShort = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13765():Void { var l:UShort = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13766():Void { var l:UShort = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13767():Void { var l:UShort = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13768():Void { var l:UShort = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13769():Void { var l:UShort = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13770():Void { var l:UShort = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13771():Void { var l:UShort = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13772():Void { var l:UShort = (255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13773():Void { var l:UShort = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13774():Void { var l:UShort = (255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13775():Void { var l:UShort = (255)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==255} cannot be called with arguments (x10.lang.Int{self==255}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13776():Void { var l:UShort = (255)+(0); }
	def m13777():Void { var l:UShort = (255)+(-0); }
	def m13778():Void { var l:UShort = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13779():Void { var l:UShort = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13780():Void { var l:UShort = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13781():Void { var l:UShort = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13782():Void { var l:UShort = (255)+(127); }
	def m13783():Void { var l:UShort = (255)+(-127); }
	def m13784():Void { var l:UShort = (255)+(128); }
	def m13785():Void { var l:UShort = (255)+(-128); }
	def m13786():Void { var l:UShort = (255)+(255); }
	def m13787():Void { var l:UShort = (255)+(-255); }
	def m13788():Void { var l:UShort = (255)+(256); }
	def m13789():Void { var l:UShort = (255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13790():Void { var l:UShort = (255)+(32767); }
	def m13791():Void { var l:UShort = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13792():Void { var l:UShort = (255)+(32768); }
	def m13793():Void { var l:UShort = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13794():Void { var l:UShort = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13795():Void { var l:UShort = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13796():Void { var l:UShort = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13797():Void { var l:UShort = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13798():Void { var l:UShort = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13799():Void { var l:UShort = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13800():Void { var l:UShort = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13801():Void { var l:UShort = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13802():Void { var l:UShort = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13803():Void { var l:UShort = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13804():Void { var l:UShort = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13805():Void { var l:UShort = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13806():Void { var l:UShort = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13807():Void { var l:UShort = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13808():Void { var l:UShort = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13809():Void { var l:UShort = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13810():Void { var l:UShort = (-255)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13811():Void { var l:UShort = (-255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13812():Void { var l:UShort = (-255)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-255} cannot be called with arguments (x10.lang.Int{self==-255}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13813():Void { var l:UShort = (-255)+(w9); }
	def m13814():Void { var l:UShort = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13815():Void { var l:UShort = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13816():Void { var l:UShort = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13817():Void { var l:UShort = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13818():Void { var l:UShort = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13819():Void { var l:UShort = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13820():Void { var l:UShort = (-255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13821():Void { var l:UShort = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13822():Void { var l:UShort = (-255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13823():Void { var l:UShort = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13824():Void { var l:UShort = (-255)+(255); }
	def m13825():Void { var l:UShort = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13826():Void { var l:UShort = (-255)+(256); }
	def m13827():Void { var l:UShort = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13828():Void { var l:UShort = (-255)+(32767); }
	def m13829():Void { var l:UShort = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13830():Void { var l:UShort = (-255)+(32768); }
	def m13831():Void { var l:UShort = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13832():Void { var l:UShort = (-255)+(65535); }
	def m13833():Void { var l:UShort = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13834():Void { var l:UShort = (-255)+(65536); }
	def m13835():Void { var l:UShort = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13836():Void { var l:UShort = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13837():Void { var l:UShort = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13838():Void { var l:UShort = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13839():Void { var l:UShort = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13840():Void { var l:UShort = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13841():Void { var l:UShort = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13842():Void { var l:UShort = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13843():Void { var l:UShort = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13844():Void { var l:UShort = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13845():Void { var l:UShort = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13846():Void { var l:UShort = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13847():Void { var l:UShort = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13848():Void { var l:UShort = (256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13849():Void { var l:UShort = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13850():Void { var l:UShort = (256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13851():Void { var l:UShort = (256)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==256} cannot be called with arguments (x10.lang.Int{self==256}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13852():Void { var l:UShort = (256)+(0); }
	def m13853():Void { var l:UShort = (256)+(-0); }
	def m13854():Void { var l:UShort = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13855():Void { var l:UShort = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13856():Void { var l:UShort = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13857():Void { var l:UShort = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13858():Void { var l:UShort = (256)+(127); }
	def m13859():Void { var l:UShort = (256)+(-127); }
	def m13860():Void { var l:UShort = (256)+(128); }
	def m13861():Void { var l:UShort = (256)+(-128); }
	def m13862():Void { var l:UShort = (256)+(255); }
	def m13863():Void { var l:UShort = (256)+(-255); }
	def m13864():Void { var l:UShort = (256)+(256); }
	def m13865():Void { var l:UShort = (256)+(-256); }
	def m13866():Void { var l:UShort = (256)+(32767); }
	def m13867():Void { var l:UShort = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13868():Void { var l:UShort = (256)+(32768); }
	def m13869():Void { var l:UShort = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13870():Void { var l:UShort = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13871():Void { var l:UShort = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13872():Void { var l:UShort = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13873():Void { var l:UShort = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13874():Void { var l:UShort = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13875():Void { var l:UShort = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13876():Void { var l:UShort = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13877():Void { var l:UShort = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13878():Void { var l:UShort = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13879():Void { var l:UShort = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13880():Void { var l:UShort = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13881():Void { var l:UShort = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13882():Void { var l:UShort = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13883():Void { var l:UShort = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13884():Void { var l:UShort = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13885():Void { var l:UShort = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13886():Void { var l:UShort = (-256)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13887():Void { var l:UShort = (-256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13888():Void { var l:UShort = (-256)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-256} cannot be called with arguments (x10.lang.Int{self==-256}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13889():Void { var l:UShort = (-256)+(w9); }
	def m13890():Void { var l:UShort = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13891():Void { var l:UShort = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13892():Void { var l:UShort = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13893():Void { var l:UShort = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13894():Void { var l:UShort = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13895():Void { var l:UShort = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13896():Void { var l:UShort = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13897():Void { var l:UShort = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13898():Void { var l:UShort = (-256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13899():Void { var l:UShort = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13900():Void { var l:UShort = (-256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13901():Void { var l:UShort = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13902():Void { var l:UShort = (-256)+(256); }
	def m13903():Void { var l:UShort = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13904():Void { var l:UShort = (-256)+(32767); }
	def m13905():Void { var l:UShort = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13906():Void { var l:UShort = (-256)+(32768); }
	def m13907():Void { var l:UShort = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13908():Void { var l:UShort = (-256)+(65535); }
	def m13909():Void { var l:UShort = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13910():Void { var l:UShort = (-256)+(65536); }
	def m13911():Void { var l:UShort = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13912():Void { var l:UShort = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13913():Void { var l:UShort = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13914():Void { var l:UShort = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13915():Void { var l:UShort = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13916():Void { var l:UShort = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13917():Void { var l:UShort = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13918():Void { var l:UShort = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13919():Void { var l:UShort = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13920():Void { var l:UShort = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13921():Void { var l:UShort = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13922():Void { var l:UShort = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13923():Void { var l:UShort = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13924():Void { var l:UShort = (32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13925():Void { var l:UShort = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13926():Void { var l:UShort = (32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13927():Void { var l:UShort = (32767)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32767} cannot be called with arguments (x10.lang.Int{self==32767}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m13928():Void { var l:UShort = (32767)+(0); }
	def m13929():Void { var l:UShort = (32767)+(-0); }
	def m13930():Void { var l:UShort = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13931():Void { var l:UShort = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13932():Void { var l:UShort = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13933():Void { var l:UShort = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13934():Void { var l:UShort = (32767)+(127); }
	def m13935():Void { var l:UShort = (32767)+(-127); }
	def m13936():Void { var l:UShort = (32767)+(128); }
	def m13937():Void { var l:UShort = (32767)+(-128); }
	def m13938():Void { var l:UShort = (32767)+(255); }
	def m13939():Void { var l:UShort = (32767)+(-255); }
	def m13940():Void { var l:UShort = (32767)+(256); }
	def m13941():Void { var l:UShort = (32767)+(-256); }
	def m13942():Void { var l:UShort = (32767)+(32767); }
	def m13943():Void { var l:UShort = (32767)+(-32767); }
	def m13944():Void { var l:UShort = (32767)+(32768); }
	def m13945():Void { var l:UShort = (32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13946():Void { var l:UShort = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13947():Void { var l:UShort = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13948():Void { var l:UShort = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13949():Void { var l:UShort = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13950():Void { var l:UShort = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13951():Void { var l:UShort = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13952():Void { var l:UShort = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13953():Void { var l:UShort = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13954():Void { var l:UShort = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13955():Void { var l:UShort = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13956():Void { var l:UShort = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13957():Void { var l:UShort = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13958():Void { var l:UShort = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13959():Void { var l:UShort = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13960():Void { var l:UShort = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13961():Void { var l:UShort = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13962():Void { var l:UShort = (-32767)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m13963():Void { var l:UShort = (-32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13964():Void { var l:UShort = (-32767)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32767} cannot be called with arguments (x10.lang.Int{self==-32767}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m13965():Void { var l:UShort = (-32767)+(w9); }
	def m13966():Void { var l:UShort = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13967():Void { var l:UShort = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13968():Void { var l:UShort = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13969():Void { var l:UShort = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13970():Void { var l:UShort = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13971():Void { var l:UShort = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13972():Void { var l:UShort = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13973():Void { var l:UShort = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13974():Void { var l:UShort = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13975():Void { var l:UShort = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13976():Void { var l:UShort = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13977():Void { var l:UShort = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13978():Void { var l:UShort = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13979():Void { var l:UShort = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13980():Void { var l:UShort = (-32767)+(32767); }
	def m13981():Void { var l:UShort = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13982():Void { var l:UShort = (-32767)+(32768); }
	def m13983():Void { var l:UShort = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13984():Void { var l:UShort = (-32767)+(65535); }
	def m13985():Void { var l:UShort = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13986():Void { var l:UShort = (-32767)+(65536); }
	def m13987():Void { var l:UShort = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13988():Void { var l:UShort = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13989():Void { var l:UShort = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13990():Void { var l:UShort = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13991():Void { var l:UShort = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13992():Void { var l:UShort = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13993():Void { var l:UShort = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13994():Void { var l:UShort = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13995():Void { var l:UShort = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13996():Void { var l:UShort = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13997():Void { var l:UShort = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13998():Void { var l:UShort = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13999():Void { var l:UShort = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14000():Void { var l:UShort = (32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14001():Void { var l:UShort = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14002():Void { var l:UShort = (32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14003():Void { var l:UShort = (32768)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==32768} cannot be called with arguments (x10.lang.Int{self==32768}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14004():Void { var l:UShort = (32768)+(0); }
	def m14005():Void { var l:UShort = (32768)+(-0); }
	def m14006():Void { var l:UShort = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14007():Void { var l:UShort = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14008():Void { var l:UShort = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14009():Void { var l:UShort = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14010():Void { var l:UShort = (32768)+(127); }
	def m14011():Void { var l:UShort = (32768)+(-127); }
	def m14012():Void { var l:UShort = (32768)+(128); }
	def m14013():Void { var l:UShort = (32768)+(-128); }
	def m14014():Void { var l:UShort = (32768)+(255); }
	def m14015():Void { var l:UShort = (32768)+(-255); }
	def m14016():Void { var l:UShort = (32768)+(256); }
	def m14017():Void { var l:UShort = (32768)+(-256); }
	def m14018():Void { var l:UShort = (32768)+(32767); }
	def m14019():Void { var l:UShort = (32768)+(-32767); }
	def m14020():Void { var l:UShort = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14021():Void { var l:UShort = (32768)+(-32768); }
	def m14022():Void { var l:UShort = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14023():Void { var l:UShort = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14024():Void { var l:UShort = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14025():Void { var l:UShort = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14026():Void { var l:UShort = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14027():Void { var l:UShort = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14028():Void { var l:UShort = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14029():Void { var l:UShort = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14030():Void { var l:UShort = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14031():Void { var l:UShort = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14032():Void { var l:UShort = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14033():Void { var l:UShort = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14034():Void { var l:UShort = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14035():Void { var l:UShort = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14036():Void { var l:UShort = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14037():Void { var l:UShort = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14038():Void { var l:UShort = (-32768)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14039():Void { var l:UShort = (-32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14040():Void { var l:UShort = (-32768)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-32768} cannot be called with arguments (x10.lang.Int{self==-32768}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14041():Void { var l:UShort = (-32768)+(w9); }
	def m14042():Void { var l:UShort = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14043():Void { var l:UShort = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14044():Void { var l:UShort = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14045():Void { var l:UShort = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14046():Void { var l:UShort = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14047():Void { var l:UShort = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14048():Void { var l:UShort = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14049():Void { var l:UShort = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14050():Void { var l:UShort = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14051():Void { var l:UShort = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14052():Void { var l:UShort = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14053():Void { var l:UShort = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14054():Void { var l:UShort = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14055():Void { var l:UShort = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14056():Void { var l:UShort = (-32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14057():Void { var l:UShort = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14058():Void { var l:UShort = (-32768)+(32768); }
	def m14059():Void { var l:UShort = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14060():Void { var l:UShort = (-32768)+(65535); }
	def m14061():Void { var l:UShort = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14062():Void { var l:UShort = (-32768)+(65536); }
	def m14063():Void { var l:UShort = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14064():Void { var l:UShort = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14065():Void { var l:UShort = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14066():Void { var l:UShort = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14067():Void { var l:UShort = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14068():Void { var l:UShort = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14069():Void { var l:UShort = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14070():Void { var l:UShort = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14071():Void { var l:UShort = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14072():Void { var l:UShort = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14073():Void { var l:UShort = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14074():Void { var l:UShort = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14075():Void { var l:UShort = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14076():Void { var l:UShort = (65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14077():Void { var l:UShort = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14078():Void { var l:UShort = (65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14079():Void { var l:UShort = (65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65535} cannot be called with arguments (x10.lang.Int{self==65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14080():Void { var l:UShort = (65535)+(0); }
	def m14081():Void { var l:UShort = (65535)+(-0); }
	def m14082():Void { var l:UShort = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14083():Void { var l:UShort = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14084():Void { var l:UShort = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14085():Void { var l:UShort = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14086():Void { var l:UShort = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14087():Void { var l:UShort = (65535)+(-127); }
	def m14088():Void { var l:UShort = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14089():Void { var l:UShort = (65535)+(-128); }
	def m14090():Void { var l:UShort = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14091():Void { var l:UShort = (65535)+(-255); }
	def m14092():Void { var l:UShort = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14093():Void { var l:UShort = (65535)+(-256); }
	def m14094():Void { var l:UShort = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14095():Void { var l:UShort = (65535)+(-32767); }
	def m14096():Void { var l:UShort = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14097():Void { var l:UShort = (65535)+(-32768); }
	def m14098():Void { var l:UShort = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14099():Void { var l:UShort = (65535)+(-65535); }
	def m14100():Void { var l:UShort = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14101():Void { var l:UShort = (65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14102():Void { var l:UShort = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14103():Void { var l:UShort = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14104():Void { var l:UShort = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14105():Void { var l:UShort = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14106():Void { var l:UShort = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14107():Void { var l:UShort = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14108():Void { var l:UShort = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14109():Void { var l:UShort = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14110():Void { var l:UShort = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14111():Void { var l:UShort = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14112():Void { var l:UShort = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14113():Void { var l:UShort = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14114():Void { var l:UShort = (-65535)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14115():Void { var l:UShort = (-65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14116():Void { var l:UShort = (-65535)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14117():Void { var l:UShort = (-65535)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65535} cannot be called with arguments (x10.lang.Int{self==-65535}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14118():Void { var l:UShort = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14119():Void { var l:UShort = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14120():Void { var l:UShort = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14121():Void { var l:UShort = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14122():Void { var l:UShort = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14123():Void { var l:UShort = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14124():Void { var l:UShort = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14125():Void { var l:UShort = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14126():Void { var l:UShort = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14127():Void { var l:UShort = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14128():Void { var l:UShort = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14129():Void { var l:UShort = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14130():Void { var l:UShort = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14131():Void { var l:UShort = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14132():Void { var l:UShort = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14133():Void { var l:UShort = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14134():Void { var l:UShort = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14135():Void { var l:UShort = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14136():Void { var l:UShort = (-65535)+(65535); }
	def m14137():Void { var l:UShort = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14138():Void { var l:UShort = (-65535)+(65536); }
	def m14139():Void { var l:UShort = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14140():Void { var l:UShort = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14141():Void { var l:UShort = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14142():Void { var l:UShort = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14143():Void { var l:UShort = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14144():Void { var l:UShort = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14145():Void { var l:UShort = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14146():Void { var l:UShort = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14147():Void { var l:UShort = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14148():Void { var l:UShort = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14149():Void { var l:UShort = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14150():Void { var l:UShort = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14151():Void { var l:UShort = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14152():Void { var l:UShort = (65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14153():Void { var l:UShort = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14154():Void { var l:UShort = (65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14155():Void { var l:UShort = (65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==65536} cannot be called with arguments (x10.lang.Int{self==65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14156():Void { var l:UShort = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14157():Void { var l:UShort = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14158():Void { var l:UShort = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14159():Void { var l:UShort = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14160():Void { var l:UShort = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14161():Void { var l:UShort = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14162():Void { var l:UShort = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14163():Void { var l:UShort = (65536)+(-127); }
	def m14164():Void { var l:UShort = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14165():Void { var l:UShort = (65536)+(-128); }
	def m14166():Void { var l:UShort = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14167():Void { var l:UShort = (65536)+(-255); }
	def m14168():Void { var l:UShort = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14169():Void { var l:UShort = (65536)+(-256); }
	def m14170():Void { var l:UShort = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14171():Void { var l:UShort = (65536)+(-32767); }
	def m14172():Void { var l:UShort = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14173():Void { var l:UShort = (65536)+(-32768); }
	def m14174():Void { var l:UShort = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14175():Void { var l:UShort = (65536)+(-65535); }
	def m14176():Void { var l:UShort = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14177():Void { var l:UShort = (65536)+(-65536); }
	def m14178():Void { var l:UShort = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14179():Void { var l:UShort = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14180():Void { var l:UShort = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14181():Void { var l:UShort = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14182():Void { var l:UShort = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14183():Void { var l:UShort = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14184():Void { var l:UShort = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14185():Void { var l:UShort = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14186():Void { var l:UShort = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14187():Void { var l:UShort = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14188():Void { var l:UShort = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14189():Void { var l:UShort = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14190():Void { var l:UShort = (-65536)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14191():Void { var l:UShort = (-65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14192():Void { var l:UShort = (-65536)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14193():Void { var l:UShort = (-65536)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-65536} cannot be called with arguments (x10.lang.Int{self==-65536}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14194():Void { var l:UShort = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14195():Void { var l:UShort = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14196():Void { var l:UShort = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14197():Void { var l:UShort = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14198():Void { var l:UShort = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14199():Void { var l:UShort = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14200():Void { var l:UShort = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14201():Void { var l:UShort = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14202():Void { var l:UShort = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14203():Void { var l:UShort = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14204():Void { var l:UShort = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14205():Void { var l:UShort = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14206():Void { var l:UShort = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14207():Void { var l:UShort = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14208():Void { var l:UShort = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14209():Void { var l:UShort = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14210():Void { var l:UShort = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14211():Void { var l:UShort = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14212():Void { var l:UShort = (-65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14213():Void { var l:UShort = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14214():Void { var l:UShort = (-65536)+(65536); }
	def m14215():Void { var l:UShort = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14216():Void { var l:UShort = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14217():Void { var l:UShort = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14218():Void { var l:UShort = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14219():Void { var l:UShort = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14220():Void { var l:UShort = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14221():Void { var l:UShort = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14222():Void { var l:UShort = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14223():Void { var l:UShort = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14224():Void { var l:UShort = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14225():Void { var l:UShort = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14226():Void { var l:UShort = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14227():Void { var l:UShort = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14228():Void { var l:UShort = (16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14229():Void { var l:UShort = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14230():Void { var l:UShort = (16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14231():Void { var l:UShort = (16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777216} cannot be called with arguments (x10.lang.Int{self==16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14232():Void { var l:UShort = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14233():Void { var l:UShort = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14234():Void { var l:UShort = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14235():Void { var l:UShort = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14236():Void { var l:UShort = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14237():Void { var l:UShort = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14238():Void { var l:UShort = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14239():Void { var l:UShort = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14240():Void { var l:UShort = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14241():Void { var l:UShort = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14242():Void { var l:UShort = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14243():Void { var l:UShort = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14244():Void { var l:UShort = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14245():Void { var l:UShort = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14246():Void { var l:UShort = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14247():Void { var l:UShort = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14248():Void { var l:UShort = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14249():Void { var l:UShort = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14250():Void { var l:UShort = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14251():Void { var l:UShort = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14252():Void { var l:UShort = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14253():Void { var l:UShort = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14254():Void { var l:UShort = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14255():Void { var l:UShort = (16777216)+(-16777216); }
	def m14256():Void { var l:UShort = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14257():Void { var l:UShort = (16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14258():Void { var l:UShort = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14259():Void { var l:UShort = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14260():Void { var l:UShort = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14261():Void { var l:UShort = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14262():Void { var l:UShort = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14263():Void { var l:UShort = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14264():Void { var l:UShort = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14265():Void { var l:UShort = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14266():Void { var l:UShort = (-16777216)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14267():Void { var l:UShort = (-16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14268():Void { var l:UShort = (-16777216)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14269():Void { var l:UShort = (-16777216)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777216} cannot be called with arguments (x10.lang.Int{self==-16777216}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14270():Void { var l:UShort = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14271():Void { var l:UShort = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14272():Void { var l:UShort = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14273():Void { var l:UShort = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14274():Void { var l:UShort = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14275():Void { var l:UShort = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14276():Void { var l:UShort = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14277():Void { var l:UShort = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14278():Void { var l:UShort = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14279():Void { var l:UShort = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14280():Void { var l:UShort = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14281():Void { var l:UShort = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14282():Void { var l:UShort = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14283():Void { var l:UShort = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14284():Void { var l:UShort = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14285():Void { var l:UShort = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14286():Void { var l:UShort = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14287():Void { var l:UShort = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14288():Void { var l:UShort = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14289():Void { var l:UShort = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14290():Void { var l:UShort = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14291():Void { var l:UShort = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14292():Void { var l:UShort = (-16777216)+(16777216); }
	def m14293():Void { var l:UShort = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14294():Void { var l:UShort = (-16777216)+(16777217); }
	def m14295():Void { var l:UShort = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14296():Void { var l:UShort = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14297():Void { var l:UShort = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14298():Void { var l:UShort = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14299():Void { var l:UShort = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14300():Void { var l:UShort = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14301():Void { var l:UShort = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14302():Void { var l:UShort = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14303():Void { var l:UShort = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14304():Void { var l:UShort = (16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14305():Void { var l:UShort = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14306():Void { var l:UShort = (16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14307():Void { var l:UShort = (16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==16777217} cannot be called with arguments (x10.lang.Int{self==16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14308():Void { var l:UShort = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14309():Void { var l:UShort = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14310():Void { var l:UShort = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14311():Void { var l:UShort = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14312():Void { var l:UShort = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14313():Void { var l:UShort = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14314():Void { var l:UShort = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14315():Void { var l:UShort = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14316():Void { var l:UShort = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14317():Void { var l:UShort = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14318():Void { var l:UShort = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14319():Void { var l:UShort = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14320():Void { var l:UShort = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14321():Void { var l:UShort = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14322():Void { var l:UShort = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14323():Void { var l:UShort = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14324():Void { var l:UShort = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14325():Void { var l:UShort = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14326():Void { var l:UShort = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14327():Void { var l:UShort = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14328():Void { var l:UShort = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14329():Void { var l:UShort = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14330():Void { var l:UShort = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14331():Void { var l:UShort = (16777217)+(-16777216); }
	def m14332():Void { var l:UShort = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14333():Void { var l:UShort = (16777217)+(-16777217); }
	def m14334():Void { var l:UShort = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14335():Void { var l:UShort = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14336():Void { var l:UShort = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14337():Void { var l:UShort = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14338():Void { var l:UShort = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14339():Void { var l:UShort = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14340():Void { var l:UShort = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14341():Void { var l:UShort = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14342():Void { var l:UShort = (-16777217)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14343():Void { var l:UShort = (-16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14344():Void { var l:UShort = (-16777217)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14345():Void { var l:UShort = (-16777217)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-16777217} cannot be called with arguments (x10.lang.Int{self==-16777217}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14346():Void { var l:UShort = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14347():Void { var l:UShort = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14348():Void { var l:UShort = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14349():Void { var l:UShort = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14350():Void { var l:UShort = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14351():Void { var l:UShort = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14352():Void { var l:UShort = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14353():Void { var l:UShort = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14354():Void { var l:UShort = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14355():Void { var l:UShort = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14356():Void { var l:UShort = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14357():Void { var l:UShort = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14358():Void { var l:UShort = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14359():Void { var l:UShort = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14360():Void { var l:UShort = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14361():Void { var l:UShort = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14362():Void { var l:UShort = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14363():Void { var l:UShort = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14364():Void { var l:UShort = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14365():Void { var l:UShort = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14366():Void { var l:UShort = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14367():Void { var l:UShort = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14368():Void { var l:UShort = (-16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14369():Void { var l:UShort = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14370():Void { var l:UShort = (-16777217)+(16777217); }
	def m14371():Void { var l:UShort = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14372():Void { var l:UShort = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14373():Void { var l:UShort = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14374():Void { var l:UShort = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14375():Void { var l:UShort = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14376():Void { var l:UShort = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14377():Void { var l:UShort = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14378():Void { var l:UShort = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14379():Void { var l:UShort = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14380():Void { var l:UShort = (2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14381():Void { var l:UShort = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14382():Void { var l:UShort = (2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14383():Void { var l:UShort = (2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==2147483647} cannot be called with arguments (x10.lang.Int{self==2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14384():Void { var l:UShort = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14385():Void { var l:UShort = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14386():Void { var l:UShort = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14387():Void { var l:UShort = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14388():Void { var l:UShort = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14389():Void { var l:UShort = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14390():Void { var l:UShort = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14391():Void { var l:UShort = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14392():Void { var l:UShort = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14393():Void { var l:UShort = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14394():Void { var l:UShort = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14395():Void { var l:UShort = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14396():Void { var l:UShort = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14397():Void { var l:UShort = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14398():Void { var l:UShort = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14399():Void { var l:UShort = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14400():Void { var l:UShort = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14401():Void { var l:UShort = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14402():Void { var l:UShort = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14403():Void { var l:UShort = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14404():Void { var l:UShort = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14405():Void { var l:UShort = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14406():Void { var l:UShort = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14407():Void { var l:UShort = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14408():Void { var l:UShort = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14409():Void { var l:UShort = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14410():Void { var l:UShort = (2147483647)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14411():Void { var l:UShort = (2147483647)+(-2147483647); }
	def m14412():Void { var l:UShort = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14413():Void { var l:UShort = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14414():Void { var l:UShort = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14415():Void { var l:UShort = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14416():Void { var l:UShort = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (TestInstanceOperators.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14417():Void { var l:UShort = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((TestInstanceOperators.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14418():Void { var l:UShort = (-2147483647)+(w6); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UByte);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m14419():Void { var l:UShort = (-2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (TestInstanceOperators.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14420():Void { var l:UShort = (-2147483647)+(w8); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.ULong);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m14421():Void { var l:UShort = (-2147483647)+(w9); }  // ERR (Semantic Error: Method operator+(x: x10.lang.Int, y: x10.lang.Int): x10.lang.Int in x10.lang.Int{self==-2147483647} cannot be called with arguments (x10.lang.Int{self==-2147483647}, x10.lang.UShort);    Invalid Parameter.		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m14422():Void { var l:UShort = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14423():Void { var l:UShort = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14424():Void { var l:UShort = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14425():Void { var l:UShort = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14426():Void { var l:UShort = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14427():Void { var l:UShort = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14428():Void { var l:UShort = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14429():Void { var l:UShort = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14430():Void { var l:UShort = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14431():Void { var l:UShort = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14432():Void { var l:UShort = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14433():Void { var l:UShort = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14434():Void { var l:UShort = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14435():Void { var l:UShort = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14436():Void { var l:UShort = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14437():Void { var l:UShort = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14438():Void { var l:UShort = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14439():Void { var l:UShort = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14440():Void { var l:UShort = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14441():Void { var l:UShort = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14442():Void { var l:UShort = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14443():Void { var l:UShort = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14444():Void { var l:UShort = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14445():Void { var l:UShort = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14446():Void { var l:UShort = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14447():Void { var l:UShort = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14448():Void { var l:UShort = (-2147483647)+(2147483647); }
	def m14449():Void { var l:UShort = (-2147483647)+(-2147483647); }
}
