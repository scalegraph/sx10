class TestInstanceOperators {
	var w0:Float=0;
	var w1:Double=0;
	var w2:Byte=0;
	var w3:Int=0;
	var w4:Long=0;
	var w5:Short=0;
	var w6:UByte=0;
	var w7:UInt=0;
	var w8:ULong=0;
	var w9:UShort=0;
	var w10:Point=null;


	def m11():Void { var l:Float = w0++; }
	def m12():Void { var l:Float = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m13():Void { var l:Float = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m14():Void { var l:Float = w3++; }
	def m15():Void { var l:Float = w4++; }
	def m16():Void { var l:Float = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m17():Void { var l:Float = w6++; }  // ERR (Semantic Error: Unable to perform operation)
	def m18():Void { var l:Float = w7++; }
	def m19():Void { var l:Float = w8++; }
	def m20():Void { var l:Float = w9++; }
	def m21():Void { var l:Float = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Float		 Found type: x10.array.Point)
	def m22():Void { var l:Float = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m23():Void { var l:Float = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m24():Void { var l:Float = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m25():Void { var l:Float = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m26():Void { var l:Float = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m27():Void { var l:Float = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m28():Void { var l:Float = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m29():Void { var l:Float = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m30():Void { var l:Float = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m31():Void { var l:Float = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m32():Void { var l:Float = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m33():Void { var l:Float = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m34():Void { var l:Float = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m35():Void { var l:Float = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m36():Void { var l:Float = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m37():Void { var l:Float = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m38():Void { var l:Float = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m39():Void { var l:Float = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m40():Void { var l:Float = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m41():Void { var l:Float = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m42():Void { var l:Float = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m43():Void { var l:Float = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m44():Void { var l:Float = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m45():Void { var l:Float = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m46():Void { var l:Float = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m47():Void { var l:Float = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m48():Void { var l:Float = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m49():Void { var l:Float = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m50():Void { var l:Float = -w0; }
	def m51():Void { var l:Float = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m52():Void { var l:Float = -w2; } 
	def m53():Void { var l:Float = -w3; }
	def m54():Void { var l:Float = -w4; }
	def m55():Void { var l:Float = -w5; }
	def m56():Void { var l:Float = -w6; }
	def m57():Void { var l:Float = -w7; }
	def m58():Void { var l:Float = -w8; }
	def m59():Void { var l:Float = -w9; }
	def m60():Void { var l:Float = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Float		 Found type: x10.array.Point{})
	def m61():Void { var l:Float = -0; }
	def m62():Void { var l:Float = -(-0); }
	def m63():Void { var l:Float = -1.1f; }
	def m64():Void { var l:Float = -(-1.1f); }
	def m65():Void { var l:Float = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m66():Void { var l:Float = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m67():Void { var l:Float = -127; }
	def m68():Void { var l:Float = -(-127); }
	def m69():Void { var l:Float = -128; }
	def m70():Void { var l:Float = -(-128); }
	def m71():Void { var l:Float = -255; }
	def m72():Void { var l:Float = -(-255); }
	def m73():Void { var l:Float = -256; }
	def m74():Void { var l:Float = -(-256); }
	def m75():Void { var l:Float = -32767; }
	def m76():Void { var l:Float = -(-32767); }
	def m77():Void { var l:Float = -32768; }
	def m78():Void { var l:Float = -(-32768); }
	def m79():Void { var l:Float = -65535; }
	def m80():Void { var l:Float = -(-65535); }
	def m81():Void { var l:Float = -65536; }
	def m82():Void { var l:Float = -(-65536); }
	def m83():Void { var l:Float = -16777216; }
	def m84():Void { var l:Float = -(-16777216); }
	def m85():Void { var l:Float = -16777217; }
	def m86():Void { var l:Float = -(-16777217); }
	def m87():Void { var l:Float = -2147483647; }
	def m88():Void { var l:Float = -(-2147483647); }
	def m89():Void { var l:Double = w0++; }
	def m90():Void { var l:Double = w1++; }
	def m91():Void { var l:Double = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m92():Void { var l:Double = w3++; }
	def m93():Void { var l:Double = w4++; }
	def m94():Void { var l:Double = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m95():Void { var l:Double = w6++; }
	def m96():Void { var l:Double = w7++; }
	def m97():Void { var l:Double = w8++; }
	def m98():Void { var l:Double = w9++; }
	def m99():Void { var l:Double = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Double		 Found type: x10.array.Point)
	def m100():Void { var l:Double = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m101():Void { var l:Double = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m102():Void { var l:Double = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m103():Void { var l:Double = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m104():Void { var l:Double = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m105():Void { var l:Double = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m106():Void { var l:Double = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m107():Void { var l:Double = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m108():Void { var l:Double = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m109():Void { var l:Double = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m110():Void { var l:Double = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m111():Void { var l:Double = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m112():Void { var l:Double = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m113():Void { var l:Double = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m114():Void { var l:Double = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m115():Void { var l:Double = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m116():Void { var l:Double = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m117():Void { var l:Double = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m118():Void { var l:Double = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m119():Void { var l:Double = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m120():Void { var l:Double = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m121():Void { var l:Double = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m122():Void { var l:Double = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m123():Void { var l:Double = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m124():Void { var l:Double = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m125():Void { var l:Double = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m126():Void { var l:Double = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m127():Void { var l:Double = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m128():Void { var l:Double = -w0; }
	def m129():Void { var l:Double = -w1; }
	def m130():Void { var l:Double = -w2; } 
	def m131():Void { var l:Double = -w3; }
	def m132():Void { var l:Double = -w4; }
	def m133():Void { var l:Double = -w5; }
	def m134():Void { var l:Double = -w6; }
	def m135():Void { var l:Double = -w7; }
	def m136():Void { var l:Double = -w8; }
	def m137():Void { var l:Double = -w9; }
	def m138():Void { var l:Double = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Double		 Found type: x10.array.Point{})
	def m139():Void { var l:Double = -0; }
	def m140():Void { var l:Double = -(-0); }
	def m141():Void { var l:Double = -1.1f; }
	def m142():Void { var l:Double = -(-1.1f); }
	def m143():Void { var l:Double = -2.2; }
	def m144():Void { var l:Double = -(-2.2); }
	def m145():Void { var l:Double = -127; }
	def m146():Void { var l:Double = -(-127); }
	def m147():Void { var l:Double = -128; }
	def m148():Void { var l:Double = -(-128); }
	def m149():Void { var l:Double = -255; }
	def m150():Void { var l:Double = -(-255); }
	def m151():Void { var l:Double = -256; }
	def m152():Void { var l:Double = -(-256); }
	def m153():Void { var l:Double = -32767; }
	def m154():Void { var l:Double = -(-32767); }
	def m155():Void { var l:Double = -32768; }
	def m156():Void { var l:Double = -(-32768); }
	def m157():Void { var l:Double = -65535; }
	def m158():Void { var l:Double = -(-65535); }
	def m159():Void { var l:Double = -65536; }
	def m160():Void { var l:Double = -(-65536); }
	def m161():Void { var l:Double = -16777216; }
	def m162():Void { var l:Double = -(-16777216); }
	def m163():Void { var l:Double = -16777217; }
	def m164():Void { var l:Double = -(-16777217); }
	def m165():Void { var l:Double = -2147483647; }
	def m166():Void { var l:Double = -(-2147483647); }
	def m167():Void { var l:Byte = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m168():Void { var l:Byte = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m169():Void { var l:Byte = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m170():Void { var l:Byte = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w3++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m171():Void { var l:Byte = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m172():Void { var l:Byte = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short) // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w5++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m173():Void { var l:Byte = w6++; }
	def m174():Void { var l:Byte = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m175():Void { var l:Byte = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m176():Void { var l:Byte = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w9++		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m177():Void { var l:Byte = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Byte		 Found type: x10.array.Point)
	def m178():Void { var l:Byte = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m179():Void { var l:Byte = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m180():Void { var l:Byte = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m181():Void { var l:Byte = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m182():Void { var l:Byte = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m183():Void { var l:Byte = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m184():Void { var l:Byte = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m185():Void { var l:Byte = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m186():Void { var l:Byte = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m187():Void { var l:Byte = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m188():Void { var l:Byte = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m189():Void { var l:Byte = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m190():Void { var l:Byte = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m191():Void { var l:Byte = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m192():Void { var l:Byte = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m193():Void { var l:Byte = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m194():Void { var l:Byte = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m195():Void { var l:Byte = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m196():Void { var l:Byte = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m197():Void { var l:Byte = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m198():Void { var l:Byte = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m199():Void { var l:Byte = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m200():Void { var l:Byte = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m201():Void { var l:Byte = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m202():Void { var l:Byte = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m203():Void { var l:Byte = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m204():Void { var l:Byte = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m205():Void { var l:Byte = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m206():Void { var l:Byte = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m207():Void { var l:Byte = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m208():Void { var l:Byte = -w2; } 
	def m209():Void { var l:Byte = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w3		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m210():Void { var l:Byte = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m211():Void { var l:Byte = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w5		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m212():Void { var l:Byte = -w6; }
	def m213():Void { var l:Byte = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m214():Void { var l:Byte = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m215():Void { var l:Byte = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w9		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m216():Void { var l:Byte = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Byte		 Found type: x10.array.Point{})
	def m217():Void { var l:Byte = -0; }
	def m218():Void { var l:Byte = -(-0); }
	def m219():Void { var l:Byte = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m220():Void { var l:Byte = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m221():Void { var l:Byte = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m222():Void { var l:Byte = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m223():Void { var l:Byte = -127; }
	def m224():Void { var l:Byte = -(-127); }
	def m225():Void { var l:Byte = -128; }
	def m226():Void { var l:Byte = -(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m227():Void { var l:Byte = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-255})
	def m228():Void { var l:Byte = -(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m229():Void { var l:Byte = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-256})
	def m230():Void { var l:Byte = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m231():Void { var l:Byte = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-32767})
	def m232():Void { var l:Byte = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m233():Void { var l:Byte = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-32768})
	def m234():Void { var l:Byte = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m235():Void { var l:Byte = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-65535})
	def m236():Void { var l:Byte = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m237():Void { var l:Byte = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-65536})
	def m238():Void { var l:Byte = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m239():Void { var l:Byte = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-16777216})
	def m240():Void { var l:Byte = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m241():Void { var l:Byte = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-16777217})
	def m242():Void { var l:Byte = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m243():Void { var l:Byte = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-2147483647})
	def m244():Void { var l:Byte = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m245():Void { var l:Int = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m246():Void { var l:Int = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m247():Void { var l:Int = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m248():Void { var l:Int = w3++; }
	def m249():Void { var l:Int = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m250():Void { var l:Int = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m251():Void { var l:Int = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w6++		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m252():Void { var l:Int = w7++; }
	def m253():Void { var l:Int = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m254():Void { var l:Int = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w9++		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m255():Void { var l:Int = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Int		 Found type: x10.array.Point)
	def m256():Void { var l:Int = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m257():Void { var l:Int = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m258():Void { var l:Int = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m259():Void { var l:Int = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m260():Void { var l:Int = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m261():Void { var l:Int = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m262():Void { var l:Int = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m263():Void { var l:Int = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m264():Void { var l:Int = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m265():Void { var l:Int = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m266():Void { var l:Int = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m267():Void { var l:Int = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m268():Void { var l:Int = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m269():Void { var l:Int = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m270():Void { var l:Int = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m271():Void { var l:Int = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m272():Void { var l:Int = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m273():Void { var l:Int = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m274():Void { var l:Int = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m275():Void { var l:Int = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m276():Void { var l:Int = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m277():Void { var l:Int = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m278():Void { var l:Int = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m279():Void { var l:Int = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m280():Void { var l:Int = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m281():Void { var l:Int = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m282():Void { var l:Int = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m283():Void { var l:Int = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m284():Void { var l:Int = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m285():Void { var l:Int = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m286():Void { var l:Int = -w2; } 
	def m287():Void { var l:Int = -w3; }
	def m288():Void { var l:Int = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m289():Void { var l:Int = -w5; }
	def m290():Void { var l:Int = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w6		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m291():Void { var l:Int = -w7; }
	def m292():Void { var l:Int = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m293():Void { var l:Int = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w9		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m294():Void { var l:Int = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Int		 Found type: x10.array.Point{})
	def m295():Void { var l:Int = -0; }
	def m296():Void { var l:Int = -(-0); }
	def m297():Void { var l:Int = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m298():Void { var l:Int = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m299():Void { var l:Int = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m300():Void { var l:Int = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m301():Void { var l:Int = -127; }
	def m302():Void { var l:Int = -(-127); }
	def m303():Void { var l:Int = -128; }
	def m304():Void { var l:Int = -(-128); }
	def m305():Void { var l:Int = -255; }
	def m306():Void { var l:Int = -(-255); }
	def m307():Void { var l:Int = -256; }
	def m308():Void { var l:Int = -(-256); }
	def m309():Void { var l:Int = -32767; }
	def m310():Void { var l:Int = -(-32767); }
	def m311():Void { var l:Int = -32768; }
	def m312():Void { var l:Int = -(-32768); }
	def m313():Void { var l:Int = -65535; }
	def m314():Void { var l:Int = -(-65535); }
	def m315():Void { var l:Int = -65536; }
	def m316():Void { var l:Int = -(-65536); }
	def m317():Void { var l:Int = -16777216; }
	def m318():Void { var l:Int = -(-16777216); }
	def m319():Void { var l:Int = -16777217; }
	def m320():Void { var l:Int = -(-16777217); }
	def m321():Void { var l:Int = -2147483647; }
	def m322():Void { var l:Int = -(-2147483647); }
	def m323():Void { var l:Long = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m324():Void { var l:Long = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m325():Void { var l:Long = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m326():Void { var l:Long = w3++; }
	def m327():Void { var l:Long = w4++; }
	def m328():Void { var l:Long = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m329():Void { var l:Long = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w6++		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m330():Void { var l:Long = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m331():Void { var l:Long = w8++; }
	def m332():Void { var l:Long = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w9++		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m333():Void { var l:Long = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Long		 Found type: x10.array.Point)
	def m334():Void { var l:Long = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m335():Void { var l:Long = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m336():Void { var l:Long = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m337():Void { var l:Long = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m338():Void { var l:Long = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m339():Void { var l:Long = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m340():Void { var l:Long = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m341():Void { var l:Long = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m342():Void { var l:Long = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m343():Void { var l:Long = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m344():Void { var l:Long = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m345():Void { var l:Long = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m346():Void { var l:Long = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m347():Void { var l:Long = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m348():Void { var l:Long = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m349():Void { var l:Long = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m350():Void { var l:Long = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m351():Void { var l:Long = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m352():Void { var l:Long = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m353():Void { var l:Long = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m354():Void { var l:Long = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m355():Void { var l:Long = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m356():Void { var l:Long = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m357():Void { var l:Long = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m358():Void { var l:Long = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m359():Void { var l:Long = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m360():Void { var l:Long = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m361():Void { var l:Long = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m362():Void { var l:Long = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m363():Void { var l:Long = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m364():Void { var l:Long = -w2; } 
	def m365():Void { var l:Long = -w3; }
	def m366():Void { var l:Long = -w4; }
	def m367():Void { var l:Long = -w5; }
	def m368():Void { var l:Long = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w6		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m369():Void { var l:Long = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m370():Void { var l:Long = -w8; }
	def m371():Void { var l:Long = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w9		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m372():Void { var l:Long = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Long		 Found type: x10.array.Point{})
	def m373():Void { var l:Long = -0; }
	def m374():Void { var l:Long = -(-0); }
	def m375():Void { var l:Long = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m376():Void { var l:Long = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m377():Void { var l:Long = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m378():Void { var l:Long = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m379():Void { var l:Long = -127; }
	def m380():Void { var l:Long = -(-127); }
	def m381():Void { var l:Long = -128; }
	def m382():Void { var l:Long = -(-128); }
	def m383():Void { var l:Long = -255; }
	def m384():Void { var l:Long = -(-255); }
	def m385():Void { var l:Long = -256; }
	def m386():Void { var l:Long = -(-256); }
	def m387():Void { var l:Long = -32767; }
	def m388():Void { var l:Long = -(-32767); }
	def m389():Void { var l:Long = -32768; }
	def m390():Void { var l:Long = -(-32768); }
	def m391():Void { var l:Long = -65535; }
	def m392():Void { var l:Long = -(-65535); }
	def m393():Void { var l:Long = -65536; }
	def m394():Void { var l:Long = -(-65536); }
	def m395():Void { var l:Long = -16777216; }
	def m396():Void { var l:Long = -(-16777216); }
	def m397():Void { var l:Long = -16777217; }
	def m398():Void { var l:Long = -(-16777217); }
	def m399():Void { var l:Long = -2147483647; }
	def m400():Void { var l:Long = -(-2147483647); }
	def m401():Void { var l:Short = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m402():Void { var l:Short = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m403():Void { var l:Short = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m404():Void { var l:Short = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w3++		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m405():Void { var l:Short = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m406():Void { var l:Short = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m407():Void { var l:Short = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w6++		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m408():Void { var l:Short = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m409():Void { var l:Short = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m410():Void { var l:Short = w9++; }
	def m411():Void { var l:Short = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.Short		 Found type: x10.array.Point)
	def m412():Void { var l:Short = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m413():Void { var l:Short = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m414():Void { var l:Short = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m415():Void { var l:Short = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m416():Void { var l:Short = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m417():Void { var l:Short = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m418():Void { var l:Short = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m419():Void { var l:Short = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m420():Void { var l:Short = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m421():Void { var l:Short = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m422():Void { var l:Short = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m423():Void { var l:Short = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m424():Void { var l:Short = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m425():Void { var l:Short = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m426():Void { var l:Short = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m427():Void { var l:Short = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m428():Void { var l:Short = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m429():Void { var l:Short = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m430():Void { var l:Short = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m431():Void { var l:Short = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m432():Void { var l:Short = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m433():Void { var l:Short = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m434():Void { var l:Short = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m435():Void { var l:Short = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m436():Void { var l:Short = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m437():Void { var l:Short = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m438():Void { var l:Short = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m439():Void { var l:Short = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m440():Void { var l:Short = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m441():Void { var l:Short = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m442():Void { var l:Short = -w2; } 
	def m443():Void { var l:Short = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w3		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m444():Void { var l:Short = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m445():Void { var l:Short = -w5; }
	def m446():Void { var l:Short = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w6		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m447():Void { var l:Short = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m448():Void { var l:Short = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m449():Void { var l:Short = -w9; }
	def m450():Void { var l:Short = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.Short		 Found type: x10.array.Point{})
	def m451():Void { var l:Short = -0; }
	def m452():Void { var l:Short = -(-0); }
	def m453():Void { var l:Short = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m454():Void { var l:Short = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m455():Void { var l:Short = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m456():Void { var l:Short = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m457():Void { var l:Short = -127; }
	def m458():Void { var l:Short = -(-127); }
	def m459():Void { var l:Short = -128; }
	def m460():Void { var l:Short = -(-128); }
	def m461():Void { var l:Short = -255; }
	def m462():Void { var l:Short = -(-255); }
	def m463():Void { var l:Short = -256; }
	def m464():Void { var l:Short = -(-256); }
	def m465():Void { var l:Short = -32767; }
	def m466():Void { var l:Short = -(-32767); }
	def m467():Void { var l:Short = -32768; }
	def m468():Void { var l:Short = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m469():Void { var l:Short = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-65535})
	def m470():Void { var l:Short = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m471():Void { var l:Short = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-65536})
	def m472():Void { var l:Short = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m473():Void { var l:Short = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-16777216})
	def m474():Void { var l:Short = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m475():Void { var l:Short = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-16777217})
	def m476():Void { var l:Short = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m477():Void { var l:Short = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-2147483647})
	def m478():Void { var l:Short = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m479():Void { var l:UByte = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m480():Void { var l:UByte = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m481():Void { var l:UByte = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m482():Void { var l:UByte = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w3++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m483():Void { var l:UByte = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m484():Void { var l:UByte = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short) // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w5++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m485():Void { var l:UByte = w6++; }
	def m486():Void { var l:UByte = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m487():Void { var l:UByte = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m488():Void { var l:UByte = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w9++		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m489():Void { var l:UByte = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.UByte		 Found type: x10.array.Point)
	def m490():Void { var l:UByte = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m491():Void { var l:UByte = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m492():Void { var l:UByte = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m493():Void { var l:UByte = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m494():Void { var l:UByte = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m495():Void { var l:UByte = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m496():Void { var l:UByte = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m497():Void { var l:UByte = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m498():Void { var l:UByte = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m499():Void { var l:UByte = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m500():Void { var l:UByte = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m501():Void { var l:UByte = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m502():Void { var l:UByte = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m503():Void { var l:UByte = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m504():Void { var l:UByte = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m505():Void { var l:UByte = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m506():Void { var l:UByte = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m507():Void { var l:UByte = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m508():Void { var l:UByte = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m509():Void { var l:UByte = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m510():Void { var l:UByte = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m511():Void { var l:UByte = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m512():Void { var l:UByte = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m513():Void { var l:UByte = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m514():Void { var l:UByte = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m515():Void { var l:UByte = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m516():Void { var l:UByte = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m517():Void { var l:UByte = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m518():Void { var l:UByte = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m519():Void { var l:UByte = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m520():Void { var l:UByte = -w2; } 
	def m521():Void { var l:UByte = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w3		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m522():Void { var l:UByte = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m523():Void { var l:UByte = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w5		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m524():Void { var l:UByte = -w6; }
	def m525():Void { var l:UByte = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m526():Void { var l:UByte = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m527():Void { var l:UByte = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w9		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m528():Void { var l:UByte = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.UByte		 Found type: x10.array.Point{})
	def m529():Void { var l:UByte = -0; }
	def m530():Void { var l:UByte = -(-0); }
	def m531():Void { var l:UByte = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m532():Void { var l:UByte = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m533():Void { var l:UByte = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m534():Void { var l:UByte = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m535():Void { var l:UByte = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-127})
	def m536():Void { var l:UByte = -(-127); }
	def m537():Void { var l:UByte = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-128})
	def m538():Void { var l:UByte = -(-128); }
	def m539():Void { var l:UByte = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m540():Void { var l:UByte = -(-255); }
	def m541():Void { var l:UByte = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m542():Void { var l:UByte = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m543():Void { var l:UByte = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m544():Void { var l:UByte = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m545():Void { var l:UByte = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m546():Void { var l:UByte = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m547():Void { var l:UByte = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m548():Void { var l:UByte = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m549():Void { var l:UByte = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m550():Void { var l:UByte = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m551():Void { var l:UByte = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m552():Void { var l:UByte = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m553():Void { var l:UByte = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m554():Void { var l:UByte = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m555():Void { var l:UByte = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m556():Void { var l:UByte = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m557():Void { var l:UInt = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m558():Void { var l:UInt = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m559():Void { var l:UInt = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m560():Void { var l:UInt = w3++; }
	def m561():Void { var l:UInt = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m562():Void { var l:UInt = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m563():Void { var l:UInt = w6++; }
	def m564():Void { var l:UInt = w7++; }
	def m565():Void { var l:UInt = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m566():Void { var l:UInt = w9++; }
	def m567():Void { var l:UInt = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.UInt		 Found type: x10.array.Point)
	def m568():Void { var l:UInt = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m569():Void { var l:UInt = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m570():Void { var l:UInt = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m571():Void { var l:UInt = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m572():Void { var l:UInt = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m573():Void { var l:UInt = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m574():Void { var l:UInt = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m575():Void { var l:UInt = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m576():Void { var l:UInt = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m577():Void { var l:UInt = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m578():Void { var l:UInt = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m579():Void { var l:UInt = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m580():Void { var l:UInt = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m581():Void { var l:UInt = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m582():Void { var l:UInt = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m583():Void { var l:UInt = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m584():Void { var l:UInt = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m585():Void { var l:UInt = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m586():Void { var l:UInt = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m587():Void { var l:UInt = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m588():Void { var l:UInt = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m589():Void { var l:UInt = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m590():Void { var l:UInt = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m591():Void { var l:UInt = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m592():Void { var l:UInt = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m593():Void { var l:UInt = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m594():Void { var l:UInt = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m595():Void { var l:UInt = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m596():Void { var l:UInt = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m597():Void { var l:UInt = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m598():Void { var l:UInt = -w2; } 
	def m599():Void { var l:UInt = -w3; }
	def m600():Void { var l:UInt = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m601():Void { var l:UInt = -w5; }
	def m602():Void { var l:UInt = -w6; }
	def m603():Void { var l:UInt = -w7; }
	def m604():Void { var l:UInt = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m605():Void { var l:UInt = -w9; }
	def m606():Void { var l:UInt = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.UInt		 Found type: x10.array.Point{})
	def m607():Void { var l:UInt = -0; }
	def m608():Void { var l:UInt = -(-0); }
	def m609():Void { var l:UInt = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m610():Void { var l:UInt = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m611():Void { var l:UInt = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m612():Void { var l:UInt = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m613():Void { var l:UInt = -127; }
	def m614():Void { var l:UInt = -(-127); }
	def m615():Void { var l:UInt = -128; }
	def m616():Void { var l:UInt = -(-128); }
	def m617():Void { var l:UInt = -255; }
	def m618():Void { var l:UInt = -(-255); }
	def m619():Void { var l:UInt = -256; }
	def m620():Void { var l:UInt = -(-256); }
	def m621():Void { var l:UInt = -32767; }
	def m622():Void { var l:UInt = -(-32767); }
	def m623():Void { var l:UInt = -32768; }
	def m624():Void { var l:UInt = -(-32768); }
	def m625():Void { var l:UInt = -65535; }
	def m626():Void { var l:UInt = -(-65535); }
	def m627():Void { var l:UInt = -65536; }
	def m628():Void { var l:UInt = -(-65536); }
	def m629():Void { var l:UInt = -16777216; }
	def m630():Void { var l:UInt = -(-16777216); }
	def m631():Void { var l:UInt = -16777217; }
	def m632():Void { var l:UInt = -(-16777217); }
	def m633():Void { var l:UInt = -2147483647; }
	def m634():Void { var l:UInt = -(-2147483647); }
	def m635():Void { var l:ULong = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m636():Void { var l:ULong = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m637():Void { var l:ULong = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m638():Void { var l:ULong = w3++; }
	def m639():Void { var l:ULong = w4++; }
	def m640():Void { var l:ULong = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m641():Void { var l:ULong = w6++; }
	def m642():Void { var l:ULong = w7++; }
	def m643():Void { var l:ULong = w8++; }
	def m644():Void { var l:ULong = w9++; }
	def m645():Void { var l:ULong = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.ULong		 Found type: x10.array.Point)
	def m646():Void { var l:ULong = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m647():Void { var l:ULong = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m648():Void { var l:ULong = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m649():Void { var l:ULong = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m650():Void { var l:ULong = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m651():Void { var l:ULong = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m652():Void { var l:ULong = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m653():Void { var l:ULong = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m654():Void { var l:ULong = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m655():Void { var l:ULong = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m656():Void { var l:ULong = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m657():Void { var l:ULong = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m658():Void { var l:ULong = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m659():Void { var l:ULong = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m660():Void { var l:ULong = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m661():Void { var l:ULong = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m662():Void { var l:ULong = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m663():Void { var l:ULong = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m664():Void { var l:ULong = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m665():Void { var l:ULong = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m666():Void { var l:ULong = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m667():Void { var l:ULong = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m668():Void { var l:ULong = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m669():Void { var l:ULong = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m670():Void { var l:ULong = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m671():Void { var l:ULong = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m672():Void { var l:ULong = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m673():Void { var l:ULong = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m674():Void { var l:ULong = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m675():Void { var l:ULong = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m676():Void { var l:ULong = -w2; } 
	def m677():Void { var l:ULong = -w3; }
	def m678():Void { var l:ULong = -w4; }
	def m679():Void { var l:ULong = -w5; }
	def m680():Void { var l:ULong = -w6; }
	def m681():Void { var l:ULong = -w7; }
	def m682():Void { var l:ULong = -w8; }
	def m683():Void { var l:ULong = -w9; }
	def m684():Void { var l:ULong = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.ULong		 Found type: x10.array.Point{})
	def m685():Void { var l:ULong = -0; }
	def m686():Void { var l:ULong = -(-0); }
	def m687():Void { var l:ULong = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m688():Void { var l:ULong = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m689():Void { var l:ULong = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m690():Void { var l:ULong = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m691():Void { var l:ULong = -127; }
	def m692():Void { var l:ULong = -(-127); }
	def m693():Void { var l:ULong = -128; }
	def m694():Void { var l:ULong = -(-128); }
	def m695():Void { var l:ULong = -255; }
	def m696():Void { var l:ULong = -(-255); }
	def m697():Void { var l:ULong = -256; }
	def m698():Void { var l:ULong = -(-256); }
	def m699():Void { var l:ULong = -32767; }
	def m700():Void { var l:ULong = -(-32767); }
	def m701():Void { var l:ULong = -32768; }
	def m702():Void { var l:ULong = -(-32768); }
	def m703():Void { var l:ULong = -65535; }
	def m704():Void { var l:ULong = -(-65535); }
	def m705():Void { var l:ULong = -65536; }
	def m706():Void { var l:ULong = -(-65536); }
	def m707():Void { var l:ULong = -16777216; }
	def m708():Void { var l:ULong = -(-16777216); }
	def m709():Void { var l:ULong = -16777217; }
	def m710():Void { var l:ULong = -(-16777217); }
	def m711():Void { var l:ULong = -2147483647; }
	def m712():Void { var l:ULong = -(-2147483647); }
	def m713():Void { var l:UShort = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m714():Void { var l:UShort = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m715():Void { var l:UShort = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte)
	def m716():Void { var l:UShort = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w3++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m717():Void { var l:UShort = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m718():Void { var l:UShort = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short)
	def m719():Void { var l:UShort = w6++; }
	def m720():Void { var l:UShort = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m721():Void { var l:UShort = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m722():Void { var l:UShort = w9++; }
	def m723():Void { var l:UShort = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w10++		 Expected type: x10.lang.UShort		 Found type: x10.array.Point)
	def m724():Void { var l:UShort = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m725():Void { var l:UShort = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m726():Void { var l:UShort = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m727():Void { var l:UShort = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m728():Void { var l:UShort = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m729():Void { var l:UShort = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m730():Void { var l:UShort = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m731():Void { var l:UShort = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m732():Void { var l:UShort = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m733():Void { var l:UShort = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m734():Void { var l:UShort = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m735():Void { var l:UShort = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m736():Void { var l:UShort = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m737():Void { var l:UShort = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m738():Void { var l:UShort = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m739():Void { var l:UShort = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m740():Void { var l:UShort = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m741():Void { var l:UShort = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m742():Void { var l:UShort = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m743():Void { var l:UShort = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m744():Void { var l:UShort = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m745():Void { var l:UShort = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m746():Void { var l:UShort = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m747():Void { var l:UShort = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m748():Void { var l:UShort = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m749():Void { var l:UShort = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m750():Void { var l:UShort = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m751():Void { var l:UShort = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m752():Void { var l:UShort = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m753():Void { var l:UShort = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m754():Void { var l:UShort = -w2; } 
	def m755():Void { var l:UShort = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w3		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m756():Void { var l:UShort = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m757():Void { var l:UShort = -w5; }
	def m758():Void { var l:UShort = -w6; }
	def m759():Void { var l:UShort = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m760():Void { var l:UShort = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m761():Void { var l:UShort = -w9; }
	def m762():Void { var l:UShort = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w10		 Expected type: x10.lang.UShort		 Found type: x10.array.Point{})
	def m763():Void { var l:UShort = -0; }
	def m764():Void { var l:UShort = -(-0); }
	def m765():Void { var l:UShort = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m766():Void { var l:UShort = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m767():Void { var l:UShort = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m768():Void { var l:UShort = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m769():Void { var l:UShort = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-127})
	def m770():Void { var l:UShort = -(-127); }
	def m771():Void { var l:UShort = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-128})
	def m772():Void { var l:UShort = -(-128); }
	def m773():Void { var l:UShort = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-255})
	def m774():Void { var l:UShort = -(-255); }
	def m775():Void { var l:UShort = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-256})
	def m776():Void { var l:UShort = -(-256); }
	def m777():Void { var l:UShort = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-32767})
	def m778():Void { var l:UShort = -(-32767); }
	def m779():Void { var l:UShort = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-32768})
	def m780():Void { var l:UShort = -(-32768); }
	def m781():Void { var l:UShort = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m782():Void { var l:UShort = -(-65535); }
	def m783():Void { var l:UShort = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m784():Void { var l:UShort = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m785():Void { var l:UShort = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m786():Void { var l:UShort = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m787():Void { var l:UShort = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m788():Void { var l:UShort = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m789():Void { var l:UShort = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m790():Void { var l:UShort = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m791():Void { var l:Point = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w0++		 Expected type: x10.array.Point		 Found type: x10.lang.Float)
	def m792():Void { var l:Point = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w1++		 Expected type: x10.array.Point		 Found type: x10.lang.Double)
	def m793():Void { var l:Point = w2++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Byte) // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w2++		 Expected type: x10.array.Point		 Found type: x10.lang.Byte)
	def m794():Void { var l:Point = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w3++		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m795():Void { var l:Point = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w4++		 Expected type: x10.array.Point		 Found type: x10.lang.Long)
	def m796():Void { var l:Point = w5++; }  // ERR (Semantic Error: Incompatible return type of binary operator + found:		 operator return type: x10.lang.Int		 expression type: x10.lang.Short) // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w5++		 Expected type: x10.array.Point		 Found type: x10.lang.Short)
	def m797():Void { var l:Point = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w6++		 Expected type: x10.array.Point		 Found type: x10.lang.UByte)
	def m798():Void { var l:Point = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w7++		 Expected type: x10.array.Point		 Found type: x10.lang.UInt)
	def m799():Void { var l:Point = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w8++		 Expected type: x10.array.Point		 Found type: x10.lang.ULong)
	def m800():Void { var l:Point = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: TestInstanceOperators.this.w9++		 Expected type: x10.array.Point		 Found type: x10.lang.UShort)
	def m801():Void { var l:Point = w10++; }
	def m802():Void { var l:Point = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m803():Void { var l:Point = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m804():Void { var l:Point = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m805():Void { var l:Point = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m806():Void { var l:Point = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m807():Void { var l:Point = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m808():Void { var l:Point = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m809():Void { var l:Point = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m810():Void { var l:Point = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m811():Void { var l:Point = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m812():Void { var l:Point = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m813():Void { var l:Point = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m814():Void { var l:Point = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m815():Void { var l:Point = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m816():Void { var l:Point = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m817():Void { var l:Point = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m818():Void { var l:Point = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m819():Void { var l:Point = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m820():Void { var l:Point = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m821():Void { var l:Point = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m822():Void { var l:Point = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m823():Void { var l:Point = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m824():Void { var l:Point = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m825():Void { var l:Point = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m826():Void { var l:Point = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m827():Void { var l:Point = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m828():Void { var l:Point = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m829():Void { var l:Point = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m830():Void { var l:Point = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w0		 Expected type: x10.array.Point		 Found type: x10.lang.Float)
	def m831():Void { var l:Point = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w1		 Expected type: x10.array.Point		 Found type: x10.lang.Double)
	def m832():Void { var l:Point = -w2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w2		 Expected type: x10.array.Point		 Found type: x10.lang.Byte)
	def m833():Void { var l:Point = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w3		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m834():Void { var l:Point = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w4		 Expected type: x10.array.Point		 Found type: x10.lang.Long)
	def m835():Void { var l:Point = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w5		 Expected type: x10.array.Point		 Found type: x10.lang.Short)
	def m836():Void { var l:Point = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w6		 Expected type: x10.array.Point		 Found type: x10.lang.UByte)
	def m837():Void { var l:Point = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w7		 Expected type: x10.array.Point		 Found type: x10.lang.UInt)
	def m838():Void { var l:Point = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w8		 Expected type: x10.array.Point		 Found type: x10.lang.ULong)
	def m839():Void { var l:Point = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -TestInstanceOperators.this.w9		 Expected type: x10.array.Point		 Found type: x10.lang.UShort)
	def m840():Void { var l:Point = -w10; }
	def m841():Void { var l:Point = -0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: 0		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==0})
	def m842():Void { var l:Point = -(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(0)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m843():Void { var l:Point = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.array.Point		 Found type: x10.lang.Float)
	def m844():Void { var l:Point = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.array.Point		 Found type: x10.lang.Float)
	def m845():Void { var l:Point = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.array.Point		 Found type: x10.lang.Double)
	def m846():Void { var l:Point = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.array.Point		 Found type: x10.lang.Double)
	def m847():Void { var l:Point = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-127})
	def m848():Void { var l:Point = -(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-127)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m849():Void { var l:Point = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-128})
	def m850():Void { var l:Point = -(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-128)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m851():Void { var l:Point = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-255})
	def m852():Void { var l:Point = -(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-255)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m853():Void { var l:Point = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-256})
	def m854():Void { var l:Point = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m855():Void { var l:Point = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-32767})
	def m856():Void { var l:Point = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m857():Void { var l:Point = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-32768})
	def m858():Void { var l:Point = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m859():Void { var l:Point = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-65535})
	def m860():Void { var l:Point = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m861():Void { var l:Point = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-65536})
	def m862():Void { var l:Point = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m863():Void { var l:Point = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-16777216})
	def m864():Void { var l:Point = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m865():Void { var l:Point = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-16777217})
	def m866():Void { var l:Point = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
	def m867():Void { var l:Point = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.array.Point		 Found type: x10.lang.Int{self==-2147483647})
	def m868():Void { var l:Point = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.array.Point		 Found type: x10.lang.Int)
}
