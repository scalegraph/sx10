class SignedTests {
	var w0:Float=0;
	var w1:Double=0;
	var w2:Byte=0;
	var w3:Int=0;
	var w4:Long=0;
	var w5:Short=0;


	def m6():Void { var l:Float = (w0)+(w0); }
	def m7():Void { var l:Float = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m8():Void { var l:Float = (w0)+(w2); }
	def m9():Void { var l:Float = (w0)+(w3); }
	def m10():Void { var l:Float = (w0)+(w4); }
	def m11():Void { var l:Float = (w0)+(w5); }
	def m12():Void { var l:Float = (w0)+(0); }
	def m13():Void { var l:Float = (w0)+(-0); }
	def m14():Void { var l:Float = (w0)+(1); }
	def m15():Void { var l:Float = (w0)+(-1); }
	def m16():Void { var l:Float = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m17():Void { var l:Float = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m18():Void { var l:Float = (w0)+(127); }
	def m19():Void { var l:Float = (w0)+(-127); }
	def m20():Void { var l:Float = (w0)+(128); }
	def m21():Void { var l:Float = (w0)+(-128); }
	def m22():Void { var l:Float = (w0)+(255); }
	def m23():Void { var l:Float = (w0)+(-255); }
	def m24():Void { var l:Float = (w0)+(256); }
	def m25():Void { var l:Float = (w0)+(-256); }
	def m26():Void { var l:Float = (w0)+(32767); }
	def m27():Void { var l:Float = (w0)+(-32767); }
	def m28():Void { var l:Float = (w0)+(32768); }
	def m29():Void { var l:Float = (w0)+(-32768); }
	def m30():Void { var l:Float = (w0)+(65535); }
	def m31():Void { var l:Float = (w0)+(-65535); }
	def m32():Void { var l:Float = (w0)+(65536); }
	def m33():Void { var l:Float = (w0)+(-65536); }
	def m34():Void { var l:Float = (w0)+(16777216); }
	def m35():Void { var l:Float = (w0)+(-16777216); }
	def m36():Void { var l:Float = (w0)+(16777217); }
	def m37():Void { var l:Float = (w0)+(-16777217); }
	def m38():Void { var l:Float = (w0)+(2147483647); }
	def m39():Void { var l:Float = (w0)+(-2147483647); }
	def m40():Void { var l:Float = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m41():Void { var l:Float = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m42():Void { var l:Float = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m43():Void { var l:Float = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m44():Void { var l:Float = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m45():Void { var l:Float = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m46():Void { var l:Float = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m47():Void { var l:Float = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m48():Void { var l:Float = (w1)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m49():Void { var l:Float = (w1)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m50():Void { var l:Float = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m51():Void { var l:Float = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m52():Void { var l:Float = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m53():Void { var l:Float = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m54():Void { var l:Float = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m55():Void { var l:Float = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m56():Void { var l:Float = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m57():Void { var l:Float = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m58():Void { var l:Float = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m59():Void { var l:Float = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m60():Void { var l:Float = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m61():Void { var l:Float = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m62():Void { var l:Float = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m63():Void { var l:Float = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m64():Void { var l:Float = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m65():Void { var l:Float = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m66():Void { var l:Float = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m67():Void { var l:Float = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m68():Void { var l:Float = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m69():Void { var l:Float = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m70():Void { var l:Float = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m71():Void { var l:Float = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m72():Void { var l:Float = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m73():Void { var l:Float = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m74():Void { var l:Float = (w2)+(w0); }
	def m75():Void { var l:Float = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m76():Void { var l:Float = (w2)+(w2); }
	def m77():Void { var l:Float = (w2)+(w3); }
	def m78():Void { var l:Float = (w2)+(w4); }
	def m79():Void { var l:Float = (w2)+(w5); }
	def m80():Void { var l:Float = (w2)+(0); }
	def m81():Void { var l:Float = (w2)+(-0); }
	def m82():Void { var l:Float = (w2)+(1); }
	def m83():Void { var l:Float = (w2)+(-1); }
	def m84():Void { var l:Float = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m85():Void { var l:Float = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m86():Void { var l:Float = (w2)+(127); }
	def m87():Void { var l:Float = (w2)+(-127); }
	def m88():Void { var l:Float = (w2)+(128); }
	def m89():Void { var l:Float = (w2)+(-128); }
	def m90():Void { var l:Float = (w2)+(255); }
	def m91():Void { var l:Float = (w2)+(-255); }
	def m92():Void { var l:Float = (w2)+(256); }
	def m93():Void { var l:Float = (w2)+(-256); }
	def m94():Void { var l:Float = (w2)+(32767); }
	def m95():Void { var l:Float = (w2)+(-32767); }
	def m96():Void { var l:Float = (w2)+(32768); }
	def m97():Void { var l:Float = (w2)+(-32768); }
	def m98():Void { var l:Float = (w2)+(65535); }
	def m99():Void { var l:Float = (w2)+(-65535); }
	def m100():Void { var l:Float = (w2)+(65536); }
	def m101():Void { var l:Float = (w2)+(-65536); }
	def m102():Void { var l:Float = (w2)+(16777216); }
	def m103():Void { var l:Float = (w2)+(-16777216); }
	def m104():Void { var l:Float = (w2)+(16777217); }
	def m105():Void { var l:Float = (w2)+(-16777217); }
	def m106():Void { var l:Float = (w2)+(2147483647); }
	def m107():Void { var l:Float = (w2)+(-2147483647); }
	def m108():Void { var l:Float = (w3)+(w0); }
	def m109():Void { var l:Float = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m110():Void { var l:Float = (w3)+(w2); }
	def m111():Void { var l:Float = (w3)+(w3); }
	def m112():Void { var l:Float = (w3)+(w4); }
	def m113():Void { var l:Float = (w3)+(w5); }
	def m114():Void { var l:Float = (w3)+(0); }
	def m115():Void { var l:Float = (w3)+(-0); }
	def m116():Void { var l:Float = (w3)+(1); }
	def m117():Void { var l:Float = (w3)+(-1); }
	def m118():Void { var l:Float = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m119():Void { var l:Float = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m120():Void { var l:Float = (w3)+(127); }
	def m121():Void { var l:Float = (w3)+(-127); }
	def m122():Void { var l:Float = (w3)+(128); }
	def m123():Void { var l:Float = (w3)+(-128); }
	def m124():Void { var l:Float = (w3)+(255); }
	def m125():Void { var l:Float = (w3)+(-255); }
	def m126():Void { var l:Float = (w3)+(256); }
	def m127():Void { var l:Float = (w3)+(-256); }
	def m128():Void { var l:Float = (w3)+(32767); }
	def m129():Void { var l:Float = (w3)+(-32767); }
	def m130():Void { var l:Float = (w3)+(32768); }
	def m131():Void { var l:Float = (w3)+(-32768); }
	def m132():Void { var l:Float = (w3)+(65535); }
	def m133():Void { var l:Float = (w3)+(-65535); }
	def m134():Void { var l:Float = (w3)+(65536); }
	def m135():Void { var l:Float = (w3)+(-65536); }
	def m136():Void { var l:Float = (w3)+(16777216); }
	def m137():Void { var l:Float = (w3)+(-16777216); }
	def m138():Void { var l:Float = (w3)+(16777217); }
	def m139():Void { var l:Float = (w3)+(-16777217); }
	def m140():Void { var l:Float = (w3)+(2147483647); }
	def m141():Void { var l:Float = (w3)+(-2147483647); }
	def m142():Void { var l:Float = (w4)+(w0); }
	def m143():Void { var l:Float = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m144():Void { var l:Float = (w4)+(w2); }
	def m145():Void { var l:Float = (w4)+(w3); }
	def m146():Void { var l:Float = (w4)+(w4); }
	def m147():Void { var l:Float = (w4)+(w5); }
	def m148():Void { var l:Float = (w4)+(0); }
	def m149():Void { var l:Float = (w4)+(-0); }
	def m150():Void { var l:Float = (w4)+(1); }
	def m151():Void { var l:Float = (w4)+(-1); }
	def m152():Void { var l:Float = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m153():Void { var l:Float = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m154():Void { var l:Float = (w4)+(127); }
	def m155():Void { var l:Float = (w4)+(-127); }
	def m156():Void { var l:Float = (w4)+(128); }
	def m157():Void { var l:Float = (w4)+(-128); }
	def m158():Void { var l:Float = (w4)+(255); }
	def m159():Void { var l:Float = (w4)+(-255); }
	def m160():Void { var l:Float = (w4)+(256); }
	def m161():Void { var l:Float = (w4)+(-256); }
	def m162():Void { var l:Float = (w4)+(32767); }
	def m163():Void { var l:Float = (w4)+(-32767); }
	def m164():Void { var l:Float = (w4)+(32768); }
	def m165():Void { var l:Float = (w4)+(-32768); }
	def m166():Void { var l:Float = (w4)+(65535); }
	def m167():Void { var l:Float = (w4)+(-65535); }
	def m168():Void { var l:Float = (w4)+(65536); }
	def m169():Void { var l:Float = (w4)+(-65536); }
	def m170():Void { var l:Float = (w4)+(16777216); }
	def m171():Void { var l:Float = (w4)+(-16777216); }
	def m172():Void { var l:Float = (w4)+(16777217); }
	def m173():Void { var l:Float = (w4)+(-16777217); }
	def m174():Void { var l:Float = (w4)+(2147483647); }
	def m175():Void { var l:Float = (w4)+(-2147483647); }
	def m176():Void { var l:Float = (w5)+(w0); }
	def m177():Void { var l:Float = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m178():Void { var l:Float = (w5)+(w2); }
	def m179():Void { var l:Float = (w5)+(w3); }
	def m180():Void { var l:Float = (w5)+(w4); }
	def m181():Void { var l:Float = (w5)+(w5); }
	def m182():Void { var l:Float = (w5)+(0); }
	def m183():Void { var l:Float = (w5)+(-0); }
	def m184():Void { var l:Float = (w5)+(1); }
	def m185():Void { var l:Float = (w5)+(-1); }
	def m186():Void { var l:Float = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m187():Void { var l:Float = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m188():Void { var l:Float = (w5)+(127); }
	def m189():Void { var l:Float = (w5)+(-127); }
	def m190():Void { var l:Float = (w5)+(128); }
	def m191():Void { var l:Float = (w5)+(-128); }
	def m192():Void { var l:Float = (w5)+(255); }
	def m193():Void { var l:Float = (w5)+(-255); }
	def m194():Void { var l:Float = (w5)+(256); }
	def m195():Void { var l:Float = (w5)+(-256); }
	def m196():Void { var l:Float = (w5)+(32767); }
	def m197():Void { var l:Float = (w5)+(-32767); }
	def m198():Void { var l:Float = (w5)+(32768); }
	def m199():Void { var l:Float = (w5)+(-32768); }
	def m200():Void { var l:Float = (w5)+(65535); }
	def m201():Void { var l:Float = (w5)+(-65535); }
	def m202():Void { var l:Float = (w5)+(65536); }
	def m203():Void { var l:Float = (w5)+(-65536); }
	def m204():Void { var l:Float = (w5)+(16777216); }
	def m205():Void { var l:Float = (w5)+(-16777216); }
	def m206():Void { var l:Float = (w5)+(16777217); }
	def m207():Void { var l:Float = (w5)+(-16777217); }
	def m208():Void { var l:Float = (w5)+(2147483647); }
	def m209():Void { var l:Float = (w5)+(-2147483647); }
	def m210():Void { var l:Float = (0)+(w0); }
	def m211():Void { var l:Float = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m212():Void { var l:Float = (0)+(w2); }
	def m213():Void { var l:Float = (0)+(w3); }
	def m214():Void { var l:Float = (0)+(w4); }
	def m215():Void { var l:Float = (0)+(w5); }
	def m216():Void { var l:Float = (0)+(0); }
	def m217():Void { var l:Float = (0)+(-0); }
	def m218():Void { var l:Float = (0)+(1); }
	def m219():Void { var l:Float = (0)+(-1); }
	def m220():Void { var l:Float = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m221():Void { var l:Float = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m222():Void { var l:Float = (0)+(127); }
	def m223():Void { var l:Float = (0)+(-127); }
	def m224():Void { var l:Float = (0)+(128); }
	def m225():Void { var l:Float = (0)+(-128); }
	def m226():Void { var l:Float = (0)+(255); }
	def m227():Void { var l:Float = (0)+(-255); }
	def m228():Void { var l:Float = (0)+(256); }
	def m229():Void { var l:Float = (0)+(-256); }
	def m230():Void { var l:Float = (0)+(32767); }
	def m231():Void { var l:Float = (0)+(-32767); }
	def m232():Void { var l:Float = (0)+(32768); }
	def m233():Void { var l:Float = (0)+(-32768); }
	def m234():Void { var l:Float = (0)+(65535); }
	def m235():Void { var l:Float = (0)+(-65535); }
	def m236():Void { var l:Float = (0)+(65536); }
	def m237():Void { var l:Float = (0)+(-65536); }
	def m238():Void { var l:Float = (0)+(16777216); }
	def m239():Void { var l:Float = (0)+(-16777216); }
	def m240():Void { var l:Float = (0)+(16777217); }
	def m241():Void { var l:Float = (0)+(-16777217); }
	def m242():Void { var l:Float = (0)+(2147483647); }
	def m243():Void { var l:Float = (0)+(-2147483647); }
	def m244():Void { var l:Float = (-0)+(w0); }
	def m245():Void { var l:Float = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m246():Void { var l:Float = (-0)+(w2); }
	def m247():Void { var l:Float = (-0)+(w3); }
	def m248():Void { var l:Float = (-0)+(w4); }
	def m249():Void { var l:Float = (-0)+(w5); }
	def m250():Void { var l:Float = (-0)+(0); }
	def m251():Void { var l:Float = (-0)+(-0); }
	def m252():Void { var l:Float = (-0)+(1); }
	def m253():Void { var l:Float = (-0)+(-1); }
	def m254():Void { var l:Float = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m255():Void { var l:Float = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m256():Void { var l:Float = (-0)+(127); }
	def m257():Void { var l:Float = (-0)+(-127); }
	def m258():Void { var l:Float = (-0)+(128); }
	def m259():Void { var l:Float = (-0)+(-128); }
	def m260():Void { var l:Float = (-0)+(255); }
	def m261():Void { var l:Float = (-0)+(-255); }
	def m262():Void { var l:Float = (-0)+(256); }
	def m263():Void { var l:Float = (-0)+(-256); }
	def m264():Void { var l:Float = (-0)+(32767); }
	def m265():Void { var l:Float = (-0)+(-32767); }
	def m266():Void { var l:Float = (-0)+(32768); }
	def m267():Void { var l:Float = (-0)+(-32768); }
	def m268():Void { var l:Float = (-0)+(65535); }
	def m269():Void { var l:Float = (-0)+(-65535); }
	def m270():Void { var l:Float = (-0)+(65536); }
	def m271():Void { var l:Float = (-0)+(-65536); }
	def m272():Void { var l:Float = (-0)+(16777216); }
	def m273():Void { var l:Float = (-0)+(-16777216); }
	def m274():Void { var l:Float = (-0)+(16777217); }
	def m275():Void { var l:Float = (-0)+(-16777217); }
	def m276():Void { var l:Float = (-0)+(2147483647); }
	def m277():Void { var l:Float = (-0)+(-2147483647); }
	def m278():Void { var l:Float = (1)+(w0); }
	def m279():Void { var l:Float = (1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m280():Void { var l:Float = (1)+(w2); }
	def m281():Void { var l:Float = (1)+(w3); }
	def m282():Void { var l:Float = (1)+(w4); }
	def m283():Void { var l:Float = (1)+(w5); }
	def m284():Void { var l:Float = (1)+(0); }
	def m285():Void { var l:Float = (1)+(-0); }
	def m286():Void { var l:Float = (1)+(1); }
	def m287():Void { var l:Float = (1)+(-1); }
	def m288():Void { var l:Float = (1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m289():Void { var l:Float = (1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m290():Void { var l:Float = (1)+(127); }
	def m291():Void { var l:Float = (1)+(-127); }
	def m292():Void { var l:Float = (1)+(128); }
	def m293():Void { var l:Float = (1)+(-128); }
	def m294():Void { var l:Float = (1)+(255); }
	def m295():Void { var l:Float = (1)+(-255); }
	def m296():Void { var l:Float = (1)+(256); }
	def m297():Void { var l:Float = (1)+(-256); }
	def m298():Void { var l:Float = (1)+(32767); }
	def m299():Void { var l:Float = (1)+(-32767); }
	def m300():Void { var l:Float = (1)+(32768); }
	def m301():Void { var l:Float = (1)+(-32768); }
	def m302():Void { var l:Float = (1)+(65535); }
	def m303():Void { var l:Float = (1)+(-65535); }
	def m304():Void { var l:Float = (1)+(65536); }
	def m305():Void { var l:Float = (1)+(-65536); }
	def m306():Void { var l:Float = (1)+(16777216); }
	def m307():Void { var l:Float = (1)+(-16777216); }
	def m308():Void { var l:Float = (1)+(16777217); }
	def m309():Void { var l:Float = (1)+(-16777217); }
	def m310():Void { var l:Float = (1)+(2147483647); }
	def m311():Void { var l:Float = (1)+(-2147483647); }
	def m312():Void { var l:Float = (-1)+(w0); }
	def m313():Void { var l:Float = (-1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m314():Void { var l:Float = (-1)+(w2); }
	def m315():Void { var l:Float = (-1)+(w3); }
	def m316():Void { var l:Float = (-1)+(w4); }
	def m317():Void { var l:Float = (-1)+(w5); }
	def m318():Void { var l:Float = (-1)+(0); }
	def m319():Void { var l:Float = (-1)+(-0); }
	def m320():Void { var l:Float = (-1)+(1); }
	def m321():Void { var l:Float = (-1)+(-1); }
	def m322():Void { var l:Float = (-1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m323():Void { var l:Float = (-1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m324():Void { var l:Float = (-1)+(127); }
	def m325():Void { var l:Float = (-1)+(-127); }
	def m326():Void { var l:Float = (-1)+(128); }
	def m327():Void { var l:Float = (-1)+(-128); }
	def m328():Void { var l:Float = (-1)+(255); }
	def m329():Void { var l:Float = (-1)+(-255); }
	def m330():Void { var l:Float = (-1)+(256); }
	def m331():Void { var l:Float = (-1)+(-256); }
	def m332():Void { var l:Float = (-1)+(32767); }
	def m333():Void { var l:Float = (-1)+(-32767); }
	def m334():Void { var l:Float = (-1)+(32768); }
	def m335():Void { var l:Float = (-1)+(-32768); }
	def m336():Void { var l:Float = (-1)+(65535); }
	def m337():Void { var l:Float = (-1)+(-65535); }
	def m338():Void { var l:Float = (-1)+(65536); }
	def m339():Void { var l:Float = (-1)+(-65536); }
	def m340():Void { var l:Float = (-1)+(16777216); }
	def m341():Void { var l:Float = (-1)+(-16777216); }
	def m342():Void { var l:Float = (-1)+(16777217); }
	def m343():Void { var l:Float = (-1)+(-16777217); }
	def m344():Void { var l:Float = (-1)+(2147483647); }
	def m345():Void { var l:Float = (-1)+(-2147483647); }
	def m346():Void { var l:Float = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m347():Void { var l:Float = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m348():Void { var l:Float = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m349():Void { var l:Float = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m350():Void { var l:Float = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m351():Void { var l:Float = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m352():Void { var l:Float = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m353():Void { var l:Float = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m354():Void { var l:Float = (2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m355():Void { var l:Float = (2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m356():Void { var l:Float = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m357():Void { var l:Float = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m358():Void { var l:Float = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m359():Void { var l:Float = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m360():Void { var l:Float = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m361():Void { var l:Float = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m362():Void { var l:Float = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m363():Void { var l:Float = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m364():Void { var l:Float = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m365():Void { var l:Float = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m366():Void { var l:Float = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m367():Void { var l:Float = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m368():Void { var l:Float = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m369():Void { var l:Float = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m370():Void { var l:Float = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m371():Void { var l:Float = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m372():Void { var l:Float = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m373():Void { var l:Float = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m374():Void { var l:Float = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m375():Void { var l:Float = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m376():Void { var l:Float = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m377():Void { var l:Float = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m378():Void { var l:Float = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m379():Void { var l:Float = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m380():Void { var l:Float = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m381():Void { var l:Float = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m382():Void { var l:Float = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m383():Void { var l:Float = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m384():Void { var l:Float = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m385():Void { var l:Float = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m386():Void { var l:Float = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m387():Void { var l:Float = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m388():Void { var l:Float = (-2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m389():Void { var l:Float = (-2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m390():Void { var l:Float = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m391():Void { var l:Float = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m392():Void { var l:Float = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m393():Void { var l:Float = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m394():Void { var l:Float = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m395():Void { var l:Float = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m396():Void { var l:Float = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m397():Void { var l:Float = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m398():Void { var l:Float = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m399():Void { var l:Float = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m400():Void { var l:Float = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m401():Void { var l:Float = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m402():Void { var l:Float = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m403():Void { var l:Float = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m404():Void { var l:Float = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m405():Void { var l:Float = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m406():Void { var l:Float = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m407():Void { var l:Float = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m408():Void { var l:Float = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m409():Void { var l:Float = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m410():Void { var l:Float = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m411():Void { var l:Float = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m412():Void { var l:Float = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m413():Void { var l:Float = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m414():Void { var l:Float = (127)+(w0); }
	def m415():Void { var l:Float = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m416():Void { var l:Float = (127)+(w2); }
	def m417():Void { var l:Float = (127)+(w3); }
	def m418():Void { var l:Float = (127)+(w4); }
	def m419():Void { var l:Float = (127)+(w5); }
	def m420():Void { var l:Float = (127)+(0); }
	def m421():Void { var l:Float = (127)+(-0); }
	def m422():Void { var l:Float = (127)+(1); }
	def m423():Void { var l:Float = (127)+(-1); }
	def m424():Void { var l:Float = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m425():Void { var l:Float = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m426():Void { var l:Float = (127)+(127); }
	def m427():Void { var l:Float = (127)+(-127); }
	def m428():Void { var l:Float = (127)+(128); }
	def m429():Void { var l:Float = (127)+(-128); }
	def m430():Void { var l:Float = (127)+(255); }
	def m431():Void { var l:Float = (127)+(-255); }
	def m432():Void { var l:Float = (127)+(256); }
	def m433():Void { var l:Float = (127)+(-256); }
	def m434():Void { var l:Float = (127)+(32767); }
	def m435():Void { var l:Float = (127)+(-32767); }
	def m436():Void { var l:Float = (127)+(32768); }
	def m437():Void { var l:Float = (127)+(-32768); }
	def m438():Void { var l:Float = (127)+(65535); }
	def m439():Void { var l:Float = (127)+(-65535); }
	def m440():Void { var l:Float = (127)+(65536); }
	def m441():Void { var l:Float = (127)+(-65536); }
	def m442():Void { var l:Float = (127)+(16777216); }
	def m443():Void { var l:Float = (127)+(-16777216); }
	def m444():Void { var l:Float = (127)+(16777217); }
	def m445():Void { var l:Float = (127)+(-16777217); }
	def m446():Void { var l:Float = (127)+(2147483647); }
	def m447():Void { var l:Float = (127)+(-2147483647); }
	def m448():Void { var l:Float = (-127)+(w0); }
	def m449():Void { var l:Float = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m450():Void { var l:Float = (-127)+(w2); }
	def m451():Void { var l:Float = (-127)+(w3); }
	def m452():Void { var l:Float = (-127)+(w4); }
	def m453():Void { var l:Float = (-127)+(w5); }
	def m454():Void { var l:Float = (-127)+(0); }
	def m455():Void { var l:Float = (-127)+(-0); }
	def m456():Void { var l:Float = (-127)+(1); }
	def m457():Void { var l:Float = (-127)+(-1); }
	def m458():Void { var l:Float = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m459():Void { var l:Float = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m460():Void { var l:Float = (-127)+(127); }
	def m461():Void { var l:Float = (-127)+(-127); }
	def m462():Void { var l:Float = (-127)+(128); }
	def m463():Void { var l:Float = (-127)+(-128); }
	def m464():Void { var l:Float = (-127)+(255); }
	def m465():Void { var l:Float = (-127)+(-255); }
	def m466():Void { var l:Float = (-127)+(256); }
	def m467():Void { var l:Float = (-127)+(-256); }
	def m468():Void { var l:Float = (-127)+(32767); }
	def m469():Void { var l:Float = (-127)+(-32767); }
	def m470():Void { var l:Float = (-127)+(32768); }
	def m471():Void { var l:Float = (-127)+(-32768); }
	def m472():Void { var l:Float = (-127)+(65535); }
	def m473():Void { var l:Float = (-127)+(-65535); }
	def m474():Void { var l:Float = (-127)+(65536); }
	def m475():Void { var l:Float = (-127)+(-65536); }
	def m476():Void { var l:Float = (-127)+(16777216); }
	def m477():Void { var l:Float = (-127)+(-16777216); }
	def m478():Void { var l:Float = (-127)+(16777217); }
	def m479():Void { var l:Float = (-127)+(-16777217); }
	def m480():Void { var l:Float = (-127)+(2147483647); }
	def m481():Void { var l:Float = (-127)+(-2147483647); }
	def m482():Void { var l:Float = (128)+(w0); }
	def m483():Void { var l:Float = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m484():Void { var l:Float = (128)+(w2); }
	def m485():Void { var l:Float = (128)+(w3); }
	def m486():Void { var l:Float = (128)+(w4); }
	def m487():Void { var l:Float = (128)+(w5); }
	def m488():Void { var l:Float = (128)+(0); }
	def m489():Void { var l:Float = (128)+(-0); }
	def m490():Void { var l:Float = (128)+(1); }
	def m491():Void { var l:Float = (128)+(-1); }
	def m492():Void { var l:Float = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m493():Void { var l:Float = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m494():Void { var l:Float = (128)+(127); }
	def m495():Void { var l:Float = (128)+(-127); }
	def m496():Void { var l:Float = (128)+(128); }
	def m497():Void { var l:Float = (128)+(-128); }
	def m498():Void { var l:Float = (128)+(255); }
	def m499():Void { var l:Float = (128)+(-255); }
	def m500():Void { var l:Float = (128)+(256); }
	def m501():Void { var l:Float = (128)+(-256); }
	def m502():Void { var l:Float = (128)+(32767); }
	def m503():Void { var l:Float = (128)+(-32767); }
	def m504():Void { var l:Float = (128)+(32768); }
	def m505():Void { var l:Float = (128)+(-32768); }
	def m506():Void { var l:Float = (128)+(65535); }
	def m507():Void { var l:Float = (128)+(-65535); }
	def m508():Void { var l:Float = (128)+(65536); }
	def m509():Void { var l:Float = (128)+(-65536); }
	def m510():Void { var l:Float = (128)+(16777216); }
	def m511():Void { var l:Float = (128)+(-16777216); }
	def m512():Void { var l:Float = (128)+(16777217); }
	def m513():Void { var l:Float = (128)+(-16777217); }
	def m514():Void { var l:Float = (128)+(2147483647); }
	def m515():Void { var l:Float = (128)+(-2147483647); }
	def m516():Void { var l:Float = (-128)+(w0); }
	def m517():Void { var l:Float = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m518():Void { var l:Float = (-128)+(w2); }
	def m519():Void { var l:Float = (-128)+(w3); }
	def m520():Void { var l:Float = (-128)+(w4); }
	def m521():Void { var l:Float = (-128)+(w5); }
	def m522():Void { var l:Float = (-128)+(0); }
	def m523():Void { var l:Float = (-128)+(-0); }
	def m524():Void { var l:Float = (-128)+(1); }
	def m525():Void { var l:Float = (-128)+(-1); }
	def m526():Void { var l:Float = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m527():Void { var l:Float = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m528():Void { var l:Float = (-128)+(127); }
	def m529():Void { var l:Float = (-128)+(-127); }
	def m530():Void { var l:Float = (-128)+(128); }
	def m531():Void { var l:Float = (-128)+(-128); }
	def m532():Void { var l:Float = (-128)+(255); }
	def m533():Void { var l:Float = (-128)+(-255); }
	def m534():Void { var l:Float = (-128)+(256); }
	def m535():Void { var l:Float = (-128)+(-256); }
	def m536():Void { var l:Float = (-128)+(32767); }
	def m537():Void { var l:Float = (-128)+(-32767); }
	def m538():Void { var l:Float = (-128)+(32768); }
	def m539():Void { var l:Float = (-128)+(-32768); }
	def m540():Void { var l:Float = (-128)+(65535); }
	def m541():Void { var l:Float = (-128)+(-65535); }
	def m542():Void { var l:Float = (-128)+(65536); }
	def m543():Void { var l:Float = (-128)+(-65536); }
	def m544():Void { var l:Float = (-128)+(16777216); }
	def m545():Void { var l:Float = (-128)+(-16777216); }
	def m546():Void { var l:Float = (-128)+(16777217); }
	def m547():Void { var l:Float = (-128)+(-16777217); }
	def m548():Void { var l:Float = (-128)+(2147483647); }
	def m549():Void { var l:Float = (-128)+(-2147483647); }
	def m550():Void { var l:Float = (255)+(w0); }
	def m551():Void { var l:Float = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m552():Void { var l:Float = (255)+(w2); }
	def m553():Void { var l:Float = (255)+(w3); }
	def m554():Void { var l:Float = (255)+(w4); }
	def m555():Void { var l:Float = (255)+(w5); }
	def m556():Void { var l:Float = (255)+(0); }
	def m557():Void { var l:Float = (255)+(-0); }
	def m558():Void { var l:Float = (255)+(1); }
	def m559():Void { var l:Float = (255)+(-1); }
	def m560():Void { var l:Float = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m561():Void { var l:Float = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m562():Void { var l:Float = (255)+(127); }
	def m563():Void { var l:Float = (255)+(-127); }
	def m564():Void { var l:Float = (255)+(128); }
	def m565():Void { var l:Float = (255)+(-128); }
	def m566():Void { var l:Float = (255)+(255); }
	def m567():Void { var l:Float = (255)+(-255); }
	def m568():Void { var l:Float = (255)+(256); }
	def m569():Void { var l:Float = (255)+(-256); }
	def m570():Void { var l:Float = (255)+(32767); }
	def m571():Void { var l:Float = (255)+(-32767); }
	def m572():Void { var l:Float = (255)+(32768); }
	def m573():Void { var l:Float = (255)+(-32768); }
	def m574():Void { var l:Float = (255)+(65535); }
	def m575():Void { var l:Float = (255)+(-65535); }
	def m576():Void { var l:Float = (255)+(65536); }
	def m577():Void { var l:Float = (255)+(-65536); }
	def m578():Void { var l:Float = (255)+(16777216); }
	def m579():Void { var l:Float = (255)+(-16777216); }
	def m580():Void { var l:Float = (255)+(16777217); }
	def m581():Void { var l:Float = (255)+(-16777217); }
	def m582():Void { var l:Float = (255)+(2147483647); }
	def m583():Void { var l:Float = (255)+(-2147483647); }
	def m584():Void { var l:Float = (-255)+(w0); }
	def m585():Void { var l:Float = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m586():Void { var l:Float = (-255)+(w2); }
	def m587():Void { var l:Float = (-255)+(w3); }
	def m588():Void { var l:Float = (-255)+(w4); }
	def m589():Void { var l:Float = (-255)+(w5); }
	def m590():Void { var l:Float = (-255)+(0); }
	def m591():Void { var l:Float = (-255)+(-0); }
	def m592():Void { var l:Float = (-255)+(1); }
	def m593():Void { var l:Float = (-255)+(-1); }
	def m594():Void { var l:Float = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m595():Void { var l:Float = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m596():Void { var l:Float = (-255)+(127); }
	def m597():Void { var l:Float = (-255)+(-127); }
	def m598():Void { var l:Float = (-255)+(128); }
	def m599():Void { var l:Float = (-255)+(-128); }
	def m600():Void { var l:Float = (-255)+(255); }
	def m601():Void { var l:Float = (-255)+(-255); }
	def m602():Void { var l:Float = (-255)+(256); }
	def m603():Void { var l:Float = (-255)+(-256); }
	def m604():Void { var l:Float = (-255)+(32767); }
	def m605():Void { var l:Float = (-255)+(-32767); }
	def m606():Void { var l:Float = (-255)+(32768); }
	def m607():Void { var l:Float = (-255)+(-32768); }
	def m608():Void { var l:Float = (-255)+(65535); }
	def m609():Void { var l:Float = (-255)+(-65535); }
	def m610():Void { var l:Float = (-255)+(65536); }
	def m611():Void { var l:Float = (-255)+(-65536); }
	def m612():Void { var l:Float = (-255)+(16777216); }
	def m613():Void { var l:Float = (-255)+(-16777216); }
	def m614():Void { var l:Float = (-255)+(16777217); }
	def m615():Void { var l:Float = (-255)+(-16777217); }
	def m616():Void { var l:Float = (-255)+(2147483647); }
	def m617():Void { var l:Float = (-255)+(-2147483647); }
	def m618():Void { var l:Float = (256)+(w0); }
	def m619():Void { var l:Float = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m620():Void { var l:Float = (256)+(w2); }
	def m621():Void { var l:Float = (256)+(w3); }
	def m622():Void { var l:Float = (256)+(w4); }
	def m623():Void { var l:Float = (256)+(w5); }
	def m624():Void { var l:Float = (256)+(0); }
	def m625():Void { var l:Float = (256)+(-0); }
	def m626():Void { var l:Float = (256)+(1); }
	def m627():Void { var l:Float = (256)+(-1); }
	def m628():Void { var l:Float = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m629():Void { var l:Float = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m630():Void { var l:Float = (256)+(127); }
	def m631():Void { var l:Float = (256)+(-127); }
	def m632():Void { var l:Float = (256)+(128); }
	def m633():Void { var l:Float = (256)+(-128); }
	def m634():Void { var l:Float = (256)+(255); }
	def m635():Void { var l:Float = (256)+(-255); }
	def m636():Void { var l:Float = (256)+(256); }
	def m637():Void { var l:Float = (256)+(-256); }
	def m638():Void { var l:Float = (256)+(32767); }
	def m639():Void { var l:Float = (256)+(-32767); }
	def m640():Void { var l:Float = (256)+(32768); }
	def m641():Void { var l:Float = (256)+(-32768); }
	def m642():Void { var l:Float = (256)+(65535); }
	def m643():Void { var l:Float = (256)+(-65535); }
	def m644():Void { var l:Float = (256)+(65536); }
	def m645():Void { var l:Float = (256)+(-65536); }
	def m646():Void { var l:Float = (256)+(16777216); }
	def m647():Void { var l:Float = (256)+(-16777216); }
	def m648():Void { var l:Float = (256)+(16777217); }
	def m649():Void { var l:Float = (256)+(-16777217); }
	def m650():Void { var l:Float = (256)+(2147483647); }
	def m651():Void { var l:Float = (256)+(-2147483647); }
	def m652():Void { var l:Float = (-256)+(w0); }
	def m653():Void { var l:Float = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m654():Void { var l:Float = (-256)+(w2); }
	def m655():Void { var l:Float = (-256)+(w3); }
	def m656():Void { var l:Float = (-256)+(w4); }
	def m657():Void { var l:Float = (-256)+(w5); }
	def m658():Void { var l:Float = (-256)+(0); }
	def m659():Void { var l:Float = (-256)+(-0); }
	def m660():Void { var l:Float = (-256)+(1); }
	def m661():Void { var l:Float = (-256)+(-1); }
	def m662():Void { var l:Float = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m663():Void { var l:Float = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m664():Void { var l:Float = (-256)+(127); }
	def m665():Void { var l:Float = (-256)+(-127); }
	def m666():Void { var l:Float = (-256)+(128); }
	def m667():Void { var l:Float = (-256)+(-128); }
	def m668():Void { var l:Float = (-256)+(255); }
	def m669():Void { var l:Float = (-256)+(-255); }
	def m670():Void { var l:Float = (-256)+(256); }
	def m671():Void { var l:Float = (-256)+(-256); }
	def m672():Void { var l:Float = (-256)+(32767); }
	def m673():Void { var l:Float = (-256)+(-32767); }
	def m674():Void { var l:Float = (-256)+(32768); }
	def m675():Void { var l:Float = (-256)+(-32768); }
	def m676():Void { var l:Float = (-256)+(65535); }
	def m677():Void { var l:Float = (-256)+(-65535); }
	def m678():Void { var l:Float = (-256)+(65536); }
	def m679():Void { var l:Float = (-256)+(-65536); }
	def m680():Void { var l:Float = (-256)+(16777216); }
	def m681():Void { var l:Float = (-256)+(-16777216); }
	def m682():Void { var l:Float = (-256)+(16777217); }
	def m683():Void { var l:Float = (-256)+(-16777217); }
	def m684():Void { var l:Float = (-256)+(2147483647); }
	def m685():Void { var l:Float = (-256)+(-2147483647); }
	def m686():Void { var l:Float = (32767)+(w0); }
	def m687():Void { var l:Float = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m688():Void { var l:Float = (32767)+(w2); }
	def m689():Void { var l:Float = (32767)+(w3); }
	def m690():Void { var l:Float = (32767)+(w4); }
	def m691():Void { var l:Float = (32767)+(w5); }
	def m692():Void { var l:Float = (32767)+(0); }
	def m693():Void { var l:Float = (32767)+(-0); }
	def m694():Void { var l:Float = (32767)+(1); }
	def m695():Void { var l:Float = (32767)+(-1); }
	def m696():Void { var l:Float = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m697():Void { var l:Float = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m698():Void { var l:Float = (32767)+(127); }
	def m699():Void { var l:Float = (32767)+(-127); }
	def m700():Void { var l:Float = (32767)+(128); }
	def m701():Void { var l:Float = (32767)+(-128); }
	def m702():Void { var l:Float = (32767)+(255); }
	def m703():Void { var l:Float = (32767)+(-255); }
	def m704():Void { var l:Float = (32767)+(256); }
	def m705():Void { var l:Float = (32767)+(-256); }
	def m706():Void { var l:Float = (32767)+(32767); }
	def m707():Void { var l:Float = (32767)+(-32767); }
	def m708():Void { var l:Float = (32767)+(32768); }
	def m709():Void { var l:Float = (32767)+(-32768); }
	def m710():Void { var l:Float = (32767)+(65535); }
	def m711():Void { var l:Float = (32767)+(-65535); }
	def m712():Void { var l:Float = (32767)+(65536); }
	def m713():Void { var l:Float = (32767)+(-65536); }
	def m714():Void { var l:Float = (32767)+(16777216); }
	def m715():Void { var l:Float = (32767)+(-16777216); }
	def m716():Void { var l:Float = (32767)+(16777217); }
	def m717():Void { var l:Float = (32767)+(-16777217); }
	def m718():Void { var l:Float = (32767)+(2147483647); }
	def m719():Void { var l:Float = (32767)+(-2147483647); }
	def m720():Void { var l:Float = (-32767)+(w0); }
	def m721():Void { var l:Float = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m722():Void { var l:Float = (-32767)+(w2); }
	def m723():Void { var l:Float = (-32767)+(w3); }
	def m724():Void { var l:Float = (-32767)+(w4); }
	def m725():Void { var l:Float = (-32767)+(w5); }
	def m726():Void { var l:Float = (-32767)+(0); }
	def m727():Void { var l:Float = (-32767)+(-0); }
	def m728():Void { var l:Float = (-32767)+(1); }
	def m729():Void { var l:Float = (-32767)+(-1); }
	def m730():Void { var l:Float = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m731():Void { var l:Float = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m732():Void { var l:Float = (-32767)+(127); }
	def m733():Void { var l:Float = (-32767)+(-127); }
	def m734():Void { var l:Float = (-32767)+(128); }
	def m735():Void { var l:Float = (-32767)+(-128); }
	def m736():Void { var l:Float = (-32767)+(255); }
	def m737():Void { var l:Float = (-32767)+(-255); }
	def m738():Void { var l:Float = (-32767)+(256); }
	def m739():Void { var l:Float = (-32767)+(-256); }
	def m740():Void { var l:Float = (-32767)+(32767); }
	def m741():Void { var l:Float = (-32767)+(-32767); }
	def m742():Void { var l:Float = (-32767)+(32768); }
	def m743():Void { var l:Float = (-32767)+(-32768); }
	def m744():Void { var l:Float = (-32767)+(65535); }
	def m745():Void { var l:Float = (-32767)+(-65535); }
	def m746():Void { var l:Float = (-32767)+(65536); }
	def m747():Void { var l:Float = (-32767)+(-65536); }
	def m748():Void { var l:Float = (-32767)+(16777216); }
	def m749():Void { var l:Float = (-32767)+(-16777216); }
	def m750():Void { var l:Float = (-32767)+(16777217); }
	def m751():Void { var l:Float = (-32767)+(-16777217); }
	def m752():Void { var l:Float = (-32767)+(2147483647); }
	def m753():Void { var l:Float = (-32767)+(-2147483647); }
	def m754():Void { var l:Float = (32768)+(w0); }
	def m755():Void { var l:Float = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m756():Void { var l:Float = (32768)+(w2); }
	def m757():Void { var l:Float = (32768)+(w3); }
	def m758():Void { var l:Float = (32768)+(w4); }
	def m759():Void { var l:Float = (32768)+(w5); }
	def m760():Void { var l:Float = (32768)+(0); }
	def m761():Void { var l:Float = (32768)+(-0); }
	def m762():Void { var l:Float = (32768)+(1); }
	def m763():Void { var l:Float = (32768)+(-1); }
	def m764():Void { var l:Float = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m765():Void { var l:Float = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m766():Void { var l:Float = (32768)+(127); }
	def m767():Void { var l:Float = (32768)+(-127); }
	def m768():Void { var l:Float = (32768)+(128); }
	def m769():Void { var l:Float = (32768)+(-128); }
	def m770():Void { var l:Float = (32768)+(255); }
	def m771():Void { var l:Float = (32768)+(-255); }
	def m772():Void { var l:Float = (32768)+(256); }
	def m773():Void { var l:Float = (32768)+(-256); }
	def m774():Void { var l:Float = (32768)+(32767); }
	def m775():Void { var l:Float = (32768)+(-32767); }
	def m776():Void { var l:Float = (32768)+(32768); }
	def m777():Void { var l:Float = (32768)+(-32768); }
	def m778():Void { var l:Float = (32768)+(65535); }
	def m779():Void { var l:Float = (32768)+(-65535); }
	def m780():Void { var l:Float = (32768)+(65536); }
	def m781():Void { var l:Float = (32768)+(-65536); }
	def m782():Void { var l:Float = (32768)+(16777216); }
	def m783():Void { var l:Float = (32768)+(-16777216); }
	def m784():Void { var l:Float = (32768)+(16777217); }
	def m785():Void { var l:Float = (32768)+(-16777217); }
	def m786():Void { var l:Float = (32768)+(2147483647); }
	def m787():Void { var l:Float = (32768)+(-2147483647); }
	def m788():Void { var l:Float = (-32768)+(w0); }
	def m789():Void { var l:Float = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m790():Void { var l:Float = (-32768)+(w2); }
	def m791():Void { var l:Float = (-32768)+(w3); }
	def m792():Void { var l:Float = (-32768)+(w4); }
	def m793():Void { var l:Float = (-32768)+(w5); }
	def m794():Void { var l:Float = (-32768)+(0); }
	def m795():Void { var l:Float = (-32768)+(-0); }
	def m796():Void { var l:Float = (-32768)+(1); }
	def m797():Void { var l:Float = (-32768)+(-1); }
	def m798():Void { var l:Float = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m799():Void { var l:Float = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m800():Void { var l:Float = (-32768)+(127); }
	def m801():Void { var l:Float = (-32768)+(-127); }
	def m802():Void { var l:Float = (-32768)+(128); }
	def m803():Void { var l:Float = (-32768)+(-128); }
	def m804():Void { var l:Float = (-32768)+(255); }
	def m805():Void { var l:Float = (-32768)+(-255); }
	def m806():Void { var l:Float = (-32768)+(256); }
	def m807():Void { var l:Float = (-32768)+(-256); }
	def m808():Void { var l:Float = (-32768)+(32767); }
	def m809():Void { var l:Float = (-32768)+(-32767); }
	def m810():Void { var l:Float = (-32768)+(32768); }
	def m811():Void { var l:Float = (-32768)+(-32768); }
	def m812():Void { var l:Float = (-32768)+(65535); }
	def m813():Void { var l:Float = (-32768)+(-65535); }
	def m814():Void { var l:Float = (-32768)+(65536); }
	def m815():Void { var l:Float = (-32768)+(-65536); }
	def m816():Void { var l:Float = (-32768)+(16777216); }
	def m817():Void { var l:Float = (-32768)+(-16777216); }
	def m818():Void { var l:Float = (-32768)+(16777217); }
	def m819():Void { var l:Float = (-32768)+(-16777217); }
	def m820():Void { var l:Float = (-32768)+(2147483647); }
	def m821():Void { var l:Float = (-32768)+(-2147483647); }
	def m822():Void { var l:Float = (65535)+(w0); }
	def m823():Void { var l:Float = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m824():Void { var l:Float = (65535)+(w2); }
	def m825():Void { var l:Float = (65535)+(w3); }
	def m826():Void { var l:Float = (65535)+(w4); }
	def m827():Void { var l:Float = (65535)+(w5); }
	def m828():Void { var l:Float = (65535)+(0); }
	def m829():Void { var l:Float = (65535)+(-0); }
	def m830():Void { var l:Float = (65535)+(1); }
	def m831():Void { var l:Float = (65535)+(-1); }
	def m832():Void { var l:Float = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m833():Void { var l:Float = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m834():Void { var l:Float = (65535)+(127); }
	def m835():Void { var l:Float = (65535)+(-127); }
	def m836():Void { var l:Float = (65535)+(128); }
	def m837():Void { var l:Float = (65535)+(-128); }
	def m838():Void { var l:Float = (65535)+(255); }
	def m839():Void { var l:Float = (65535)+(-255); }
	def m840():Void { var l:Float = (65535)+(256); }
	def m841():Void { var l:Float = (65535)+(-256); }
	def m842():Void { var l:Float = (65535)+(32767); }
	def m843():Void { var l:Float = (65535)+(-32767); }
	def m844():Void { var l:Float = (65535)+(32768); }
	def m845():Void { var l:Float = (65535)+(-32768); }
	def m846():Void { var l:Float = (65535)+(65535); }
	def m847():Void { var l:Float = (65535)+(-65535); }
	def m848():Void { var l:Float = (65535)+(65536); }
	def m849():Void { var l:Float = (65535)+(-65536); }
	def m850():Void { var l:Float = (65535)+(16777216); }
	def m851():Void { var l:Float = (65535)+(-16777216); }
	def m852():Void { var l:Float = (65535)+(16777217); }
	def m853():Void { var l:Float = (65535)+(-16777217); }
	def m854():Void { var l:Float = (65535)+(2147483647); }
	def m855():Void { var l:Float = (65535)+(-2147483647); }
	def m856():Void { var l:Float = (-65535)+(w0); }
	def m857():Void { var l:Float = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m858():Void { var l:Float = (-65535)+(w2); }
	def m859():Void { var l:Float = (-65535)+(w3); }
	def m860():Void { var l:Float = (-65535)+(w4); }
	def m861():Void { var l:Float = (-65535)+(w5); }
	def m862():Void { var l:Float = (-65535)+(0); }
	def m863():Void { var l:Float = (-65535)+(-0); }
	def m864():Void { var l:Float = (-65535)+(1); }
	def m865():Void { var l:Float = (-65535)+(-1); }
	def m866():Void { var l:Float = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m867():Void { var l:Float = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m868():Void { var l:Float = (-65535)+(127); }
	def m869():Void { var l:Float = (-65535)+(-127); }
	def m870():Void { var l:Float = (-65535)+(128); }
	def m871():Void { var l:Float = (-65535)+(-128); }
	def m872():Void { var l:Float = (-65535)+(255); }
	def m873():Void { var l:Float = (-65535)+(-255); }
	def m874():Void { var l:Float = (-65535)+(256); }
	def m875():Void { var l:Float = (-65535)+(-256); }
	def m876():Void { var l:Float = (-65535)+(32767); }
	def m877():Void { var l:Float = (-65535)+(-32767); }
	def m878():Void { var l:Float = (-65535)+(32768); }
	def m879():Void { var l:Float = (-65535)+(-32768); }
	def m880():Void { var l:Float = (-65535)+(65535); }
	def m881():Void { var l:Float = (-65535)+(-65535); }
	def m882():Void { var l:Float = (-65535)+(65536); }
	def m883():Void { var l:Float = (-65535)+(-65536); }
	def m884():Void { var l:Float = (-65535)+(16777216); }
	def m885():Void { var l:Float = (-65535)+(-16777216); }
	def m886():Void { var l:Float = (-65535)+(16777217); }
	def m887():Void { var l:Float = (-65535)+(-16777217); }
	def m888():Void { var l:Float = (-65535)+(2147483647); }
	def m889():Void { var l:Float = (-65535)+(-2147483647); }
	def m890():Void { var l:Float = (65536)+(w0); }
	def m891():Void { var l:Float = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m892():Void { var l:Float = (65536)+(w2); }
	def m893():Void { var l:Float = (65536)+(w3); }
	def m894():Void { var l:Float = (65536)+(w4); }
	def m895():Void { var l:Float = (65536)+(w5); }
	def m896():Void { var l:Float = (65536)+(0); }
	def m897():Void { var l:Float = (65536)+(-0); }
	def m898():Void { var l:Float = (65536)+(1); }
	def m899():Void { var l:Float = (65536)+(-1); }
	def m900():Void { var l:Float = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m901():Void { var l:Float = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m902():Void { var l:Float = (65536)+(127); }
	def m903():Void { var l:Float = (65536)+(-127); }
	def m904():Void { var l:Float = (65536)+(128); }
	def m905():Void { var l:Float = (65536)+(-128); }
	def m906():Void { var l:Float = (65536)+(255); }
	def m907():Void { var l:Float = (65536)+(-255); }
	def m908():Void { var l:Float = (65536)+(256); }
	def m909():Void { var l:Float = (65536)+(-256); }
	def m910():Void { var l:Float = (65536)+(32767); }
	def m911():Void { var l:Float = (65536)+(-32767); }
	def m912():Void { var l:Float = (65536)+(32768); }
	def m913():Void { var l:Float = (65536)+(-32768); }
	def m914():Void { var l:Float = (65536)+(65535); }
	def m915():Void { var l:Float = (65536)+(-65535); }
	def m916():Void { var l:Float = (65536)+(65536); }
	def m917():Void { var l:Float = (65536)+(-65536); }
	def m918():Void { var l:Float = (65536)+(16777216); }
	def m919():Void { var l:Float = (65536)+(-16777216); }
	def m920():Void { var l:Float = (65536)+(16777217); }
	def m921():Void { var l:Float = (65536)+(-16777217); }
	def m922():Void { var l:Float = (65536)+(2147483647); }
	def m923():Void { var l:Float = (65536)+(-2147483647); }
	def m924():Void { var l:Float = (-65536)+(w0); }
	def m925():Void { var l:Float = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m926():Void { var l:Float = (-65536)+(w2); }
	def m927():Void { var l:Float = (-65536)+(w3); }
	def m928():Void { var l:Float = (-65536)+(w4); }
	def m929():Void { var l:Float = (-65536)+(w5); }
	def m930():Void { var l:Float = (-65536)+(0); }
	def m931():Void { var l:Float = (-65536)+(-0); }
	def m932():Void { var l:Float = (-65536)+(1); }
	def m933():Void { var l:Float = (-65536)+(-1); }
	def m934():Void { var l:Float = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m935():Void { var l:Float = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m936():Void { var l:Float = (-65536)+(127); }
	def m937():Void { var l:Float = (-65536)+(-127); }
	def m938():Void { var l:Float = (-65536)+(128); }
	def m939():Void { var l:Float = (-65536)+(-128); }
	def m940():Void { var l:Float = (-65536)+(255); }
	def m941():Void { var l:Float = (-65536)+(-255); }
	def m942():Void { var l:Float = (-65536)+(256); }
	def m943():Void { var l:Float = (-65536)+(-256); }
	def m944():Void { var l:Float = (-65536)+(32767); }
	def m945():Void { var l:Float = (-65536)+(-32767); }
	def m946():Void { var l:Float = (-65536)+(32768); }
	def m947():Void { var l:Float = (-65536)+(-32768); }
	def m948():Void { var l:Float = (-65536)+(65535); }
	def m949():Void { var l:Float = (-65536)+(-65535); }
	def m950():Void { var l:Float = (-65536)+(65536); }
	def m951():Void { var l:Float = (-65536)+(-65536); }
	def m952():Void { var l:Float = (-65536)+(16777216); }
	def m953():Void { var l:Float = (-65536)+(-16777216); }
	def m954():Void { var l:Float = (-65536)+(16777217); }
	def m955():Void { var l:Float = (-65536)+(-16777217); }
	def m956():Void { var l:Float = (-65536)+(2147483647); }
	def m957():Void { var l:Float = (-65536)+(-2147483647); }
	def m958():Void { var l:Float = (16777216)+(w0); }
	def m959():Void { var l:Float = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m960():Void { var l:Float = (16777216)+(w2); }
	def m961():Void { var l:Float = (16777216)+(w3); }
	def m962():Void { var l:Float = (16777216)+(w4); }
	def m963():Void { var l:Float = (16777216)+(w5); }
	def m964():Void { var l:Float = (16777216)+(0); }
	def m965():Void { var l:Float = (16777216)+(-0); }
	def m966():Void { var l:Float = (16777216)+(1); }
	def m967():Void { var l:Float = (16777216)+(-1); }
	def m968():Void { var l:Float = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m969():Void { var l:Float = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m970():Void { var l:Float = (16777216)+(127); }
	def m971():Void { var l:Float = (16777216)+(-127); }
	def m972():Void { var l:Float = (16777216)+(128); }
	def m973():Void { var l:Float = (16777216)+(-128); }
	def m974():Void { var l:Float = (16777216)+(255); }
	def m975():Void { var l:Float = (16777216)+(-255); }
	def m976():Void { var l:Float = (16777216)+(256); }
	def m977():Void { var l:Float = (16777216)+(-256); }
	def m978():Void { var l:Float = (16777216)+(32767); }
	def m979():Void { var l:Float = (16777216)+(-32767); }
	def m980():Void { var l:Float = (16777216)+(32768); }
	def m981():Void { var l:Float = (16777216)+(-32768); }
	def m982():Void { var l:Float = (16777216)+(65535); }
	def m983():Void { var l:Float = (16777216)+(-65535); }
	def m984():Void { var l:Float = (16777216)+(65536); }
	def m985():Void { var l:Float = (16777216)+(-65536); }
	def m986():Void { var l:Float = (16777216)+(16777216); }
	def m987():Void { var l:Float = (16777216)+(-16777216); }
	def m988():Void { var l:Float = (16777216)+(16777217); }
	def m989():Void { var l:Float = (16777216)+(-16777217); }
	def m990():Void { var l:Float = (16777216)+(2147483647); }
	def m991():Void { var l:Float = (16777216)+(-2147483647); }
	def m992():Void { var l:Float = (-16777216)+(w0); }
	def m993():Void { var l:Float = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m994():Void { var l:Float = (-16777216)+(w2); }
	def m995():Void { var l:Float = (-16777216)+(w3); }
	def m996():Void { var l:Float = (-16777216)+(w4); }
	def m997():Void { var l:Float = (-16777216)+(w5); }
	def m998():Void { var l:Float = (-16777216)+(0); }
	def m999():Void { var l:Float = (-16777216)+(-0); }
	def m1000():Void { var l:Float = (-16777216)+(1); }
	def m1001():Void { var l:Float = (-16777216)+(-1); }
	def m1002():Void { var l:Float = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1003():Void { var l:Float = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1004():Void { var l:Float = (-16777216)+(127); }
	def m1005():Void { var l:Float = (-16777216)+(-127); }
	def m1006():Void { var l:Float = (-16777216)+(128); }
	def m1007():Void { var l:Float = (-16777216)+(-128); }
	def m1008():Void { var l:Float = (-16777216)+(255); }
	def m1009():Void { var l:Float = (-16777216)+(-255); }
	def m1010():Void { var l:Float = (-16777216)+(256); }
	def m1011():Void { var l:Float = (-16777216)+(-256); }
	def m1012():Void { var l:Float = (-16777216)+(32767); }
	def m1013():Void { var l:Float = (-16777216)+(-32767); }
	def m1014():Void { var l:Float = (-16777216)+(32768); }
	def m1015():Void { var l:Float = (-16777216)+(-32768); }
	def m1016():Void { var l:Float = (-16777216)+(65535); }
	def m1017():Void { var l:Float = (-16777216)+(-65535); }
	def m1018():Void { var l:Float = (-16777216)+(65536); }
	def m1019():Void { var l:Float = (-16777216)+(-65536); }
	def m1020():Void { var l:Float = (-16777216)+(16777216); }
	def m1021():Void { var l:Float = (-16777216)+(-16777216); }
	def m1022():Void { var l:Float = (-16777216)+(16777217); }
	def m1023():Void { var l:Float = (-16777216)+(-16777217); }
	def m1024():Void { var l:Float = (-16777216)+(2147483647); }
	def m1025():Void { var l:Float = (-16777216)+(-2147483647); }
	def m1026():Void { var l:Float = (16777217)+(w0); }
	def m1027():Void { var l:Float = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1028():Void { var l:Float = (16777217)+(w2); }
	def m1029():Void { var l:Float = (16777217)+(w3); }
	def m1030():Void { var l:Float = (16777217)+(w4); }
	def m1031():Void { var l:Float = (16777217)+(w5); }
	def m1032():Void { var l:Float = (16777217)+(0); }
	def m1033():Void { var l:Float = (16777217)+(-0); }
	def m1034():Void { var l:Float = (16777217)+(1); }
	def m1035():Void { var l:Float = (16777217)+(-1); }
	def m1036():Void { var l:Float = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1037():Void { var l:Float = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1038():Void { var l:Float = (16777217)+(127); }
	def m1039():Void { var l:Float = (16777217)+(-127); }
	def m1040():Void { var l:Float = (16777217)+(128); }
	def m1041():Void { var l:Float = (16777217)+(-128); }
	def m1042():Void { var l:Float = (16777217)+(255); }
	def m1043():Void { var l:Float = (16777217)+(-255); }
	def m1044():Void { var l:Float = (16777217)+(256); }
	def m1045():Void { var l:Float = (16777217)+(-256); }
	def m1046():Void { var l:Float = (16777217)+(32767); }
	def m1047():Void { var l:Float = (16777217)+(-32767); }
	def m1048():Void { var l:Float = (16777217)+(32768); }
	def m1049():Void { var l:Float = (16777217)+(-32768); }
	def m1050():Void { var l:Float = (16777217)+(65535); }
	def m1051():Void { var l:Float = (16777217)+(-65535); }
	def m1052():Void { var l:Float = (16777217)+(65536); }
	def m1053():Void { var l:Float = (16777217)+(-65536); }
	def m1054():Void { var l:Float = (16777217)+(16777216); }
	def m1055():Void { var l:Float = (16777217)+(-16777216); }
	def m1056():Void { var l:Float = (16777217)+(16777217); }
	def m1057():Void { var l:Float = (16777217)+(-16777217); }
	def m1058():Void { var l:Float = (16777217)+(2147483647); }
	def m1059():Void { var l:Float = (16777217)+(-2147483647); }
	def m1060():Void { var l:Float = (-16777217)+(w0); }
	def m1061():Void { var l:Float = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1062():Void { var l:Float = (-16777217)+(w2); }
	def m1063():Void { var l:Float = (-16777217)+(w3); }
	def m1064():Void { var l:Float = (-16777217)+(w4); }
	def m1065():Void { var l:Float = (-16777217)+(w5); }
	def m1066():Void { var l:Float = (-16777217)+(0); }
	def m1067():Void { var l:Float = (-16777217)+(-0); }
	def m1068():Void { var l:Float = (-16777217)+(1); }
	def m1069():Void { var l:Float = (-16777217)+(-1); }
	def m1070():Void { var l:Float = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1071():Void { var l:Float = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1072():Void { var l:Float = (-16777217)+(127); }
	def m1073():Void { var l:Float = (-16777217)+(-127); }
	def m1074():Void { var l:Float = (-16777217)+(128); }
	def m1075():Void { var l:Float = (-16777217)+(-128); }
	def m1076():Void { var l:Float = (-16777217)+(255); }
	def m1077():Void { var l:Float = (-16777217)+(-255); }
	def m1078():Void { var l:Float = (-16777217)+(256); }
	def m1079():Void { var l:Float = (-16777217)+(-256); }
	def m1080():Void { var l:Float = (-16777217)+(32767); }
	def m1081():Void { var l:Float = (-16777217)+(-32767); }
	def m1082():Void { var l:Float = (-16777217)+(32768); }
	def m1083():Void { var l:Float = (-16777217)+(-32768); }
	def m1084():Void { var l:Float = (-16777217)+(65535); }
	def m1085():Void { var l:Float = (-16777217)+(-65535); }
	def m1086():Void { var l:Float = (-16777217)+(65536); }
	def m1087():Void { var l:Float = (-16777217)+(-65536); }
	def m1088():Void { var l:Float = (-16777217)+(16777216); }
	def m1089():Void { var l:Float = (-16777217)+(-16777216); }
	def m1090():Void { var l:Float = (-16777217)+(16777217); }
	def m1091():Void { var l:Float = (-16777217)+(-16777217); }
	def m1092():Void { var l:Float = (-16777217)+(2147483647); }
	def m1093():Void { var l:Float = (-16777217)+(-2147483647); }
	def m1094():Void { var l:Float = (2147483647)+(w0); }
	def m1095():Void { var l:Float = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1096():Void { var l:Float = (2147483647)+(w2); }
	def m1097():Void { var l:Float = (2147483647)+(w3); }
	def m1098():Void { var l:Float = (2147483647)+(w4); }
	def m1099():Void { var l:Float = (2147483647)+(w5); }
	def m1100():Void { var l:Float = (2147483647)+(0); }
	def m1101():Void { var l:Float = (2147483647)+(-0); }
	def m1102():Void { var l:Float = (2147483647)+(1); }
	def m1103():Void { var l:Float = (2147483647)+(-1); }
	def m1104():Void { var l:Float = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1105():Void { var l:Float = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1106():Void { var l:Float = (2147483647)+(127); }
	def m1107():Void { var l:Float = (2147483647)+(-127); }
	def m1108():Void { var l:Float = (2147483647)+(128); }
	def m1109():Void { var l:Float = (2147483647)+(-128); }
	def m1110():Void { var l:Float = (2147483647)+(255); }
	def m1111():Void { var l:Float = (2147483647)+(-255); }
	def m1112():Void { var l:Float = (2147483647)+(256); }
	def m1113():Void { var l:Float = (2147483647)+(-256); }
	def m1114():Void { var l:Float = (2147483647)+(32767); }
	def m1115():Void { var l:Float = (2147483647)+(-32767); }
	def m1116():Void { var l:Float = (2147483647)+(32768); }
	def m1117():Void { var l:Float = (2147483647)+(-32768); }
	def m1118():Void { var l:Float = (2147483647)+(65535); }
	def m1119():Void { var l:Float = (2147483647)+(-65535); }
	def m1120():Void { var l:Float = (2147483647)+(65536); }
	def m1121():Void { var l:Float = (2147483647)+(-65536); }
	def m1122():Void { var l:Float = (2147483647)+(16777216); }
	def m1123():Void { var l:Float = (2147483647)+(-16777216); }
	def m1124():Void { var l:Float = (2147483647)+(16777217); }
	def m1125():Void { var l:Float = (2147483647)+(-16777217); }
	def m1126():Void { var l:Float = (2147483647)+(2147483647); }
	def m1127():Void { var l:Float = (2147483647)+(-2147483647); }
	def m1128():Void { var l:Float = (-2147483647)+(w0); }
	def m1129():Void { var l:Float = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1130():Void { var l:Float = (-2147483647)+(w2); }
	def m1131():Void { var l:Float = (-2147483647)+(w3); }
	def m1132():Void { var l:Float = (-2147483647)+(w4); }
	def m1133():Void { var l:Float = (-2147483647)+(w5); }
	def m1134():Void { var l:Float = (-2147483647)+(0); }
	def m1135():Void { var l:Float = (-2147483647)+(-0); }
	def m1136():Void { var l:Float = (-2147483647)+(1); }
	def m1137():Void { var l:Float = (-2147483647)+(-1); }
	def m1138():Void { var l:Float = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1139():Void { var l:Float = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1140():Void { var l:Float = (-2147483647)+(127); }
	def m1141():Void { var l:Float = (-2147483647)+(-127); }
	def m1142():Void { var l:Float = (-2147483647)+(128); }
	def m1143():Void { var l:Float = (-2147483647)+(-128); }
	def m1144():Void { var l:Float = (-2147483647)+(255); }
	def m1145():Void { var l:Float = (-2147483647)+(-255); }
	def m1146():Void { var l:Float = (-2147483647)+(256); }
	def m1147():Void { var l:Float = (-2147483647)+(-256); }
	def m1148():Void { var l:Float = (-2147483647)+(32767); }
	def m1149():Void { var l:Float = (-2147483647)+(-32767); }
	def m1150():Void { var l:Float = (-2147483647)+(32768); }
	def m1151():Void { var l:Float = (-2147483647)+(-32768); }
	def m1152():Void { var l:Float = (-2147483647)+(65535); }
	def m1153():Void { var l:Float = (-2147483647)+(-65535); }
	def m1154():Void { var l:Float = (-2147483647)+(65536); }
	def m1155():Void { var l:Float = (-2147483647)+(-65536); }
	def m1156():Void { var l:Float = (-2147483647)+(16777216); }
	def m1157():Void { var l:Float = (-2147483647)+(-16777216); }
	def m1158():Void { var l:Float = (-2147483647)+(16777217); }
	def m1159():Void { var l:Float = (-2147483647)+(-16777217); }
	def m1160():Void { var l:Float = (-2147483647)+(2147483647); }
	def m1161():Void { var l:Float = (-2147483647)+(-2147483647); }
	def m1162():Void { var l:Double = (w0)+(w0); }
	def m1163():Void { var l:Double = (w0)+(w1); }
	def m1164():Void { var l:Double = (w0)+(w2); }
	def m1165():Void { var l:Double = (w0)+(w3); }
	def m1166():Void { var l:Double = (w0)+(w4); }
	def m1167():Void { var l:Double = (w0)+(w5); }
	def m1168():Void { var l:Double = (w0)+(0); }
	def m1169():Void { var l:Double = (w0)+(-0); }
	def m1170():Void { var l:Double = (w0)+(1); }
	def m1171():Void { var l:Double = (w0)+(-1); }
	def m1172():Void { var l:Double = (w0)+(2.2); }
	def m1173():Void { var l:Double = (w0)+(-2.2); }
	def m1174():Void { var l:Double = (w0)+(127); }
	def m1175():Void { var l:Double = (w0)+(-127); }
	def m1176():Void { var l:Double = (w0)+(128); }
	def m1177():Void { var l:Double = (w0)+(-128); }
	def m1178():Void { var l:Double = (w0)+(255); }
	def m1179():Void { var l:Double = (w0)+(-255); }
	def m1180():Void { var l:Double = (w0)+(256); }
	def m1181():Void { var l:Double = (w0)+(-256); }
	def m1182():Void { var l:Double = (w0)+(32767); }
	def m1183():Void { var l:Double = (w0)+(-32767); }
	def m1184():Void { var l:Double = (w0)+(32768); }
	def m1185():Void { var l:Double = (w0)+(-32768); }
	def m1186():Void { var l:Double = (w0)+(65535); }
	def m1187():Void { var l:Double = (w0)+(-65535); }
	def m1188():Void { var l:Double = (w0)+(65536); }
	def m1189():Void { var l:Double = (w0)+(-65536); }
	def m1190():Void { var l:Double = (w0)+(16777216); }
	def m1191():Void { var l:Double = (w0)+(-16777216); }
	def m1192():Void { var l:Double = (w0)+(16777217); }
	def m1193():Void { var l:Double = (w0)+(-16777217); }
	def m1194():Void { var l:Double = (w0)+(2147483647); }
	def m1195():Void { var l:Double = (w0)+(-2147483647); }
	def m1196():Void { var l:Double = (w1)+(w0); }
	def m1197():Void { var l:Double = (w1)+(w1); }
	def m1198():Void { var l:Double = (w1)+(w2); }
	def m1199():Void { var l:Double = (w1)+(w3); }
	def m1200():Void { var l:Double = (w1)+(w4); }
	def m1201():Void { var l:Double = (w1)+(w5); }
	def m1202():Void { var l:Double = (w1)+(0); }
	def m1203():Void { var l:Double = (w1)+(-0); }
	def m1204():Void { var l:Double = (w1)+(1); }
	def m1205():Void { var l:Double = (w1)+(-1); }
	def m1206():Void { var l:Double = (w1)+(2.2); }
	def m1207():Void { var l:Double = (w1)+(-2.2); }
	def m1208():Void { var l:Double = (w1)+(127); }
	def m1209():Void { var l:Double = (w1)+(-127); }
	def m1210():Void { var l:Double = (w1)+(128); }
	def m1211():Void { var l:Double = (w1)+(-128); }
	def m1212():Void { var l:Double = (w1)+(255); }
	def m1213():Void { var l:Double = (w1)+(-255); }
	def m1214():Void { var l:Double = (w1)+(256); }
	def m1215():Void { var l:Double = (w1)+(-256); }
	def m1216():Void { var l:Double = (w1)+(32767); }
	def m1217():Void { var l:Double = (w1)+(-32767); }
	def m1218():Void { var l:Double = (w1)+(32768); }
	def m1219():Void { var l:Double = (w1)+(-32768); }
	def m1220():Void { var l:Double = (w1)+(65535); }
	def m1221():Void { var l:Double = (w1)+(-65535); }
	def m1222():Void { var l:Double = (w1)+(65536); }
	def m1223():Void { var l:Double = (w1)+(-65536); }
	def m1224():Void { var l:Double = (w1)+(16777216); }
	def m1225():Void { var l:Double = (w1)+(-16777216); }
	def m1226():Void { var l:Double = (w1)+(16777217); }
	def m1227():Void { var l:Double = (w1)+(-16777217); }
	def m1228():Void { var l:Double = (w1)+(2147483647); }
	def m1229():Void { var l:Double = (w1)+(-2147483647); }
	def m1230():Void { var l:Double = (w2)+(w0); }
	def m1231():Void { var l:Double = (w2)+(w1); }
	def m1232():Void { var l:Double = (w2)+(w2); }
	def m1233():Void { var l:Double = (w2)+(w3); }
	def m1234():Void { var l:Double = (w2)+(w4); }
	def m1235():Void { var l:Double = (w2)+(w5); }
	def m1236():Void { var l:Double = (w2)+(0); }
	def m1237():Void { var l:Double = (w2)+(-0); }
	def m1238():Void { var l:Double = (w2)+(1); }
	def m1239():Void { var l:Double = (w2)+(-1); }
	def m1240():Void { var l:Double = (w2)+(2.2); }
	def m1241():Void { var l:Double = (w2)+(-2.2); }
	def m1242():Void { var l:Double = (w2)+(127); }
	def m1243():Void { var l:Double = (w2)+(-127); }
	def m1244():Void { var l:Double = (w2)+(128); }
	def m1245():Void { var l:Double = (w2)+(-128); }
	def m1246():Void { var l:Double = (w2)+(255); }
	def m1247():Void { var l:Double = (w2)+(-255); }
	def m1248():Void { var l:Double = (w2)+(256); }
	def m1249():Void { var l:Double = (w2)+(-256); }
	def m1250():Void { var l:Double = (w2)+(32767); }
	def m1251():Void { var l:Double = (w2)+(-32767); }
	def m1252():Void { var l:Double = (w2)+(32768); }
	def m1253():Void { var l:Double = (w2)+(-32768); }
	def m1254():Void { var l:Double = (w2)+(65535); }
	def m1255():Void { var l:Double = (w2)+(-65535); }
	def m1256():Void { var l:Double = (w2)+(65536); }
	def m1257():Void { var l:Double = (w2)+(-65536); }
	def m1258():Void { var l:Double = (w2)+(16777216); }
	def m1259():Void { var l:Double = (w2)+(-16777216); }
	def m1260():Void { var l:Double = (w2)+(16777217); }
	def m1261():Void { var l:Double = (w2)+(-16777217); }
	def m1262():Void { var l:Double = (w2)+(2147483647); }
	def m1263():Void { var l:Double = (w2)+(-2147483647); }
	def m1264():Void { var l:Double = (w3)+(w0); }
	def m1265():Void { var l:Double = (w3)+(w1); }
	def m1266():Void { var l:Double = (w3)+(w2); }
	def m1267():Void { var l:Double = (w3)+(w3); }
	def m1268():Void { var l:Double = (w3)+(w4); }
	def m1269():Void { var l:Double = (w3)+(w5); }
	def m1270():Void { var l:Double = (w3)+(0); }
	def m1271():Void { var l:Double = (w3)+(-0); }
	def m1272():Void { var l:Double = (w3)+(1); }
	def m1273():Void { var l:Double = (w3)+(-1); }
	def m1274():Void { var l:Double = (w3)+(2.2); }
	def m1275():Void { var l:Double = (w3)+(-2.2); }
	def m1276():Void { var l:Double = (w3)+(127); }
	def m1277():Void { var l:Double = (w3)+(-127); }
	def m1278():Void { var l:Double = (w3)+(128); }
	def m1279():Void { var l:Double = (w3)+(-128); }
	def m1280():Void { var l:Double = (w3)+(255); }
	def m1281():Void { var l:Double = (w3)+(-255); }
	def m1282():Void { var l:Double = (w3)+(256); }
	def m1283():Void { var l:Double = (w3)+(-256); }
	def m1284():Void { var l:Double = (w3)+(32767); }
	def m1285():Void { var l:Double = (w3)+(-32767); }
	def m1286():Void { var l:Double = (w3)+(32768); }
	def m1287():Void { var l:Double = (w3)+(-32768); }
	def m1288():Void { var l:Double = (w3)+(65535); }
	def m1289():Void { var l:Double = (w3)+(-65535); }
	def m1290():Void { var l:Double = (w3)+(65536); }
	def m1291():Void { var l:Double = (w3)+(-65536); }
	def m1292():Void { var l:Double = (w3)+(16777216); }
	def m1293():Void { var l:Double = (w3)+(-16777216); }
	def m1294():Void { var l:Double = (w3)+(16777217); }
	def m1295():Void { var l:Double = (w3)+(-16777217); }
	def m1296():Void { var l:Double = (w3)+(2147483647); }
	def m1297():Void { var l:Double = (w3)+(-2147483647); }
	def m1298():Void { var l:Double = (w4)+(w0); }
	def m1299():Void { var l:Double = (w4)+(w1); }
	def m1300():Void { var l:Double = (w4)+(w2); }
	def m1301():Void { var l:Double = (w4)+(w3); }
	def m1302():Void { var l:Double = (w4)+(w4); }
	def m1303():Void { var l:Double = (w4)+(w5); }
	def m1304():Void { var l:Double = (w4)+(0); }
	def m1305():Void { var l:Double = (w4)+(-0); }
	def m1306():Void { var l:Double = (w4)+(1); }
	def m1307():Void { var l:Double = (w4)+(-1); }
	def m1308():Void { var l:Double = (w4)+(2.2); }
	def m1309():Void { var l:Double = (w4)+(-2.2); }
	def m1310():Void { var l:Double = (w4)+(127); }
	def m1311():Void { var l:Double = (w4)+(-127); }
	def m1312():Void { var l:Double = (w4)+(128); }
	def m1313():Void { var l:Double = (w4)+(-128); }
	def m1314():Void { var l:Double = (w4)+(255); }
	def m1315():Void { var l:Double = (w4)+(-255); }
	def m1316():Void { var l:Double = (w4)+(256); }
	def m1317():Void { var l:Double = (w4)+(-256); }
	def m1318():Void { var l:Double = (w4)+(32767); }
	def m1319():Void { var l:Double = (w4)+(-32767); }
	def m1320():Void { var l:Double = (w4)+(32768); }
	def m1321():Void { var l:Double = (w4)+(-32768); }
	def m1322():Void { var l:Double = (w4)+(65535); }
	def m1323():Void { var l:Double = (w4)+(-65535); }
	def m1324():Void { var l:Double = (w4)+(65536); }
	def m1325():Void { var l:Double = (w4)+(-65536); }
	def m1326():Void { var l:Double = (w4)+(16777216); }
	def m1327():Void { var l:Double = (w4)+(-16777216); }
	def m1328():Void { var l:Double = (w4)+(16777217); }
	def m1329():Void { var l:Double = (w4)+(-16777217); }
	def m1330():Void { var l:Double = (w4)+(2147483647); }
	def m1331():Void { var l:Double = (w4)+(-2147483647); }
	def m1332():Void { var l:Double = (w5)+(w0); }
	def m1333():Void { var l:Double = (w5)+(w1); }
	def m1334():Void { var l:Double = (w5)+(w2); }
	def m1335():Void { var l:Double = (w5)+(w3); }
	def m1336():Void { var l:Double = (w5)+(w4); }
	def m1337():Void { var l:Double = (w5)+(w5); }
	def m1338():Void { var l:Double = (w5)+(0); }
	def m1339():Void { var l:Double = (w5)+(-0); }
	def m1340():Void { var l:Double = (w5)+(1); }
	def m1341():Void { var l:Double = (w5)+(-1); }
	def m1342():Void { var l:Double = (w5)+(2.2); }
	def m1343():Void { var l:Double = (w5)+(-2.2); }
	def m1344():Void { var l:Double = (w5)+(127); }
	def m1345():Void { var l:Double = (w5)+(-127); }
	def m1346():Void { var l:Double = (w5)+(128); }
	def m1347():Void { var l:Double = (w5)+(-128); }
	def m1348():Void { var l:Double = (w5)+(255); }
	def m1349():Void { var l:Double = (w5)+(-255); }
	def m1350():Void { var l:Double = (w5)+(256); }
	def m1351():Void { var l:Double = (w5)+(-256); }
	def m1352():Void { var l:Double = (w5)+(32767); }
	def m1353():Void { var l:Double = (w5)+(-32767); }
	def m1354():Void { var l:Double = (w5)+(32768); }
	def m1355():Void { var l:Double = (w5)+(-32768); }
	def m1356():Void { var l:Double = (w5)+(65535); }
	def m1357():Void { var l:Double = (w5)+(-65535); }
	def m1358():Void { var l:Double = (w5)+(65536); }
	def m1359():Void { var l:Double = (w5)+(-65536); }
	def m1360():Void { var l:Double = (w5)+(16777216); }
	def m1361():Void { var l:Double = (w5)+(-16777216); }
	def m1362():Void { var l:Double = (w5)+(16777217); }
	def m1363():Void { var l:Double = (w5)+(-16777217); }
	def m1364():Void { var l:Double = (w5)+(2147483647); }
	def m1365():Void { var l:Double = (w5)+(-2147483647); }
	def m1366():Void { var l:Double = (0)+(w0); }
	def m1367():Void { var l:Double = (0)+(w1); }
	def m1368():Void { var l:Double = (0)+(w2); }
	def m1369():Void { var l:Double = (0)+(w3); }
	def m1370():Void { var l:Double = (0)+(w4); }
	def m1371():Void { var l:Double = (0)+(w5); }
	def m1372():Void { var l:Double = (0)+(0); }
	def m1373():Void { var l:Double = (0)+(-0); }
	def m1374():Void { var l:Double = (0)+(1); }
	def m1375():Void { var l:Double = (0)+(-1); }
	def m1376():Void { var l:Double = (0)+(2.2); }
	def m1377():Void { var l:Double = (0)+(-2.2); }
	def m1378():Void { var l:Double = (0)+(127); }
	def m1379():Void { var l:Double = (0)+(-127); }
	def m1380():Void { var l:Double = (0)+(128); }
	def m1381():Void { var l:Double = (0)+(-128); }
	def m1382():Void { var l:Double = (0)+(255); }
	def m1383():Void { var l:Double = (0)+(-255); }
	def m1384():Void { var l:Double = (0)+(256); }
	def m1385():Void { var l:Double = (0)+(-256); }
	def m1386():Void { var l:Double = (0)+(32767); }
	def m1387():Void { var l:Double = (0)+(-32767); }
	def m1388():Void { var l:Double = (0)+(32768); }
	def m1389():Void { var l:Double = (0)+(-32768); }
	def m1390():Void { var l:Double = (0)+(65535); }
	def m1391():Void { var l:Double = (0)+(-65535); }
	def m1392():Void { var l:Double = (0)+(65536); }
	def m1393():Void { var l:Double = (0)+(-65536); }
	def m1394():Void { var l:Double = (0)+(16777216); }
	def m1395():Void { var l:Double = (0)+(-16777216); }
	def m1396():Void { var l:Double = (0)+(16777217); }
	def m1397():Void { var l:Double = (0)+(-16777217); }
	def m1398():Void { var l:Double = (0)+(2147483647); }
	def m1399():Void { var l:Double = (0)+(-2147483647); }
	def m1400():Void { var l:Double = (-0)+(w0); }
	def m1401():Void { var l:Double = (-0)+(w1); }
	def m1402():Void { var l:Double = (-0)+(w2); }
	def m1403():Void { var l:Double = (-0)+(w3); }
	def m1404():Void { var l:Double = (-0)+(w4); }
	def m1405():Void { var l:Double = (-0)+(w5); }
	def m1406():Void { var l:Double = (-0)+(0); }
	def m1407():Void { var l:Double = (-0)+(-0); }
	def m1408():Void { var l:Double = (-0)+(1); }
	def m1409():Void { var l:Double = (-0)+(-1); }
	def m1410():Void { var l:Double = (-0)+(2.2); }
	def m1411():Void { var l:Double = (-0)+(-2.2); }
	def m1412():Void { var l:Double = (-0)+(127); }
	def m1413():Void { var l:Double = (-0)+(-127); }
	def m1414():Void { var l:Double = (-0)+(128); }
	def m1415():Void { var l:Double = (-0)+(-128); }
	def m1416():Void { var l:Double = (-0)+(255); }
	def m1417():Void { var l:Double = (-0)+(-255); }
	def m1418():Void { var l:Double = (-0)+(256); }
	def m1419():Void { var l:Double = (-0)+(-256); }
	def m1420():Void { var l:Double = (-0)+(32767); }
	def m1421():Void { var l:Double = (-0)+(-32767); }
	def m1422():Void { var l:Double = (-0)+(32768); }
	def m1423():Void { var l:Double = (-0)+(-32768); }
	def m1424():Void { var l:Double = (-0)+(65535); }
	def m1425():Void { var l:Double = (-0)+(-65535); }
	def m1426():Void { var l:Double = (-0)+(65536); }
	def m1427():Void { var l:Double = (-0)+(-65536); }
	def m1428():Void { var l:Double = (-0)+(16777216); }
	def m1429():Void { var l:Double = (-0)+(-16777216); }
	def m1430():Void { var l:Double = (-0)+(16777217); }
	def m1431():Void { var l:Double = (-0)+(-16777217); }
	def m1432():Void { var l:Double = (-0)+(2147483647); }
	def m1433():Void { var l:Double = (-0)+(-2147483647); }
	def m1434():Void { var l:Double = (1)+(w0); }
	def m1435():Void { var l:Double = (1)+(w1); }
	def m1436():Void { var l:Double = (1)+(w2); }
	def m1437():Void { var l:Double = (1)+(w3); }
	def m1438():Void { var l:Double = (1)+(w4); }
	def m1439():Void { var l:Double = (1)+(w5); }
	def m1440():Void { var l:Double = (1)+(0); }
	def m1441():Void { var l:Double = (1)+(-0); }
	def m1442():Void { var l:Double = (1)+(1); }
	def m1443():Void { var l:Double = (1)+(-1); }
	def m1444():Void { var l:Double = (1)+(2.2); }
	def m1445():Void { var l:Double = (1)+(-2.2); }
	def m1446():Void { var l:Double = (1)+(127); }
	def m1447():Void { var l:Double = (1)+(-127); }
	def m1448():Void { var l:Double = (1)+(128); }
	def m1449():Void { var l:Double = (1)+(-128); }
	def m1450():Void { var l:Double = (1)+(255); }
	def m1451():Void { var l:Double = (1)+(-255); }
	def m1452():Void { var l:Double = (1)+(256); }
	def m1453():Void { var l:Double = (1)+(-256); }
	def m1454():Void { var l:Double = (1)+(32767); }
	def m1455():Void { var l:Double = (1)+(-32767); }
	def m1456():Void { var l:Double = (1)+(32768); }
	def m1457():Void { var l:Double = (1)+(-32768); }
	def m1458():Void { var l:Double = (1)+(65535); }
	def m1459():Void { var l:Double = (1)+(-65535); }
	def m1460():Void { var l:Double = (1)+(65536); }
	def m1461():Void { var l:Double = (1)+(-65536); }
	def m1462():Void { var l:Double = (1)+(16777216); }
	def m1463():Void { var l:Double = (1)+(-16777216); }
	def m1464():Void { var l:Double = (1)+(16777217); }
	def m1465():Void { var l:Double = (1)+(-16777217); }
	def m1466():Void { var l:Double = (1)+(2147483647); }
	def m1467():Void { var l:Double = (1)+(-2147483647); }
	def m1468():Void { var l:Double = (-1)+(w0); }
	def m1469():Void { var l:Double = (-1)+(w1); }
	def m1470():Void { var l:Double = (-1)+(w2); }
	def m1471():Void { var l:Double = (-1)+(w3); }
	def m1472():Void { var l:Double = (-1)+(w4); }
	def m1473():Void { var l:Double = (-1)+(w5); }
	def m1474():Void { var l:Double = (-1)+(0); }
	def m1475():Void { var l:Double = (-1)+(-0); }
	def m1476():Void { var l:Double = (-1)+(1); }
	def m1477():Void { var l:Double = (-1)+(-1); }
	def m1478():Void { var l:Double = (-1)+(2.2); }
	def m1479():Void { var l:Double = (-1)+(-2.2); }
	def m1480():Void { var l:Double = (-1)+(127); }
	def m1481():Void { var l:Double = (-1)+(-127); }
	def m1482():Void { var l:Double = (-1)+(128); }
	def m1483():Void { var l:Double = (-1)+(-128); }
	def m1484():Void { var l:Double = (-1)+(255); }
	def m1485():Void { var l:Double = (-1)+(-255); }
	def m1486():Void { var l:Double = (-1)+(256); }
	def m1487():Void { var l:Double = (-1)+(-256); }
	def m1488():Void { var l:Double = (-1)+(32767); }
	def m1489():Void { var l:Double = (-1)+(-32767); }
	def m1490():Void { var l:Double = (-1)+(32768); }
	def m1491():Void { var l:Double = (-1)+(-32768); }
	def m1492():Void { var l:Double = (-1)+(65535); }
	def m1493():Void { var l:Double = (-1)+(-65535); }
	def m1494():Void { var l:Double = (-1)+(65536); }
	def m1495():Void { var l:Double = (-1)+(-65536); }
	def m1496():Void { var l:Double = (-1)+(16777216); }
	def m1497():Void { var l:Double = (-1)+(-16777216); }
	def m1498():Void { var l:Double = (-1)+(16777217); }
	def m1499():Void { var l:Double = (-1)+(-16777217); }
	def m1500():Void { var l:Double = (-1)+(2147483647); }
	def m1501():Void { var l:Double = (-1)+(-2147483647); }
	def m1502():Void { var l:Double = (2.2)+(w0); }
	def m1503():Void { var l:Double = (2.2)+(w1); }
	def m1504():Void { var l:Double = (2.2)+(w2); }
	def m1505():Void { var l:Double = (2.2)+(w3); }
	def m1506():Void { var l:Double = (2.2)+(w4); }
	def m1507():Void { var l:Double = (2.2)+(w5); }
	def m1508():Void { var l:Double = (2.2)+(0); }
	def m1509():Void { var l:Double = (2.2)+(-0); }
	def m1510():Void { var l:Double = (2.2)+(1); }
	def m1511():Void { var l:Double = (2.2)+(-1); }
	def m1512():Void { var l:Double = (2.2)+(2.2); }
	def m1513():Void { var l:Double = (2.2)+(-2.2); }
	def m1514():Void { var l:Double = (2.2)+(127); }
	def m1515():Void { var l:Double = (2.2)+(-127); }
	def m1516():Void { var l:Double = (2.2)+(128); }
	def m1517():Void { var l:Double = (2.2)+(-128); }
	def m1518():Void { var l:Double = (2.2)+(255); }
	def m1519():Void { var l:Double = (2.2)+(-255); }
	def m1520():Void { var l:Double = (2.2)+(256); }
	def m1521():Void { var l:Double = (2.2)+(-256); }
	def m1522():Void { var l:Double = (2.2)+(32767); }
	def m1523():Void { var l:Double = (2.2)+(-32767); }
	def m1524():Void { var l:Double = (2.2)+(32768); }
	def m1525():Void { var l:Double = (2.2)+(-32768); }
	def m1526():Void { var l:Double = (2.2)+(65535); }
	def m1527():Void { var l:Double = (2.2)+(-65535); }
	def m1528():Void { var l:Double = (2.2)+(65536); }
	def m1529():Void { var l:Double = (2.2)+(-65536); }
	def m1530():Void { var l:Double = (2.2)+(16777216); }
	def m1531():Void { var l:Double = (2.2)+(-16777216); }
	def m1532():Void { var l:Double = (2.2)+(16777217); }
	def m1533():Void { var l:Double = (2.2)+(-16777217); }
	def m1534():Void { var l:Double = (2.2)+(2147483647); }
	def m1535():Void { var l:Double = (2.2)+(-2147483647); }
	def m1536():Void { var l:Double = (-2.2)+(w0); }
	def m1537():Void { var l:Double = (-2.2)+(w1); }
	def m1538():Void { var l:Double = (-2.2)+(w2); }
	def m1539():Void { var l:Double = (-2.2)+(w3); }
	def m1540():Void { var l:Double = (-2.2)+(w4); }
	def m1541():Void { var l:Double = (-2.2)+(w5); }
	def m1542():Void { var l:Double = (-2.2)+(0); }
	def m1543():Void { var l:Double = (-2.2)+(-0); }
	def m1544():Void { var l:Double = (-2.2)+(1); }
	def m1545():Void { var l:Double = (-2.2)+(-1); }
	def m1546():Void { var l:Double = (-2.2)+(2.2); }
	def m1547():Void { var l:Double = (-2.2)+(-2.2); }
	def m1548():Void { var l:Double = (-2.2)+(127); }
	def m1549():Void { var l:Double = (-2.2)+(-127); }
	def m1550():Void { var l:Double = (-2.2)+(128); }
	def m1551():Void { var l:Double = (-2.2)+(-128); }
	def m1552():Void { var l:Double = (-2.2)+(255); }
	def m1553():Void { var l:Double = (-2.2)+(-255); }
	def m1554():Void { var l:Double = (-2.2)+(256); }
	def m1555():Void { var l:Double = (-2.2)+(-256); }
	def m1556():Void { var l:Double = (-2.2)+(32767); }
	def m1557():Void { var l:Double = (-2.2)+(-32767); }
	def m1558():Void { var l:Double = (-2.2)+(32768); }
	def m1559():Void { var l:Double = (-2.2)+(-32768); }
	def m1560():Void { var l:Double = (-2.2)+(65535); }
	def m1561():Void { var l:Double = (-2.2)+(-65535); }
	def m1562():Void { var l:Double = (-2.2)+(65536); }
	def m1563():Void { var l:Double = (-2.2)+(-65536); }
	def m1564():Void { var l:Double = (-2.2)+(16777216); }
	def m1565():Void { var l:Double = (-2.2)+(-16777216); }
	def m1566():Void { var l:Double = (-2.2)+(16777217); }
	def m1567():Void { var l:Double = (-2.2)+(-16777217); }
	def m1568():Void { var l:Double = (-2.2)+(2147483647); }
	def m1569():Void { var l:Double = (-2.2)+(-2147483647); }
	def m1570():Void { var l:Double = (127)+(w0); }
	def m1571():Void { var l:Double = (127)+(w1); }
	def m1572():Void { var l:Double = (127)+(w2); }
	def m1573():Void { var l:Double = (127)+(w3); }
	def m1574():Void { var l:Double = (127)+(w4); }
	def m1575():Void { var l:Double = (127)+(w5); }
	def m1576():Void { var l:Double = (127)+(0); }
	def m1577():Void { var l:Double = (127)+(-0); }
	def m1578():Void { var l:Double = (127)+(1); }
	def m1579():Void { var l:Double = (127)+(-1); }
	def m1580():Void { var l:Double = (127)+(2.2); }
	def m1581():Void { var l:Double = (127)+(-2.2); }
	def m1582():Void { var l:Double = (127)+(127); }
	def m1583():Void { var l:Double = (127)+(-127); }
	def m1584():Void { var l:Double = (127)+(128); }
	def m1585():Void { var l:Double = (127)+(-128); }
	def m1586():Void { var l:Double = (127)+(255); }
	def m1587():Void { var l:Double = (127)+(-255); }
	def m1588():Void { var l:Double = (127)+(256); }
	def m1589():Void { var l:Double = (127)+(-256); }
	def m1590():Void { var l:Double = (127)+(32767); }
	def m1591():Void { var l:Double = (127)+(-32767); }
	def m1592():Void { var l:Double = (127)+(32768); }
	def m1593():Void { var l:Double = (127)+(-32768); }
	def m1594():Void { var l:Double = (127)+(65535); }
	def m1595():Void { var l:Double = (127)+(-65535); }
	def m1596():Void { var l:Double = (127)+(65536); }
	def m1597():Void { var l:Double = (127)+(-65536); }
	def m1598():Void { var l:Double = (127)+(16777216); }
	def m1599():Void { var l:Double = (127)+(-16777216); }
	def m1600():Void { var l:Double = (127)+(16777217); }
	def m1601():Void { var l:Double = (127)+(-16777217); }
	def m1602():Void { var l:Double = (127)+(2147483647); }
	def m1603():Void { var l:Double = (127)+(-2147483647); }
	def m1604():Void { var l:Double = (-127)+(w0); }
	def m1605():Void { var l:Double = (-127)+(w1); }
	def m1606():Void { var l:Double = (-127)+(w2); }
	def m1607():Void { var l:Double = (-127)+(w3); }
	def m1608():Void { var l:Double = (-127)+(w4); }
	def m1609():Void { var l:Double = (-127)+(w5); }
	def m1610():Void { var l:Double = (-127)+(0); }
	def m1611():Void { var l:Double = (-127)+(-0); }
	def m1612():Void { var l:Double = (-127)+(1); }
	def m1613():Void { var l:Double = (-127)+(-1); }
	def m1614():Void { var l:Double = (-127)+(2.2); }
	def m1615():Void { var l:Double = (-127)+(-2.2); }
	def m1616():Void { var l:Double = (-127)+(127); }
	def m1617():Void { var l:Double = (-127)+(-127); }
	def m1618():Void { var l:Double = (-127)+(128); }
	def m1619():Void { var l:Double = (-127)+(-128); }
	def m1620():Void { var l:Double = (-127)+(255); }
	def m1621():Void { var l:Double = (-127)+(-255); }
	def m1622():Void { var l:Double = (-127)+(256); }
	def m1623():Void { var l:Double = (-127)+(-256); }
	def m1624():Void { var l:Double = (-127)+(32767); }
	def m1625():Void { var l:Double = (-127)+(-32767); }
	def m1626():Void { var l:Double = (-127)+(32768); }
	def m1627():Void { var l:Double = (-127)+(-32768); }
	def m1628():Void { var l:Double = (-127)+(65535); }
	def m1629():Void { var l:Double = (-127)+(-65535); }
	def m1630():Void { var l:Double = (-127)+(65536); }
	def m1631():Void { var l:Double = (-127)+(-65536); }
	def m1632():Void { var l:Double = (-127)+(16777216); }
	def m1633():Void { var l:Double = (-127)+(-16777216); }
	def m1634():Void { var l:Double = (-127)+(16777217); }
	def m1635():Void { var l:Double = (-127)+(-16777217); }
	def m1636():Void { var l:Double = (-127)+(2147483647); }
	def m1637():Void { var l:Double = (-127)+(-2147483647); }
	def m1638():Void { var l:Double = (128)+(w0); }
	def m1639():Void { var l:Double = (128)+(w1); }
	def m1640():Void { var l:Double = (128)+(w2); }
	def m1641():Void { var l:Double = (128)+(w3); }
	def m1642():Void { var l:Double = (128)+(w4); }
	def m1643():Void { var l:Double = (128)+(w5); }
	def m1644():Void { var l:Double = (128)+(0); }
	def m1645():Void { var l:Double = (128)+(-0); }
	def m1646():Void { var l:Double = (128)+(1); }
	def m1647():Void { var l:Double = (128)+(-1); }
	def m1648():Void { var l:Double = (128)+(2.2); }
	def m1649():Void { var l:Double = (128)+(-2.2); }
	def m1650():Void { var l:Double = (128)+(127); }
	def m1651():Void { var l:Double = (128)+(-127); }
	def m1652():Void { var l:Double = (128)+(128); }
	def m1653():Void { var l:Double = (128)+(-128); }
	def m1654():Void { var l:Double = (128)+(255); }
	def m1655():Void { var l:Double = (128)+(-255); }
	def m1656():Void { var l:Double = (128)+(256); }
	def m1657():Void { var l:Double = (128)+(-256); }
	def m1658():Void { var l:Double = (128)+(32767); }
	def m1659():Void { var l:Double = (128)+(-32767); }
	def m1660():Void { var l:Double = (128)+(32768); }
	def m1661():Void { var l:Double = (128)+(-32768); }
	def m1662():Void { var l:Double = (128)+(65535); }
	def m1663():Void { var l:Double = (128)+(-65535); }
	def m1664():Void { var l:Double = (128)+(65536); }
	def m1665():Void { var l:Double = (128)+(-65536); }
	def m1666():Void { var l:Double = (128)+(16777216); }
	def m1667():Void { var l:Double = (128)+(-16777216); }
	def m1668():Void { var l:Double = (128)+(16777217); }
	def m1669():Void { var l:Double = (128)+(-16777217); }
	def m1670():Void { var l:Double = (128)+(2147483647); }
	def m1671():Void { var l:Double = (128)+(-2147483647); }
	def m1672():Void { var l:Double = (-128)+(w0); }
	def m1673():Void { var l:Double = (-128)+(w1); }
	def m1674():Void { var l:Double = (-128)+(w2); }
	def m1675():Void { var l:Double = (-128)+(w3); }
	def m1676():Void { var l:Double = (-128)+(w4); }
	def m1677():Void { var l:Double = (-128)+(w5); }
	def m1678():Void { var l:Double = (-128)+(0); }
	def m1679():Void { var l:Double = (-128)+(-0); }
	def m1680():Void { var l:Double = (-128)+(1); }
	def m1681():Void { var l:Double = (-128)+(-1); }
	def m1682():Void { var l:Double = (-128)+(2.2); }
	def m1683():Void { var l:Double = (-128)+(-2.2); }
	def m1684():Void { var l:Double = (-128)+(127); }
	def m1685():Void { var l:Double = (-128)+(-127); }
	def m1686():Void { var l:Double = (-128)+(128); }
	def m1687():Void { var l:Double = (-128)+(-128); }
	def m1688():Void { var l:Double = (-128)+(255); }
	def m1689():Void { var l:Double = (-128)+(-255); }
	def m1690():Void { var l:Double = (-128)+(256); }
	def m1691():Void { var l:Double = (-128)+(-256); }
	def m1692():Void { var l:Double = (-128)+(32767); }
	def m1693():Void { var l:Double = (-128)+(-32767); }
	def m1694():Void { var l:Double = (-128)+(32768); }
	def m1695():Void { var l:Double = (-128)+(-32768); }
	def m1696():Void { var l:Double = (-128)+(65535); }
	def m1697():Void { var l:Double = (-128)+(-65535); }
	def m1698():Void { var l:Double = (-128)+(65536); }
	def m1699():Void { var l:Double = (-128)+(-65536); }
	def m1700():Void { var l:Double = (-128)+(16777216); }
	def m1701():Void { var l:Double = (-128)+(-16777216); }
	def m1702():Void { var l:Double = (-128)+(16777217); }
	def m1703():Void { var l:Double = (-128)+(-16777217); }
	def m1704():Void { var l:Double = (-128)+(2147483647); }
	def m1705():Void { var l:Double = (-128)+(-2147483647); }
	def m1706():Void { var l:Double = (255)+(w0); }
	def m1707():Void { var l:Double = (255)+(w1); }
	def m1708():Void { var l:Double = (255)+(w2); }
	def m1709():Void { var l:Double = (255)+(w3); }
	def m1710():Void { var l:Double = (255)+(w4); }
	def m1711():Void { var l:Double = (255)+(w5); }
	def m1712():Void { var l:Double = (255)+(0); }
	def m1713():Void { var l:Double = (255)+(-0); }
	def m1714():Void { var l:Double = (255)+(1); }
	def m1715():Void { var l:Double = (255)+(-1); }
	def m1716():Void { var l:Double = (255)+(2.2); }
	def m1717():Void { var l:Double = (255)+(-2.2); }
	def m1718():Void { var l:Double = (255)+(127); }
	def m1719():Void { var l:Double = (255)+(-127); }
	def m1720():Void { var l:Double = (255)+(128); }
	def m1721():Void { var l:Double = (255)+(-128); }
	def m1722():Void { var l:Double = (255)+(255); }
	def m1723():Void { var l:Double = (255)+(-255); }
	def m1724():Void { var l:Double = (255)+(256); }
	def m1725():Void { var l:Double = (255)+(-256); }
	def m1726():Void { var l:Double = (255)+(32767); }
	def m1727():Void { var l:Double = (255)+(-32767); }
	def m1728():Void { var l:Double = (255)+(32768); }
	def m1729():Void { var l:Double = (255)+(-32768); }
	def m1730():Void { var l:Double = (255)+(65535); }
	def m1731():Void { var l:Double = (255)+(-65535); }
	def m1732():Void { var l:Double = (255)+(65536); }
	def m1733():Void { var l:Double = (255)+(-65536); }
	def m1734():Void { var l:Double = (255)+(16777216); }
	def m1735():Void { var l:Double = (255)+(-16777216); }
	def m1736():Void { var l:Double = (255)+(16777217); }
	def m1737():Void { var l:Double = (255)+(-16777217); }
	def m1738():Void { var l:Double = (255)+(2147483647); }
	def m1739():Void { var l:Double = (255)+(-2147483647); }
	def m1740():Void { var l:Double = (-255)+(w0); }
	def m1741():Void { var l:Double = (-255)+(w1); }
	def m1742():Void { var l:Double = (-255)+(w2); }
	def m1743():Void { var l:Double = (-255)+(w3); }
	def m1744():Void { var l:Double = (-255)+(w4); }
	def m1745():Void { var l:Double = (-255)+(w5); }
	def m1746():Void { var l:Double = (-255)+(0); }
	def m1747():Void { var l:Double = (-255)+(-0); }
	def m1748():Void { var l:Double = (-255)+(1); }
	def m1749():Void { var l:Double = (-255)+(-1); }
	def m1750():Void { var l:Double = (-255)+(2.2); }
	def m1751():Void { var l:Double = (-255)+(-2.2); }
	def m1752():Void { var l:Double = (-255)+(127); }
	def m1753():Void { var l:Double = (-255)+(-127); }
	def m1754():Void { var l:Double = (-255)+(128); }
	def m1755():Void { var l:Double = (-255)+(-128); }
	def m1756():Void { var l:Double = (-255)+(255); }
	def m1757():Void { var l:Double = (-255)+(-255); }
	def m1758():Void { var l:Double = (-255)+(256); }
	def m1759():Void { var l:Double = (-255)+(-256); }
	def m1760():Void { var l:Double = (-255)+(32767); }
	def m1761():Void { var l:Double = (-255)+(-32767); }
	def m1762():Void { var l:Double = (-255)+(32768); }
	def m1763():Void { var l:Double = (-255)+(-32768); }
	def m1764():Void { var l:Double = (-255)+(65535); }
	def m1765():Void { var l:Double = (-255)+(-65535); }
	def m1766():Void { var l:Double = (-255)+(65536); }
	def m1767():Void { var l:Double = (-255)+(-65536); }
	def m1768():Void { var l:Double = (-255)+(16777216); }
	def m1769():Void { var l:Double = (-255)+(-16777216); }
	def m1770():Void { var l:Double = (-255)+(16777217); }
	def m1771():Void { var l:Double = (-255)+(-16777217); }
	def m1772():Void { var l:Double = (-255)+(2147483647); }
	def m1773():Void { var l:Double = (-255)+(-2147483647); }
	def m1774():Void { var l:Double = (256)+(w0); }
	def m1775():Void { var l:Double = (256)+(w1); }
	def m1776():Void { var l:Double = (256)+(w2); }
	def m1777():Void { var l:Double = (256)+(w3); }
	def m1778():Void { var l:Double = (256)+(w4); }
	def m1779():Void { var l:Double = (256)+(w5); }
	def m1780():Void { var l:Double = (256)+(0); }
	def m1781():Void { var l:Double = (256)+(-0); }
	def m1782():Void { var l:Double = (256)+(1); }
	def m1783():Void { var l:Double = (256)+(-1); }
	def m1784():Void { var l:Double = (256)+(2.2); }
	def m1785():Void { var l:Double = (256)+(-2.2); }
	def m1786():Void { var l:Double = (256)+(127); }
	def m1787():Void { var l:Double = (256)+(-127); }
	def m1788():Void { var l:Double = (256)+(128); }
	def m1789():Void { var l:Double = (256)+(-128); }
	def m1790():Void { var l:Double = (256)+(255); }
	def m1791():Void { var l:Double = (256)+(-255); }
	def m1792():Void { var l:Double = (256)+(256); }
	def m1793():Void { var l:Double = (256)+(-256); }
	def m1794():Void { var l:Double = (256)+(32767); }
	def m1795():Void { var l:Double = (256)+(-32767); }
	def m1796():Void { var l:Double = (256)+(32768); }
	def m1797():Void { var l:Double = (256)+(-32768); }
	def m1798():Void { var l:Double = (256)+(65535); }
	def m1799():Void { var l:Double = (256)+(-65535); }
	def m1800():Void { var l:Double = (256)+(65536); }
	def m1801():Void { var l:Double = (256)+(-65536); }
	def m1802():Void { var l:Double = (256)+(16777216); }
	def m1803():Void { var l:Double = (256)+(-16777216); }
	def m1804():Void { var l:Double = (256)+(16777217); }
	def m1805():Void { var l:Double = (256)+(-16777217); }
	def m1806():Void { var l:Double = (256)+(2147483647); }
	def m1807():Void { var l:Double = (256)+(-2147483647); }
	def m1808():Void { var l:Double = (-256)+(w0); }
	def m1809():Void { var l:Double = (-256)+(w1); }
	def m1810():Void { var l:Double = (-256)+(w2); }
	def m1811():Void { var l:Double = (-256)+(w3); }
	def m1812():Void { var l:Double = (-256)+(w4); }
	def m1813():Void { var l:Double = (-256)+(w5); }
	def m1814():Void { var l:Double = (-256)+(0); }
	def m1815():Void { var l:Double = (-256)+(-0); }
	def m1816():Void { var l:Double = (-256)+(1); }
	def m1817():Void { var l:Double = (-256)+(-1); }
	def m1818():Void { var l:Double = (-256)+(2.2); }
	def m1819():Void { var l:Double = (-256)+(-2.2); }
	def m1820():Void { var l:Double = (-256)+(127); }
	def m1821():Void { var l:Double = (-256)+(-127); }
	def m1822():Void { var l:Double = (-256)+(128); }
	def m1823():Void { var l:Double = (-256)+(-128); }
	def m1824():Void { var l:Double = (-256)+(255); }
	def m1825():Void { var l:Double = (-256)+(-255); }
	def m1826():Void { var l:Double = (-256)+(256); }
	def m1827():Void { var l:Double = (-256)+(-256); }
	def m1828():Void { var l:Double = (-256)+(32767); }
	def m1829():Void { var l:Double = (-256)+(-32767); }
	def m1830():Void { var l:Double = (-256)+(32768); }
	def m1831():Void { var l:Double = (-256)+(-32768); }
	def m1832():Void { var l:Double = (-256)+(65535); }
	def m1833():Void { var l:Double = (-256)+(-65535); }
	def m1834():Void { var l:Double = (-256)+(65536); }
	def m1835():Void { var l:Double = (-256)+(-65536); }
	def m1836():Void { var l:Double = (-256)+(16777216); }
	def m1837():Void { var l:Double = (-256)+(-16777216); }
	def m1838():Void { var l:Double = (-256)+(16777217); }
	def m1839():Void { var l:Double = (-256)+(-16777217); }
	def m1840():Void { var l:Double = (-256)+(2147483647); }
	def m1841():Void { var l:Double = (-256)+(-2147483647); }
	def m1842():Void { var l:Double = (32767)+(w0); }
	def m1843():Void { var l:Double = (32767)+(w1); }
	def m1844():Void { var l:Double = (32767)+(w2); }
	def m1845():Void { var l:Double = (32767)+(w3); }
	def m1846():Void { var l:Double = (32767)+(w4); }
	def m1847():Void { var l:Double = (32767)+(w5); }
	def m1848():Void { var l:Double = (32767)+(0); }
	def m1849():Void { var l:Double = (32767)+(-0); }
	def m1850():Void { var l:Double = (32767)+(1); }
	def m1851():Void { var l:Double = (32767)+(-1); }
	def m1852():Void { var l:Double = (32767)+(2.2); }
	def m1853():Void { var l:Double = (32767)+(-2.2); }
	def m1854():Void { var l:Double = (32767)+(127); }
	def m1855():Void { var l:Double = (32767)+(-127); }
	def m1856():Void { var l:Double = (32767)+(128); }
	def m1857():Void { var l:Double = (32767)+(-128); }
	def m1858():Void { var l:Double = (32767)+(255); }
	def m1859():Void { var l:Double = (32767)+(-255); }
	def m1860():Void { var l:Double = (32767)+(256); }
	def m1861():Void { var l:Double = (32767)+(-256); }
	def m1862():Void { var l:Double = (32767)+(32767); }
	def m1863():Void { var l:Double = (32767)+(-32767); }
	def m1864():Void { var l:Double = (32767)+(32768); }
	def m1865():Void { var l:Double = (32767)+(-32768); }
	def m1866():Void { var l:Double = (32767)+(65535); }
	def m1867():Void { var l:Double = (32767)+(-65535); }
	def m1868():Void { var l:Double = (32767)+(65536); }
	def m1869():Void { var l:Double = (32767)+(-65536); }
	def m1870():Void { var l:Double = (32767)+(16777216); }
	def m1871():Void { var l:Double = (32767)+(-16777216); }
	def m1872():Void { var l:Double = (32767)+(16777217); }
	def m1873():Void { var l:Double = (32767)+(-16777217); }
	def m1874():Void { var l:Double = (32767)+(2147483647); }
	def m1875():Void { var l:Double = (32767)+(-2147483647); }
	def m1876():Void { var l:Double = (-32767)+(w0); }
	def m1877():Void { var l:Double = (-32767)+(w1); }
	def m1878():Void { var l:Double = (-32767)+(w2); }
	def m1879():Void { var l:Double = (-32767)+(w3); }
	def m1880():Void { var l:Double = (-32767)+(w4); }
	def m1881():Void { var l:Double = (-32767)+(w5); }
	def m1882():Void { var l:Double = (-32767)+(0); }
	def m1883():Void { var l:Double = (-32767)+(-0); }
	def m1884():Void { var l:Double = (-32767)+(1); }
	def m1885():Void { var l:Double = (-32767)+(-1); }
	def m1886():Void { var l:Double = (-32767)+(2.2); }
	def m1887():Void { var l:Double = (-32767)+(-2.2); }
	def m1888():Void { var l:Double = (-32767)+(127); }
	def m1889():Void { var l:Double = (-32767)+(-127); }
	def m1890():Void { var l:Double = (-32767)+(128); }
	def m1891():Void { var l:Double = (-32767)+(-128); }
	def m1892():Void { var l:Double = (-32767)+(255); }
	def m1893():Void { var l:Double = (-32767)+(-255); }
	def m1894():Void { var l:Double = (-32767)+(256); }
	def m1895():Void { var l:Double = (-32767)+(-256); }
	def m1896():Void { var l:Double = (-32767)+(32767); }
	def m1897():Void { var l:Double = (-32767)+(-32767); }
	def m1898():Void { var l:Double = (-32767)+(32768); }
	def m1899():Void { var l:Double = (-32767)+(-32768); }
	def m1900():Void { var l:Double = (-32767)+(65535); }
	def m1901():Void { var l:Double = (-32767)+(-65535); }
	def m1902():Void { var l:Double = (-32767)+(65536); }
	def m1903():Void { var l:Double = (-32767)+(-65536); }
	def m1904():Void { var l:Double = (-32767)+(16777216); }
	def m1905():Void { var l:Double = (-32767)+(-16777216); }
	def m1906():Void { var l:Double = (-32767)+(16777217); }
	def m1907():Void { var l:Double = (-32767)+(-16777217); }
	def m1908():Void { var l:Double = (-32767)+(2147483647); }
	def m1909():Void { var l:Double = (-32767)+(-2147483647); }
	def m1910():Void { var l:Double = (32768)+(w0); }
	def m1911():Void { var l:Double = (32768)+(w1); }
	def m1912():Void { var l:Double = (32768)+(w2); }
	def m1913():Void { var l:Double = (32768)+(w3); }
	def m1914():Void { var l:Double = (32768)+(w4); }
	def m1915():Void { var l:Double = (32768)+(w5); }
	def m1916():Void { var l:Double = (32768)+(0); }
	def m1917():Void { var l:Double = (32768)+(-0); }
	def m1918():Void { var l:Double = (32768)+(1); }
	def m1919():Void { var l:Double = (32768)+(-1); }
	def m1920():Void { var l:Double = (32768)+(2.2); }
	def m1921():Void { var l:Double = (32768)+(-2.2); }
	def m1922():Void { var l:Double = (32768)+(127); }
	def m1923():Void { var l:Double = (32768)+(-127); }
	def m1924():Void { var l:Double = (32768)+(128); }
	def m1925():Void { var l:Double = (32768)+(-128); }
	def m1926():Void { var l:Double = (32768)+(255); }
	def m1927():Void { var l:Double = (32768)+(-255); }
	def m1928():Void { var l:Double = (32768)+(256); }
	def m1929():Void { var l:Double = (32768)+(-256); }
	def m1930():Void { var l:Double = (32768)+(32767); }
	def m1931():Void { var l:Double = (32768)+(-32767); }
	def m1932():Void { var l:Double = (32768)+(32768); }
	def m1933():Void { var l:Double = (32768)+(-32768); }
	def m1934():Void { var l:Double = (32768)+(65535); }
	def m1935():Void { var l:Double = (32768)+(-65535); }
	def m1936():Void { var l:Double = (32768)+(65536); }
	def m1937():Void { var l:Double = (32768)+(-65536); }
	def m1938():Void { var l:Double = (32768)+(16777216); }
	def m1939():Void { var l:Double = (32768)+(-16777216); }
	def m1940():Void { var l:Double = (32768)+(16777217); }
	def m1941():Void { var l:Double = (32768)+(-16777217); }
	def m1942():Void { var l:Double = (32768)+(2147483647); }
	def m1943():Void { var l:Double = (32768)+(-2147483647); }
	def m1944():Void { var l:Double = (-32768)+(w0); }
	def m1945():Void { var l:Double = (-32768)+(w1); }
	def m1946():Void { var l:Double = (-32768)+(w2); }
	def m1947():Void { var l:Double = (-32768)+(w3); }
	def m1948():Void { var l:Double = (-32768)+(w4); }
	def m1949():Void { var l:Double = (-32768)+(w5); }
	def m1950():Void { var l:Double = (-32768)+(0); }
	def m1951():Void { var l:Double = (-32768)+(-0); }
	def m1952():Void { var l:Double = (-32768)+(1); }
	def m1953():Void { var l:Double = (-32768)+(-1); }
	def m1954():Void { var l:Double = (-32768)+(2.2); }
	def m1955():Void { var l:Double = (-32768)+(-2.2); }
	def m1956():Void { var l:Double = (-32768)+(127); }
	def m1957():Void { var l:Double = (-32768)+(-127); }
	def m1958():Void { var l:Double = (-32768)+(128); }
	def m1959():Void { var l:Double = (-32768)+(-128); }
	def m1960():Void { var l:Double = (-32768)+(255); }
	def m1961():Void { var l:Double = (-32768)+(-255); }
	def m1962():Void { var l:Double = (-32768)+(256); }
	def m1963():Void { var l:Double = (-32768)+(-256); }
	def m1964():Void { var l:Double = (-32768)+(32767); }
	def m1965():Void { var l:Double = (-32768)+(-32767); }
	def m1966():Void { var l:Double = (-32768)+(32768); }
	def m1967():Void { var l:Double = (-32768)+(-32768); }
	def m1968():Void { var l:Double = (-32768)+(65535); }
	def m1969():Void { var l:Double = (-32768)+(-65535); }
	def m1970():Void { var l:Double = (-32768)+(65536); }
	def m1971():Void { var l:Double = (-32768)+(-65536); }
	def m1972():Void { var l:Double = (-32768)+(16777216); }
	def m1973():Void { var l:Double = (-32768)+(-16777216); }
	def m1974():Void { var l:Double = (-32768)+(16777217); }
	def m1975():Void { var l:Double = (-32768)+(-16777217); }
	def m1976():Void { var l:Double = (-32768)+(2147483647); }
	def m1977():Void { var l:Double = (-32768)+(-2147483647); }
	def m1978():Void { var l:Double = (65535)+(w0); }
	def m1979():Void { var l:Double = (65535)+(w1); }
	def m1980():Void { var l:Double = (65535)+(w2); }
	def m1981():Void { var l:Double = (65535)+(w3); }
	def m1982():Void { var l:Double = (65535)+(w4); }
	def m1983():Void { var l:Double = (65535)+(w5); }
	def m1984():Void { var l:Double = (65535)+(0); }
	def m1985():Void { var l:Double = (65535)+(-0); }
	def m1986():Void { var l:Double = (65535)+(1); }
	def m1987():Void { var l:Double = (65535)+(-1); }
	def m1988():Void { var l:Double = (65535)+(2.2); }
	def m1989():Void { var l:Double = (65535)+(-2.2); }
	def m1990():Void { var l:Double = (65535)+(127); }
	def m1991():Void { var l:Double = (65535)+(-127); }
	def m1992():Void { var l:Double = (65535)+(128); }
	def m1993():Void { var l:Double = (65535)+(-128); }
	def m1994():Void { var l:Double = (65535)+(255); }
	def m1995():Void { var l:Double = (65535)+(-255); }
	def m1996():Void { var l:Double = (65535)+(256); }
	def m1997():Void { var l:Double = (65535)+(-256); }
	def m1998():Void { var l:Double = (65535)+(32767); }
	def m1999():Void { var l:Double = (65535)+(-32767); }
	def m2000():Void { var l:Double = (65535)+(32768); }
	def m2001():Void { var l:Double = (65535)+(-32768); }
	def m2002():Void { var l:Double = (65535)+(65535); }
	def m2003():Void { var l:Double = (65535)+(-65535); }
	def m2004():Void { var l:Double = (65535)+(65536); }
	def m2005():Void { var l:Double = (65535)+(-65536); }
	def m2006():Void { var l:Double = (65535)+(16777216); }
	def m2007():Void { var l:Double = (65535)+(-16777216); }
	def m2008():Void { var l:Double = (65535)+(16777217); }
	def m2009():Void { var l:Double = (65535)+(-16777217); }
	def m2010():Void { var l:Double = (65535)+(2147483647); }
	def m2011():Void { var l:Double = (65535)+(-2147483647); }
	def m2012():Void { var l:Double = (-65535)+(w0); }
	def m2013():Void { var l:Double = (-65535)+(w1); }
	def m2014():Void { var l:Double = (-65535)+(w2); }
	def m2015():Void { var l:Double = (-65535)+(w3); }
	def m2016():Void { var l:Double = (-65535)+(w4); }
	def m2017():Void { var l:Double = (-65535)+(w5); }
	def m2018():Void { var l:Double = (-65535)+(0); }
	def m2019():Void { var l:Double = (-65535)+(-0); }
	def m2020():Void { var l:Double = (-65535)+(1); }
	def m2021():Void { var l:Double = (-65535)+(-1); }
	def m2022():Void { var l:Double = (-65535)+(2.2); }
	def m2023():Void { var l:Double = (-65535)+(-2.2); }
	def m2024():Void { var l:Double = (-65535)+(127); }
	def m2025():Void { var l:Double = (-65535)+(-127); }
	def m2026():Void { var l:Double = (-65535)+(128); }
	def m2027():Void { var l:Double = (-65535)+(-128); }
	def m2028():Void { var l:Double = (-65535)+(255); }
	def m2029():Void { var l:Double = (-65535)+(-255); }
	def m2030():Void { var l:Double = (-65535)+(256); }
	def m2031():Void { var l:Double = (-65535)+(-256); }
	def m2032():Void { var l:Double = (-65535)+(32767); }
	def m2033():Void { var l:Double = (-65535)+(-32767); }
	def m2034():Void { var l:Double = (-65535)+(32768); }
	def m2035():Void { var l:Double = (-65535)+(-32768); }
	def m2036():Void { var l:Double = (-65535)+(65535); }
	def m2037():Void { var l:Double = (-65535)+(-65535); }
	def m2038():Void { var l:Double = (-65535)+(65536); }
	def m2039():Void { var l:Double = (-65535)+(-65536); }
	def m2040():Void { var l:Double = (-65535)+(16777216); }
	def m2041():Void { var l:Double = (-65535)+(-16777216); }
	def m2042():Void { var l:Double = (-65535)+(16777217); }
	def m2043():Void { var l:Double = (-65535)+(-16777217); }
	def m2044():Void { var l:Double = (-65535)+(2147483647); }
	def m2045():Void { var l:Double = (-65535)+(-2147483647); }
	def m2046():Void { var l:Double = (65536)+(w0); }
	def m2047():Void { var l:Double = (65536)+(w1); }
	def m2048():Void { var l:Double = (65536)+(w2); }
	def m2049():Void { var l:Double = (65536)+(w3); }
	def m2050():Void { var l:Double = (65536)+(w4); }
	def m2051():Void { var l:Double = (65536)+(w5); }
	def m2052():Void { var l:Double = (65536)+(0); }
	def m2053():Void { var l:Double = (65536)+(-0); }
	def m2054():Void { var l:Double = (65536)+(1); }
	def m2055():Void { var l:Double = (65536)+(-1); }
	def m2056():Void { var l:Double = (65536)+(2.2); }
	def m2057():Void { var l:Double = (65536)+(-2.2); }
	def m2058():Void { var l:Double = (65536)+(127); }
	def m2059():Void { var l:Double = (65536)+(-127); }
	def m2060():Void { var l:Double = (65536)+(128); }
	def m2061():Void { var l:Double = (65536)+(-128); }
	def m2062():Void { var l:Double = (65536)+(255); }
	def m2063():Void { var l:Double = (65536)+(-255); }
	def m2064():Void { var l:Double = (65536)+(256); }
	def m2065():Void { var l:Double = (65536)+(-256); }
	def m2066():Void { var l:Double = (65536)+(32767); }
	def m2067():Void { var l:Double = (65536)+(-32767); }
	def m2068():Void { var l:Double = (65536)+(32768); }
	def m2069():Void { var l:Double = (65536)+(-32768); }
	def m2070():Void { var l:Double = (65536)+(65535); }
	def m2071():Void { var l:Double = (65536)+(-65535); }
	def m2072():Void { var l:Double = (65536)+(65536); }
	def m2073():Void { var l:Double = (65536)+(-65536); }
	def m2074():Void { var l:Double = (65536)+(16777216); }
	def m2075():Void { var l:Double = (65536)+(-16777216); }
	def m2076():Void { var l:Double = (65536)+(16777217); }
	def m2077():Void { var l:Double = (65536)+(-16777217); }
	def m2078():Void { var l:Double = (65536)+(2147483647); }
	def m2079():Void { var l:Double = (65536)+(-2147483647); }
	def m2080():Void { var l:Double = (-65536)+(w0); }
	def m2081():Void { var l:Double = (-65536)+(w1); }
	def m2082():Void { var l:Double = (-65536)+(w2); }
	def m2083():Void { var l:Double = (-65536)+(w3); }
	def m2084():Void { var l:Double = (-65536)+(w4); }
	def m2085():Void { var l:Double = (-65536)+(w5); }
	def m2086():Void { var l:Double = (-65536)+(0); }
	def m2087():Void { var l:Double = (-65536)+(-0); }
	def m2088():Void { var l:Double = (-65536)+(1); }
	def m2089():Void { var l:Double = (-65536)+(-1); }
	def m2090():Void { var l:Double = (-65536)+(2.2); }
	def m2091():Void { var l:Double = (-65536)+(-2.2); }
	def m2092():Void { var l:Double = (-65536)+(127); }
	def m2093():Void { var l:Double = (-65536)+(-127); }
	def m2094():Void { var l:Double = (-65536)+(128); }
	def m2095():Void { var l:Double = (-65536)+(-128); }
	def m2096():Void { var l:Double = (-65536)+(255); }
	def m2097():Void { var l:Double = (-65536)+(-255); }
	def m2098():Void { var l:Double = (-65536)+(256); }
	def m2099():Void { var l:Double = (-65536)+(-256); }
	def m2100():Void { var l:Double = (-65536)+(32767); }
	def m2101():Void { var l:Double = (-65536)+(-32767); }
	def m2102():Void { var l:Double = (-65536)+(32768); }
	def m2103():Void { var l:Double = (-65536)+(-32768); }
	def m2104():Void { var l:Double = (-65536)+(65535); }
	def m2105():Void { var l:Double = (-65536)+(-65535); }
	def m2106():Void { var l:Double = (-65536)+(65536); }
	def m2107():Void { var l:Double = (-65536)+(-65536); }
	def m2108():Void { var l:Double = (-65536)+(16777216); }
	def m2109():Void { var l:Double = (-65536)+(-16777216); }
	def m2110():Void { var l:Double = (-65536)+(16777217); }
	def m2111():Void { var l:Double = (-65536)+(-16777217); }
	def m2112():Void { var l:Double = (-65536)+(2147483647); }
	def m2113():Void { var l:Double = (-65536)+(-2147483647); }
	def m2114():Void { var l:Double = (16777216)+(w0); }
	def m2115():Void { var l:Double = (16777216)+(w1); }
	def m2116():Void { var l:Double = (16777216)+(w2); }
	def m2117():Void { var l:Double = (16777216)+(w3); }
	def m2118():Void { var l:Double = (16777216)+(w4); }
	def m2119():Void { var l:Double = (16777216)+(w5); }
	def m2120():Void { var l:Double = (16777216)+(0); }
	def m2121():Void { var l:Double = (16777216)+(-0); }
	def m2122():Void { var l:Double = (16777216)+(1); }
	def m2123():Void { var l:Double = (16777216)+(-1); }
	def m2124():Void { var l:Double = (16777216)+(2.2); }
	def m2125():Void { var l:Double = (16777216)+(-2.2); }
	def m2126():Void { var l:Double = (16777216)+(127); }
	def m2127():Void { var l:Double = (16777216)+(-127); }
	def m2128():Void { var l:Double = (16777216)+(128); }
	def m2129():Void { var l:Double = (16777216)+(-128); }
	def m2130():Void { var l:Double = (16777216)+(255); }
	def m2131():Void { var l:Double = (16777216)+(-255); }
	def m2132():Void { var l:Double = (16777216)+(256); }
	def m2133():Void { var l:Double = (16777216)+(-256); }
	def m2134():Void { var l:Double = (16777216)+(32767); }
	def m2135():Void { var l:Double = (16777216)+(-32767); }
	def m2136():Void { var l:Double = (16777216)+(32768); }
	def m2137():Void { var l:Double = (16777216)+(-32768); }
	def m2138():Void { var l:Double = (16777216)+(65535); }
	def m2139():Void { var l:Double = (16777216)+(-65535); }
	def m2140():Void { var l:Double = (16777216)+(65536); }
	def m2141():Void { var l:Double = (16777216)+(-65536); }
	def m2142():Void { var l:Double = (16777216)+(16777216); }
	def m2143():Void { var l:Double = (16777216)+(-16777216); }
	def m2144():Void { var l:Double = (16777216)+(16777217); }
	def m2145():Void { var l:Double = (16777216)+(-16777217); }
	def m2146():Void { var l:Double = (16777216)+(2147483647); }
	def m2147():Void { var l:Double = (16777216)+(-2147483647); }
	def m2148():Void { var l:Double = (-16777216)+(w0); }
	def m2149():Void { var l:Double = (-16777216)+(w1); }
	def m2150():Void { var l:Double = (-16777216)+(w2); }
	def m2151():Void { var l:Double = (-16777216)+(w3); }
	def m2152():Void { var l:Double = (-16777216)+(w4); }
	def m2153():Void { var l:Double = (-16777216)+(w5); }
	def m2154():Void { var l:Double = (-16777216)+(0); }
	def m2155():Void { var l:Double = (-16777216)+(-0); }
	def m2156():Void { var l:Double = (-16777216)+(1); }
	def m2157():Void { var l:Double = (-16777216)+(-1); }
	def m2158():Void { var l:Double = (-16777216)+(2.2); }
	def m2159():Void { var l:Double = (-16777216)+(-2.2); }
	def m2160():Void { var l:Double = (-16777216)+(127); }
	def m2161():Void { var l:Double = (-16777216)+(-127); }
	def m2162():Void { var l:Double = (-16777216)+(128); }
	def m2163():Void { var l:Double = (-16777216)+(-128); }
	def m2164():Void { var l:Double = (-16777216)+(255); }
	def m2165():Void { var l:Double = (-16777216)+(-255); }
	def m2166():Void { var l:Double = (-16777216)+(256); }
	def m2167():Void { var l:Double = (-16777216)+(-256); }
	def m2168():Void { var l:Double = (-16777216)+(32767); }
	def m2169():Void { var l:Double = (-16777216)+(-32767); }
	def m2170():Void { var l:Double = (-16777216)+(32768); }
	def m2171():Void { var l:Double = (-16777216)+(-32768); }
	def m2172():Void { var l:Double = (-16777216)+(65535); }
	def m2173():Void { var l:Double = (-16777216)+(-65535); }
	def m2174():Void { var l:Double = (-16777216)+(65536); }
	def m2175():Void { var l:Double = (-16777216)+(-65536); }
	def m2176():Void { var l:Double = (-16777216)+(16777216); }
	def m2177():Void { var l:Double = (-16777216)+(-16777216); }
	def m2178():Void { var l:Double = (-16777216)+(16777217); }
	def m2179():Void { var l:Double = (-16777216)+(-16777217); }
	def m2180():Void { var l:Double = (-16777216)+(2147483647); }
	def m2181():Void { var l:Double = (-16777216)+(-2147483647); }
	def m2182():Void { var l:Double = (16777217)+(w0); }
	def m2183():Void { var l:Double = (16777217)+(w1); }
	def m2184():Void { var l:Double = (16777217)+(w2); }
	def m2185():Void { var l:Double = (16777217)+(w3); }
	def m2186():Void { var l:Double = (16777217)+(w4); }
	def m2187():Void { var l:Double = (16777217)+(w5); }
	def m2188():Void { var l:Double = (16777217)+(0); }
	def m2189():Void { var l:Double = (16777217)+(-0); }
	def m2190():Void { var l:Double = (16777217)+(1); }
	def m2191():Void { var l:Double = (16777217)+(-1); }
	def m2192():Void { var l:Double = (16777217)+(2.2); }
	def m2193():Void { var l:Double = (16777217)+(-2.2); }
	def m2194():Void { var l:Double = (16777217)+(127); }
	def m2195():Void { var l:Double = (16777217)+(-127); }
	def m2196():Void { var l:Double = (16777217)+(128); }
	def m2197():Void { var l:Double = (16777217)+(-128); }
	def m2198():Void { var l:Double = (16777217)+(255); }
	def m2199():Void { var l:Double = (16777217)+(-255); }
	def m2200():Void { var l:Double = (16777217)+(256); }
	def m2201():Void { var l:Double = (16777217)+(-256); }
	def m2202():Void { var l:Double = (16777217)+(32767); }
	def m2203():Void { var l:Double = (16777217)+(-32767); }
	def m2204():Void { var l:Double = (16777217)+(32768); }
	def m2205():Void { var l:Double = (16777217)+(-32768); }
	def m2206():Void { var l:Double = (16777217)+(65535); }
	def m2207():Void { var l:Double = (16777217)+(-65535); }
	def m2208():Void { var l:Double = (16777217)+(65536); }
	def m2209():Void { var l:Double = (16777217)+(-65536); }
	def m2210():Void { var l:Double = (16777217)+(16777216); }
	def m2211():Void { var l:Double = (16777217)+(-16777216); }
	def m2212():Void { var l:Double = (16777217)+(16777217); }
	def m2213():Void { var l:Double = (16777217)+(-16777217); }
	def m2214():Void { var l:Double = (16777217)+(2147483647); }
	def m2215():Void { var l:Double = (16777217)+(-2147483647); }
	def m2216():Void { var l:Double = (-16777217)+(w0); }
	def m2217():Void { var l:Double = (-16777217)+(w1); }
	def m2218():Void { var l:Double = (-16777217)+(w2); }
	def m2219():Void { var l:Double = (-16777217)+(w3); }
	def m2220():Void { var l:Double = (-16777217)+(w4); }
	def m2221():Void { var l:Double = (-16777217)+(w5); }
	def m2222():Void { var l:Double = (-16777217)+(0); }
	def m2223():Void { var l:Double = (-16777217)+(-0); }
	def m2224():Void { var l:Double = (-16777217)+(1); }
	def m2225():Void { var l:Double = (-16777217)+(-1); }
	def m2226():Void { var l:Double = (-16777217)+(2.2); }
	def m2227():Void { var l:Double = (-16777217)+(-2.2); }
	def m2228():Void { var l:Double = (-16777217)+(127); }
	def m2229():Void { var l:Double = (-16777217)+(-127); }
	def m2230():Void { var l:Double = (-16777217)+(128); }
	def m2231():Void { var l:Double = (-16777217)+(-128); }
	def m2232():Void { var l:Double = (-16777217)+(255); }
	def m2233():Void { var l:Double = (-16777217)+(-255); }
	def m2234():Void { var l:Double = (-16777217)+(256); }
	def m2235():Void { var l:Double = (-16777217)+(-256); }
	def m2236():Void { var l:Double = (-16777217)+(32767); }
	def m2237():Void { var l:Double = (-16777217)+(-32767); }
	def m2238():Void { var l:Double = (-16777217)+(32768); }
	def m2239():Void { var l:Double = (-16777217)+(-32768); }
	def m2240():Void { var l:Double = (-16777217)+(65535); }
	def m2241():Void { var l:Double = (-16777217)+(-65535); }
	def m2242():Void { var l:Double = (-16777217)+(65536); }
	def m2243():Void { var l:Double = (-16777217)+(-65536); }
	def m2244():Void { var l:Double = (-16777217)+(16777216); }
	def m2245():Void { var l:Double = (-16777217)+(-16777216); }
	def m2246():Void { var l:Double = (-16777217)+(16777217); }
	def m2247():Void { var l:Double = (-16777217)+(-16777217); }
	def m2248():Void { var l:Double = (-16777217)+(2147483647); }
	def m2249():Void { var l:Double = (-16777217)+(-2147483647); }
	def m2250():Void { var l:Double = (2147483647)+(w0); }
	def m2251():Void { var l:Double = (2147483647)+(w1); }
	def m2252():Void { var l:Double = (2147483647)+(w2); }
	def m2253():Void { var l:Double = (2147483647)+(w3); }
	def m2254():Void { var l:Double = (2147483647)+(w4); }
	def m2255():Void { var l:Double = (2147483647)+(w5); }
	def m2256():Void { var l:Double = (2147483647)+(0); }
	def m2257():Void { var l:Double = (2147483647)+(-0); }
	def m2258():Void { var l:Double = (2147483647)+(1); }
	def m2259():Void { var l:Double = (2147483647)+(-1); }
	def m2260():Void { var l:Double = (2147483647)+(2.2); }
	def m2261():Void { var l:Double = (2147483647)+(-2.2); }
	def m2262():Void { var l:Double = (2147483647)+(127); }
	def m2263():Void { var l:Double = (2147483647)+(-127); }
	def m2264():Void { var l:Double = (2147483647)+(128); }
	def m2265():Void { var l:Double = (2147483647)+(-128); }
	def m2266():Void { var l:Double = (2147483647)+(255); }
	def m2267():Void { var l:Double = (2147483647)+(-255); }
	def m2268():Void { var l:Double = (2147483647)+(256); }
	def m2269():Void { var l:Double = (2147483647)+(-256); }
	def m2270():Void { var l:Double = (2147483647)+(32767); }
	def m2271():Void { var l:Double = (2147483647)+(-32767); }
	def m2272():Void { var l:Double = (2147483647)+(32768); }
	def m2273():Void { var l:Double = (2147483647)+(-32768); }
	def m2274():Void { var l:Double = (2147483647)+(65535); }
	def m2275():Void { var l:Double = (2147483647)+(-65535); }
	def m2276():Void { var l:Double = (2147483647)+(65536); }
	def m2277():Void { var l:Double = (2147483647)+(-65536); }
	def m2278():Void { var l:Double = (2147483647)+(16777216); }
	def m2279():Void { var l:Double = (2147483647)+(-16777216); }
	def m2280():Void { var l:Double = (2147483647)+(16777217); }
	def m2281():Void { var l:Double = (2147483647)+(-16777217); }
	def m2282():Void { var l:Double = (2147483647)+(2147483647); }
	def m2283():Void { var l:Double = (2147483647)+(-2147483647); }
	def m2284():Void { var l:Double = (-2147483647)+(w0); }
	def m2285():Void { var l:Double = (-2147483647)+(w1); }
	def m2286():Void { var l:Double = (-2147483647)+(w2); }
	def m2287():Void { var l:Double = (-2147483647)+(w3); }
	def m2288():Void { var l:Double = (-2147483647)+(w4); }
	def m2289():Void { var l:Double = (-2147483647)+(w5); }
	def m2290():Void { var l:Double = (-2147483647)+(0); }
	def m2291():Void { var l:Double = (-2147483647)+(-0); }
	def m2292():Void { var l:Double = (-2147483647)+(1); }
	def m2293():Void { var l:Double = (-2147483647)+(-1); }
	def m2294():Void { var l:Double = (-2147483647)+(2.2); }
	def m2295():Void { var l:Double = (-2147483647)+(-2.2); }
	def m2296():Void { var l:Double = (-2147483647)+(127); }
	def m2297():Void { var l:Double = (-2147483647)+(-127); }
	def m2298():Void { var l:Double = (-2147483647)+(128); }
	def m2299():Void { var l:Double = (-2147483647)+(-128); }
	def m2300():Void { var l:Double = (-2147483647)+(255); }
	def m2301():Void { var l:Double = (-2147483647)+(-255); }
	def m2302():Void { var l:Double = (-2147483647)+(256); }
	def m2303():Void { var l:Double = (-2147483647)+(-256); }
	def m2304():Void { var l:Double = (-2147483647)+(32767); }
	def m2305():Void { var l:Double = (-2147483647)+(-32767); }
	def m2306():Void { var l:Double = (-2147483647)+(32768); }
	def m2307():Void { var l:Double = (-2147483647)+(-32768); }
	def m2308():Void { var l:Double = (-2147483647)+(65535); }
	def m2309():Void { var l:Double = (-2147483647)+(-65535); }
	def m2310():Void { var l:Double = (-2147483647)+(65536); }
	def m2311():Void { var l:Double = (-2147483647)+(-65536); }
	def m2312():Void { var l:Double = (-2147483647)+(16777216); }
	def m2313():Void { var l:Double = (-2147483647)+(-16777216); }
	def m2314():Void { var l:Double = (-2147483647)+(16777217); }
	def m2315():Void { var l:Double = (-2147483647)+(-16777217); }
	def m2316():Void { var l:Double = (-2147483647)+(2147483647); }
	def m2317():Void { var l:Double = (-2147483647)+(-2147483647); }
	def m2318():Void { var l:Byte = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2319():Void { var l:Byte = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2320():Void { var l:Byte = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2321():Void { var l:Byte = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2322():Void { var l:Byte = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2323():Void { var l:Byte = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2324():Void { var l:Byte = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2325():Void { var l:Byte = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2326():Void { var l:Byte = (w0)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2327():Void { var l:Byte = (w0)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2328():Void { var l:Byte = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2329():Void { var l:Byte = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2330():Void { var l:Byte = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2331():Void { var l:Byte = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2332():Void { var l:Byte = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2333():Void { var l:Byte = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2334():Void { var l:Byte = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2335():Void { var l:Byte = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2336():Void { var l:Byte = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2337():Void { var l:Byte = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2338():Void { var l:Byte = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2339():Void { var l:Byte = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2340():Void { var l:Byte = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2341():Void { var l:Byte = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2342():Void { var l:Byte = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2343():Void { var l:Byte = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2344():Void { var l:Byte = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2345():Void { var l:Byte = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2346():Void { var l:Byte = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2347():Void { var l:Byte = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2348():Void { var l:Byte = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2349():Void { var l:Byte = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2350():Void { var l:Byte = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2351():Void { var l:Byte = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2352():Void { var l:Byte = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2353():Void { var l:Byte = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2354():Void { var l:Byte = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2355():Void { var l:Byte = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2356():Void { var l:Byte = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2357():Void { var l:Byte = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2358():Void { var l:Byte = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2359():Void { var l:Byte = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2360():Void { var l:Byte = (w1)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2361():Void { var l:Byte = (w1)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2362():Void { var l:Byte = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2363():Void { var l:Byte = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2364():Void { var l:Byte = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2365():Void { var l:Byte = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2366():Void { var l:Byte = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2367():Void { var l:Byte = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2368():Void { var l:Byte = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2369():Void { var l:Byte = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2370():Void { var l:Byte = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2371():Void { var l:Byte = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2372():Void { var l:Byte = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2373():Void { var l:Byte = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2374():Void { var l:Byte = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2375():Void { var l:Byte = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2376():Void { var l:Byte = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2377():Void { var l:Byte = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2378():Void { var l:Byte = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2379():Void { var l:Byte = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2380():Void { var l:Byte = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2381():Void { var l:Byte = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2382():Void { var l:Byte = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2383():Void { var l:Byte = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2384():Void { var l:Byte = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2385():Void { var l:Byte = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2386():Void { var l:Byte = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2387():Void { var l:Byte = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2388():Void { var l:Byte = (w2)+(w2); }
	def m2389():Void { var l:Byte = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2390():Void { var l:Byte = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2391():Void { var l:Byte = (w2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2392():Void { var l:Byte = (w2)+(0); }  
	def m2393():Void { var l:Byte = (w2)+(-0); }  
	def m2394():Void { var l:Byte = (w2)+(1); }  
	def m2395():Void { var l:Byte = (w2)+(-1); }  
	def m2396():Void { var l:Byte = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2397():Void { var l:Byte = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2398():Void { var l:Byte = (w2)+(127); }  
	def m2399():Void { var l:Byte = (w2)+(-127); }  
	def m2400():Void { var l:Byte = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2401():Void { var l:Byte = (w2)+(-128); }  
	def m2402():Void { var l:Byte = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2403():Void { var l:Byte = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2404():Void { var l:Byte = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2405():Void { var l:Byte = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2406():Void { var l:Byte = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2407():Void { var l:Byte = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2408():Void { var l:Byte = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2409():Void { var l:Byte = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2410():Void { var l:Byte = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2411():Void { var l:Byte = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2412():Void { var l:Byte = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2413():Void { var l:Byte = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2414():Void { var l:Byte = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2415():Void { var l:Byte = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2416():Void { var l:Byte = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2417():Void { var l:Byte = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2418():Void { var l:Byte = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2419():Void { var l:Byte = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2420():Void { var l:Byte = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2421():Void { var l:Byte = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2422():Void { var l:Byte = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2423():Void { var l:Byte = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2424():Void { var l:Byte = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2425():Void { var l:Byte = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2426():Void { var l:Byte = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2427():Void { var l:Byte = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2428():Void { var l:Byte = (w3)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2429():Void { var l:Byte = (w3)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2430():Void { var l:Byte = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2431():Void { var l:Byte = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2432():Void { var l:Byte = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2433():Void { var l:Byte = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2434():Void { var l:Byte = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2435():Void { var l:Byte = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2436():Void { var l:Byte = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2437():Void { var l:Byte = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2438():Void { var l:Byte = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2439():Void { var l:Byte = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2440():Void { var l:Byte = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2441():Void { var l:Byte = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2442():Void { var l:Byte = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2443():Void { var l:Byte = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2444():Void { var l:Byte = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2445():Void { var l:Byte = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2446():Void { var l:Byte = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2447():Void { var l:Byte = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2448():Void { var l:Byte = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2449():Void { var l:Byte = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2450():Void { var l:Byte = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2451():Void { var l:Byte = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2452():Void { var l:Byte = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2453():Void { var l:Byte = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2454():Void { var l:Byte = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2455():Void { var l:Byte = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2456():Void { var l:Byte = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2457():Void { var l:Byte = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2458():Void { var l:Byte = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2459():Void { var l:Byte = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2460():Void { var l:Byte = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2461():Void { var l:Byte = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2462():Void { var l:Byte = (w4)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2463():Void { var l:Byte = (w4)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2464():Void { var l:Byte = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2465():Void { var l:Byte = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2466():Void { var l:Byte = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2467():Void { var l:Byte = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2468():Void { var l:Byte = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2469():Void { var l:Byte = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2470():Void { var l:Byte = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2471():Void { var l:Byte = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2472():Void { var l:Byte = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2473():Void { var l:Byte = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2474():Void { var l:Byte = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2475():Void { var l:Byte = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2476():Void { var l:Byte = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2477():Void { var l:Byte = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2478():Void { var l:Byte = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2479():Void { var l:Byte = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2480():Void { var l:Byte = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2481():Void { var l:Byte = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2482():Void { var l:Byte = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2483():Void { var l:Byte = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2484():Void { var l:Byte = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2485():Void { var l:Byte = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2486():Void { var l:Byte = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2487():Void { var l:Byte = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2488():Void { var l:Byte = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2489():Void { var l:Byte = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2490():Void { var l:Byte = (w5)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2491():Void { var l:Byte = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2492():Void { var l:Byte = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2493():Void { var l:Byte = (w5)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + (SignedTests.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2494():Void { var l:Byte = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2495():Void { var l:Byte = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2496():Void { var l:Byte = (w5)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2497():Void { var l:Byte = (w5)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2498():Void { var l:Byte = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2499():Void { var l:Byte = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2500():Void { var l:Byte = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2501():Void { var l:Byte = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2502():Void { var l:Byte = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2503():Void { var l:Byte = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2504():Void { var l:Byte = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2505():Void { var l:Byte = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2506():Void { var l:Byte = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2507():Void { var l:Byte = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2508():Void { var l:Byte = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2509():Void { var l:Byte = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2510():Void { var l:Byte = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2511():Void { var l:Byte = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w5) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2512():Void { var l:Byte = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2513():Void { var l:Byte = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2514():Void { var l:Byte = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2515():Void { var l:Byte = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2516():Void { var l:Byte = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2517():Void { var l:Byte = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2518():Void { var l:Byte = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2519():Void { var l:Byte = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2520():Void { var l:Byte = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2521():Void { var l:Byte = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2522():Void { var l:Byte = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2523():Void { var l:Byte = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2524():Void { var l:Byte = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2525():Void { var l:Byte = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2526():Void { var l:Byte = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2527():Void { var l:Byte = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2528():Void { var l:Byte = (0)+(0); }
	def m2529():Void { var l:Byte = (0)+(-0); }
	def m2530():Void { var l:Byte = (0)+(1); }
	def m2531():Void { var l:Byte = (0)+(-1); }
	def m2532():Void { var l:Byte = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2533():Void { var l:Byte = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2534():Void { var l:Byte = (0)+(127); }
	def m2535():Void { var l:Byte = (0)+(-127); }
	def m2536():Void { var l:Byte = (0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2537():Void { var l:Byte = (0)+(-128); }
	def m2538():Void { var l:Byte = (0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2539():Void { var l:Byte = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2540():Void { var l:Byte = (0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2541():Void { var l:Byte = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2542():Void { var l:Byte = (0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2543():Void { var l:Byte = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2544():Void { var l:Byte = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2545():Void { var l:Byte = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2546():Void { var l:Byte = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2547():Void { var l:Byte = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2548():Void { var l:Byte = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2549():Void { var l:Byte = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2550():Void { var l:Byte = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2551():Void { var l:Byte = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2552():Void { var l:Byte = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2553():Void { var l:Byte = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2554():Void { var l:Byte = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2555():Void { var l:Byte = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2556():Void { var l:Byte = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2557():Void { var l:Byte = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2558():Void { var l:Byte = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2559():Void { var l:Byte = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2560():Void { var l:Byte = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2561():Void { var l:Byte = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2562():Void { var l:Byte = (-0)+(0); }
	def m2563():Void { var l:Byte = (-0)+(-0); }
	def m2564():Void { var l:Byte = (-0)+(1); }
	def m2565():Void { var l:Byte = (-0)+(-1); }
	def m2566():Void { var l:Byte = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2567():Void { var l:Byte = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2568():Void { var l:Byte = (-0)+(127); }
	def m2569():Void { var l:Byte = (-0)+(-127); }
	def m2570():Void { var l:Byte = (-0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2571():Void { var l:Byte = (-0)+(-128); }
	def m2572():Void { var l:Byte = (-0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2573():Void { var l:Byte = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2574():Void { var l:Byte = (-0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2575():Void { var l:Byte = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2576():Void { var l:Byte = (-0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2577():Void { var l:Byte = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2578():Void { var l:Byte = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2579():Void { var l:Byte = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2580():Void { var l:Byte = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2581():Void { var l:Byte = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2582():Void { var l:Byte = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2583():Void { var l:Byte = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2584():Void { var l:Byte = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2585():Void { var l:Byte = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2586():Void { var l:Byte = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2587():Void { var l:Byte = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2588():Void { var l:Byte = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2589():Void { var l:Byte = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2590():Void { var l:Byte = (1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2591():Void { var l:Byte = (1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2592():Void { var l:Byte = (1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2593():Void { var l:Byte = (1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2594():Void { var l:Byte = (1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2595():Void { var l:Byte = (1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2596():Void { var l:Byte = (1)+(0); }
	def m2597():Void { var l:Byte = (1)+(-0); }
	def m2598():Void { var l:Byte = (1)+(1); }
	def m2599():Void { var l:Byte = (1)+(-1); }
	def m2600():Void { var l:Byte = (1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2601():Void { var l:Byte = (1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2602():Void { var l:Byte = (1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2603():Void { var l:Byte = (1)+(-127); }
	def m2604():Void { var l:Byte = (1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2605():Void { var l:Byte = (1)+(-128); }
	def m2606():Void { var l:Byte = (1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2607():Void { var l:Byte = (1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2608():Void { var l:Byte = (1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2609():Void { var l:Byte = (1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2610():Void { var l:Byte = (1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2611():Void { var l:Byte = (1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2612():Void { var l:Byte = (1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2613():Void { var l:Byte = (1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2614():Void { var l:Byte = (1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2615():Void { var l:Byte = (1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2616():Void { var l:Byte = (1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2617():Void { var l:Byte = (1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2618():Void { var l:Byte = (1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2619():Void { var l:Byte = (1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2620():Void { var l:Byte = (1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2621():Void { var l:Byte = (1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2622():Void { var l:Byte = (1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2623():Void { var l:Byte = (1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2624():Void { var l:Byte = (-1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2625():Void { var l:Byte = (-1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2626():Void { var l:Byte = (-1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2627():Void { var l:Byte = (-1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2628():Void { var l:Byte = (-1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2629():Void { var l:Byte = (-1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2630():Void { var l:Byte = (-1)+(0); }
	def m2631():Void { var l:Byte = (-1)+(-0); }
	def m2632():Void { var l:Byte = (-1)+(1); }
	def m2633():Void { var l:Byte = (-1)+(-1); }
	def m2634():Void { var l:Byte = (-1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2635():Void { var l:Byte = (-1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2636():Void { var l:Byte = (-1)+(127); }
	def m2637():Void { var l:Byte = (-1)+(-127); }
	def m2638():Void { var l:Byte = (-1)+(128); }
	def m2639():Void { var l:Byte = (-1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2640():Void { var l:Byte = (-1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2641():Void { var l:Byte = (-1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2642():Void { var l:Byte = (-1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2643():Void { var l:Byte = (-1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2644():Void { var l:Byte = (-1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2645():Void { var l:Byte = (-1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2646():Void { var l:Byte = (-1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2647():Void { var l:Byte = (-1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2648():Void { var l:Byte = (-1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2649():Void { var l:Byte = (-1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2650():Void { var l:Byte = (-1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2651():Void { var l:Byte = (-1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2652():Void { var l:Byte = (-1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2653():Void { var l:Byte = (-1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2654():Void { var l:Byte = (-1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2655():Void { var l:Byte = (-1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2656():Void { var l:Byte = (-1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2657():Void { var l:Byte = (-1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2658():Void { var l:Byte = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2659():Void { var l:Byte = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2660():Void { var l:Byte = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2661():Void { var l:Byte = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2662():Void { var l:Byte = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2663():Void { var l:Byte = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2664():Void { var l:Byte = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2665():Void { var l:Byte = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2666():Void { var l:Byte = (2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2667():Void { var l:Byte = (2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2668():Void { var l:Byte = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2669():Void { var l:Byte = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2670():Void { var l:Byte = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2671():Void { var l:Byte = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2672():Void { var l:Byte = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2673():Void { var l:Byte = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2674():Void { var l:Byte = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2675():Void { var l:Byte = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2676():Void { var l:Byte = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2677():Void { var l:Byte = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2678():Void { var l:Byte = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2679():Void { var l:Byte = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2680():Void { var l:Byte = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2681():Void { var l:Byte = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2682():Void { var l:Byte = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2683():Void { var l:Byte = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2684():Void { var l:Byte = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2685():Void { var l:Byte = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2686():Void { var l:Byte = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2687():Void { var l:Byte = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2688():Void { var l:Byte = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2689():Void { var l:Byte = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2690():Void { var l:Byte = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2691():Void { var l:Byte = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2692():Void { var l:Byte = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2693():Void { var l:Byte = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2694():Void { var l:Byte = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2695():Void { var l:Byte = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2696():Void { var l:Byte = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2697():Void { var l:Byte = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2698():Void { var l:Byte = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2699():Void { var l:Byte = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2700():Void { var l:Byte = (-2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2701():Void { var l:Byte = (-2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2702():Void { var l:Byte = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2703():Void { var l:Byte = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2704():Void { var l:Byte = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2705():Void { var l:Byte = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2706():Void { var l:Byte = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2707():Void { var l:Byte = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2708():Void { var l:Byte = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2709():Void { var l:Byte = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2710():Void { var l:Byte = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2711():Void { var l:Byte = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2712():Void { var l:Byte = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2713():Void { var l:Byte = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2714():Void { var l:Byte = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2715():Void { var l:Byte = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2716():Void { var l:Byte = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2717():Void { var l:Byte = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2718():Void { var l:Byte = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2719():Void { var l:Byte = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2720():Void { var l:Byte = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2721():Void { var l:Byte = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2722():Void { var l:Byte = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2723():Void { var l:Byte = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2724():Void { var l:Byte = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2725():Void { var l:Byte = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2726():Void { var l:Byte = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2727():Void { var l:Byte = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2728():Void { var l:Byte = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2729():Void { var l:Byte = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2730():Void { var l:Byte = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2731():Void { var l:Byte = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2732():Void { var l:Byte = (127)+(0); }
	def m2733():Void { var l:Byte = (127)+(-0); }
	def m2734():Void { var l:Byte = (127)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2735():Void { var l:Byte = (127)+(-1); }
	def m2736():Void { var l:Byte = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2737():Void { var l:Byte = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2738():Void { var l:Byte = (127)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2739():Void { var l:Byte = (127)+(-127); }
	def m2740():Void { var l:Byte = (127)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2741():Void { var l:Byte = (127)+(-128); }
	def m2742():Void { var l:Byte = (127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2743():Void { var l:Byte = (127)+(-255); }
	def m2744():Void { var l:Byte = (127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2745():Void { var l:Byte = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2746():Void { var l:Byte = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2747():Void { var l:Byte = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2748():Void { var l:Byte = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2749():Void { var l:Byte = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2750():Void { var l:Byte = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2751():Void { var l:Byte = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2752():Void { var l:Byte = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2753():Void { var l:Byte = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2754():Void { var l:Byte = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2755():Void { var l:Byte = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2756():Void { var l:Byte = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2757():Void { var l:Byte = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2758():Void { var l:Byte = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2759():Void { var l:Byte = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2760():Void { var l:Byte = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2761():Void { var l:Byte = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2762():Void { var l:Byte = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2763():Void { var l:Byte = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2764():Void { var l:Byte = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2765():Void { var l:Byte = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2766():Void { var l:Byte = (-127)+(0); }
	def m2767():Void { var l:Byte = (-127)+(-0); }
	def m2768():Void { var l:Byte = (-127)+(1); }
	def m2769():Void { var l:Byte = (-127)+(-1); }
	def m2770():Void { var l:Byte = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2771():Void { var l:Byte = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2772():Void { var l:Byte = (-127)+(127); }
	def m2773():Void { var l:Byte = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2774():Void { var l:Byte = (-127)+(128); }
	def m2775():Void { var l:Byte = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2776():Void { var l:Byte = (-127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2777():Void { var l:Byte = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2778():Void { var l:Byte = (-127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2779():Void { var l:Byte = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2780():Void { var l:Byte = (-127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2781():Void { var l:Byte = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2782():Void { var l:Byte = (-127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2783():Void { var l:Byte = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2784():Void { var l:Byte = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2785():Void { var l:Byte = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2786():Void { var l:Byte = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2787():Void { var l:Byte = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2788():Void { var l:Byte = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2789():Void { var l:Byte = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2790():Void { var l:Byte = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2791():Void { var l:Byte = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2792():Void { var l:Byte = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2793():Void { var l:Byte = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2794():Void { var l:Byte = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2795():Void { var l:Byte = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2796():Void { var l:Byte = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2797():Void { var l:Byte = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2798():Void { var l:Byte = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2799():Void { var l:Byte = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2800():Void { var l:Byte = (128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2801():Void { var l:Byte = (128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2802():Void { var l:Byte = (128)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2803():Void { var l:Byte = (128)+(-1); }
	def m2804():Void { var l:Byte = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2805():Void { var l:Byte = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2806():Void { var l:Byte = (128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2807():Void { var l:Byte = (128)+(-127); }
	def m2808():Void { var l:Byte = (128)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2809():Void { var l:Byte = (128)+(-128); }
	def m2810():Void { var l:Byte = (128)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2811():Void { var l:Byte = (128)+(-255); }
	def m2812():Void { var l:Byte = (128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2813():Void { var l:Byte = (128)+(-256); }
	def m2814():Void { var l:Byte = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2815():Void { var l:Byte = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2816():Void { var l:Byte = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2817():Void { var l:Byte = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2818():Void { var l:Byte = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2819():Void { var l:Byte = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2820():Void { var l:Byte = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2821():Void { var l:Byte = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2822():Void { var l:Byte = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2823():Void { var l:Byte = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2824():Void { var l:Byte = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2825():Void { var l:Byte = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2826():Void { var l:Byte = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2827():Void { var l:Byte = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2828():Void { var l:Byte = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2829():Void { var l:Byte = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2830():Void { var l:Byte = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2831():Void { var l:Byte = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2832():Void { var l:Byte = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2833():Void { var l:Byte = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2834():Void { var l:Byte = (-128)+(0); }
	def m2835():Void { var l:Byte = (-128)+(-0); }
	def m2836():Void { var l:Byte = (-128)+(1); }
	def m2837():Void { var l:Byte = (-128)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2838():Void { var l:Byte = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2839():Void { var l:Byte = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2840():Void { var l:Byte = (-128)+(127); }
	def m2841():Void { var l:Byte = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2842():Void { var l:Byte = (-128)+(128); }
	def m2843():Void { var l:Byte = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2844():Void { var l:Byte = (-128)+(255); }
	def m2845():Void { var l:Byte = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2846():Void { var l:Byte = (-128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2847():Void { var l:Byte = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2848():Void { var l:Byte = (-128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2849():Void { var l:Byte = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2850():Void { var l:Byte = (-128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2851():Void { var l:Byte = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2852():Void { var l:Byte = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2853():Void { var l:Byte = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2854():Void { var l:Byte = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2855():Void { var l:Byte = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2856():Void { var l:Byte = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2857():Void { var l:Byte = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2858():Void { var l:Byte = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2859():Void { var l:Byte = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2860():Void { var l:Byte = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2861():Void { var l:Byte = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2862():Void { var l:Byte = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2863():Void { var l:Byte = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2864():Void { var l:Byte = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2865():Void { var l:Byte = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2866():Void { var l:Byte = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2867():Void { var l:Byte = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2868():Void { var l:Byte = (255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2869():Void { var l:Byte = (255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2870():Void { var l:Byte = (255)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2871():Void { var l:Byte = (255)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2872():Void { var l:Byte = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2873():Void { var l:Byte = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2874():Void { var l:Byte = (255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2875():Void { var l:Byte = (255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2876():Void { var l:Byte = (255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2877():Void { var l:Byte = (255)+(-128); }
	def m2878():Void { var l:Byte = (255)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2879():Void { var l:Byte = (255)+(-255); }
	def m2880():Void { var l:Byte = (255)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2881():Void { var l:Byte = (255)+(-256); }
	def m2882():Void { var l:Byte = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2883():Void { var l:Byte = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2884():Void { var l:Byte = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2885():Void { var l:Byte = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2886():Void { var l:Byte = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2887():Void { var l:Byte = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2888():Void { var l:Byte = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2889():Void { var l:Byte = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2890():Void { var l:Byte = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2891():Void { var l:Byte = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2892():Void { var l:Byte = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2893():Void { var l:Byte = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2894():Void { var l:Byte = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2895():Void { var l:Byte = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2896():Void { var l:Byte = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2897():Void { var l:Byte = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2898():Void { var l:Byte = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2899():Void { var l:Byte = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2900():Void { var l:Byte = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2901():Void { var l:Byte = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2902():Void { var l:Byte = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2903():Void { var l:Byte = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2904():Void { var l:Byte = (-255)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2905():Void { var l:Byte = (-255)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2906():Void { var l:Byte = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2907():Void { var l:Byte = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2908():Void { var l:Byte = (-255)+(127); }
	def m2909():Void { var l:Byte = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2910():Void { var l:Byte = (-255)+(128); }
	def m2911():Void { var l:Byte = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2912():Void { var l:Byte = (-255)+(255); }
	def m2913():Void { var l:Byte = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2914():Void { var l:Byte = (-255)+(256); }
	def m2915():Void { var l:Byte = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2916():Void { var l:Byte = (-255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2917():Void { var l:Byte = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2918():Void { var l:Byte = (-255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2919():Void { var l:Byte = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2920():Void { var l:Byte = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2921():Void { var l:Byte = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2922():Void { var l:Byte = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2923():Void { var l:Byte = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2924():Void { var l:Byte = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2925():Void { var l:Byte = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2926():Void { var l:Byte = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2927():Void { var l:Byte = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2928():Void { var l:Byte = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2929():Void { var l:Byte = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2930():Void { var l:Byte = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2931():Void { var l:Byte = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2932():Void { var l:Byte = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2933():Void { var l:Byte = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2934():Void { var l:Byte = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2935():Void { var l:Byte = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2936():Void { var l:Byte = (256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2937():Void { var l:Byte = (256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2938():Void { var l:Byte = (256)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2939():Void { var l:Byte = (256)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2940():Void { var l:Byte = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2941():Void { var l:Byte = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2942():Void { var l:Byte = (256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2943():Void { var l:Byte = (256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2944():Void { var l:Byte = (256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2945():Void { var l:Byte = (256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2946():Void { var l:Byte = (256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2947():Void { var l:Byte = (256)+(-255); }
	def m2948():Void { var l:Byte = (256)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2949():Void { var l:Byte = (256)+(-256); }
	def m2950():Void { var l:Byte = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2951():Void { var l:Byte = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2952():Void { var l:Byte = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2953():Void { var l:Byte = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2954():Void { var l:Byte = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2955():Void { var l:Byte = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2956():Void { var l:Byte = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2957():Void { var l:Byte = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2958():Void { var l:Byte = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2959():Void { var l:Byte = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2960():Void { var l:Byte = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2961():Void { var l:Byte = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2962():Void { var l:Byte = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2963():Void { var l:Byte = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2964():Void { var l:Byte = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2965():Void { var l:Byte = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2966():Void { var l:Byte = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2967():Void { var l:Byte = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2968():Void { var l:Byte = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2969():Void { var l:Byte = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2970():Void { var l:Byte = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2971():Void { var l:Byte = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2972():Void { var l:Byte = (-256)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2973():Void { var l:Byte = (-256)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2974():Void { var l:Byte = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2975():Void { var l:Byte = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2976():Void { var l:Byte = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2977():Void { var l:Byte = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2978():Void { var l:Byte = (-256)+(128); }
	def m2979():Void { var l:Byte = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2980():Void { var l:Byte = (-256)+(255); }
	def m2981():Void { var l:Byte = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2982():Void { var l:Byte = (-256)+(256); }
	def m2983():Void { var l:Byte = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2984():Void { var l:Byte = (-256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2985():Void { var l:Byte = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2986():Void { var l:Byte = (-256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2987():Void { var l:Byte = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2988():Void { var l:Byte = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2989():Void { var l:Byte = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2990():Void { var l:Byte = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2991():Void { var l:Byte = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2992():Void { var l:Byte = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2993():Void { var l:Byte = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2994():Void { var l:Byte = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2995():Void { var l:Byte = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2996():Void { var l:Byte = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2997():Void { var l:Byte = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2998():Void { var l:Byte = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2999():Void { var l:Byte = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3000():Void { var l:Byte = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3001():Void { var l:Byte = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3002():Void { var l:Byte = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3003():Void { var l:Byte = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3004():Void { var l:Byte = (32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3005():Void { var l:Byte = (32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3006():Void { var l:Byte = (32767)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3007():Void { var l:Byte = (32767)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3008():Void { var l:Byte = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3009():Void { var l:Byte = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3010():Void { var l:Byte = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3011():Void { var l:Byte = (32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3012():Void { var l:Byte = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3013():Void { var l:Byte = (32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3014():Void { var l:Byte = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3015():Void { var l:Byte = (32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3016():Void { var l:Byte = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3017():Void { var l:Byte = (32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3018():Void { var l:Byte = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3019():Void { var l:Byte = (32767)+(-32767); }
	def m3020():Void { var l:Byte = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3021():Void { var l:Byte = (32767)+(-32768); }
	def m3022():Void { var l:Byte = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3023():Void { var l:Byte = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3024():Void { var l:Byte = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3025():Void { var l:Byte = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3026():Void { var l:Byte = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3027():Void { var l:Byte = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3028():Void { var l:Byte = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3029():Void { var l:Byte = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3030():Void { var l:Byte = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3031():Void { var l:Byte = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3032():Void { var l:Byte = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3033():Void { var l:Byte = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3034():Void { var l:Byte = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3035():Void { var l:Byte = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3036():Void { var l:Byte = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3037():Void { var l:Byte = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3038():Void { var l:Byte = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3039():Void { var l:Byte = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3040():Void { var l:Byte = (-32767)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3041():Void { var l:Byte = (-32767)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3042():Void { var l:Byte = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3043():Void { var l:Byte = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3044():Void { var l:Byte = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3045():Void { var l:Byte = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3046():Void { var l:Byte = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3047():Void { var l:Byte = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3048():Void { var l:Byte = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3049():Void { var l:Byte = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3050():Void { var l:Byte = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3051():Void { var l:Byte = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3052():Void { var l:Byte = (-32767)+(32767); }
	def m3053():Void { var l:Byte = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3054():Void { var l:Byte = (-32767)+(32768); }
	def m3055():Void { var l:Byte = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3056():Void { var l:Byte = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3057():Void { var l:Byte = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3058():Void { var l:Byte = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3059():Void { var l:Byte = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3060():Void { var l:Byte = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3061():Void { var l:Byte = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3062():Void { var l:Byte = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3063():Void { var l:Byte = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3064():Void { var l:Byte = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3065():Void { var l:Byte = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3066():Void { var l:Byte = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3067():Void { var l:Byte = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3068():Void { var l:Byte = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3069():Void { var l:Byte = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3070():Void { var l:Byte = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3071():Void { var l:Byte = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3072():Void { var l:Byte = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3073():Void { var l:Byte = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3074():Void { var l:Byte = (32768)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3075():Void { var l:Byte = (32768)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3076():Void { var l:Byte = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3077():Void { var l:Byte = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3078():Void { var l:Byte = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3079():Void { var l:Byte = (32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3080():Void { var l:Byte = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3081():Void { var l:Byte = (32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3082():Void { var l:Byte = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3083():Void { var l:Byte = (32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3084():Void { var l:Byte = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3085():Void { var l:Byte = (32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3086():Void { var l:Byte = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3087():Void { var l:Byte = (32768)+(-32767); }
	def m3088():Void { var l:Byte = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3089():Void { var l:Byte = (32768)+(-32768); }
	def m3090():Void { var l:Byte = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3091():Void { var l:Byte = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3092():Void { var l:Byte = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3093():Void { var l:Byte = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3094():Void { var l:Byte = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3095():Void { var l:Byte = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3096():Void { var l:Byte = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3097():Void { var l:Byte = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3098():Void { var l:Byte = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3099():Void { var l:Byte = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3100():Void { var l:Byte = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3101():Void { var l:Byte = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3102():Void { var l:Byte = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3103():Void { var l:Byte = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3104():Void { var l:Byte = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3105():Void { var l:Byte = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3106():Void { var l:Byte = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3107():Void { var l:Byte = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3108():Void { var l:Byte = (-32768)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3109():Void { var l:Byte = (-32768)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3110():Void { var l:Byte = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3111():Void { var l:Byte = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3112():Void { var l:Byte = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3113():Void { var l:Byte = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3114():Void { var l:Byte = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3115():Void { var l:Byte = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3116():Void { var l:Byte = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3117():Void { var l:Byte = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3118():Void { var l:Byte = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3119():Void { var l:Byte = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3120():Void { var l:Byte = (-32768)+(32767); }
	def m3121():Void { var l:Byte = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3122():Void { var l:Byte = (-32768)+(32768); }
	def m3123():Void { var l:Byte = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3124():Void { var l:Byte = (-32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3125():Void { var l:Byte = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3126():Void { var l:Byte = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3127():Void { var l:Byte = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3128():Void { var l:Byte = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3129():Void { var l:Byte = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3130():Void { var l:Byte = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3131():Void { var l:Byte = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3132():Void { var l:Byte = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3133():Void { var l:Byte = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3134():Void { var l:Byte = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3135():Void { var l:Byte = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3136():Void { var l:Byte = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3137():Void { var l:Byte = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3138():Void { var l:Byte = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3139():Void { var l:Byte = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3140():Void { var l:Byte = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3141():Void { var l:Byte = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3142():Void { var l:Byte = (65535)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3143():Void { var l:Byte = (65535)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3144():Void { var l:Byte = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3145():Void { var l:Byte = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3146():Void { var l:Byte = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3147():Void { var l:Byte = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3148():Void { var l:Byte = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3149():Void { var l:Byte = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3150():Void { var l:Byte = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3151():Void { var l:Byte = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3152():Void { var l:Byte = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3153():Void { var l:Byte = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3154():Void { var l:Byte = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3155():Void { var l:Byte = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3156():Void { var l:Byte = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3157():Void { var l:Byte = (65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3158():Void { var l:Byte = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3159():Void { var l:Byte = (65535)+(-65535); }
	def m3160():Void { var l:Byte = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3161():Void { var l:Byte = (65535)+(-65536); }
	def m3162():Void { var l:Byte = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3163():Void { var l:Byte = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3164():Void { var l:Byte = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3165():Void { var l:Byte = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3166():Void { var l:Byte = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3167():Void { var l:Byte = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3168():Void { var l:Byte = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3169():Void { var l:Byte = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3170():Void { var l:Byte = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3171():Void { var l:Byte = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3172():Void { var l:Byte = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3173():Void { var l:Byte = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3174():Void { var l:Byte = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3175():Void { var l:Byte = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3176():Void { var l:Byte = (-65535)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3177():Void { var l:Byte = (-65535)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3178():Void { var l:Byte = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3179():Void { var l:Byte = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3180():Void { var l:Byte = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3181():Void { var l:Byte = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3182():Void { var l:Byte = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3183():Void { var l:Byte = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3184():Void { var l:Byte = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3185():Void { var l:Byte = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3186():Void { var l:Byte = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3187():Void { var l:Byte = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3188():Void { var l:Byte = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3189():Void { var l:Byte = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3190():Void { var l:Byte = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3191():Void { var l:Byte = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3192():Void { var l:Byte = (-65535)+(65535); }
	def m3193():Void { var l:Byte = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3194():Void { var l:Byte = (-65535)+(65536); }
	def m3195():Void { var l:Byte = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3196():Void { var l:Byte = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3197():Void { var l:Byte = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3198():Void { var l:Byte = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3199():Void { var l:Byte = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3200():Void { var l:Byte = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3201():Void { var l:Byte = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3202():Void { var l:Byte = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3203():Void { var l:Byte = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3204():Void { var l:Byte = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3205():Void { var l:Byte = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3206():Void { var l:Byte = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3207():Void { var l:Byte = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3208():Void { var l:Byte = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3209():Void { var l:Byte = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3210():Void { var l:Byte = (65536)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3211():Void { var l:Byte = (65536)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3212():Void { var l:Byte = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3213():Void { var l:Byte = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3214():Void { var l:Byte = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3215():Void { var l:Byte = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3216():Void { var l:Byte = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3217():Void { var l:Byte = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3218():Void { var l:Byte = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3219():Void { var l:Byte = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3220():Void { var l:Byte = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3221():Void { var l:Byte = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3222():Void { var l:Byte = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3223():Void { var l:Byte = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3224():Void { var l:Byte = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3225():Void { var l:Byte = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3226():Void { var l:Byte = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3227():Void { var l:Byte = (65536)+(-65535); }
	def m3228():Void { var l:Byte = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3229():Void { var l:Byte = (65536)+(-65536); }
	def m3230():Void { var l:Byte = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3231():Void { var l:Byte = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3232():Void { var l:Byte = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3233():Void { var l:Byte = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3234():Void { var l:Byte = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3235():Void { var l:Byte = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3236():Void { var l:Byte = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3237():Void { var l:Byte = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3238():Void { var l:Byte = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3239():Void { var l:Byte = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3240():Void { var l:Byte = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3241():Void { var l:Byte = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3242():Void { var l:Byte = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3243():Void { var l:Byte = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3244():Void { var l:Byte = (-65536)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3245():Void { var l:Byte = (-65536)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3246():Void { var l:Byte = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3247():Void { var l:Byte = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3248():Void { var l:Byte = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3249():Void { var l:Byte = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3250():Void { var l:Byte = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3251():Void { var l:Byte = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3252():Void { var l:Byte = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3253():Void { var l:Byte = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3254():Void { var l:Byte = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3255():Void { var l:Byte = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3256():Void { var l:Byte = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3257():Void { var l:Byte = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3258():Void { var l:Byte = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3259():Void { var l:Byte = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3260():Void { var l:Byte = (-65536)+(65535); }
	def m3261():Void { var l:Byte = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3262():Void { var l:Byte = (-65536)+(65536); }
	def m3263():Void { var l:Byte = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3264():Void { var l:Byte = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3265():Void { var l:Byte = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3266():Void { var l:Byte = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3267():Void { var l:Byte = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3268():Void { var l:Byte = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3269():Void { var l:Byte = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3270():Void { var l:Byte = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3271():Void { var l:Byte = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3272():Void { var l:Byte = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3273():Void { var l:Byte = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3274():Void { var l:Byte = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3275():Void { var l:Byte = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3276():Void { var l:Byte = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3277():Void { var l:Byte = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3278():Void { var l:Byte = (16777216)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3279():Void { var l:Byte = (16777216)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3280():Void { var l:Byte = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3281():Void { var l:Byte = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3282():Void { var l:Byte = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3283():Void { var l:Byte = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3284():Void { var l:Byte = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3285():Void { var l:Byte = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3286():Void { var l:Byte = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3287():Void { var l:Byte = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3288():Void { var l:Byte = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3289():Void { var l:Byte = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3290():Void { var l:Byte = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3291():Void { var l:Byte = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3292():Void { var l:Byte = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3293():Void { var l:Byte = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3294():Void { var l:Byte = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3295():Void { var l:Byte = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3296():Void { var l:Byte = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3297():Void { var l:Byte = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3298():Void { var l:Byte = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3299():Void { var l:Byte = (16777216)+(-16777216); }
	def m3300():Void { var l:Byte = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3301():Void { var l:Byte = (16777216)+(-16777217); }
	def m3302():Void { var l:Byte = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3303():Void { var l:Byte = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3304():Void { var l:Byte = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3305():Void { var l:Byte = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3306():Void { var l:Byte = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3307():Void { var l:Byte = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3308():Void { var l:Byte = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3309():Void { var l:Byte = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3310():Void { var l:Byte = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3311():Void { var l:Byte = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3312():Void { var l:Byte = (-16777216)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3313():Void { var l:Byte = (-16777216)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3314():Void { var l:Byte = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3315():Void { var l:Byte = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3316():Void { var l:Byte = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3317():Void { var l:Byte = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3318():Void { var l:Byte = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3319():Void { var l:Byte = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3320():Void { var l:Byte = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3321():Void { var l:Byte = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3322():Void { var l:Byte = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3323():Void { var l:Byte = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3324():Void { var l:Byte = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3325():Void { var l:Byte = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3326():Void { var l:Byte = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3327():Void { var l:Byte = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3328():Void { var l:Byte = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3329():Void { var l:Byte = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3330():Void { var l:Byte = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3331():Void { var l:Byte = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3332():Void { var l:Byte = (-16777216)+(16777216); }
	def m3333():Void { var l:Byte = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3334():Void { var l:Byte = (-16777216)+(16777217); }
	def m3335():Void { var l:Byte = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3336():Void { var l:Byte = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3337():Void { var l:Byte = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3338():Void { var l:Byte = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3339():Void { var l:Byte = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3340():Void { var l:Byte = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3341():Void { var l:Byte = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3342():Void { var l:Byte = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3343():Void { var l:Byte = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3344():Void { var l:Byte = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3345():Void { var l:Byte = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3346():Void { var l:Byte = (16777217)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3347():Void { var l:Byte = (16777217)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3348():Void { var l:Byte = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3349():Void { var l:Byte = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3350():Void { var l:Byte = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3351():Void { var l:Byte = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3352():Void { var l:Byte = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3353():Void { var l:Byte = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3354():Void { var l:Byte = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3355():Void { var l:Byte = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3356():Void { var l:Byte = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3357():Void { var l:Byte = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3358():Void { var l:Byte = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3359():Void { var l:Byte = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3360():Void { var l:Byte = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3361():Void { var l:Byte = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3362():Void { var l:Byte = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3363():Void { var l:Byte = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3364():Void { var l:Byte = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3365():Void { var l:Byte = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3366():Void { var l:Byte = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3367():Void { var l:Byte = (16777217)+(-16777216); }
	def m3368():Void { var l:Byte = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3369():Void { var l:Byte = (16777217)+(-16777217); }
	def m3370():Void { var l:Byte = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3371():Void { var l:Byte = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3372():Void { var l:Byte = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3373():Void { var l:Byte = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3374():Void { var l:Byte = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3375():Void { var l:Byte = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3376():Void { var l:Byte = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3377():Void { var l:Byte = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3378():Void { var l:Byte = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3379():Void { var l:Byte = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3380():Void { var l:Byte = (-16777217)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3381():Void { var l:Byte = (-16777217)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3382():Void { var l:Byte = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3383():Void { var l:Byte = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3384():Void { var l:Byte = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3385():Void { var l:Byte = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3386():Void { var l:Byte = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3387():Void { var l:Byte = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3388():Void { var l:Byte = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3389():Void { var l:Byte = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3390():Void { var l:Byte = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3391():Void { var l:Byte = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3392():Void { var l:Byte = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3393():Void { var l:Byte = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3394():Void { var l:Byte = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3395():Void { var l:Byte = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3396():Void { var l:Byte = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3397():Void { var l:Byte = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3398():Void { var l:Byte = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3399():Void { var l:Byte = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3400():Void { var l:Byte = (-16777217)+(16777216); }
	def m3401():Void { var l:Byte = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3402():Void { var l:Byte = (-16777217)+(16777217); }
	def m3403():Void { var l:Byte = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3404():Void { var l:Byte = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3405():Void { var l:Byte = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3406():Void { var l:Byte = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3407():Void { var l:Byte = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3408():Void { var l:Byte = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3409():Void { var l:Byte = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3410():Void { var l:Byte = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3411():Void { var l:Byte = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3412():Void { var l:Byte = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3413():Void { var l:Byte = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3414():Void { var l:Byte = (2147483647)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3415():Void { var l:Byte = (2147483647)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3416():Void { var l:Byte = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3417():Void { var l:Byte = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3418():Void { var l:Byte = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3419():Void { var l:Byte = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3420():Void { var l:Byte = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3421():Void { var l:Byte = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3422():Void { var l:Byte = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3423():Void { var l:Byte = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3424():Void { var l:Byte = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3425():Void { var l:Byte = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3426():Void { var l:Byte = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3427():Void { var l:Byte = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3428():Void { var l:Byte = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3429():Void { var l:Byte = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3430():Void { var l:Byte = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3431():Void { var l:Byte = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3432():Void { var l:Byte = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3433():Void { var l:Byte = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3434():Void { var l:Byte = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3435():Void { var l:Byte = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3436():Void { var l:Byte = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3437():Void { var l:Byte = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3438():Void { var l:Byte = (2147483647)+(2147483647); }
	def m3439():Void { var l:Byte = (2147483647)+(-2147483647); }
	def m3440():Void { var l:Byte = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3441():Void { var l:Byte = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3442():Void { var l:Byte = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3443():Void { var l:Byte = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3444():Void { var l:Byte = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3445():Void { var l:Byte = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3446():Void { var l:Byte = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3447():Void { var l:Byte = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3448():Void { var l:Byte = (-2147483647)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3449():Void { var l:Byte = (-2147483647)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3450():Void { var l:Byte = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3451():Void { var l:Byte = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3452():Void { var l:Byte = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3453():Void { var l:Byte = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3454():Void { var l:Byte = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3455():Void { var l:Byte = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3456():Void { var l:Byte = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3457():Void { var l:Byte = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3458():Void { var l:Byte = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3459():Void { var l:Byte = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3460():Void { var l:Byte = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3461():Void { var l:Byte = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3462():Void { var l:Byte = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3463():Void { var l:Byte = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3464():Void { var l:Byte = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3465():Void { var l:Byte = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3466():Void { var l:Byte = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3467():Void { var l:Byte = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3468():Void { var l:Byte = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3469():Void { var l:Byte = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3470():Void { var l:Byte = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3471():Void { var l:Byte = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3472():Void { var l:Byte = (-2147483647)+(2147483647); }
	def m3473():Void { var l:Byte = (-2147483647)+(-2147483647); }
	def m3474():Void { var l:Int = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3475():Void { var l:Int = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3476():Void { var l:Int = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3477():Void { var l:Int = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3478():Void { var l:Int = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3479():Void { var l:Int = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3480():Void { var l:Int = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3481():Void { var l:Int = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3482():Void { var l:Int = (w0)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3483():Void { var l:Int = (w0)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3484():Void { var l:Int = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3485():Void { var l:Int = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3486():Void { var l:Int = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3487():Void { var l:Int = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3488():Void { var l:Int = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3489():Void { var l:Int = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3490():Void { var l:Int = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3491():Void { var l:Int = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3492():Void { var l:Int = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3493():Void { var l:Int = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3494():Void { var l:Int = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3495():Void { var l:Int = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3496():Void { var l:Int = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3497():Void { var l:Int = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3498():Void { var l:Int = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3499():Void { var l:Int = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3500():Void { var l:Int = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3501():Void { var l:Int = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3502():Void { var l:Int = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3503():Void { var l:Int = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3504():Void { var l:Int = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3505():Void { var l:Int = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3506():Void { var l:Int = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3507():Void { var l:Int = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3508():Void { var l:Int = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3509():Void { var l:Int = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3510():Void { var l:Int = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3511():Void { var l:Int = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3512():Void { var l:Int = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3513():Void { var l:Int = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3514():Void { var l:Int = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3515():Void { var l:Int = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3516():Void { var l:Int = (w1)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3517():Void { var l:Int = (w1)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3518():Void { var l:Int = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3519():Void { var l:Int = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3520():Void { var l:Int = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3521():Void { var l:Int = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3522():Void { var l:Int = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3523():Void { var l:Int = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3524():Void { var l:Int = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3525():Void { var l:Int = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3526():Void { var l:Int = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3527():Void { var l:Int = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3528():Void { var l:Int = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3529():Void { var l:Int = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3530():Void { var l:Int = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3531():Void { var l:Int = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3532():Void { var l:Int = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3533():Void { var l:Int = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3534():Void { var l:Int = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3535():Void { var l:Int = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3536():Void { var l:Int = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3537():Void { var l:Int = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3538():Void { var l:Int = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3539():Void { var l:Int = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3540():Void { var l:Int = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3541():Void { var l:Int = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3542():Void { var l:Int = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3543():Void { var l:Int = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3544():Void { var l:Int = (w2)+(w2); }
	def m3545():Void { var l:Int = (w2)+(w3); }
	def m3546():Void { var l:Int = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3547():Void { var l:Int = (w2)+(w5); }
	def m3548():Void { var l:Int = (w2)+(0); }
	def m3549():Void { var l:Int = (w2)+(-0); }
	def m3550():Void { var l:Int = (w2)+(1); }
	def m3551():Void { var l:Int = (w2)+(-1); }
	def m3552():Void { var l:Int = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3553():Void { var l:Int = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3554():Void { var l:Int = (w2)+(127); }
	def m3555():Void { var l:Int = (w2)+(-127); }
	def m3556():Void { var l:Int = (w2)+(128); }
	def m3557():Void { var l:Int = (w2)+(-128); }
	def m3558():Void { var l:Int = (w2)+(255); }
	def m3559():Void { var l:Int = (w2)+(-255); }
	def m3560():Void { var l:Int = (w2)+(256); }
	def m3561():Void { var l:Int = (w2)+(-256); }
	def m3562():Void { var l:Int = (w2)+(32767); }
	def m3563():Void { var l:Int = (w2)+(-32767); }
	def m3564():Void { var l:Int = (w2)+(32768); }
	def m3565():Void { var l:Int = (w2)+(-32768); }
	def m3566():Void { var l:Int = (w2)+(65535); }
	def m3567():Void { var l:Int = (w2)+(-65535); }
	def m3568():Void { var l:Int = (w2)+(65536); }
	def m3569():Void { var l:Int = (w2)+(-65536); }
	def m3570():Void { var l:Int = (w2)+(16777216); }
	def m3571():Void { var l:Int = (w2)+(-16777216); }
	def m3572():Void { var l:Int = (w2)+(16777217); }
	def m3573():Void { var l:Int = (w2)+(-16777217); }
	def m3574():Void { var l:Int = (w2)+(2147483647); }
	def m3575():Void { var l:Int = (w2)+(-2147483647); }
	def m3576():Void { var l:Int = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3577():Void { var l:Int = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3578():Void { var l:Int = (w3)+(w2); }
	def m3579():Void { var l:Int = (w3)+(w3); }
	def m3580():Void { var l:Int = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3581():Void { var l:Int = (w3)+(w5); }
	def m3582():Void { var l:Int = (w3)+(0); }
	def m3583():Void { var l:Int = (w3)+(-0); }
	def m3584():Void { var l:Int = (w3)+(1); }
	def m3585():Void { var l:Int = (w3)+(-1); }
	def m3586():Void { var l:Int = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3587():Void { var l:Int = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3588():Void { var l:Int = (w3)+(127); }
	def m3589():Void { var l:Int = (w3)+(-127); }
	def m3590():Void { var l:Int = (w3)+(128); }
	def m3591():Void { var l:Int = (w3)+(-128); }
	def m3592():Void { var l:Int = (w3)+(255); }
	def m3593():Void { var l:Int = (w3)+(-255); }
	def m3594():Void { var l:Int = (w3)+(256); }
	def m3595():Void { var l:Int = (w3)+(-256); }
	def m3596():Void { var l:Int = (w3)+(32767); }
	def m3597():Void { var l:Int = (w3)+(-32767); }
	def m3598():Void { var l:Int = (w3)+(32768); }
	def m3599():Void { var l:Int = (w3)+(-32768); }
	def m3600():Void { var l:Int = (w3)+(65535); }
	def m3601():Void { var l:Int = (w3)+(-65535); }
	def m3602():Void { var l:Int = (w3)+(65536); }
	def m3603():Void { var l:Int = (w3)+(-65536); }
	def m3604():Void { var l:Int = (w3)+(16777216); }
	def m3605():Void { var l:Int = (w3)+(-16777216); }
	def m3606():Void { var l:Int = (w3)+(16777217); }
	def m3607():Void { var l:Int = (w3)+(-16777217); }
	def m3608():Void { var l:Int = (w3)+(2147483647); }
	def m3609():Void { var l:Int = (w3)+(-2147483647); }
	def m3610():Void { var l:Int = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3611():Void { var l:Int = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3612():Void { var l:Int = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3613():Void { var l:Int = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3614():Void { var l:Int = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3615():Void { var l:Int = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3616():Void { var l:Int = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3617():Void { var l:Int = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3618():Void { var l:Int = (w4)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3619():Void { var l:Int = (w4)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3620():Void { var l:Int = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3621():Void { var l:Int = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3622():Void { var l:Int = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3623():Void { var l:Int = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3624():Void { var l:Int = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3625():Void { var l:Int = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3626():Void { var l:Int = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3627():Void { var l:Int = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3628():Void { var l:Int = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3629():Void { var l:Int = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3630():Void { var l:Int = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3631():Void { var l:Int = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3632():Void { var l:Int = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3633():Void { var l:Int = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3634():Void { var l:Int = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3635():Void { var l:Int = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3636():Void { var l:Int = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3637():Void { var l:Int = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3638():Void { var l:Int = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3639():Void { var l:Int = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3640():Void { var l:Int = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3641():Void { var l:Int = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3642():Void { var l:Int = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3643():Void { var l:Int = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3644():Void { var l:Int = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3645():Void { var l:Int = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3646():Void { var l:Int = (w5)+(w2); }
	def m3647():Void { var l:Int = (w5)+(w3); }
	def m3648():Void { var l:Int = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3649():Void { var l:Int = (w5)+(w5); }
	def m3650():Void { var l:Int = (w5)+(0); }
	def m3651():Void { var l:Int = (w5)+(-0); }
	def m3652():Void { var l:Int = (w5)+(1); }
	def m3653():Void { var l:Int = (w5)+(-1); }
	def m3654():Void { var l:Int = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3655():Void { var l:Int = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3656():Void { var l:Int = (w5)+(127); }
	def m3657():Void { var l:Int = (w5)+(-127); }
	def m3658():Void { var l:Int = (w5)+(128); }
	def m3659():Void { var l:Int = (w5)+(-128); }
	def m3660():Void { var l:Int = (w5)+(255); }
	def m3661():Void { var l:Int = (w5)+(-255); }
	def m3662():Void { var l:Int = (w5)+(256); }
	def m3663():Void { var l:Int = (w5)+(-256); }
	def m3664():Void { var l:Int = (w5)+(32767); }
	def m3665():Void { var l:Int = (w5)+(-32767); }
	def m3666():Void { var l:Int = (w5)+(32768); }
	def m3667():Void { var l:Int = (w5)+(-32768); }
	def m3668():Void { var l:Int = (w5)+(65535); }
	def m3669():Void { var l:Int = (w5)+(-65535); }
	def m3670():Void { var l:Int = (w5)+(65536); }
	def m3671():Void { var l:Int = (w5)+(-65536); }
	def m3672():Void { var l:Int = (w5)+(16777216); }
	def m3673():Void { var l:Int = (w5)+(-16777216); }
	def m3674():Void { var l:Int = (w5)+(16777217); }
	def m3675():Void { var l:Int = (w5)+(-16777217); }
	def m3676():Void { var l:Int = (w5)+(2147483647); }
	def m3677():Void { var l:Int = (w5)+(-2147483647); }
	def m3678():Void { var l:Int = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3679():Void { var l:Int = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3680():Void { var l:Int = (0)+(w2); }
	def m3681():Void { var l:Int = (0)+(w3); }
	def m3682():Void { var l:Int = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3683():Void { var l:Int = (0)+(w5); }
	def m3684():Void { var l:Int = (0)+(0); }
	def m3685():Void { var l:Int = (0)+(-0); }
	def m3686():Void { var l:Int = (0)+(1); }
	def m3687():Void { var l:Int = (0)+(-1); }
	def m3688():Void { var l:Int = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3689():Void { var l:Int = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3690():Void { var l:Int = (0)+(127); }
	def m3691():Void { var l:Int = (0)+(-127); }
	def m3692():Void { var l:Int = (0)+(128); }
	def m3693():Void { var l:Int = (0)+(-128); }
	def m3694():Void { var l:Int = (0)+(255); }
	def m3695():Void { var l:Int = (0)+(-255); }
	def m3696():Void { var l:Int = (0)+(256); }
	def m3697():Void { var l:Int = (0)+(-256); }
	def m3698():Void { var l:Int = (0)+(32767); }
	def m3699():Void { var l:Int = (0)+(-32767); }
	def m3700():Void { var l:Int = (0)+(32768); }
	def m3701():Void { var l:Int = (0)+(-32768); }
	def m3702():Void { var l:Int = (0)+(65535); }
	def m3703():Void { var l:Int = (0)+(-65535); }
	def m3704():Void { var l:Int = (0)+(65536); }
	def m3705():Void { var l:Int = (0)+(-65536); }
	def m3706():Void { var l:Int = (0)+(16777216); }
	def m3707():Void { var l:Int = (0)+(-16777216); }
	def m3708():Void { var l:Int = (0)+(16777217); }
	def m3709():Void { var l:Int = (0)+(-16777217); }
	def m3710():Void { var l:Int = (0)+(2147483647); }
	def m3711():Void { var l:Int = (0)+(-2147483647); }
	def m3712():Void { var l:Int = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3713():Void { var l:Int = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3714():Void { var l:Int = (-0)+(w2); }
	def m3715():Void { var l:Int = (-0)+(w3); }
	def m3716():Void { var l:Int = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3717():Void { var l:Int = (-0)+(w5); }
	def m3718():Void { var l:Int = (-0)+(0); }
	def m3719():Void { var l:Int = (-0)+(-0); }
	def m3720():Void { var l:Int = (-0)+(1); }
	def m3721():Void { var l:Int = (-0)+(-1); }
	def m3722():Void { var l:Int = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3723():Void { var l:Int = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3724():Void { var l:Int = (-0)+(127); }
	def m3725():Void { var l:Int = (-0)+(-127); }
	def m3726():Void { var l:Int = (-0)+(128); }
	def m3727():Void { var l:Int = (-0)+(-128); }
	def m3728():Void { var l:Int = (-0)+(255); }
	def m3729():Void { var l:Int = (-0)+(-255); }
	def m3730():Void { var l:Int = (-0)+(256); }
	def m3731():Void { var l:Int = (-0)+(-256); }
	def m3732():Void { var l:Int = (-0)+(32767); }
	def m3733():Void { var l:Int = (-0)+(-32767); }
	def m3734():Void { var l:Int = (-0)+(32768); }
	def m3735():Void { var l:Int = (-0)+(-32768); }
	def m3736():Void { var l:Int = (-0)+(65535); }
	def m3737():Void { var l:Int = (-0)+(-65535); }
	def m3738():Void { var l:Int = (-0)+(65536); }
	def m3739():Void { var l:Int = (-0)+(-65536); }
	def m3740():Void { var l:Int = (-0)+(16777216); }
	def m3741():Void { var l:Int = (-0)+(-16777216); }
	def m3742():Void { var l:Int = (-0)+(16777217); }
	def m3743():Void { var l:Int = (-0)+(-16777217); }
	def m3744():Void { var l:Int = (-0)+(2147483647); }
	def m3745():Void { var l:Int = (-0)+(-2147483647); }
	def m3746():Void { var l:Int = (1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3747():Void { var l:Int = (1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3748():Void { var l:Int = (1)+(w2); }
	def m3749():Void { var l:Int = (1)+(w3); }
	def m3750():Void { var l:Int = (1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3751():Void { var l:Int = (1)+(w5); }
	def m3752():Void { var l:Int = (1)+(0); }
	def m3753():Void { var l:Int = (1)+(-0); }
	def m3754():Void { var l:Int = (1)+(1); }
	def m3755():Void { var l:Int = (1)+(-1); }
	def m3756():Void { var l:Int = (1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3757():Void { var l:Int = (1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3758():Void { var l:Int = (1)+(127); }
	def m3759():Void { var l:Int = (1)+(-127); }
	def m3760():Void { var l:Int = (1)+(128); }
	def m3761():Void { var l:Int = (1)+(-128); }
	def m3762():Void { var l:Int = (1)+(255); }
	def m3763():Void { var l:Int = (1)+(-255); }
	def m3764():Void { var l:Int = (1)+(256); }
	def m3765():Void { var l:Int = (1)+(-256); }
	def m3766():Void { var l:Int = (1)+(32767); }
	def m3767():Void { var l:Int = (1)+(-32767); }
	def m3768():Void { var l:Int = (1)+(32768); }
	def m3769():Void { var l:Int = (1)+(-32768); }
	def m3770():Void { var l:Int = (1)+(65535); }
	def m3771():Void { var l:Int = (1)+(-65535); }
	def m3772():Void { var l:Int = (1)+(65536); }
	def m3773():Void { var l:Int = (1)+(-65536); }
	def m3774():Void { var l:Int = (1)+(16777216); }
	def m3775():Void { var l:Int = (1)+(-16777216); }
	def m3776():Void { var l:Int = (1)+(16777217); }
	def m3777():Void { var l:Int = (1)+(-16777217); }
	def m3778():Void { var l:Int = (1)+(2147483647); }
	def m3779():Void { var l:Int = (1)+(-2147483647); }
	def m3780():Void { var l:Int = (-1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3781():Void { var l:Int = (-1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3782():Void { var l:Int = (-1)+(w2); }
	def m3783():Void { var l:Int = (-1)+(w3); }
	def m3784():Void { var l:Int = (-1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3785():Void { var l:Int = (-1)+(w5); }
	def m3786():Void { var l:Int = (-1)+(0); }
	def m3787():Void { var l:Int = (-1)+(-0); }
	def m3788():Void { var l:Int = (-1)+(1); }
	def m3789():Void { var l:Int = (-1)+(-1); }
	def m3790():Void { var l:Int = (-1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3791():Void { var l:Int = (-1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3792():Void { var l:Int = (-1)+(127); }
	def m3793():Void { var l:Int = (-1)+(-127); }
	def m3794():Void { var l:Int = (-1)+(128); }
	def m3795():Void { var l:Int = (-1)+(-128); }
	def m3796():Void { var l:Int = (-1)+(255); }
	def m3797():Void { var l:Int = (-1)+(-255); }
	def m3798():Void { var l:Int = (-1)+(256); }
	def m3799():Void { var l:Int = (-1)+(-256); }
	def m3800():Void { var l:Int = (-1)+(32767); }
	def m3801():Void { var l:Int = (-1)+(-32767); }
	def m3802():Void { var l:Int = (-1)+(32768); }
	def m3803():Void { var l:Int = (-1)+(-32768); }
	def m3804():Void { var l:Int = (-1)+(65535); }
	def m3805():Void { var l:Int = (-1)+(-65535); }
	def m3806():Void { var l:Int = (-1)+(65536); }
	def m3807():Void { var l:Int = (-1)+(-65536); }
	def m3808():Void { var l:Int = (-1)+(16777216); }
	def m3809():Void { var l:Int = (-1)+(-16777216); }
	def m3810():Void { var l:Int = (-1)+(16777217); }
	def m3811():Void { var l:Int = (-1)+(-16777217); }
	def m3812():Void { var l:Int = (-1)+(2147483647); }
	def m3813():Void { var l:Int = (-1)+(-2147483647); }
	def m3814():Void { var l:Int = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3815():Void { var l:Int = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3816():Void { var l:Int = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3817():Void { var l:Int = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3818():Void { var l:Int = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3819():Void { var l:Int = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3820():Void { var l:Int = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3821():Void { var l:Int = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3822():Void { var l:Int = (2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3823():Void { var l:Int = (2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3824():Void { var l:Int = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3825():Void { var l:Int = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3826():Void { var l:Int = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3827():Void { var l:Int = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3828():Void { var l:Int = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3829():Void { var l:Int = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3830():Void { var l:Int = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3831():Void { var l:Int = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3832():Void { var l:Int = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3833():Void { var l:Int = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3834():Void { var l:Int = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3835():Void { var l:Int = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3836():Void { var l:Int = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3837():Void { var l:Int = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3838():Void { var l:Int = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3839():Void { var l:Int = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3840():Void { var l:Int = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3841():Void { var l:Int = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3842():Void { var l:Int = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3843():Void { var l:Int = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3844():Void { var l:Int = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3845():Void { var l:Int = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3846():Void { var l:Int = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3847():Void { var l:Int = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3848():Void { var l:Int = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3849():Void { var l:Int = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3850():Void { var l:Int = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3851():Void { var l:Int = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3852():Void { var l:Int = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3853():Void { var l:Int = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3854():Void { var l:Int = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3855():Void { var l:Int = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3856():Void { var l:Int = (-2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3857():Void { var l:Int = (-2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3858():Void { var l:Int = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3859():Void { var l:Int = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3860():Void { var l:Int = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3861():Void { var l:Int = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3862():Void { var l:Int = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3863():Void { var l:Int = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3864():Void { var l:Int = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3865():Void { var l:Int = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3866():Void { var l:Int = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3867():Void { var l:Int = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3868():Void { var l:Int = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3869():Void { var l:Int = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3870():Void { var l:Int = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3871():Void { var l:Int = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3872():Void { var l:Int = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3873():Void { var l:Int = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3874():Void { var l:Int = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3875():Void { var l:Int = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3876():Void { var l:Int = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3877():Void { var l:Int = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3878():Void { var l:Int = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3879():Void { var l:Int = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3880():Void { var l:Int = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3881():Void { var l:Int = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3882():Void { var l:Int = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3883():Void { var l:Int = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3884():Void { var l:Int = (127)+(w2); }
	def m3885():Void { var l:Int = (127)+(w3); }
	def m3886():Void { var l:Int = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3887():Void { var l:Int = (127)+(w5); }
	def m3888():Void { var l:Int = (127)+(0); }
	def m3889():Void { var l:Int = (127)+(-0); }
	def m3890():Void { var l:Int = (127)+(1); }
	def m3891():Void { var l:Int = (127)+(-1); }
	def m3892():Void { var l:Int = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3893():Void { var l:Int = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3894():Void { var l:Int = (127)+(127); }
	def m3895():Void { var l:Int = (127)+(-127); }
	def m3896():Void { var l:Int = (127)+(128); }
	def m3897():Void { var l:Int = (127)+(-128); }
	def m3898():Void { var l:Int = (127)+(255); }
	def m3899():Void { var l:Int = (127)+(-255); }
	def m3900():Void { var l:Int = (127)+(256); }
	def m3901():Void { var l:Int = (127)+(-256); }
	def m3902():Void { var l:Int = (127)+(32767); }
	def m3903():Void { var l:Int = (127)+(-32767); }
	def m3904():Void { var l:Int = (127)+(32768); }
	def m3905():Void { var l:Int = (127)+(-32768); }
	def m3906():Void { var l:Int = (127)+(65535); }
	def m3907():Void { var l:Int = (127)+(-65535); }
	def m3908():Void { var l:Int = (127)+(65536); }
	def m3909():Void { var l:Int = (127)+(-65536); }
	def m3910():Void { var l:Int = (127)+(16777216); }
	def m3911():Void { var l:Int = (127)+(-16777216); }
	def m3912():Void { var l:Int = (127)+(16777217); }
	def m3913():Void { var l:Int = (127)+(-16777217); }
	def m3914():Void { var l:Int = (127)+(2147483647); }
	def m3915():Void { var l:Int = (127)+(-2147483647); }
	def m3916():Void { var l:Int = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3917():Void { var l:Int = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3918():Void { var l:Int = (-127)+(w2); }
	def m3919():Void { var l:Int = (-127)+(w3); }
	def m3920():Void { var l:Int = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3921():Void { var l:Int = (-127)+(w5); }
	def m3922():Void { var l:Int = (-127)+(0); }
	def m3923():Void { var l:Int = (-127)+(-0); }
	def m3924():Void { var l:Int = (-127)+(1); }
	def m3925():Void { var l:Int = (-127)+(-1); }
	def m3926():Void { var l:Int = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3927():Void { var l:Int = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3928():Void { var l:Int = (-127)+(127); }
	def m3929():Void { var l:Int = (-127)+(-127); }
	def m3930():Void { var l:Int = (-127)+(128); }
	def m3931():Void { var l:Int = (-127)+(-128); }
	def m3932():Void { var l:Int = (-127)+(255); }
	def m3933():Void { var l:Int = (-127)+(-255); }
	def m3934():Void { var l:Int = (-127)+(256); }
	def m3935():Void { var l:Int = (-127)+(-256); }
	def m3936():Void { var l:Int = (-127)+(32767); }
	def m3937():Void { var l:Int = (-127)+(-32767); }
	def m3938():Void { var l:Int = (-127)+(32768); }
	def m3939():Void { var l:Int = (-127)+(-32768); }
	def m3940():Void { var l:Int = (-127)+(65535); }
	def m3941():Void { var l:Int = (-127)+(-65535); }
	def m3942():Void { var l:Int = (-127)+(65536); }
	def m3943():Void { var l:Int = (-127)+(-65536); }
	def m3944():Void { var l:Int = (-127)+(16777216); }
	def m3945():Void { var l:Int = (-127)+(-16777216); }
	def m3946():Void { var l:Int = (-127)+(16777217); }
	def m3947():Void { var l:Int = (-127)+(-16777217); }
	def m3948():Void { var l:Int = (-127)+(2147483647); }
	def m3949():Void { var l:Int = (-127)+(-2147483647); }
	def m3950():Void { var l:Int = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3951():Void { var l:Int = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3952():Void { var l:Int = (128)+(w2); }
	def m3953():Void { var l:Int = (128)+(w3); }
	def m3954():Void { var l:Int = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3955():Void { var l:Int = (128)+(w5); }
	def m3956():Void { var l:Int = (128)+(0); }
	def m3957():Void { var l:Int = (128)+(-0); }
	def m3958():Void { var l:Int = (128)+(1); }
	def m3959():Void { var l:Int = (128)+(-1); }
	def m3960():Void { var l:Int = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3961():Void { var l:Int = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3962():Void { var l:Int = (128)+(127); }
	def m3963():Void { var l:Int = (128)+(-127); }
	def m3964():Void { var l:Int = (128)+(128); }
	def m3965():Void { var l:Int = (128)+(-128); }
	def m3966():Void { var l:Int = (128)+(255); }
	def m3967():Void { var l:Int = (128)+(-255); }
	def m3968():Void { var l:Int = (128)+(256); }
	def m3969():Void { var l:Int = (128)+(-256); }
	def m3970():Void { var l:Int = (128)+(32767); }
	def m3971():Void { var l:Int = (128)+(-32767); }
	def m3972():Void { var l:Int = (128)+(32768); }
	def m3973():Void { var l:Int = (128)+(-32768); }
	def m3974():Void { var l:Int = (128)+(65535); }
	def m3975():Void { var l:Int = (128)+(-65535); }
	def m3976():Void { var l:Int = (128)+(65536); }
	def m3977():Void { var l:Int = (128)+(-65536); }
	def m3978():Void { var l:Int = (128)+(16777216); }
	def m3979():Void { var l:Int = (128)+(-16777216); }
	def m3980():Void { var l:Int = (128)+(16777217); }
	def m3981():Void { var l:Int = (128)+(-16777217); }
	def m3982():Void { var l:Int = (128)+(2147483647); }
	def m3983():Void { var l:Int = (128)+(-2147483647); }
	def m3984():Void { var l:Int = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m3985():Void { var l:Int = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3986():Void { var l:Int = (-128)+(w2); }
	def m3987():Void { var l:Int = (-128)+(w3); }
	def m3988():Void { var l:Int = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m3989():Void { var l:Int = (-128)+(w5); }
	def m3990():Void { var l:Int = (-128)+(0); }
	def m3991():Void { var l:Int = (-128)+(-0); }
	def m3992():Void { var l:Int = (-128)+(1); }
	def m3993():Void { var l:Int = (-128)+(-1); }
	def m3994():Void { var l:Int = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3995():Void { var l:Int = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m3996():Void { var l:Int = (-128)+(127); }
	def m3997():Void { var l:Int = (-128)+(-127); }
	def m3998():Void { var l:Int = (-128)+(128); }
	def m3999():Void { var l:Int = (-128)+(-128); }
	def m4000():Void { var l:Int = (-128)+(255); }
	def m4001():Void { var l:Int = (-128)+(-255); }
	def m4002():Void { var l:Int = (-128)+(256); }
	def m4003():Void { var l:Int = (-128)+(-256); }
	def m4004():Void { var l:Int = (-128)+(32767); }
	def m4005():Void { var l:Int = (-128)+(-32767); }
	def m4006():Void { var l:Int = (-128)+(32768); }
	def m4007():Void { var l:Int = (-128)+(-32768); }
	def m4008():Void { var l:Int = (-128)+(65535); }
	def m4009():Void { var l:Int = (-128)+(-65535); }
	def m4010():Void { var l:Int = (-128)+(65536); }
	def m4011():Void { var l:Int = (-128)+(-65536); }
	def m4012():Void { var l:Int = (-128)+(16777216); }
	def m4013():Void { var l:Int = (-128)+(-16777216); }
	def m4014():Void { var l:Int = (-128)+(16777217); }
	def m4015():Void { var l:Int = (-128)+(-16777217); }
	def m4016():Void { var l:Int = (-128)+(2147483647); }
	def m4017():Void { var l:Int = (-128)+(-2147483647); }
	def m4018():Void { var l:Int = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4019():Void { var l:Int = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4020():Void { var l:Int = (255)+(w2); }
	def m4021():Void { var l:Int = (255)+(w3); }
	def m4022():Void { var l:Int = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4023():Void { var l:Int = (255)+(w5); }
	def m4024():Void { var l:Int = (255)+(0); }
	def m4025():Void { var l:Int = (255)+(-0); }
	def m4026():Void { var l:Int = (255)+(1); }
	def m4027():Void { var l:Int = (255)+(-1); }
	def m4028():Void { var l:Int = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4029():Void { var l:Int = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4030():Void { var l:Int = (255)+(127); }
	def m4031():Void { var l:Int = (255)+(-127); }
	def m4032():Void { var l:Int = (255)+(128); }
	def m4033():Void { var l:Int = (255)+(-128); }
	def m4034():Void { var l:Int = (255)+(255); }
	def m4035():Void { var l:Int = (255)+(-255); }
	def m4036():Void { var l:Int = (255)+(256); }
	def m4037():Void { var l:Int = (255)+(-256); }
	def m4038():Void { var l:Int = (255)+(32767); }
	def m4039():Void { var l:Int = (255)+(-32767); }
	def m4040():Void { var l:Int = (255)+(32768); }
	def m4041():Void { var l:Int = (255)+(-32768); }
	def m4042():Void { var l:Int = (255)+(65535); }
	def m4043():Void { var l:Int = (255)+(-65535); }
	def m4044():Void { var l:Int = (255)+(65536); }
	def m4045():Void { var l:Int = (255)+(-65536); }
	def m4046():Void { var l:Int = (255)+(16777216); }
	def m4047():Void { var l:Int = (255)+(-16777216); }
	def m4048():Void { var l:Int = (255)+(16777217); }
	def m4049():Void { var l:Int = (255)+(-16777217); }
	def m4050():Void { var l:Int = (255)+(2147483647); }
	def m4051():Void { var l:Int = (255)+(-2147483647); }
	def m4052():Void { var l:Int = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4053():Void { var l:Int = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4054():Void { var l:Int = (-255)+(w2); }
	def m4055():Void { var l:Int = (-255)+(w3); }
	def m4056():Void { var l:Int = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4057():Void { var l:Int = (-255)+(w5); }
	def m4058():Void { var l:Int = (-255)+(0); }
	def m4059():Void { var l:Int = (-255)+(-0); }
	def m4060():Void { var l:Int = (-255)+(1); }
	def m4061():Void { var l:Int = (-255)+(-1); }
	def m4062():Void { var l:Int = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4063():Void { var l:Int = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4064():Void { var l:Int = (-255)+(127); }
	def m4065():Void { var l:Int = (-255)+(-127); }
	def m4066():Void { var l:Int = (-255)+(128); }
	def m4067():Void { var l:Int = (-255)+(-128); }
	def m4068():Void { var l:Int = (-255)+(255); }
	def m4069():Void { var l:Int = (-255)+(-255); }
	def m4070():Void { var l:Int = (-255)+(256); }
	def m4071():Void { var l:Int = (-255)+(-256); }
	def m4072():Void { var l:Int = (-255)+(32767); }
	def m4073():Void { var l:Int = (-255)+(-32767); }
	def m4074():Void { var l:Int = (-255)+(32768); }
	def m4075():Void { var l:Int = (-255)+(-32768); }
	def m4076():Void { var l:Int = (-255)+(65535); }
	def m4077():Void { var l:Int = (-255)+(-65535); }
	def m4078():Void { var l:Int = (-255)+(65536); }
	def m4079():Void { var l:Int = (-255)+(-65536); }
	def m4080():Void { var l:Int = (-255)+(16777216); }
	def m4081():Void { var l:Int = (-255)+(-16777216); }
	def m4082():Void { var l:Int = (-255)+(16777217); }
	def m4083():Void { var l:Int = (-255)+(-16777217); }
	def m4084():Void { var l:Int = (-255)+(2147483647); }
	def m4085():Void { var l:Int = (-255)+(-2147483647); }
	def m4086():Void { var l:Int = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4087():Void { var l:Int = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4088():Void { var l:Int = (256)+(w2); }
	def m4089():Void { var l:Int = (256)+(w3); }
	def m4090():Void { var l:Int = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4091():Void { var l:Int = (256)+(w5); }
	def m4092():Void { var l:Int = (256)+(0); }
	def m4093():Void { var l:Int = (256)+(-0); }
	def m4094():Void { var l:Int = (256)+(1); }
	def m4095():Void { var l:Int = (256)+(-1); }
	def m4096():Void { var l:Int = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4097():Void { var l:Int = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4098():Void { var l:Int = (256)+(127); }
	def m4099():Void { var l:Int = (256)+(-127); }
	def m4100():Void { var l:Int = (256)+(128); }
	def m4101():Void { var l:Int = (256)+(-128); }
	def m4102():Void { var l:Int = (256)+(255); }
	def m4103():Void { var l:Int = (256)+(-255); }
	def m4104():Void { var l:Int = (256)+(256); }
	def m4105():Void { var l:Int = (256)+(-256); }
	def m4106():Void { var l:Int = (256)+(32767); }
	def m4107():Void { var l:Int = (256)+(-32767); }
	def m4108():Void { var l:Int = (256)+(32768); }
	def m4109():Void { var l:Int = (256)+(-32768); }
	def m4110():Void { var l:Int = (256)+(65535); }
	def m4111():Void { var l:Int = (256)+(-65535); }
	def m4112():Void { var l:Int = (256)+(65536); }
	def m4113():Void { var l:Int = (256)+(-65536); }
	def m4114():Void { var l:Int = (256)+(16777216); }
	def m4115():Void { var l:Int = (256)+(-16777216); }
	def m4116():Void { var l:Int = (256)+(16777217); }
	def m4117():Void { var l:Int = (256)+(-16777217); }
	def m4118():Void { var l:Int = (256)+(2147483647); }
	def m4119():Void { var l:Int = (256)+(-2147483647); }
	def m4120():Void { var l:Int = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4121():Void { var l:Int = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4122():Void { var l:Int = (-256)+(w2); }
	def m4123():Void { var l:Int = (-256)+(w3); }
	def m4124():Void { var l:Int = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4125():Void { var l:Int = (-256)+(w5); }
	def m4126():Void { var l:Int = (-256)+(0); }
	def m4127():Void { var l:Int = (-256)+(-0); }
	def m4128():Void { var l:Int = (-256)+(1); }
	def m4129():Void { var l:Int = (-256)+(-1); }
	def m4130():Void { var l:Int = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4131():Void { var l:Int = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4132():Void { var l:Int = (-256)+(127); }
	def m4133():Void { var l:Int = (-256)+(-127); }
	def m4134():Void { var l:Int = (-256)+(128); }
	def m4135():Void { var l:Int = (-256)+(-128); }
	def m4136():Void { var l:Int = (-256)+(255); }
	def m4137():Void { var l:Int = (-256)+(-255); }
	def m4138():Void { var l:Int = (-256)+(256); }
	def m4139():Void { var l:Int = (-256)+(-256); }
	def m4140():Void { var l:Int = (-256)+(32767); }
	def m4141():Void { var l:Int = (-256)+(-32767); }
	def m4142():Void { var l:Int = (-256)+(32768); }
	def m4143():Void { var l:Int = (-256)+(-32768); }
	def m4144():Void { var l:Int = (-256)+(65535); }
	def m4145():Void { var l:Int = (-256)+(-65535); }
	def m4146():Void { var l:Int = (-256)+(65536); }
	def m4147():Void { var l:Int = (-256)+(-65536); }
	def m4148():Void { var l:Int = (-256)+(16777216); }
	def m4149():Void { var l:Int = (-256)+(-16777216); }
	def m4150():Void { var l:Int = (-256)+(16777217); }
	def m4151():Void { var l:Int = (-256)+(-16777217); }
	def m4152():Void { var l:Int = (-256)+(2147483647); }
	def m4153():Void { var l:Int = (-256)+(-2147483647); }
	def m4154():Void { var l:Int = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4155():Void { var l:Int = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4156():Void { var l:Int = (32767)+(w2); }
	def m4157():Void { var l:Int = (32767)+(w3); }
	def m4158():Void { var l:Int = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4159():Void { var l:Int = (32767)+(w5); }
	def m4160():Void { var l:Int = (32767)+(0); }
	def m4161():Void { var l:Int = (32767)+(-0); }
	def m4162():Void { var l:Int = (32767)+(1); }
	def m4163():Void { var l:Int = (32767)+(-1); }
	def m4164():Void { var l:Int = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4165():Void { var l:Int = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4166():Void { var l:Int = (32767)+(127); }
	def m4167():Void { var l:Int = (32767)+(-127); }
	def m4168():Void { var l:Int = (32767)+(128); }
	def m4169():Void { var l:Int = (32767)+(-128); }
	def m4170():Void { var l:Int = (32767)+(255); }
	def m4171():Void { var l:Int = (32767)+(-255); }
	def m4172():Void { var l:Int = (32767)+(256); }
	def m4173():Void { var l:Int = (32767)+(-256); }
	def m4174():Void { var l:Int = (32767)+(32767); }
	def m4175():Void { var l:Int = (32767)+(-32767); }
	def m4176():Void { var l:Int = (32767)+(32768); }
	def m4177():Void { var l:Int = (32767)+(-32768); }
	def m4178():Void { var l:Int = (32767)+(65535); }
	def m4179():Void { var l:Int = (32767)+(-65535); }
	def m4180():Void { var l:Int = (32767)+(65536); }
	def m4181():Void { var l:Int = (32767)+(-65536); }
	def m4182():Void { var l:Int = (32767)+(16777216); }
	def m4183():Void { var l:Int = (32767)+(-16777216); }
	def m4184():Void { var l:Int = (32767)+(16777217); }
	def m4185():Void { var l:Int = (32767)+(-16777217); }
	def m4186():Void { var l:Int = (32767)+(2147483647); }
	def m4187():Void { var l:Int = (32767)+(-2147483647); }
	def m4188():Void { var l:Int = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4189():Void { var l:Int = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4190():Void { var l:Int = (-32767)+(w2); }
	def m4191():Void { var l:Int = (-32767)+(w3); }
	def m4192():Void { var l:Int = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4193():Void { var l:Int = (-32767)+(w5); }
	def m4194():Void { var l:Int = (-32767)+(0); }
	def m4195():Void { var l:Int = (-32767)+(-0); }
	def m4196():Void { var l:Int = (-32767)+(1); }
	def m4197():Void { var l:Int = (-32767)+(-1); }
	def m4198():Void { var l:Int = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4199():Void { var l:Int = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4200():Void { var l:Int = (-32767)+(127); }
	def m4201():Void { var l:Int = (-32767)+(-127); }
	def m4202():Void { var l:Int = (-32767)+(128); }
	def m4203():Void { var l:Int = (-32767)+(-128); }
	def m4204():Void { var l:Int = (-32767)+(255); }
	def m4205():Void { var l:Int = (-32767)+(-255); }
	def m4206():Void { var l:Int = (-32767)+(256); }
	def m4207():Void { var l:Int = (-32767)+(-256); }
	def m4208():Void { var l:Int = (-32767)+(32767); }
	def m4209():Void { var l:Int = (-32767)+(-32767); }
	def m4210():Void { var l:Int = (-32767)+(32768); }
	def m4211():Void { var l:Int = (-32767)+(-32768); }
	def m4212():Void { var l:Int = (-32767)+(65535); }
	def m4213():Void { var l:Int = (-32767)+(-65535); }
	def m4214():Void { var l:Int = (-32767)+(65536); }
	def m4215():Void { var l:Int = (-32767)+(-65536); }
	def m4216():Void { var l:Int = (-32767)+(16777216); }
	def m4217():Void { var l:Int = (-32767)+(-16777216); }
	def m4218():Void { var l:Int = (-32767)+(16777217); }
	def m4219():Void { var l:Int = (-32767)+(-16777217); }
	def m4220():Void { var l:Int = (-32767)+(2147483647); }
	def m4221():Void { var l:Int = (-32767)+(-2147483647); }
	def m4222():Void { var l:Int = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4223():Void { var l:Int = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4224():Void { var l:Int = (32768)+(w2); }
	def m4225():Void { var l:Int = (32768)+(w3); }
	def m4226():Void { var l:Int = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4227():Void { var l:Int = (32768)+(w5); }
	def m4228():Void { var l:Int = (32768)+(0); }
	def m4229():Void { var l:Int = (32768)+(-0); }
	def m4230():Void { var l:Int = (32768)+(1); }
	def m4231():Void { var l:Int = (32768)+(-1); }
	def m4232():Void { var l:Int = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4233():Void { var l:Int = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4234():Void { var l:Int = (32768)+(127); }
	def m4235():Void { var l:Int = (32768)+(-127); }
	def m4236():Void { var l:Int = (32768)+(128); }
	def m4237():Void { var l:Int = (32768)+(-128); }
	def m4238():Void { var l:Int = (32768)+(255); }
	def m4239():Void { var l:Int = (32768)+(-255); }
	def m4240():Void { var l:Int = (32768)+(256); }
	def m4241():Void { var l:Int = (32768)+(-256); }
	def m4242():Void { var l:Int = (32768)+(32767); }
	def m4243():Void { var l:Int = (32768)+(-32767); }
	def m4244():Void { var l:Int = (32768)+(32768); }
	def m4245():Void { var l:Int = (32768)+(-32768); }
	def m4246():Void { var l:Int = (32768)+(65535); }
	def m4247():Void { var l:Int = (32768)+(-65535); }
	def m4248():Void { var l:Int = (32768)+(65536); }
	def m4249():Void { var l:Int = (32768)+(-65536); }
	def m4250():Void { var l:Int = (32768)+(16777216); }
	def m4251():Void { var l:Int = (32768)+(-16777216); }
	def m4252():Void { var l:Int = (32768)+(16777217); }
	def m4253():Void { var l:Int = (32768)+(-16777217); }
	def m4254():Void { var l:Int = (32768)+(2147483647); }
	def m4255():Void { var l:Int = (32768)+(-2147483647); }
	def m4256():Void { var l:Int = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4257():Void { var l:Int = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4258():Void { var l:Int = (-32768)+(w2); }
	def m4259():Void { var l:Int = (-32768)+(w3); }
	def m4260():Void { var l:Int = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4261():Void { var l:Int = (-32768)+(w5); }
	def m4262():Void { var l:Int = (-32768)+(0); }
	def m4263():Void { var l:Int = (-32768)+(-0); }
	def m4264():Void { var l:Int = (-32768)+(1); }
	def m4265():Void { var l:Int = (-32768)+(-1); }
	def m4266():Void { var l:Int = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4267():Void { var l:Int = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4268():Void { var l:Int = (-32768)+(127); }
	def m4269():Void { var l:Int = (-32768)+(-127); }
	def m4270():Void { var l:Int = (-32768)+(128); }
	def m4271():Void { var l:Int = (-32768)+(-128); }
	def m4272():Void { var l:Int = (-32768)+(255); }
	def m4273():Void { var l:Int = (-32768)+(-255); }
	def m4274():Void { var l:Int = (-32768)+(256); }
	def m4275():Void { var l:Int = (-32768)+(-256); }
	def m4276():Void { var l:Int = (-32768)+(32767); }
	def m4277():Void { var l:Int = (-32768)+(-32767); }
	def m4278():Void { var l:Int = (-32768)+(32768); }
	def m4279():Void { var l:Int = (-32768)+(-32768); }
	def m4280():Void { var l:Int = (-32768)+(65535); }
	def m4281():Void { var l:Int = (-32768)+(-65535); }
	def m4282():Void { var l:Int = (-32768)+(65536); }
	def m4283():Void { var l:Int = (-32768)+(-65536); }
	def m4284():Void { var l:Int = (-32768)+(16777216); }
	def m4285():Void { var l:Int = (-32768)+(-16777216); }
	def m4286():Void { var l:Int = (-32768)+(16777217); }
	def m4287():Void { var l:Int = (-32768)+(-16777217); }
	def m4288():Void { var l:Int = (-32768)+(2147483647); }
	def m4289():Void { var l:Int = (-32768)+(-2147483647); }
	def m4290():Void { var l:Int = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4291():Void { var l:Int = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4292():Void { var l:Int = (65535)+(w2); }
	def m4293():Void { var l:Int = (65535)+(w3); }
	def m4294():Void { var l:Int = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4295():Void { var l:Int = (65535)+(w5); }
	def m4296():Void { var l:Int = (65535)+(0); }
	def m4297():Void { var l:Int = (65535)+(-0); }
	def m4298():Void { var l:Int = (65535)+(1); }
	def m4299():Void { var l:Int = (65535)+(-1); }
	def m4300():Void { var l:Int = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4301():Void { var l:Int = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4302():Void { var l:Int = (65535)+(127); }
	def m4303():Void { var l:Int = (65535)+(-127); }
	def m4304():Void { var l:Int = (65535)+(128); }
	def m4305():Void { var l:Int = (65535)+(-128); }
	def m4306():Void { var l:Int = (65535)+(255); }
	def m4307():Void { var l:Int = (65535)+(-255); }
	def m4308():Void { var l:Int = (65535)+(256); }
	def m4309():Void { var l:Int = (65535)+(-256); }
	def m4310():Void { var l:Int = (65535)+(32767); }
	def m4311():Void { var l:Int = (65535)+(-32767); }
	def m4312():Void { var l:Int = (65535)+(32768); }
	def m4313():Void { var l:Int = (65535)+(-32768); }
	def m4314():Void { var l:Int = (65535)+(65535); }
	def m4315():Void { var l:Int = (65535)+(-65535); }
	def m4316():Void { var l:Int = (65535)+(65536); }
	def m4317():Void { var l:Int = (65535)+(-65536); }
	def m4318():Void { var l:Int = (65535)+(16777216); }
	def m4319():Void { var l:Int = (65535)+(-16777216); }
	def m4320():Void { var l:Int = (65535)+(16777217); }
	def m4321():Void { var l:Int = (65535)+(-16777217); }
	def m4322():Void { var l:Int = (65535)+(2147483647); }
	def m4323():Void { var l:Int = (65535)+(-2147483647); }
	def m4324():Void { var l:Int = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4325():Void { var l:Int = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4326():Void { var l:Int = (-65535)+(w2); }
	def m4327():Void { var l:Int = (-65535)+(w3); }
	def m4328():Void { var l:Int = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4329():Void { var l:Int = (-65535)+(w5); }
	def m4330():Void { var l:Int = (-65535)+(0); }
	def m4331():Void { var l:Int = (-65535)+(-0); }
	def m4332():Void { var l:Int = (-65535)+(1); }
	def m4333():Void { var l:Int = (-65535)+(-1); }
	def m4334():Void { var l:Int = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4335():Void { var l:Int = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4336():Void { var l:Int = (-65535)+(127); }
	def m4337():Void { var l:Int = (-65535)+(-127); }
	def m4338():Void { var l:Int = (-65535)+(128); }
	def m4339():Void { var l:Int = (-65535)+(-128); }
	def m4340():Void { var l:Int = (-65535)+(255); }
	def m4341():Void { var l:Int = (-65535)+(-255); }
	def m4342():Void { var l:Int = (-65535)+(256); }
	def m4343():Void { var l:Int = (-65535)+(-256); }
	def m4344():Void { var l:Int = (-65535)+(32767); }
	def m4345():Void { var l:Int = (-65535)+(-32767); }
	def m4346():Void { var l:Int = (-65535)+(32768); }
	def m4347():Void { var l:Int = (-65535)+(-32768); }
	def m4348():Void { var l:Int = (-65535)+(65535); }
	def m4349():Void { var l:Int = (-65535)+(-65535); }
	def m4350():Void { var l:Int = (-65535)+(65536); }
	def m4351():Void { var l:Int = (-65535)+(-65536); }
	def m4352():Void { var l:Int = (-65535)+(16777216); }
	def m4353():Void { var l:Int = (-65535)+(-16777216); }
	def m4354():Void { var l:Int = (-65535)+(16777217); }
	def m4355():Void { var l:Int = (-65535)+(-16777217); }
	def m4356():Void { var l:Int = (-65535)+(2147483647); }
	def m4357():Void { var l:Int = (-65535)+(-2147483647); }
	def m4358():Void { var l:Int = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4359():Void { var l:Int = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4360():Void { var l:Int = (65536)+(w2); }
	def m4361():Void { var l:Int = (65536)+(w3); }
	def m4362():Void { var l:Int = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4363():Void { var l:Int = (65536)+(w5); }
	def m4364():Void { var l:Int = (65536)+(0); }
	def m4365():Void { var l:Int = (65536)+(-0); }
	def m4366():Void { var l:Int = (65536)+(1); }
	def m4367():Void { var l:Int = (65536)+(-1); }
	def m4368():Void { var l:Int = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4369():Void { var l:Int = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4370():Void { var l:Int = (65536)+(127); }
	def m4371():Void { var l:Int = (65536)+(-127); }
	def m4372():Void { var l:Int = (65536)+(128); }
	def m4373():Void { var l:Int = (65536)+(-128); }
	def m4374():Void { var l:Int = (65536)+(255); }
	def m4375():Void { var l:Int = (65536)+(-255); }
	def m4376():Void { var l:Int = (65536)+(256); }
	def m4377():Void { var l:Int = (65536)+(-256); }
	def m4378():Void { var l:Int = (65536)+(32767); }
	def m4379():Void { var l:Int = (65536)+(-32767); }
	def m4380():Void { var l:Int = (65536)+(32768); }
	def m4381():Void { var l:Int = (65536)+(-32768); }
	def m4382():Void { var l:Int = (65536)+(65535); }
	def m4383():Void { var l:Int = (65536)+(-65535); }
	def m4384():Void { var l:Int = (65536)+(65536); }
	def m4385():Void { var l:Int = (65536)+(-65536); }
	def m4386():Void { var l:Int = (65536)+(16777216); }
	def m4387():Void { var l:Int = (65536)+(-16777216); }
	def m4388():Void { var l:Int = (65536)+(16777217); }
	def m4389():Void { var l:Int = (65536)+(-16777217); }
	def m4390():Void { var l:Int = (65536)+(2147483647); }
	def m4391():Void { var l:Int = (65536)+(-2147483647); }
	def m4392():Void { var l:Int = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4393():Void { var l:Int = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4394():Void { var l:Int = (-65536)+(w2); }
	def m4395():Void { var l:Int = (-65536)+(w3); }
	def m4396():Void { var l:Int = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4397():Void { var l:Int = (-65536)+(w5); }
	def m4398():Void { var l:Int = (-65536)+(0); }
	def m4399():Void { var l:Int = (-65536)+(-0); }
	def m4400():Void { var l:Int = (-65536)+(1); }
	def m4401():Void { var l:Int = (-65536)+(-1); }
	def m4402():Void { var l:Int = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4403():Void { var l:Int = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4404():Void { var l:Int = (-65536)+(127); }
	def m4405():Void { var l:Int = (-65536)+(-127); }
	def m4406():Void { var l:Int = (-65536)+(128); }
	def m4407():Void { var l:Int = (-65536)+(-128); }
	def m4408():Void { var l:Int = (-65536)+(255); }
	def m4409():Void { var l:Int = (-65536)+(-255); }
	def m4410():Void { var l:Int = (-65536)+(256); }
	def m4411():Void { var l:Int = (-65536)+(-256); }
	def m4412():Void { var l:Int = (-65536)+(32767); }
	def m4413():Void { var l:Int = (-65536)+(-32767); }
	def m4414():Void { var l:Int = (-65536)+(32768); }
	def m4415():Void { var l:Int = (-65536)+(-32768); }
	def m4416():Void { var l:Int = (-65536)+(65535); }
	def m4417():Void { var l:Int = (-65536)+(-65535); }
	def m4418():Void { var l:Int = (-65536)+(65536); }
	def m4419():Void { var l:Int = (-65536)+(-65536); }
	def m4420():Void { var l:Int = (-65536)+(16777216); }
	def m4421():Void { var l:Int = (-65536)+(-16777216); }
	def m4422():Void { var l:Int = (-65536)+(16777217); }
	def m4423():Void { var l:Int = (-65536)+(-16777217); }
	def m4424():Void { var l:Int = (-65536)+(2147483647); }
	def m4425():Void { var l:Int = (-65536)+(-2147483647); }
	def m4426():Void { var l:Int = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4427():Void { var l:Int = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4428():Void { var l:Int = (16777216)+(w2); }
	def m4429():Void { var l:Int = (16777216)+(w3); }
	def m4430():Void { var l:Int = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4431():Void { var l:Int = (16777216)+(w5); }
	def m4432():Void { var l:Int = (16777216)+(0); }
	def m4433():Void { var l:Int = (16777216)+(-0); }
	def m4434():Void { var l:Int = (16777216)+(1); }
	def m4435():Void { var l:Int = (16777216)+(-1); }
	def m4436():Void { var l:Int = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4437():Void { var l:Int = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4438():Void { var l:Int = (16777216)+(127); }
	def m4439():Void { var l:Int = (16777216)+(-127); }
	def m4440():Void { var l:Int = (16777216)+(128); }
	def m4441():Void { var l:Int = (16777216)+(-128); }
	def m4442():Void { var l:Int = (16777216)+(255); }
	def m4443():Void { var l:Int = (16777216)+(-255); }
	def m4444():Void { var l:Int = (16777216)+(256); }
	def m4445():Void { var l:Int = (16777216)+(-256); }
	def m4446():Void { var l:Int = (16777216)+(32767); }
	def m4447():Void { var l:Int = (16777216)+(-32767); }
	def m4448():Void { var l:Int = (16777216)+(32768); }
	def m4449():Void { var l:Int = (16777216)+(-32768); }
	def m4450():Void { var l:Int = (16777216)+(65535); }
	def m4451():Void { var l:Int = (16777216)+(-65535); }
	def m4452():Void { var l:Int = (16777216)+(65536); }
	def m4453():Void { var l:Int = (16777216)+(-65536); }
	def m4454():Void { var l:Int = (16777216)+(16777216); }
	def m4455():Void { var l:Int = (16777216)+(-16777216); }
	def m4456():Void { var l:Int = (16777216)+(16777217); }
	def m4457():Void { var l:Int = (16777216)+(-16777217); }
	def m4458():Void { var l:Int = (16777216)+(2147483647); }
	def m4459():Void { var l:Int = (16777216)+(-2147483647); }
	def m4460():Void { var l:Int = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4461():Void { var l:Int = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4462():Void { var l:Int = (-16777216)+(w2); }
	def m4463():Void { var l:Int = (-16777216)+(w3); }
	def m4464():Void { var l:Int = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4465():Void { var l:Int = (-16777216)+(w5); }
	def m4466():Void { var l:Int = (-16777216)+(0); }
	def m4467():Void { var l:Int = (-16777216)+(-0); }
	def m4468():Void { var l:Int = (-16777216)+(1); }
	def m4469():Void { var l:Int = (-16777216)+(-1); }
	def m4470():Void { var l:Int = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4471():Void { var l:Int = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4472():Void { var l:Int = (-16777216)+(127); }
	def m4473():Void { var l:Int = (-16777216)+(-127); }
	def m4474():Void { var l:Int = (-16777216)+(128); }
	def m4475():Void { var l:Int = (-16777216)+(-128); }
	def m4476():Void { var l:Int = (-16777216)+(255); }
	def m4477():Void { var l:Int = (-16777216)+(-255); }
	def m4478():Void { var l:Int = (-16777216)+(256); }
	def m4479():Void { var l:Int = (-16777216)+(-256); }
	def m4480():Void { var l:Int = (-16777216)+(32767); }
	def m4481():Void { var l:Int = (-16777216)+(-32767); }
	def m4482():Void { var l:Int = (-16777216)+(32768); }
	def m4483():Void { var l:Int = (-16777216)+(-32768); }
	def m4484():Void { var l:Int = (-16777216)+(65535); }
	def m4485():Void { var l:Int = (-16777216)+(-65535); }
	def m4486():Void { var l:Int = (-16777216)+(65536); }
	def m4487():Void { var l:Int = (-16777216)+(-65536); }
	def m4488():Void { var l:Int = (-16777216)+(16777216); }
	def m4489():Void { var l:Int = (-16777216)+(-16777216); }
	def m4490():Void { var l:Int = (-16777216)+(16777217); }
	def m4491():Void { var l:Int = (-16777216)+(-16777217); }
	def m4492():Void { var l:Int = (-16777216)+(2147483647); }
	def m4493():Void { var l:Int = (-16777216)+(-2147483647); }
	def m4494():Void { var l:Int = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4495():Void { var l:Int = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4496():Void { var l:Int = (16777217)+(w2); }
	def m4497():Void { var l:Int = (16777217)+(w3); }
	def m4498():Void { var l:Int = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4499():Void { var l:Int = (16777217)+(w5); }
	def m4500():Void { var l:Int = (16777217)+(0); }
	def m4501():Void { var l:Int = (16777217)+(-0); }
	def m4502():Void { var l:Int = (16777217)+(1); }
	def m4503():Void { var l:Int = (16777217)+(-1); }
	def m4504():Void { var l:Int = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4505():Void { var l:Int = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4506():Void { var l:Int = (16777217)+(127); }
	def m4507():Void { var l:Int = (16777217)+(-127); }
	def m4508():Void { var l:Int = (16777217)+(128); }
	def m4509():Void { var l:Int = (16777217)+(-128); }
	def m4510():Void { var l:Int = (16777217)+(255); }
	def m4511():Void { var l:Int = (16777217)+(-255); }
	def m4512():Void { var l:Int = (16777217)+(256); }
	def m4513():Void { var l:Int = (16777217)+(-256); }
	def m4514():Void { var l:Int = (16777217)+(32767); }
	def m4515():Void { var l:Int = (16777217)+(-32767); }
	def m4516():Void { var l:Int = (16777217)+(32768); }
	def m4517():Void { var l:Int = (16777217)+(-32768); }
	def m4518():Void { var l:Int = (16777217)+(65535); }
	def m4519():Void { var l:Int = (16777217)+(-65535); }
	def m4520():Void { var l:Int = (16777217)+(65536); }
	def m4521():Void { var l:Int = (16777217)+(-65536); }
	def m4522():Void { var l:Int = (16777217)+(16777216); }
	def m4523():Void { var l:Int = (16777217)+(-16777216); }
	def m4524():Void { var l:Int = (16777217)+(16777217); }
	def m4525():Void { var l:Int = (16777217)+(-16777217); }
	def m4526():Void { var l:Int = (16777217)+(2147483647); }
	def m4527():Void { var l:Int = (16777217)+(-2147483647); }
	def m4528():Void { var l:Int = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4529():Void { var l:Int = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4530():Void { var l:Int = (-16777217)+(w2); }
	def m4531():Void { var l:Int = (-16777217)+(w3); }
	def m4532():Void { var l:Int = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4533():Void { var l:Int = (-16777217)+(w5); }
	def m4534():Void { var l:Int = (-16777217)+(0); }
	def m4535():Void { var l:Int = (-16777217)+(-0); }
	def m4536():Void { var l:Int = (-16777217)+(1); }
	def m4537():Void { var l:Int = (-16777217)+(-1); }
	def m4538():Void { var l:Int = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4539():Void { var l:Int = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4540():Void { var l:Int = (-16777217)+(127); }
	def m4541():Void { var l:Int = (-16777217)+(-127); }
	def m4542():Void { var l:Int = (-16777217)+(128); }
	def m4543():Void { var l:Int = (-16777217)+(-128); }
	def m4544():Void { var l:Int = (-16777217)+(255); }
	def m4545():Void { var l:Int = (-16777217)+(-255); }
	def m4546():Void { var l:Int = (-16777217)+(256); }
	def m4547():Void { var l:Int = (-16777217)+(-256); }
	def m4548():Void { var l:Int = (-16777217)+(32767); }
	def m4549():Void { var l:Int = (-16777217)+(-32767); }
	def m4550():Void { var l:Int = (-16777217)+(32768); }
	def m4551():Void { var l:Int = (-16777217)+(-32768); }
	def m4552():Void { var l:Int = (-16777217)+(65535); }
	def m4553():Void { var l:Int = (-16777217)+(-65535); }
	def m4554():Void { var l:Int = (-16777217)+(65536); }
	def m4555():Void { var l:Int = (-16777217)+(-65536); }
	def m4556():Void { var l:Int = (-16777217)+(16777216); }
	def m4557():Void { var l:Int = (-16777217)+(-16777216); }
	def m4558():Void { var l:Int = (-16777217)+(16777217); }
	def m4559():Void { var l:Int = (-16777217)+(-16777217); }
	def m4560():Void { var l:Int = (-16777217)+(2147483647); }
	def m4561():Void { var l:Int = (-16777217)+(-2147483647); }
	def m4562():Void { var l:Int = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4563():Void { var l:Int = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4564():Void { var l:Int = (2147483647)+(w2); }
	def m4565():Void { var l:Int = (2147483647)+(w3); }
	def m4566():Void { var l:Int = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4567():Void { var l:Int = (2147483647)+(w5); }
	def m4568():Void { var l:Int = (2147483647)+(0); }
	def m4569():Void { var l:Int = (2147483647)+(-0); }
	def m4570():Void { var l:Int = (2147483647)+(1); }
	def m4571():Void { var l:Int = (2147483647)+(-1); }
	def m4572():Void { var l:Int = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4573():Void { var l:Int = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4574():Void { var l:Int = (2147483647)+(127); }
	def m4575():Void { var l:Int = (2147483647)+(-127); }
	def m4576():Void { var l:Int = (2147483647)+(128); }
	def m4577():Void { var l:Int = (2147483647)+(-128); }
	def m4578():Void { var l:Int = (2147483647)+(255); }
	def m4579():Void { var l:Int = (2147483647)+(-255); }
	def m4580():Void { var l:Int = (2147483647)+(256); }
	def m4581():Void { var l:Int = (2147483647)+(-256); }
	def m4582():Void { var l:Int = (2147483647)+(32767); }
	def m4583():Void { var l:Int = (2147483647)+(-32767); }
	def m4584():Void { var l:Int = (2147483647)+(32768); }
	def m4585():Void { var l:Int = (2147483647)+(-32768); }
	def m4586():Void { var l:Int = (2147483647)+(65535); }
	def m4587():Void { var l:Int = (2147483647)+(-65535); }
	def m4588():Void { var l:Int = (2147483647)+(65536); }
	def m4589():Void { var l:Int = (2147483647)+(-65536); }
	def m4590():Void { var l:Int = (2147483647)+(16777216); }
	def m4591():Void { var l:Int = (2147483647)+(-16777216); }
	def m4592():Void { var l:Int = (2147483647)+(16777217); }
	def m4593():Void { var l:Int = (2147483647)+(-16777217); }
	def m4594():Void { var l:Int = (2147483647)+(2147483647); }
	def m4595():Void { var l:Int = (2147483647)+(-2147483647); }
	def m4596():Void { var l:Int = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4597():Void { var l:Int = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4598():Void { var l:Int = (-2147483647)+(w2); }
	def m4599():Void { var l:Int = (-2147483647)+(w3); }
	def m4600():Void { var l:Int = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4601():Void { var l:Int = (-2147483647)+(w5); }
	def m4602():Void { var l:Int = (-2147483647)+(0); }
	def m4603():Void { var l:Int = (-2147483647)+(-0); }
	def m4604():Void { var l:Int = (-2147483647)+(1); }
	def m4605():Void { var l:Int = (-2147483647)+(-1); }
	def m4606():Void { var l:Int = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4607():Void { var l:Int = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4608():Void { var l:Int = (-2147483647)+(127); }
	def m4609():Void { var l:Int = (-2147483647)+(-127); }
	def m4610():Void { var l:Int = (-2147483647)+(128); }
	def m4611():Void { var l:Int = (-2147483647)+(-128); }
	def m4612():Void { var l:Int = (-2147483647)+(255); }
	def m4613():Void { var l:Int = (-2147483647)+(-255); }
	def m4614():Void { var l:Int = (-2147483647)+(256); }
	def m4615():Void { var l:Int = (-2147483647)+(-256); }
	def m4616():Void { var l:Int = (-2147483647)+(32767); }
	def m4617():Void { var l:Int = (-2147483647)+(-32767); }
	def m4618():Void { var l:Int = (-2147483647)+(32768); }
	def m4619():Void { var l:Int = (-2147483647)+(-32768); }
	def m4620():Void { var l:Int = (-2147483647)+(65535); }
	def m4621():Void { var l:Int = (-2147483647)+(-65535); }
	def m4622():Void { var l:Int = (-2147483647)+(65536); }
	def m4623():Void { var l:Int = (-2147483647)+(-65536); }
	def m4624():Void { var l:Int = (-2147483647)+(16777216); }
	def m4625():Void { var l:Int = (-2147483647)+(-16777216); }
	def m4626():Void { var l:Int = (-2147483647)+(16777217); }
	def m4627():Void { var l:Int = (-2147483647)+(-16777217); }
	def m4628():Void { var l:Int = (-2147483647)+(2147483647); }
	def m4629():Void { var l:Int = (-2147483647)+(-2147483647); }
	def m4630():Void { var l:Long = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4631():Void { var l:Long = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4632():Void { var l:Long = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4633():Void { var l:Long = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4634():Void { var l:Long = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4635():Void { var l:Long = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4636():Void { var l:Long = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4637():Void { var l:Long = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4638():Void { var l:Long = (w0)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4639():Void { var l:Long = (w0)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4640():Void { var l:Long = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4641():Void { var l:Long = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4642():Void { var l:Long = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4643():Void { var l:Long = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4644():Void { var l:Long = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4645():Void { var l:Long = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4646():Void { var l:Long = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4647():Void { var l:Long = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4648():Void { var l:Long = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4649():Void { var l:Long = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4650():Void { var l:Long = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4651():Void { var l:Long = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4652():Void { var l:Long = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4653():Void { var l:Long = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4654():Void { var l:Long = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4655():Void { var l:Long = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4656():Void { var l:Long = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4657():Void { var l:Long = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4658():Void { var l:Long = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4659():Void { var l:Long = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4660():Void { var l:Long = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4661():Void { var l:Long = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4662():Void { var l:Long = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4663():Void { var l:Long = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4664():Void { var l:Long = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4665():Void { var l:Long = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4666():Void { var l:Long = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4667():Void { var l:Long = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4668():Void { var l:Long = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4669():Void { var l:Long = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4670():Void { var l:Long = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4671():Void { var l:Long = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4672():Void { var l:Long = (w1)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4673():Void { var l:Long = (w1)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4674():Void { var l:Long = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4675():Void { var l:Long = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4676():Void { var l:Long = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4677():Void { var l:Long = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4678():Void { var l:Long = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4679():Void { var l:Long = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4680():Void { var l:Long = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4681():Void { var l:Long = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4682():Void { var l:Long = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4683():Void { var l:Long = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4684():Void { var l:Long = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4685():Void { var l:Long = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4686():Void { var l:Long = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4687():Void { var l:Long = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4688():Void { var l:Long = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4689():Void { var l:Long = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4690():Void { var l:Long = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4691():Void { var l:Long = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4692():Void { var l:Long = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4693():Void { var l:Long = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4694():Void { var l:Long = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4695():Void { var l:Long = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4696():Void { var l:Long = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4697():Void { var l:Long = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4698():Void { var l:Long = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4699():Void { var l:Long = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4700():Void { var l:Long = (w2)+(w2); }
	def m4701():Void { var l:Long = (w2)+(w3); }
	def m4702():Void { var l:Long = (w2)+(w4); }
	def m4703():Void { var l:Long = (w2)+(w5); }
	def m4704():Void { var l:Long = (w2)+(0); }
	def m4705():Void { var l:Long = (w2)+(-0); }
	def m4706():Void { var l:Long = (w2)+(1); }
	def m4707():Void { var l:Long = (w2)+(-1); }
	def m4708():Void { var l:Long = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4709():Void { var l:Long = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4710():Void { var l:Long = (w2)+(127); }
	def m4711():Void { var l:Long = (w2)+(-127); }
	def m4712():Void { var l:Long = (w2)+(128); }
	def m4713():Void { var l:Long = (w2)+(-128); }
	def m4714():Void { var l:Long = (w2)+(255); }
	def m4715():Void { var l:Long = (w2)+(-255); }
	def m4716():Void { var l:Long = (w2)+(256); }
	def m4717():Void { var l:Long = (w2)+(-256); }
	def m4718():Void { var l:Long = (w2)+(32767); }
	def m4719():Void { var l:Long = (w2)+(-32767); }
	def m4720():Void { var l:Long = (w2)+(32768); }
	def m4721():Void { var l:Long = (w2)+(-32768); }
	def m4722():Void { var l:Long = (w2)+(65535); }
	def m4723():Void { var l:Long = (w2)+(-65535); }
	def m4724():Void { var l:Long = (w2)+(65536); }
	def m4725():Void { var l:Long = (w2)+(-65536); }
	def m4726():Void { var l:Long = (w2)+(16777216); }
	def m4727():Void { var l:Long = (w2)+(-16777216); }
	def m4728():Void { var l:Long = (w2)+(16777217); }
	def m4729():Void { var l:Long = (w2)+(-16777217); }
	def m4730():Void { var l:Long = (w2)+(2147483647); }
	def m4731():Void { var l:Long = (w2)+(-2147483647); }
	def m4732():Void { var l:Long = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4733():Void { var l:Long = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4734():Void { var l:Long = (w3)+(w2); }
	def m4735():Void { var l:Long = (w3)+(w3); }
	def m4736():Void { var l:Long = (w3)+(w4); }
	def m4737():Void { var l:Long = (w3)+(w5); }
	def m4738():Void { var l:Long = (w3)+(0); }
	def m4739():Void { var l:Long = (w3)+(-0); }
	def m4740():Void { var l:Long = (w3)+(1); }
	def m4741():Void { var l:Long = (w3)+(-1); }
	def m4742():Void { var l:Long = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4743():Void { var l:Long = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4744():Void { var l:Long = (w3)+(127); }
	def m4745():Void { var l:Long = (w3)+(-127); }
	def m4746():Void { var l:Long = (w3)+(128); }
	def m4747():Void { var l:Long = (w3)+(-128); }
	def m4748():Void { var l:Long = (w3)+(255); }
	def m4749():Void { var l:Long = (w3)+(-255); }
	def m4750():Void { var l:Long = (w3)+(256); }
	def m4751():Void { var l:Long = (w3)+(-256); }
	def m4752():Void { var l:Long = (w3)+(32767); }
	def m4753():Void { var l:Long = (w3)+(-32767); }
	def m4754():Void { var l:Long = (w3)+(32768); }
	def m4755():Void { var l:Long = (w3)+(-32768); }
	def m4756():Void { var l:Long = (w3)+(65535); }
	def m4757():Void { var l:Long = (w3)+(-65535); }
	def m4758():Void { var l:Long = (w3)+(65536); }
	def m4759():Void { var l:Long = (w3)+(-65536); }
	def m4760():Void { var l:Long = (w3)+(16777216); }
	def m4761():Void { var l:Long = (w3)+(-16777216); }
	def m4762():Void { var l:Long = (w3)+(16777217); }
	def m4763():Void { var l:Long = (w3)+(-16777217); }
	def m4764():Void { var l:Long = (w3)+(2147483647); }
	def m4765():Void { var l:Long = (w3)+(-2147483647); }
	def m4766():Void { var l:Long = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4767():Void { var l:Long = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4768():Void { var l:Long = (w4)+(w2); }
	def m4769():Void { var l:Long = (w4)+(w3); }
	def m4770():Void { var l:Long = (w4)+(w4); }
	def m4771():Void { var l:Long = (w4)+(w5); }
	def m4772():Void { var l:Long = (w4)+(0); }
	def m4773():Void { var l:Long = (w4)+(-0); }
	def m4774():Void { var l:Long = (w4)+(1); }
	def m4775():Void { var l:Long = (w4)+(-1); }
	def m4776():Void { var l:Long = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4777():Void { var l:Long = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4778():Void { var l:Long = (w4)+(127); }
	def m4779():Void { var l:Long = (w4)+(-127); }
	def m4780():Void { var l:Long = (w4)+(128); }
	def m4781():Void { var l:Long = (w4)+(-128); }
	def m4782():Void { var l:Long = (w4)+(255); }
	def m4783():Void { var l:Long = (w4)+(-255); }
	def m4784():Void { var l:Long = (w4)+(256); }
	def m4785():Void { var l:Long = (w4)+(-256); }
	def m4786():Void { var l:Long = (w4)+(32767); }
	def m4787():Void { var l:Long = (w4)+(-32767); }
	def m4788():Void { var l:Long = (w4)+(32768); }
	def m4789():Void { var l:Long = (w4)+(-32768); }
	def m4790():Void { var l:Long = (w4)+(65535); }
	def m4791():Void { var l:Long = (w4)+(-65535); }
	def m4792():Void { var l:Long = (w4)+(65536); }
	def m4793():Void { var l:Long = (w4)+(-65536); }
	def m4794():Void { var l:Long = (w4)+(16777216); }
	def m4795():Void { var l:Long = (w4)+(-16777216); }
	def m4796():Void { var l:Long = (w4)+(16777217); }
	def m4797():Void { var l:Long = (w4)+(-16777217); }
	def m4798():Void { var l:Long = (w4)+(2147483647); }
	def m4799():Void { var l:Long = (w4)+(-2147483647); }
	def m4800():Void { var l:Long = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4801():Void { var l:Long = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4802():Void { var l:Long = (w5)+(w2); }
	def m4803():Void { var l:Long = (w5)+(w3); }
	def m4804():Void { var l:Long = (w5)+(w4); }
	def m4805():Void { var l:Long = (w5)+(w5); }
	def m4806():Void { var l:Long = (w5)+(0); }
	def m4807():Void { var l:Long = (w5)+(-0); }
	def m4808():Void { var l:Long = (w5)+(1); }
	def m4809():Void { var l:Long = (w5)+(-1); }
	def m4810():Void { var l:Long = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4811():Void { var l:Long = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4812():Void { var l:Long = (w5)+(127); }
	def m4813():Void { var l:Long = (w5)+(-127); }
	def m4814():Void { var l:Long = (w5)+(128); }
	def m4815():Void { var l:Long = (w5)+(-128); }
	def m4816():Void { var l:Long = (w5)+(255); }
	def m4817():Void { var l:Long = (w5)+(-255); }
	def m4818():Void { var l:Long = (w5)+(256); }
	def m4819():Void { var l:Long = (w5)+(-256); }
	def m4820():Void { var l:Long = (w5)+(32767); }
	def m4821():Void { var l:Long = (w5)+(-32767); }
	def m4822():Void { var l:Long = (w5)+(32768); }
	def m4823():Void { var l:Long = (w5)+(-32768); }
	def m4824():Void { var l:Long = (w5)+(65535); }
	def m4825():Void { var l:Long = (w5)+(-65535); }
	def m4826():Void { var l:Long = (w5)+(65536); }
	def m4827():Void { var l:Long = (w5)+(-65536); }
	def m4828():Void { var l:Long = (w5)+(16777216); }
	def m4829():Void { var l:Long = (w5)+(-16777216); }
	def m4830():Void { var l:Long = (w5)+(16777217); }
	def m4831():Void { var l:Long = (w5)+(-16777217); }
	def m4832():Void { var l:Long = (w5)+(2147483647); }
	def m4833():Void { var l:Long = (w5)+(-2147483647); }
	def m4834():Void { var l:Long = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4835():Void { var l:Long = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4836():Void { var l:Long = (0)+(w2); }
	def m4837():Void { var l:Long = (0)+(w3); }
	def m4838():Void { var l:Long = (0)+(w4); }
	def m4839():Void { var l:Long = (0)+(w5); }
	def m4840():Void { var l:Long = (0)+(0); }
	def m4841():Void { var l:Long = (0)+(-0); }
	def m4842():Void { var l:Long = (0)+(1); }
	def m4843():Void { var l:Long = (0)+(-1); }
	def m4844():Void { var l:Long = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4845():Void { var l:Long = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4846():Void { var l:Long = (0)+(127); }
	def m4847():Void { var l:Long = (0)+(-127); }
	def m4848():Void { var l:Long = (0)+(128); }
	def m4849():Void { var l:Long = (0)+(-128); }
	def m4850():Void { var l:Long = (0)+(255); }
	def m4851():Void { var l:Long = (0)+(-255); }
	def m4852():Void { var l:Long = (0)+(256); }
	def m4853():Void { var l:Long = (0)+(-256); }
	def m4854():Void { var l:Long = (0)+(32767); }
	def m4855():Void { var l:Long = (0)+(-32767); }
	def m4856():Void { var l:Long = (0)+(32768); }
	def m4857():Void { var l:Long = (0)+(-32768); }
	def m4858():Void { var l:Long = (0)+(65535); }
	def m4859():Void { var l:Long = (0)+(-65535); }
	def m4860():Void { var l:Long = (0)+(65536); }
	def m4861():Void { var l:Long = (0)+(-65536); }
	def m4862():Void { var l:Long = (0)+(16777216); }
	def m4863():Void { var l:Long = (0)+(-16777216); }
	def m4864():Void { var l:Long = (0)+(16777217); }
	def m4865():Void { var l:Long = (0)+(-16777217); }
	def m4866():Void { var l:Long = (0)+(2147483647); }
	def m4867():Void { var l:Long = (0)+(-2147483647); }
	def m4868():Void { var l:Long = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4869():Void { var l:Long = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4870():Void { var l:Long = (-0)+(w2); }
	def m4871():Void { var l:Long = (-0)+(w3); }
	def m4872():Void { var l:Long = (-0)+(w4); }
	def m4873():Void { var l:Long = (-0)+(w5); }
	def m4874():Void { var l:Long = (-0)+(0); }
	def m4875():Void { var l:Long = (-0)+(-0); }
	def m4876():Void { var l:Long = (-0)+(1); }
	def m4877():Void { var l:Long = (-0)+(-1); }
	def m4878():Void { var l:Long = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4879():Void { var l:Long = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4880():Void { var l:Long = (-0)+(127); }
	def m4881():Void { var l:Long = (-0)+(-127); }
	def m4882():Void { var l:Long = (-0)+(128); }
	def m4883():Void { var l:Long = (-0)+(-128); }
	def m4884():Void { var l:Long = (-0)+(255); }
	def m4885():Void { var l:Long = (-0)+(-255); }
	def m4886():Void { var l:Long = (-0)+(256); }
	def m4887():Void { var l:Long = (-0)+(-256); }
	def m4888():Void { var l:Long = (-0)+(32767); }
	def m4889():Void { var l:Long = (-0)+(-32767); }
	def m4890():Void { var l:Long = (-0)+(32768); }
	def m4891():Void { var l:Long = (-0)+(-32768); }
	def m4892():Void { var l:Long = (-0)+(65535); }
	def m4893():Void { var l:Long = (-0)+(-65535); }
	def m4894():Void { var l:Long = (-0)+(65536); }
	def m4895():Void { var l:Long = (-0)+(-65536); }
	def m4896():Void { var l:Long = (-0)+(16777216); }
	def m4897():Void { var l:Long = (-0)+(-16777216); }
	def m4898():Void { var l:Long = (-0)+(16777217); }
	def m4899():Void { var l:Long = (-0)+(-16777217); }
	def m4900():Void { var l:Long = (-0)+(2147483647); }
	def m4901():Void { var l:Long = (-0)+(-2147483647); }
	def m4902():Void { var l:Long = (1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4903():Void { var l:Long = (1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4904():Void { var l:Long = (1)+(w2); }
	def m4905():Void { var l:Long = (1)+(w3); }
	def m4906():Void { var l:Long = (1)+(w4); }
	def m4907():Void { var l:Long = (1)+(w5); }
	def m4908():Void { var l:Long = (1)+(0); }
	def m4909():Void { var l:Long = (1)+(-0); }
	def m4910():Void { var l:Long = (1)+(1); }
	def m4911():Void { var l:Long = (1)+(-1); }
	def m4912():Void { var l:Long = (1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4913():Void { var l:Long = (1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4914():Void { var l:Long = (1)+(127); }
	def m4915():Void { var l:Long = (1)+(-127); }
	def m4916():Void { var l:Long = (1)+(128); }
	def m4917():Void { var l:Long = (1)+(-128); }
	def m4918():Void { var l:Long = (1)+(255); }
	def m4919():Void { var l:Long = (1)+(-255); }
	def m4920():Void { var l:Long = (1)+(256); }
	def m4921():Void { var l:Long = (1)+(-256); }
	def m4922():Void { var l:Long = (1)+(32767); }
	def m4923():Void { var l:Long = (1)+(-32767); }
	def m4924():Void { var l:Long = (1)+(32768); }
	def m4925():Void { var l:Long = (1)+(-32768); }
	def m4926():Void { var l:Long = (1)+(65535); }
	def m4927():Void { var l:Long = (1)+(-65535); }
	def m4928():Void { var l:Long = (1)+(65536); }
	def m4929():Void { var l:Long = (1)+(-65536); }
	def m4930():Void { var l:Long = (1)+(16777216); }
	def m4931():Void { var l:Long = (1)+(-16777216); }
	def m4932():Void { var l:Long = (1)+(16777217); }
	def m4933():Void { var l:Long = (1)+(-16777217); }
	def m4934():Void { var l:Long = (1)+(2147483647); }
	def m4935():Void { var l:Long = (1)+(-2147483647); }
	def m4936():Void { var l:Long = (-1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m4937():Void { var l:Long = (-1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4938():Void { var l:Long = (-1)+(w2); }
	def m4939():Void { var l:Long = (-1)+(w3); }
	def m4940():Void { var l:Long = (-1)+(w4); }
	def m4941():Void { var l:Long = (-1)+(w5); }
	def m4942():Void { var l:Long = (-1)+(0); }
	def m4943():Void { var l:Long = (-1)+(-0); }
	def m4944():Void { var l:Long = (-1)+(1); }
	def m4945():Void { var l:Long = (-1)+(-1); }
	def m4946():Void { var l:Long = (-1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4947():Void { var l:Long = (-1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4948():Void { var l:Long = (-1)+(127); }
	def m4949():Void { var l:Long = (-1)+(-127); }
	def m4950():Void { var l:Long = (-1)+(128); }
	def m4951():Void { var l:Long = (-1)+(-128); }
	def m4952():Void { var l:Long = (-1)+(255); }
	def m4953():Void { var l:Long = (-1)+(-255); }
	def m4954():Void { var l:Long = (-1)+(256); }
	def m4955():Void { var l:Long = (-1)+(-256); }
	def m4956():Void { var l:Long = (-1)+(32767); }
	def m4957():Void { var l:Long = (-1)+(-32767); }
	def m4958():Void { var l:Long = (-1)+(32768); }
	def m4959():Void { var l:Long = (-1)+(-32768); }
	def m4960():Void { var l:Long = (-1)+(65535); }
	def m4961():Void { var l:Long = (-1)+(-65535); }
	def m4962():Void { var l:Long = (-1)+(65536); }
	def m4963():Void { var l:Long = (-1)+(-65536); }
	def m4964():Void { var l:Long = (-1)+(16777216); }
	def m4965():Void { var l:Long = (-1)+(-16777216); }
	def m4966():Void { var l:Long = (-1)+(16777217); }
	def m4967():Void { var l:Long = (-1)+(-16777217); }
	def m4968():Void { var l:Long = (-1)+(2147483647); }
	def m4969():Void { var l:Long = (-1)+(-2147483647); }
	def m4970():Void { var l:Long = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4971():Void { var l:Long = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4972():Void { var l:Long = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4973():Void { var l:Long = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4974():Void { var l:Long = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4975():Void { var l:Long = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4976():Void { var l:Long = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4977():Void { var l:Long = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4978():Void { var l:Long = (2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4979():Void { var l:Long = (2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4980():Void { var l:Long = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4981():Void { var l:Long = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4982():Void { var l:Long = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4983():Void { var l:Long = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4984():Void { var l:Long = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4985():Void { var l:Long = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4986():Void { var l:Long = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4987():Void { var l:Long = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4988():Void { var l:Long = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4989():Void { var l:Long = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4990():Void { var l:Long = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4991():Void { var l:Long = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4992():Void { var l:Long = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4993():Void { var l:Long = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4994():Void { var l:Long = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4995():Void { var l:Long = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4996():Void { var l:Long = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4997():Void { var l:Long = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4998():Void { var l:Long = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m4999():Void { var l:Long = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5000():Void { var l:Long = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5001():Void { var l:Long = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5002():Void { var l:Long = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5003():Void { var l:Long = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5004():Void { var l:Long = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5005():Void { var l:Long = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5006():Void { var l:Long = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5007():Void { var l:Long = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5008():Void { var l:Long = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5009():Void { var l:Long = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5010():Void { var l:Long = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5011():Void { var l:Long = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5012():Void { var l:Long = (-2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5013():Void { var l:Long = (-2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5014():Void { var l:Long = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5015():Void { var l:Long = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5016():Void { var l:Long = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5017():Void { var l:Long = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5018():Void { var l:Long = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5019():Void { var l:Long = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5020():Void { var l:Long = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5021():Void { var l:Long = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5022():Void { var l:Long = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5023():Void { var l:Long = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5024():Void { var l:Long = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5025():Void { var l:Long = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5026():Void { var l:Long = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5027():Void { var l:Long = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5028():Void { var l:Long = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5029():Void { var l:Long = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5030():Void { var l:Long = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5031():Void { var l:Long = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5032():Void { var l:Long = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5033():Void { var l:Long = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5034():Void { var l:Long = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5035():Void { var l:Long = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5036():Void { var l:Long = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5037():Void { var l:Long = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5038():Void { var l:Long = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5039():Void { var l:Long = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5040():Void { var l:Long = (127)+(w2); }
	def m5041():Void { var l:Long = (127)+(w3); }
	def m5042():Void { var l:Long = (127)+(w4); }
	def m5043():Void { var l:Long = (127)+(w5); }
	def m5044():Void { var l:Long = (127)+(0); }
	def m5045():Void { var l:Long = (127)+(-0); }
	def m5046():Void { var l:Long = (127)+(1); }
	def m5047():Void { var l:Long = (127)+(-1); }
	def m5048():Void { var l:Long = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5049():Void { var l:Long = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5050():Void { var l:Long = (127)+(127); }
	def m5051():Void { var l:Long = (127)+(-127); }
	def m5052():Void { var l:Long = (127)+(128); }
	def m5053():Void { var l:Long = (127)+(-128); }
	def m5054():Void { var l:Long = (127)+(255); }
	def m5055():Void { var l:Long = (127)+(-255); }
	def m5056():Void { var l:Long = (127)+(256); }
	def m5057():Void { var l:Long = (127)+(-256); }
	def m5058():Void { var l:Long = (127)+(32767); }
	def m5059():Void { var l:Long = (127)+(-32767); }
	def m5060():Void { var l:Long = (127)+(32768); }
	def m5061():Void { var l:Long = (127)+(-32768); }
	def m5062():Void { var l:Long = (127)+(65535); }
	def m5063():Void { var l:Long = (127)+(-65535); }
	def m5064():Void { var l:Long = (127)+(65536); }
	def m5065():Void { var l:Long = (127)+(-65536); }
	def m5066():Void { var l:Long = (127)+(16777216); }
	def m5067():Void { var l:Long = (127)+(-16777216); }
	def m5068():Void { var l:Long = (127)+(16777217); }
	def m5069():Void { var l:Long = (127)+(-16777217); }
	def m5070():Void { var l:Long = (127)+(2147483647); }
	def m5071():Void { var l:Long = (127)+(-2147483647); }
	def m5072():Void { var l:Long = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5073():Void { var l:Long = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5074():Void { var l:Long = (-127)+(w2); }
	def m5075():Void { var l:Long = (-127)+(w3); }
	def m5076():Void { var l:Long = (-127)+(w4); }
	def m5077():Void { var l:Long = (-127)+(w5); }
	def m5078():Void { var l:Long = (-127)+(0); }
	def m5079():Void { var l:Long = (-127)+(-0); }
	def m5080():Void { var l:Long = (-127)+(1); }
	def m5081():Void { var l:Long = (-127)+(-1); }
	def m5082():Void { var l:Long = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5083():Void { var l:Long = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5084():Void { var l:Long = (-127)+(127); }
	def m5085():Void { var l:Long = (-127)+(-127); }
	def m5086():Void { var l:Long = (-127)+(128); }
	def m5087():Void { var l:Long = (-127)+(-128); }
	def m5088():Void { var l:Long = (-127)+(255); }
	def m5089():Void { var l:Long = (-127)+(-255); }
	def m5090():Void { var l:Long = (-127)+(256); }
	def m5091():Void { var l:Long = (-127)+(-256); }
	def m5092():Void { var l:Long = (-127)+(32767); }
	def m5093():Void { var l:Long = (-127)+(-32767); }
	def m5094():Void { var l:Long = (-127)+(32768); }
	def m5095():Void { var l:Long = (-127)+(-32768); }
	def m5096():Void { var l:Long = (-127)+(65535); }
	def m5097():Void { var l:Long = (-127)+(-65535); }
	def m5098():Void { var l:Long = (-127)+(65536); }
	def m5099():Void { var l:Long = (-127)+(-65536); }
	def m5100():Void { var l:Long = (-127)+(16777216); }
	def m5101():Void { var l:Long = (-127)+(-16777216); }
	def m5102():Void { var l:Long = (-127)+(16777217); }
	def m5103():Void { var l:Long = (-127)+(-16777217); }
	def m5104():Void { var l:Long = (-127)+(2147483647); }
	def m5105():Void { var l:Long = (-127)+(-2147483647); }
	def m5106():Void { var l:Long = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5107():Void { var l:Long = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5108():Void { var l:Long = (128)+(w2); }
	def m5109():Void { var l:Long = (128)+(w3); }
	def m5110():Void { var l:Long = (128)+(w4); }
	def m5111():Void { var l:Long = (128)+(w5); }
	def m5112():Void { var l:Long = (128)+(0); }
	def m5113():Void { var l:Long = (128)+(-0); }
	def m5114():Void { var l:Long = (128)+(1); }
	def m5115():Void { var l:Long = (128)+(-1); }
	def m5116():Void { var l:Long = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5117():Void { var l:Long = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5118():Void { var l:Long = (128)+(127); }
	def m5119():Void { var l:Long = (128)+(-127); }
	def m5120():Void { var l:Long = (128)+(128); }
	def m5121():Void { var l:Long = (128)+(-128); }
	def m5122():Void { var l:Long = (128)+(255); }
	def m5123():Void { var l:Long = (128)+(-255); }
	def m5124():Void { var l:Long = (128)+(256); }
	def m5125():Void { var l:Long = (128)+(-256); }
	def m5126():Void { var l:Long = (128)+(32767); }
	def m5127():Void { var l:Long = (128)+(-32767); }
	def m5128():Void { var l:Long = (128)+(32768); }
	def m5129():Void { var l:Long = (128)+(-32768); }
	def m5130():Void { var l:Long = (128)+(65535); }
	def m5131():Void { var l:Long = (128)+(-65535); }
	def m5132():Void { var l:Long = (128)+(65536); }
	def m5133():Void { var l:Long = (128)+(-65536); }
	def m5134():Void { var l:Long = (128)+(16777216); }
	def m5135():Void { var l:Long = (128)+(-16777216); }
	def m5136():Void { var l:Long = (128)+(16777217); }
	def m5137():Void { var l:Long = (128)+(-16777217); }
	def m5138():Void { var l:Long = (128)+(2147483647); }
	def m5139():Void { var l:Long = (128)+(-2147483647); }
	def m5140():Void { var l:Long = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5141():Void { var l:Long = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5142():Void { var l:Long = (-128)+(w2); }
	def m5143():Void { var l:Long = (-128)+(w3); }
	def m5144():Void { var l:Long = (-128)+(w4); }
	def m5145():Void { var l:Long = (-128)+(w5); }
	def m5146():Void { var l:Long = (-128)+(0); }
	def m5147():Void { var l:Long = (-128)+(-0); }
	def m5148():Void { var l:Long = (-128)+(1); }
	def m5149():Void { var l:Long = (-128)+(-1); }
	def m5150():Void { var l:Long = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5151():Void { var l:Long = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5152():Void { var l:Long = (-128)+(127); }
	def m5153():Void { var l:Long = (-128)+(-127); }
	def m5154():Void { var l:Long = (-128)+(128); }
	def m5155():Void { var l:Long = (-128)+(-128); }
	def m5156():Void { var l:Long = (-128)+(255); }
	def m5157():Void { var l:Long = (-128)+(-255); }
	def m5158():Void { var l:Long = (-128)+(256); }
	def m5159():Void { var l:Long = (-128)+(-256); }
	def m5160():Void { var l:Long = (-128)+(32767); }
	def m5161():Void { var l:Long = (-128)+(-32767); }
	def m5162():Void { var l:Long = (-128)+(32768); }
	def m5163():Void { var l:Long = (-128)+(-32768); }
	def m5164():Void { var l:Long = (-128)+(65535); }
	def m5165():Void { var l:Long = (-128)+(-65535); }
	def m5166():Void { var l:Long = (-128)+(65536); }
	def m5167():Void { var l:Long = (-128)+(-65536); }
	def m5168():Void { var l:Long = (-128)+(16777216); }
	def m5169():Void { var l:Long = (-128)+(-16777216); }
	def m5170():Void { var l:Long = (-128)+(16777217); }
	def m5171():Void { var l:Long = (-128)+(-16777217); }
	def m5172():Void { var l:Long = (-128)+(2147483647); }
	def m5173():Void { var l:Long = (-128)+(-2147483647); }
	def m5174():Void { var l:Long = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5175():Void { var l:Long = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5176():Void { var l:Long = (255)+(w2); }
	def m5177():Void { var l:Long = (255)+(w3); }
	def m5178():Void { var l:Long = (255)+(w4); }
	def m5179():Void { var l:Long = (255)+(w5); }
	def m5180():Void { var l:Long = (255)+(0); }
	def m5181():Void { var l:Long = (255)+(-0); }
	def m5182():Void { var l:Long = (255)+(1); }
	def m5183():Void { var l:Long = (255)+(-1); }
	def m5184():Void { var l:Long = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5185():Void { var l:Long = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5186():Void { var l:Long = (255)+(127); }
	def m5187():Void { var l:Long = (255)+(-127); }
	def m5188():Void { var l:Long = (255)+(128); }
	def m5189():Void { var l:Long = (255)+(-128); }
	def m5190():Void { var l:Long = (255)+(255); }
	def m5191():Void { var l:Long = (255)+(-255); }
	def m5192():Void { var l:Long = (255)+(256); }
	def m5193():Void { var l:Long = (255)+(-256); }
	def m5194():Void { var l:Long = (255)+(32767); }
	def m5195():Void { var l:Long = (255)+(-32767); }
	def m5196():Void { var l:Long = (255)+(32768); }
	def m5197():Void { var l:Long = (255)+(-32768); }
	def m5198():Void { var l:Long = (255)+(65535); }
	def m5199():Void { var l:Long = (255)+(-65535); }
	def m5200():Void { var l:Long = (255)+(65536); }
	def m5201():Void { var l:Long = (255)+(-65536); }
	def m5202():Void { var l:Long = (255)+(16777216); }
	def m5203():Void { var l:Long = (255)+(-16777216); }
	def m5204():Void { var l:Long = (255)+(16777217); }
	def m5205():Void { var l:Long = (255)+(-16777217); }
	def m5206():Void { var l:Long = (255)+(2147483647); }
	def m5207():Void { var l:Long = (255)+(-2147483647); }
	def m5208():Void { var l:Long = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5209():Void { var l:Long = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5210():Void { var l:Long = (-255)+(w2); }
	def m5211():Void { var l:Long = (-255)+(w3); }
	def m5212():Void { var l:Long = (-255)+(w4); }
	def m5213():Void { var l:Long = (-255)+(w5); }
	def m5214():Void { var l:Long = (-255)+(0); }
	def m5215():Void { var l:Long = (-255)+(-0); }
	def m5216():Void { var l:Long = (-255)+(1); }
	def m5217():Void { var l:Long = (-255)+(-1); }
	def m5218():Void { var l:Long = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5219():Void { var l:Long = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5220():Void { var l:Long = (-255)+(127); }
	def m5221():Void { var l:Long = (-255)+(-127); }
	def m5222():Void { var l:Long = (-255)+(128); }
	def m5223():Void { var l:Long = (-255)+(-128); }
	def m5224():Void { var l:Long = (-255)+(255); }
	def m5225():Void { var l:Long = (-255)+(-255); }
	def m5226():Void { var l:Long = (-255)+(256); }
	def m5227():Void { var l:Long = (-255)+(-256); }
	def m5228():Void { var l:Long = (-255)+(32767); }
	def m5229():Void { var l:Long = (-255)+(-32767); }
	def m5230():Void { var l:Long = (-255)+(32768); }
	def m5231():Void { var l:Long = (-255)+(-32768); }
	def m5232():Void { var l:Long = (-255)+(65535); }
	def m5233():Void { var l:Long = (-255)+(-65535); }
	def m5234():Void { var l:Long = (-255)+(65536); }
	def m5235():Void { var l:Long = (-255)+(-65536); }
	def m5236():Void { var l:Long = (-255)+(16777216); }
	def m5237():Void { var l:Long = (-255)+(-16777216); }
	def m5238():Void { var l:Long = (-255)+(16777217); }
	def m5239():Void { var l:Long = (-255)+(-16777217); }
	def m5240():Void { var l:Long = (-255)+(2147483647); }
	def m5241():Void { var l:Long = (-255)+(-2147483647); }
	def m5242():Void { var l:Long = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5243():Void { var l:Long = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5244():Void { var l:Long = (256)+(w2); }
	def m5245():Void { var l:Long = (256)+(w3); }
	def m5246():Void { var l:Long = (256)+(w4); }
	def m5247():Void { var l:Long = (256)+(w5); }
	def m5248():Void { var l:Long = (256)+(0); }
	def m5249():Void { var l:Long = (256)+(-0); }
	def m5250():Void { var l:Long = (256)+(1); }
	def m5251():Void { var l:Long = (256)+(-1); }
	def m5252():Void { var l:Long = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5253():Void { var l:Long = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5254():Void { var l:Long = (256)+(127); }
	def m5255():Void { var l:Long = (256)+(-127); }
	def m5256():Void { var l:Long = (256)+(128); }
	def m5257():Void { var l:Long = (256)+(-128); }
	def m5258():Void { var l:Long = (256)+(255); }
	def m5259():Void { var l:Long = (256)+(-255); }
	def m5260():Void { var l:Long = (256)+(256); }
	def m5261():Void { var l:Long = (256)+(-256); }
	def m5262():Void { var l:Long = (256)+(32767); }
	def m5263():Void { var l:Long = (256)+(-32767); }
	def m5264():Void { var l:Long = (256)+(32768); }
	def m5265():Void { var l:Long = (256)+(-32768); }
	def m5266():Void { var l:Long = (256)+(65535); }
	def m5267():Void { var l:Long = (256)+(-65535); }
	def m5268():Void { var l:Long = (256)+(65536); }
	def m5269():Void { var l:Long = (256)+(-65536); }
	def m5270():Void { var l:Long = (256)+(16777216); }
	def m5271():Void { var l:Long = (256)+(-16777216); }
	def m5272():Void { var l:Long = (256)+(16777217); }
	def m5273():Void { var l:Long = (256)+(-16777217); }
	def m5274():Void { var l:Long = (256)+(2147483647); }
	def m5275():Void { var l:Long = (256)+(-2147483647); }
	def m5276():Void { var l:Long = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5277():Void { var l:Long = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5278():Void { var l:Long = (-256)+(w2); }
	def m5279():Void { var l:Long = (-256)+(w3); }
	def m5280():Void { var l:Long = (-256)+(w4); }
	def m5281():Void { var l:Long = (-256)+(w5); }
	def m5282():Void { var l:Long = (-256)+(0); }
	def m5283():Void { var l:Long = (-256)+(-0); }
	def m5284():Void { var l:Long = (-256)+(1); }
	def m5285():Void { var l:Long = (-256)+(-1); }
	def m5286():Void { var l:Long = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5287():Void { var l:Long = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5288():Void { var l:Long = (-256)+(127); }
	def m5289():Void { var l:Long = (-256)+(-127); }
	def m5290():Void { var l:Long = (-256)+(128); }
	def m5291():Void { var l:Long = (-256)+(-128); }
	def m5292():Void { var l:Long = (-256)+(255); }
	def m5293():Void { var l:Long = (-256)+(-255); }
	def m5294():Void { var l:Long = (-256)+(256); }
	def m5295():Void { var l:Long = (-256)+(-256); }
	def m5296():Void { var l:Long = (-256)+(32767); }
	def m5297():Void { var l:Long = (-256)+(-32767); }
	def m5298():Void { var l:Long = (-256)+(32768); }
	def m5299():Void { var l:Long = (-256)+(-32768); }
	def m5300():Void { var l:Long = (-256)+(65535); }
	def m5301():Void { var l:Long = (-256)+(-65535); }
	def m5302():Void { var l:Long = (-256)+(65536); }
	def m5303():Void { var l:Long = (-256)+(-65536); }
	def m5304():Void { var l:Long = (-256)+(16777216); }
	def m5305():Void { var l:Long = (-256)+(-16777216); }
	def m5306():Void { var l:Long = (-256)+(16777217); }
	def m5307():Void { var l:Long = (-256)+(-16777217); }
	def m5308():Void { var l:Long = (-256)+(2147483647); }
	def m5309():Void { var l:Long = (-256)+(-2147483647); }
	def m5310():Void { var l:Long = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5311():Void { var l:Long = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5312():Void { var l:Long = (32767)+(w2); }
	def m5313():Void { var l:Long = (32767)+(w3); }
	def m5314():Void { var l:Long = (32767)+(w4); }
	def m5315():Void { var l:Long = (32767)+(w5); }
	def m5316():Void { var l:Long = (32767)+(0); }
	def m5317():Void { var l:Long = (32767)+(-0); }
	def m5318():Void { var l:Long = (32767)+(1); }
	def m5319():Void { var l:Long = (32767)+(-1); }
	def m5320():Void { var l:Long = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5321():Void { var l:Long = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5322():Void { var l:Long = (32767)+(127); }
	def m5323():Void { var l:Long = (32767)+(-127); }
	def m5324():Void { var l:Long = (32767)+(128); }
	def m5325():Void { var l:Long = (32767)+(-128); }
	def m5326():Void { var l:Long = (32767)+(255); }
	def m5327():Void { var l:Long = (32767)+(-255); }
	def m5328():Void { var l:Long = (32767)+(256); }
	def m5329():Void { var l:Long = (32767)+(-256); }
	def m5330():Void { var l:Long = (32767)+(32767); }
	def m5331():Void { var l:Long = (32767)+(-32767); }
	def m5332():Void { var l:Long = (32767)+(32768); }
	def m5333():Void { var l:Long = (32767)+(-32768); }
	def m5334():Void { var l:Long = (32767)+(65535); }
	def m5335():Void { var l:Long = (32767)+(-65535); }
	def m5336():Void { var l:Long = (32767)+(65536); }
	def m5337():Void { var l:Long = (32767)+(-65536); }
	def m5338():Void { var l:Long = (32767)+(16777216); }
	def m5339():Void { var l:Long = (32767)+(-16777216); }
	def m5340():Void { var l:Long = (32767)+(16777217); }
	def m5341():Void { var l:Long = (32767)+(-16777217); }
	def m5342():Void { var l:Long = (32767)+(2147483647); }
	def m5343():Void { var l:Long = (32767)+(-2147483647); }
	def m5344():Void { var l:Long = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5345():Void { var l:Long = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5346():Void { var l:Long = (-32767)+(w2); }
	def m5347():Void { var l:Long = (-32767)+(w3); }
	def m5348():Void { var l:Long = (-32767)+(w4); }
	def m5349():Void { var l:Long = (-32767)+(w5); }
	def m5350():Void { var l:Long = (-32767)+(0); }
	def m5351():Void { var l:Long = (-32767)+(-0); }
	def m5352():Void { var l:Long = (-32767)+(1); }
	def m5353():Void { var l:Long = (-32767)+(-1); }
	def m5354():Void { var l:Long = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5355():Void { var l:Long = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5356():Void { var l:Long = (-32767)+(127); }
	def m5357():Void { var l:Long = (-32767)+(-127); }
	def m5358():Void { var l:Long = (-32767)+(128); }
	def m5359():Void { var l:Long = (-32767)+(-128); }
	def m5360():Void { var l:Long = (-32767)+(255); }
	def m5361():Void { var l:Long = (-32767)+(-255); }
	def m5362():Void { var l:Long = (-32767)+(256); }
	def m5363():Void { var l:Long = (-32767)+(-256); }
	def m5364():Void { var l:Long = (-32767)+(32767); }
	def m5365():Void { var l:Long = (-32767)+(-32767); }
	def m5366():Void { var l:Long = (-32767)+(32768); }
	def m5367():Void { var l:Long = (-32767)+(-32768); }
	def m5368():Void { var l:Long = (-32767)+(65535); }
	def m5369():Void { var l:Long = (-32767)+(-65535); }
	def m5370():Void { var l:Long = (-32767)+(65536); }
	def m5371():Void { var l:Long = (-32767)+(-65536); }
	def m5372():Void { var l:Long = (-32767)+(16777216); }
	def m5373():Void { var l:Long = (-32767)+(-16777216); }
	def m5374():Void { var l:Long = (-32767)+(16777217); }
	def m5375():Void { var l:Long = (-32767)+(-16777217); }
	def m5376():Void { var l:Long = (-32767)+(2147483647); }
	def m5377():Void { var l:Long = (-32767)+(-2147483647); }
	def m5378():Void { var l:Long = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5379():Void { var l:Long = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5380():Void { var l:Long = (32768)+(w2); }
	def m5381():Void { var l:Long = (32768)+(w3); }
	def m5382():Void { var l:Long = (32768)+(w4); }
	def m5383():Void { var l:Long = (32768)+(w5); }
	def m5384():Void { var l:Long = (32768)+(0); }
	def m5385():Void { var l:Long = (32768)+(-0); }
	def m5386():Void { var l:Long = (32768)+(1); }
	def m5387():Void { var l:Long = (32768)+(-1); }
	def m5388():Void { var l:Long = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5389():Void { var l:Long = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5390():Void { var l:Long = (32768)+(127); }
	def m5391():Void { var l:Long = (32768)+(-127); }
	def m5392():Void { var l:Long = (32768)+(128); }
	def m5393():Void { var l:Long = (32768)+(-128); }
	def m5394():Void { var l:Long = (32768)+(255); }
	def m5395():Void { var l:Long = (32768)+(-255); }
	def m5396():Void { var l:Long = (32768)+(256); }
	def m5397():Void { var l:Long = (32768)+(-256); }
	def m5398():Void { var l:Long = (32768)+(32767); }
	def m5399():Void { var l:Long = (32768)+(-32767); }
	def m5400():Void { var l:Long = (32768)+(32768); }
	def m5401():Void { var l:Long = (32768)+(-32768); }
	def m5402():Void { var l:Long = (32768)+(65535); }
	def m5403():Void { var l:Long = (32768)+(-65535); }
	def m5404():Void { var l:Long = (32768)+(65536); }
	def m5405():Void { var l:Long = (32768)+(-65536); }
	def m5406():Void { var l:Long = (32768)+(16777216); }
	def m5407():Void { var l:Long = (32768)+(-16777216); }
	def m5408():Void { var l:Long = (32768)+(16777217); }
	def m5409():Void { var l:Long = (32768)+(-16777217); }
	def m5410():Void { var l:Long = (32768)+(2147483647); }
	def m5411():Void { var l:Long = (32768)+(-2147483647); }
	def m5412():Void { var l:Long = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5413():Void { var l:Long = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5414():Void { var l:Long = (-32768)+(w2); }
	def m5415():Void { var l:Long = (-32768)+(w3); }
	def m5416():Void { var l:Long = (-32768)+(w4); }
	def m5417():Void { var l:Long = (-32768)+(w5); }
	def m5418():Void { var l:Long = (-32768)+(0); }
	def m5419():Void { var l:Long = (-32768)+(-0); }
	def m5420():Void { var l:Long = (-32768)+(1); }
	def m5421():Void { var l:Long = (-32768)+(-1); }
	def m5422():Void { var l:Long = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5423():Void { var l:Long = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5424():Void { var l:Long = (-32768)+(127); }
	def m5425():Void { var l:Long = (-32768)+(-127); }
	def m5426():Void { var l:Long = (-32768)+(128); }
	def m5427():Void { var l:Long = (-32768)+(-128); }
	def m5428():Void { var l:Long = (-32768)+(255); }
	def m5429():Void { var l:Long = (-32768)+(-255); }
	def m5430():Void { var l:Long = (-32768)+(256); }
	def m5431():Void { var l:Long = (-32768)+(-256); }
	def m5432():Void { var l:Long = (-32768)+(32767); }
	def m5433():Void { var l:Long = (-32768)+(-32767); }
	def m5434():Void { var l:Long = (-32768)+(32768); }
	def m5435():Void { var l:Long = (-32768)+(-32768); }
	def m5436():Void { var l:Long = (-32768)+(65535); }
	def m5437():Void { var l:Long = (-32768)+(-65535); }
	def m5438():Void { var l:Long = (-32768)+(65536); }
	def m5439():Void { var l:Long = (-32768)+(-65536); }
	def m5440():Void { var l:Long = (-32768)+(16777216); }
	def m5441():Void { var l:Long = (-32768)+(-16777216); }
	def m5442():Void { var l:Long = (-32768)+(16777217); }
	def m5443():Void { var l:Long = (-32768)+(-16777217); }
	def m5444():Void { var l:Long = (-32768)+(2147483647); }
	def m5445():Void { var l:Long = (-32768)+(-2147483647); }
	def m5446():Void { var l:Long = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5447():Void { var l:Long = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5448():Void { var l:Long = (65535)+(w2); }
	def m5449():Void { var l:Long = (65535)+(w3); }
	def m5450():Void { var l:Long = (65535)+(w4); }
	def m5451():Void { var l:Long = (65535)+(w5); }
	def m5452():Void { var l:Long = (65535)+(0); }
	def m5453():Void { var l:Long = (65535)+(-0); }
	def m5454():Void { var l:Long = (65535)+(1); }
	def m5455():Void { var l:Long = (65535)+(-1); }
	def m5456():Void { var l:Long = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5457():Void { var l:Long = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5458():Void { var l:Long = (65535)+(127); }
	def m5459():Void { var l:Long = (65535)+(-127); }
	def m5460():Void { var l:Long = (65535)+(128); }
	def m5461():Void { var l:Long = (65535)+(-128); }
	def m5462():Void { var l:Long = (65535)+(255); }
	def m5463():Void { var l:Long = (65535)+(-255); }
	def m5464():Void { var l:Long = (65535)+(256); }
	def m5465():Void { var l:Long = (65535)+(-256); }
	def m5466():Void { var l:Long = (65535)+(32767); }
	def m5467():Void { var l:Long = (65535)+(-32767); }
	def m5468():Void { var l:Long = (65535)+(32768); }
	def m5469():Void { var l:Long = (65535)+(-32768); }
	def m5470():Void { var l:Long = (65535)+(65535); }
	def m5471():Void { var l:Long = (65535)+(-65535); }
	def m5472():Void { var l:Long = (65535)+(65536); }
	def m5473():Void { var l:Long = (65535)+(-65536); }
	def m5474():Void { var l:Long = (65535)+(16777216); }
	def m5475():Void { var l:Long = (65535)+(-16777216); }
	def m5476():Void { var l:Long = (65535)+(16777217); }
	def m5477():Void { var l:Long = (65535)+(-16777217); }
	def m5478():Void { var l:Long = (65535)+(2147483647); }
	def m5479():Void { var l:Long = (65535)+(-2147483647); }
	def m5480():Void { var l:Long = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5481():Void { var l:Long = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5482():Void { var l:Long = (-65535)+(w2); }
	def m5483():Void { var l:Long = (-65535)+(w3); }
	def m5484():Void { var l:Long = (-65535)+(w4); }
	def m5485():Void { var l:Long = (-65535)+(w5); }
	def m5486():Void { var l:Long = (-65535)+(0); }
	def m5487():Void { var l:Long = (-65535)+(-0); }
	def m5488():Void { var l:Long = (-65535)+(1); }
	def m5489():Void { var l:Long = (-65535)+(-1); }
	def m5490():Void { var l:Long = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5491():Void { var l:Long = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5492():Void { var l:Long = (-65535)+(127); }
	def m5493():Void { var l:Long = (-65535)+(-127); }
	def m5494():Void { var l:Long = (-65535)+(128); }
	def m5495():Void { var l:Long = (-65535)+(-128); }
	def m5496():Void { var l:Long = (-65535)+(255); }
	def m5497():Void { var l:Long = (-65535)+(-255); }
	def m5498():Void { var l:Long = (-65535)+(256); }
	def m5499():Void { var l:Long = (-65535)+(-256); }
	def m5500():Void { var l:Long = (-65535)+(32767); }
	def m5501():Void { var l:Long = (-65535)+(-32767); }
	def m5502():Void { var l:Long = (-65535)+(32768); }
	def m5503():Void { var l:Long = (-65535)+(-32768); }
	def m5504():Void { var l:Long = (-65535)+(65535); }
	def m5505():Void { var l:Long = (-65535)+(-65535); }
	def m5506():Void { var l:Long = (-65535)+(65536); }
	def m5507():Void { var l:Long = (-65535)+(-65536); }
	def m5508():Void { var l:Long = (-65535)+(16777216); }
	def m5509():Void { var l:Long = (-65535)+(-16777216); }
	def m5510():Void { var l:Long = (-65535)+(16777217); }
	def m5511():Void { var l:Long = (-65535)+(-16777217); }
	def m5512():Void { var l:Long = (-65535)+(2147483647); }
	def m5513():Void { var l:Long = (-65535)+(-2147483647); }
	def m5514():Void { var l:Long = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5515():Void { var l:Long = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5516():Void { var l:Long = (65536)+(w2); }
	def m5517():Void { var l:Long = (65536)+(w3); }
	def m5518():Void { var l:Long = (65536)+(w4); }
	def m5519():Void { var l:Long = (65536)+(w5); }
	def m5520():Void { var l:Long = (65536)+(0); }
	def m5521():Void { var l:Long = (65536)+(-0); }
	def m5522():Void { var l:Long = (65536)+(1); }
	def m5523():Void { var l:Long = (65536)+(-1); }
	def m5524():Void { var l:Long = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5525():Void { var l:Long = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5526():Void { var l:Long = (65536)+(127); }
	def m5527():Void { var l:Long = (65536)+(-127); }
	def m5528():Void { var l:Long = (65536)+(128); }
	def m5529():Void { var l:Long = (65536)+(-128); }
	def m5530():Void { var l:Long = (65536)+(255); }
	def m5531():Void { var l:Long = (65536)+(-255); }
	def m5532():Void { var l:Long = (65536)+(256); }
	def m5533():Void { var l:Long = (65536)+(-256); }
	def m5534():Void { var l:Long = (65536)+(32767); }
	def m5535():Void { var l:Long = (65536)+(-32767); }
	def m5536():Void { var l:Long = (65536)+(32768); }
	def m5537():Void { var l:Long = (65536)+(-32768); }
	def m5538():Void { var l:Long = (65536)+(65535); }
	def m5539():Void { var l:Long = (65536)+(-65535); }
	def m5540():Void { var l:Long = (65536)+(65536); }
	def m5541():Void { var l:Long = (65536)+(-65536); }
	def m5542():Void { var l:Long = (65536)+(16777216); }
	def m5543():Void { var l:Long = (65536)+(-16777216); }
	def m5544():Void { var l:Long = (65536)+(16777217); }
	def m5545():Void { var l:Long = (65536)+(-16777217); }
	def m5546():Void { var l:Long = (65536)+(2147483647); }
	def m5547():Void { var l:Long = (65536)+(-2147483647); }
	def m5548():Void { var l:Long = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5549():Void { var l:Long = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5550():Void { var l:Long = (-65536)+(w2); }
	def m5551():Void { var l:Long = (-65536)+(w3); }
	def m5552():Void { var l:Long = (-65536)+(w4); }
	def m5553():Void { var l:Long = (-65536)+(w5); }
	def m5554():Void { var l:Long = (-65536)+(0); }
	def m5555():Void { var l:Long = (-65536)+(-0); }
	def m5556():Void { var l:Long = (-65536)+(1); }
	def m5557():Void { var l:Long = (-65536)+(-1); }
	def m5558():Void { var l:Long = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5559():Void { var l:Long = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5560():Void { var l:Long = (-65536)+(127); }
	def m5561():Void { var l:Long = (-65536)+(-127); }
	def m5562():Void { var l:Long = (-65536)+(128); }
	def m5563():Void { var l:Long = (-65536)+(-128); }
	def m5564():Void { var l:Long = (-65536)+(255); }
	def m5565():Void { var l:Long = (-65536)+(-255); }
	def m5566():Void { var l:Long = (-65536)+(256); }
	def m5567():Void { var l:Long = (-65536)+(-256); }
	def m5568():Void { var l:Long = (-65536)+(32767); }
	def m5569():Void { var l:Long = (-65536)+(-32767); }
	def m5570():Void { var l:Long = (-65536)+(32768); }
	def m5571():Void { var l:Long = (-65536)+(-32768); }
	def m5572():Void { var l:Long = (-65536)+(65535); }
	def m5573():Void { var l:Long = (-65536)+(-65535); }
	def m5574():Void { var l:Long = (-65536)+(65536); }
	def m5575():Void { var l:Long = (-65536)+(-65536); }
	def m5576():Void { var l:Long = (-65536)+(16777216); }
	def m5577():Void { var l:Long = (-65536)+(-16777216); }
	def m5578():Void { var l:Long = (-65536)+(16777217); }
	def m5579():Void { var l:Long = (-65536)+(-16777217); }
	def m5580():Void { var l:Long = (-65536)+(2147483647); }
	def m5581():Void { var l:Long = (-65536)+(-2147483647); }
	def m5582():Void { var l:Long = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5583():Void { var l:Long = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5584():Void { var l:Long = (16777216)+(w2); }
	def m5585():Void { var l:Long = (16777216)+(w3); }
	def m5586():Void { var l:Long = (16777216)+(w4); }
	def m5587():Void { var l:Long = (16777216)+(w5); }
	def m5588():Void { var l:Long = (16777216)+(0); }
	def m5589():Void { var l:Long = (16777216)+(-0); }
	def m5590():Void { var l:Long = (16777216)+(1); }
	def m5591():Void { var l:Long = (16777216)+(-1); }
	def m5592():Void { var l:Long = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5593():Void { var l:Long = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5594():Void { var l:Long = (16777216)+(127); }
	def m5595():Void { var l:Long = (16777216)+(-127); }
	def m5596():Void { var l:Long = (16777216)+(128); }
	def m5597():Void { var l:Long = (16777216)+(-128); }
	def m5598():Void { var l:Long = (16777216)+(255); }
	def m5599():Void { var l:Long = (16777216)+(-255); }
	def m5600():Void { var l:Long = (16777216)+(256); }
	def m5601():Void { var l:Long = (16777216)+(-256); }
	def m5602():Void { var l:Long = (16777216)+(32767); }
	def m5603():Void { var l:Long = (16777216)+(-32767); }
	def m5604():Void { var l:Long = (16777216)+(32768); }
	def m5605():Void { var l:Long = (16777216)+(-32768); }
	def m5606():Void { var l:Long = (16777216)+(65535); }
	def m5607():Void { var l:Long = (16777216)+(-65535); }
	def m5608():Void { var l:Long = (16777216)+(65536); }
	def m5609():Void { var l:Long = (16777216)+(-65536); }
	def m5610():Void { var l:Long = (16777216)+(16777216); }
	def m5611():Void { var l:Long = (16777216)+(-16777216); }
	def m5612():Void { var l:Long = (16777216)+(16777217); }
	def m5613():Void { var l:Long = (16777216)+(-16777217); }
	def m5614():Void { var l:Long = (16777216)+(2147483647); }
	def m5615():Void { var l:Long = (16777216)+(-2147483647); }
	def m5616():Void { var l:Long = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5617():Void { var l:Long = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5618():Void { var l:Long = (-16777216)+(w2); }
	def m5619():Void { var l:Long = (-16777216)+(w3); }
	def m5620():Void { var l:Long = (-16777216)+(w4); }
	def m5621():Void { var l:Long = (-16777216)+(w5); }
	def m5622():Void { var l:Long = (-16777216)+(0); }
	def m5623():Void { var l:Long = (-16777216)+(-0); }
	def m5624():Void { var l:Long = (-16777216)+(1); }
	def m5625():Void { var l:Long = (-16777216)+(-1); }
	def m5626():Void { var l:Long = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5627():Void { var l:Long = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5628():Void { var l:Long = (-16777216)+(127); }
	def m5629():Void { var l:Long = (-16777216)+(-127); }
	def m5630():Void { var l:Long = (-16777216)+(128); }
	def m5631():Void { var l:Long = (-16777216)+(-128); }
	def m5632():Void { var l:Long = (-16777216)+(255); }
	def m5633():Void { var l:Long = (-16777216)+(-255); }
	def m5634():Void { var l:Long = (-16777216)+(256); }
	def m5635():Void { var l:Long = (-16777216)+(-256); }
	def m5636():Void { var l:Long = (-16777216)+(32767); }
	def m5637():Void { var l:Long = (-16777216)+(-32767); }
	def m5638():Void { var l:Long = (-16777216)+(32768); }
	def m5639():Void { var l:Long = (-16777216)+(-32768); }
	def m5640():Void { var l:Long = (-16777216)+(65535); }
	def m5641():Void { var l:Long = (-16777216)+(-65535); }
	def m5642():Void { var l:Long = (-16777216)+(65536); }
	def m5643():Void { var l:Long = (-16777216)+(-65536); }
	def m5644():Void { var l:Long = (-16777216)+(16777216); }
	def m5645():Void { var l:Long = (-16777216)+(-16777216); }
	def m5646():Void { var l:Long = (-16777216)+(16777217); }
	def m5647():Void { var l:Long = (-16777216)+(-16777217); }
	def m5648():Void { var l:Long = (-16777216)+(2147483647); }
	def m5649():Void { var l:Long = (-16777216)+(-2147483647); }
	def m5650():Void { var l:Long = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5651():Void { var l:Long = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5652():Void { var l:Long = (16777217)+(w2); }
	def m5653():Void { var l:Long = (16777217)+(w3); }
	def m5654():Void { var l:Long = (16777217)+(w4); }
	def m5655():Void { var l:Long = (16777217)+(w5); }
	def m5656():Void { var l:Long = (16777217)+(0); }
	def m5657():Void { var l:Long = (16777217)+(-0); }
	def m5658():Void { var l:Long = (16777217)+(1); }
	def m5659():Void { var l:Long = (16777217)+(-1); }
	def m5660():Void { var l:Long = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5661():Void { var l:Long = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5662():Void { var l:Long = (16777217)+(127); }
	def m5663():Void { var l:Long = (16777217)+(-127); }
	def m5664():Void { var l:Long = (16777217)+(128); }
	def m5665():Void { var l:Long = (16777217)+(-128); }
	def m5666():Void { var l:Long = (16777217)+(255); }
	def m5667():Void { var l:Long = (16777217)+(-255); }
	def m5668():Void { var l:Long = (16777217)+(256); }
	def m5669():Void { var l:Long = (16777217)+(-256); }
	def m5670():Void { var l:Long = (16777217)+(32767); }
	def m5671():Void { var l:Long = (16777217)+(-32767); }
	def m5672():Void { var l:Long = (16777217)+(32768); }
	def m5673():Void { var l:Long = (16777217)+(-32768); }
	def m5674():Void { var l:Long = (16777217)+(65535); }
	def m5675():Void { var l:Long = (16777217)+(-65535); }
	def m5676():Void { var l:Long = (16777217)+(65536); }
	def m5677():Void { var l:Long = (16777217)+(-65536); }
	def m5678():Void { var l:Long = (16777217)+(16777216); }
	def m5679():Void { var l:Long = (16777217)+(-16777216); }
	def m5680():Void { var l:Long = (16777217)+(16777217); }
	def m5681():Void { var l:Long = (16777217)+(-16777217); }
	def m5682():Void { var l:Long = (16777217)+(2147483647); }
	def m5683():Void { var l:Long = (16777217)+(-2147483647); }
	def m5684():Void { var l:Long = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5685():Void { var l:Long = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5686():Void { var l:Long = (-16777217)+(w2); }
	def m5687():Void { var l:Long = (-16777217)+(w3); }
	def m5688():Void { var l:Long = (-16777217)+(w4); }
	def m5689():Void { var l:Long = (-16777217)+(w5); }
	def m5690():Void { var l:Long = (-16777217)+(0); }
	def m5691():Void { var l:Long = (-16777217)+(-0); }
	def m5692():Void { var l:Long = (-16777217)+(1); }
	def m5693():Void { var l:Long = (-16777217)+(-1); }
	def m5694():Void { var l:Long = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5695():Void { var l:Long = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5696():Void { var l:Long = (-16777217)+(127); }
	def m5697():Void { var l:Long = (-16777217)+(-127); }
	def m5698():Void { var l:Long = (-16777217)+(128); }
	def m5699():Void { var l:Long = (-16777217)+(-128); }
	def m5700():Void { var l:Long = (-16777217)+(255); }
	def m5701():Void { var l:Long = (-16777217)+(-255); }
	def m5702():Void { var l:Long = (-16777217)+(256); }
	def m5703():Void { var l:Long = (-16777217)+(-256); }
	def m5704():Void { var l:Long = (-16777217)+(32767); }
	def m5705():Void { var l:Long = (-16777217)+(-32767); }
	def m5706():Void { var l:Long = (-16777217)+(32768); }
	def m5707():Void { var l:Long = (-16777217)+(-32768); }
	def m5708():Void { var l:Long = (-16777217)+(65535); }
	def m5709():Void { var l:Long = (-16777217)+(-65535); }
	def m5710():Void { var l:Long = (-16777217)+(65536); }
	def m5711():Void { var l:Long = (-16777217)+(-65536); }
	def m5712():Void { var l:Long = (-16777217)+(16777216); }
	def m5713():Void { var l:Long = (-16777217)+(-16777216); }
	def m5714():Void { var l:Long = (-16777217)+(16777217); }
	def m5715():Void { var l:Long = (-16777217)+(-16777217); }
	def m5716():Void { var l:Long = (-16777217)+(2147483647); }
	def m5717():Void { var l:Long = (-16777217)+(-2147483647); }
	def m5718():Void { var l:Long = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5719():Void { var l:Long = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5720():Void { var l:Long = (2147483647)+(w2); }
	def m5721():Void { var l:Long = (2147483647)+(w3); }
	def m5722():Void { var l:Long = (2147483647)+(w4); }
	def m5723():Void { var l:Long = (2147483647)+(w5); }
	def m5724():Void { var l:Long = (2147483647)+(0); }
	def m5725():Void { var l:Long = (2147483647)+(-0); }
	def m5726():Void { var l:Long = (2147483647)+(1); }
	def m5727():Void { var l:Long = (2147483647)+(-1); }
	def m5728():Void { var l:Long = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5729():Void { var l:Long = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5730():Void { var l:Long = (2147483647)+(127); }
	def m5731():Void { var l:Long = (2147483647)+(-127); }
	def m5732():Void { var l:Long = (2147483647)+(128); }
	def m5733():Void { var l:Long = (2147483647)+(-128); }
	def m5734():Void { var l:Long = (2147483647)+(255); }
	def m5735():Void { var l:Long = (2147483647)+(-255); }
	def m5736():Void { var l:Long = (2147483647)+(256); }
	def m5737():Void { var l:Long = (2147483647)+(-256); }
	def m5738():Void { var l:Long = (2147483647)+(32767); }
	def m5739():Void { var l:Long = (2147483647)+(-32767); }
	def m5740():Void { var l:Long = (2147483647)+(32768); }
	def m5741():Void { var l:Long = (2147483647)+(-32768); }
	def m5742():Void { var l:Long = (2147483647)+(65535); }
	def m5743():Void { var l:Long = (2147483647)+(-65535); }
	def m5744():Void { var l:Long = (2147483647)+(65536); }
	def m5745():Void { var l:Long = (2147483647)+(-65536); }
	def m5746():Void { var l:Long = (2147483647)+(16777216); }
	def m5747():Void { var l:Long = (2147483647)+(-16777216); }
	def m5748():Void { var l:Long = (2147483647)+(16777217); }
	def m5749():Void { var l:Long = (2147483647)+(-16777217); }
	def m5750():Void { var l:Long = (2147483647)+(2147483647); }
	def m5751():Void { var l:Long = (2147483647)+(-2147483647); }
	def m5752():Void { var l:Long = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5753():Void { var l:Long = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5754():Void { var l:Long = (-2147483647)+(w2); }
	def m5755():Void { var l:Long = (-2147483647)+(w3); }
	def m5756():Void { var l:Long = (-2147483647)+(w4); }
	def m5757():Void { var l:Long = (-2147483647)+(w5); }
	def m5758():Void { var l:Long = (-2147483647)+(0); }
	def m5759():Void { var l:Long = (-2147483647)+(-0); }
	def m5760():Void { var l:Long = (-2147483647)+(1); }
	def m5761():Void { var l:Long = (-2147483647)+(-1); }
	def m5762():Void { var l:Long = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5763():Void { var l:Long = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5764():Void { var l:Long = (-2147483647)+(127); }
	def m5765():Void { var l:Long = (-2147483647)+(-127); }
	def m5766():Void { var l:Long = (-2147483647)+(128); }
	def m5767():Void { var l:Long = (-2147483647)+(-128); }
	def m5768():Void { var l:Long = (-2147483647)+(255); }
	def m5769():Void { var l:Long = (-2147483647)+(-255); }
	def m5770():Void { var l:Long = (-2147483647)+(256); }
	def m5771():Void { var l:Long = (-2147483647)+(-256); }
	def m5772():Void { var l:Long = (-2147483647)+(32767); }
	def m5773():Void { var l:Long = (-2147483647)+(-32767); }
	def m5774():Void { var l:Long = (-2147483647)+(32768); }
	def m5775():Void { var l:Long = (-2147483647)+(-32768); }
	def m5776():Void { var l:Long = (-2147483647)+(65535); }
	def m5777():Void { var l:Long = (-2147483647)+(-65535); }
	def m5778():Void { var l:Long = (-2147483647)+(65536); }
	def m5779():Void { var l:Long = (-2147483647)+(-65536); }
	def m5780():Void { var l:Long = (-2147483647)+(16777216); }
	def m5781():Void { var l:Long = (-2147483647)+(-16777216); }
	def m5782():Void { var l:Long = (-2147483647)+(16777217); }
	def m5783():Void { var l:Long = (-2147483647)+(-16777217); }
	def m5784():Void { var l:Long = (-2147483647)+(2147483647); }
	def m5785():Void { var l:Long = (-2147483647)+(-2147483647); }
	def m5786():Void { var l:Short = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5787():Void { var l:Short = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5788():Void { var l:Short = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5789():Void { var l:Short = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5790():Void { var l:Short = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5791():Void { var l:Short = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5792():Void { var l:Short = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5793():Void { var l:Short = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5794():Void { var l:Short = (w0)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5795():Void { var l:Short = (w0)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5796():Void { var l:Short = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5797():Void { var l:Short = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5798():Void { var l:Short = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5799():Void { var l:Short = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5800():Void { var l:Short = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5801():Void { var l:Short = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5802():Void { var l:Short = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5803():Void { var l:Short = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5804():Void { var l:Short = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5805():Void { var l:Short = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5806():Void { var l:Short = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5807():Void { var l:Short = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5808():Void { var l:Short = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5809():Void { var l:Short = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5810():Void { var l:Short = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5811():Void { var l:Short = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5812():Void { var l:Short = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5813():Void { var l:Short = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5814():Void { var l:Short = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5815():Void { var l:Short = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5816():Void { var l:Short = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5817():Void { var l:Short = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5818():Void { var l:Short = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5819():Void { var l:Short = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5820():Void { var l:Short = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5821():Void { var l:Short = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5822():Void { var l:Short = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5823():Void { var l:Short = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5824():Void { var l:Short = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5825():Void { var l:Short = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5826():Void { var l:Short = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5827():Void { var l:Short = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5828():Void { var l:Short = (w1)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5829():Void { var l:Short = (w1)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5830():Void { var l:Short = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5831():Void { var l:Short = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5832():Void { var l:Short = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5833():Void { var l:Short = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5834():Void { var l:Short = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5835():Void { var l:Short = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5836():Void { var l:Short = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5837():Void { var l:Short = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5838():Void { var l:Short = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5839():Void { var l:Short = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5840():Void { var l:Short = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5841():Void { var l:Short = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5842():Void { var l:Short = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5843():Void { var l:Short = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5844():Void { var l:Short = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5845():Void { var l:Short = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5846():Void { var l:Short = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5847():Void { var l:Short = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5848():Void { var l:Short = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5849():Void { var l:Short = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5850():Void { var l:Short = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5851():Void { var l:Short = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5852():Void { var l:Short = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5853():Void { var l:Short = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5854():Void { var l:Short = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5855():Void { var l:Short = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5856():Void { var l:Short = (w2)+(w2); }
	def m5857():Void { var l:Short = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5858():Void { var l:Short = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w2)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5859():Void { var l:Short = (w2)+(w5); }
	def m5860():Void { var l:Short = (w2)+(0); }  
	def m5861():Void { var l:Short = (w2)+(-0); }  
	def m5862():Void { var l:Short = (w2)+(1); }  
	def m5863():Void { var l:Short = (w2)+(-1); }  
	def m5864():Void { var l:Short = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5865():Void { var l:Short = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5866():Void { var l:Short = (w2)+(127); }  
	def m5867():Void { var l:Short = (w2)+(-127); }  
	def m5868():Void { var l:Short = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5869():Void { var l:Short = (w2)+(-128); }  
	def m5870():Void { var l:Short = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5871():Void { var l:Short = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5872():Void { var l:Short = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5873():Void { var l:Short = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5874():Void { var l:Short = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5875():Void { var l:Short = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5876():Void { var l:Short = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5877():Void { var l:Short = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5878():Void { var l:Short = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5879():Void { var l:Short = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5880():Void { var l:Short = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5881():Void { var l:Short = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5882():Void { var l:Short = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5883():Void { var l:Short = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5884():Void { var l:Short = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5885():Void { var l:Short = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5886():Void { var l:Short = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5887():Void { var l:Short = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5888():Void { var l:Short = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5889():Void { var l:Short = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5890():Void { var l:Short = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5891():Void { var l:Short = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5892():Void { var l:Short = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w3)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5893():Void { var l:Short = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5894():Void { var l:Short = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5895():Void { var l:Short = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5896():Void { var l:Short = (w3)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5897():Void { var l:Short = (w3)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5898():Void { var l:Short = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5899():Void { var l:Short = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5900():Void { var l:Short = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5901():Void { var l:Short = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5902():Void { var l:Short = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5903():Void { var l:Short = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5904():Void { var l:Short = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5905():Void { var l:Short = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5906():Void { var l:Short = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5907():Void { var l:Short = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5908():Void { var l:Short = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5909():Void { var l:Short = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5910():Void { var l:Short = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5911():Void { var l:Short = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5912():Void { var l:Short = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5913():Void { var l:Short = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5914():Void { var l:Short = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5915():Void { var l:Short = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5916():Void { var l:Short = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5917():Void { var l:Short = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5918():Void { var l:Short = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5919():Void { var l:Short = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5920():Void { var l:Short = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5921():Void { var l:Short = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5922():Void { var l:Short = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5923():Void { var l:Short = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5924():Void { var l:Short = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5925():Void { var l:Short = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5926():Void { var l:Short = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5927():Void { var l:Short = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5928():Void { var l:Short = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5929():Void { var l:Short = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5930():Void { var l:Short = (w4)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5931():Void { var l:Short = (w4)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5932():Void { var l:Short = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5933():Void { var l:Short = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5934():Void { var l:Short = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5935():Void { var l:Short = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5936():Void { var l:Short = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5937():Void { var l:Short = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5938():Void { var l:Short = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5939():Void { var l:Short = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5940():Void { var l:Short = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5941():Void { var l:Short = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5942():Void { var l:Short = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5943():Void { var l:Short = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5944():Void { var l:Short = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5945():Void { var l:Short = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5946():Void { var l:Short = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5947():Void { var l:Short = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5948():Void { var l:Short = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5949():Void { var l:Short = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5950():Void { var l:Short = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5951():Void { var l:Short = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5952():Void { var l:Short = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5953():Void { var l:Short = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5954():Void { var l:Short = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5955():Void { var l:Short = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5956():Void { var l:Short = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5957():Void { var l:Short = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5958():Void { var l:Short = (w5)+(w2); }
	def m5959():Void { var l:Short = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5960():Void { var l:Short = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedTests.this.w5)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5961():Void { var l:Short = (w5)+(w5); }
	def m5962():Void { var l:Short = (w5)+(0); }  
	def m5963():Void { var l:Short = (w5)+(-0); }  
	def m5964():Void { var l:Short = (w5)+(1); }  
	def m5965():Void { var l:Short = (w5)+(-1); }  
	def m5966():Void { var l:Short = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5967():Void { var l:Short = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5968():Void { var l:Short = (w5)+(127); }  
	def m5969():Void { var l:Short = (w5)+(-127); }  
	def m5970():Void { var l:Short = (w5)+(128); }  
	def m5971():Void { var l:Short = (w5)+(-128); }  
	def m5972():Void { var l:Short = (w5)+(255); }  
	def m5973():Void { var l:Short = (w5)+(-255); }  
	def m5974():Void { var l:Short = (w5)+(256); }  
	def m5975():Void { var l:Short = (w5)+(-256); }  
	def m5976():Void { var l:Short = (w5)+(32767); }  
	def m5977():Void { var l:Short = (w5)+(-32767); }  
	def m5978():Void { var l:Short = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5979():Void { var l:Short = (w5)+(-32768); }  
	def m5980():Void { var l:Short = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5981():Void { var l:Short = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5982():Void { var l:Short = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5983():Void { var l:Short = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5984():Void { var l:Short = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5985():Void { var l:Short = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5986():Void { var l:Short = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5987():Void { var l:Short = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5988():Void { var l:Short = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5989():Void { var l:Short = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5990():Void { var l:Short = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m5991():Void { var l:Short = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m5992():Void { var l:Short = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5993():Void { var l:Short = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5994():Void { var l:Short = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m5995():Void { var l:Short = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m5996():Void { var l:Short = (0)+(0); }
	def m5997():Void { var l:Short = (0)+(-0); }
	def m5998():Void { var l:Short = (0)+(1); }
	def m5999():Void { var l:Short = (0)+(-1); }
	def m6000():Void { var l:Short = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6001():Void { var l:Short = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6002():Void { var l:Short = (0)+(127); }
	def m6003():Void { var l:Short = (0)+(-127); }
	def m6004():Void { var l:Short = (0)+(128); }
	def m6005():Void { var l:Short = (0)+(-128); }
	def m6006():Void { var l:Short = (0)+(255); }
	def m6007():Void { var l:Short = (0)+(-255); }
	def m6008():Void { var l:Short = (0)+(256); }
	def m6009():Void { var l:Short = (0)+(-256); }
	def m6010():Void { var l:Short = (0)+(32767); }
	def m6011():Void { var l:Short = (0)+(-32767); }
	def m6012():Void { var l:Short = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6013():Void { var l:Short = (0)+(-32768); }
	def m6014():Void { var l:Short = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6015():Void { var l:Short = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6016():Void { var l:Short = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6017():Void { var l:Short = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6018():Void { var l:Short = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6019():Void { var l:Short = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6020():Void { var l:Short = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6021():Void { var l:Short = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6022():Void { var l:Short = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6023():Void { var l:Short = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6024():Void { var l:Short = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6025():Void { var l:Short = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6026():Void { var l:Short = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6027():Void { var l:Short = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6028():Void { var l:Short = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6029():Void { var l:Short = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6030():Void { var l:Short = (-0)+(0); }
	def m6031():Void { var l:Short = (-0)+(-0); }
	def m6032():Void { var l:Short = (-0)+(1); }
	def m6033():Void { var l:Short = (-0)+(-1); }
	def m6034():Void { var l:Short = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6035():Void { var l:Short = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6036():Void { var l:Short = (-0)+(127); }
	def m6037():Void { var l:Short = (-0)+(-127); }
	def m6038():Void { var l:Short = (-0)+(128); }
	def m6039():Void { var l:Short = (-0)+(-128); }
	def m6040():Void { var l:Short = (-0)+(255); }
	def m6041():Void { var l:Short = (-0)+(-255); }
	def m6042():Void { var l:Short = (-0)+(256); }
	def m6043():Void { var l:Short = (-0)+(-256); }
	def m6044():Void { var l:Short = (-0)+(32767); }
	def m6045():Void { var l:Short = (-0)+(-32767); }
	def m6046():Void { var l:Short = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6047():Void { var l:Short = (-0)+(-32768); }
	def m6048():Void { var l:Short = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6049():Void { var l:Short = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6050():Void { var l:Short = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6051():Void { var l:Short = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6052():Void { var l:Short = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6053():Void { var l:Short = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6054():Void { var l:Short = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6055():Void { var l:Short = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6056():Void { var l:Short = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6057():Void { var l:Short = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6058():Void { var l:Short = (1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6059():Void { var l:Short = (1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6060():Void { var l:Short = (1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6061():Void { var l:Short = (1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6062():Void { var l:Short = (1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6063():Void { var l:Short = (1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6064():Void { var l:Short = (1)+(0); }
	def m6065():Void { var l:Short = (1)+(-0); }
	def m6066():Void { var l:Short = (1)+(1); }
	def m6067():Void { var l:Short = (1)+(-1); }
	def m6068():Void { var l:Short = (1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6069():Void { var l:Short = (1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6070():Void { var l:Short = (1)+(127); }
	def m6071():Void { var l:Short = (1)+(-127); }
	def m6072():Void { var l:Short = (1)+(128); }
	def m6073():Void { var l:Short = (1)+(-128); }
	def m6074():Void { var l:Short = (1)+(255); }
	def m6075():Void { var l:Short = (1)+(-255); }
	def m6076():Void { var l:Short = (1)+(256); }
	def m6077():Void { var l:Short = (1)+(-256); }
	def m6078():Void { var l:Short = (1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6079():Void { var l:Short = (1)+(-32767); }
	def m6080():Void { var l:Short = (1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6081():Void { var l:Short = (1)+(-32768); }
	def m6082():Void { var l:Short = (1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6083():Void { var l:Short = (1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6084():Void { var l:Short = (1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6085():Void { var l:Short = (1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6086():Void { var l:Short = (1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6087():Void { var l:Short = (1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6088():Void { var l:Short = (1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6089():Void { var l:Short = (1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6090():Void { var l:Short = (1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6091():Void { var l:Short = (1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6092():Void { var l:Short = (-1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-1)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6093():Void { var l:Short = (-1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6094():Void { var l:Short = (-1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6095():Void { var l:Short = (-1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6096():Void { var l:Short = (-1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-1)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6097():Void { var l:Short = (-1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6098():Void { var l:Short = (-1)+(0); }
	def m6099():Void { var l:Short = (-1)+(-0); }
	def m6100():Void { var l:Short = (-1)+(1); }
	def m6101():Void { var l:Short = (-1)+(-1); }
	def m6102():Void { var l:Short = (-1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6103():Void { var l:Short = (-1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6104():Void { var l:Short = (-1)+(127); }
	def m6105():Void { var l:Short = (-1)+(-127); }
	def m6106():Void { var l:Short = (-1)+(128); }
	def m6107():Void { var l:Short = (-1)+(-128); }
	def m6108():Void { var l:Short = (-1)+(255); }
	def m6109():Void { var l:Short = (-1)+(-255); }
	def m6110():Void { var l:Short = (-1)+(256); }
	def m6111():Void { var l:Short = (-1)+(-256); }
	def m6112():Void { var l:Short = (-1)+(32767); }
	def m6113():Void { var l:Short = (-1)+(-32767); }
	def m6114():Void { var l:Short = (-1)+(32768); }
	def m6115():Void { var l:Short = (-1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6116():Void { var l:Short = (-1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6117():Void { var l:Short = (-1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6118():Void { var l:Short = (-1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6119():Void { var l:Short = (-1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6120():Void { var l:Short = (-1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6121():Void { var l:Short = (-1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6122():Void { var l:Short = (-1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6123():Void { var l:Short = (-1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6124():Void { var l:Short = (-1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6125():Void { var l:Short = (-1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6126():Void { var l:Short = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6127():Void { var l:Short = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6128():Void { var l:Short = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6129():Void { var l:Short = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6130():Void { var l:Short = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6131():Void { var l:Short = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6132():Void { var l:Short = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6133():Void { var l:Short = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6134():Void { var l:Short = (2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6135():Void { var l:Short = (2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6136():Void { var l:Short = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6137():Void { var l:Short = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6138():Void { var l:Short = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6139():Void { var l:Short = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6140():Void { var l:Short = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6141():Void { var l:Short = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6142():Void { var l:Short = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6143():Void { var l:Short = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6144():Void { var l:Short = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6145():Void { var l:Short = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6146():Void { var l:Short = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6147():Void { var l:Short = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6148():Void { var l:Short = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6149():Void { var l:Short = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6150():Void { var l:Short = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6151():Void { var l:Short = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6152():Void { var l:Short = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6153():Void { var l:Short = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6154():Void { var l:Short = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6155():Void { var l:Short = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6156():Void { var l:Short = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6157():Void { var l:Short = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6158():Void { var l:Short = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6159():Void { var l:Short = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6160():Void { var l:Short = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6161():Void { var l:Short = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6162():Void { var l:Short = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6163():Void { var l:Short = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6164():Void { var l:Short = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6165():Void { var l:Short = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6166():Void { var l:Short = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6167():Void { var l:Short = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6168():Void { var l:Short = (-2.2)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6169():Void { var l:Short = (-2.2)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6170():Void { var l:Short = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6171():Void { var l:Short = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6172():Void { var l:Short = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6173():Void { var l:Short = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6174():Void { var l:Short = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6175():Void { var l:Short = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6176():Void { var l:Short = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6177():Void { var l:Short = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6178():Void { var l:Short = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6179():Void { var l:Short = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6180():Void { var l:Short = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6181():Void { var l:Short = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6182():Void { var l:Short = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6183():Void { var l:Short = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6184():Void { var l:Short = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6185():Void { var l:Short = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6186():Void { var l:Short = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6187():Void { var l:Short = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6188():Void { var l:Short = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6189():Void { var l:Short = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6190():Void { var l:Short = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6191():Void { var l:Short = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6192():Void { var l:Short = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6193():Void { var l:Short = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6194():Void { var l:Short = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6195():Void { var l:Short = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6196():Void { var l:Short = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6197():Void { var l:Short = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6198():Void { var l:Short = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6199():Void { var l:Short = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6200():Void { var l:Short = (127)+(0); }
	def m6201():Void { var l:Short = (127)+(-0); }
	def m6202():Void { var l:Short = (127)+(1); }
	def m6203():Void { var l:Short = (127)+(-1); }
	def m6204():Void { var l:Short = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6205():Void { var l:Short = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6206():Void { var l:Short = (127)+(127); }
	def m6207():Void { var l:Short = (127)+(-127); }
	def m6208():Void { var l:Short = (127)+(128); }
	def m6209():Void { var l:Short = (127)+(-128); }
	def m6210():Void { var l:Short = (127)+(255); }
	def m6211():Void { var l:Short = (127)+(-255); }
	def m6212():Void { var l:Short = (127)+(256); }
	def m6213():Void { var l:Short = (127)+(-256); }
	def m6214():Void { var l:Short = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6215():Void { var l:Short = (127)+(-32767); }
	def m6216():Void { var l:Short = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6217():Void { var l:Short = (127)+(-32768); }
	def m6218():Void { var l:Short = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6219():Void { var l:Short = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6220():Void { var l:Short = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6221():Void { var l:Short = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6222():Void { var l:Short = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6223():Void { var l:Short = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6224():Void { var l:Short = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6225():Void { var l:Short = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6226():Void { var l:Short = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6227():Void { var l:Short = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6228():Void { var l:Short = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6229():Void { var l:Short = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6230():Void { var l:Short = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6231():Void { var l:Short = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6232():Void { var l:Short = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6233():Void { var l:Short = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6234():Void { var l:Short = (-127)+(0); }
	def m6235():Void { var l:Short = (-127)+(-0); }
	def m6236():Void { var l:Short = (-127)+(1); }
	def m6237():Void { var l:Short = (-127)+(-1); }
	def m6238():Void { var l:Short = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6239():Void { var l:Short = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6240():Void { var l:Short = (-127)+(127); }
	def m6241():Void { var l:Short = (-127)+(-127); }
	def m6242():Void { var l:Short = (-127)+(128); }
	def m6243():Void { var l:Short = (-127)+(-128); }
	def m6244():Void { var l:Short = (-127)+(255); }
	def m6245():Void { var l:Short = (-127)+(-255); }
	def m6246():Void { var l:Short = (-127)+(256); }
	def m6247():Void { var l:Short = (-127)+(-256); }
	def m6248():Void { var l:Short = (-127)+(32767); }
	def m6249():Void { var l:Short = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6250():Void { var l:Short = (-127)+(32768); }
	def m6251():Void { var l:Short = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6252():Void { var l:Short = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6253():Void { var l:Short = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6254():Void { var l:Short = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6255():Void { var l:Short = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6256():Void { var l:Short = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6257():Void { var l:Short = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6258():Void { var l:Short = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6259():Void { var l:Short = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6260():Void { var l:Short = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6261():Void { var l:Short = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6262():Void { var l:Short = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6263():Void { var l:Short = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6264():Void { var l:Short = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6265():Void { var l:Short = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6266():Void { var l:Short = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6267():Void { var l:Short = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6268():Void { var l:Short = (128)+(0); }
	def m6269():Void { var l:Short = (128)+(-0); }
	def m6270():Void { var l:Short = (128)+(1); }
	def m6271():Void { var l:Short = (128)+(-1); }
	def m6272():Void { var l:Short = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6273():Void { var l:Short = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6274():Void { var l:Short = (128)+(127); }
	def m6275():Void { var l:Short = (128)+(-127); }
	def m6276():Void { var l:Short = (128)+(128); }
	def m6277():Void { var l:Short = (128)+(-128); }
	def m6278():Void { var l:Short = (128)+(255); }
	def m6279():Void { var l:Short = (128)+(-255); }
	def m6280():Void { var l:Short = (128)+(256); }
	def m6281():Void { var l:Short = (128)+(-256); }
	def m6282():Void { var l:Short = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6283():Void { var l:Short = (128)+(-32767); }
	def m6284():Void { var l:Short = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6285():Void { var l:Short = (128)+(-32768); }
	def m6286():Void { var l:Short = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6287():Void { var l:Short = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6288():Void { var l:Short = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6289():Void { var l:Short = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6290():Void { var l:Short = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6291():Void { var l:Short = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6292():Void { var l:Short = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6293():Void { var l:Short = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6294():Void { var l:Short = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6295():Void { var l:Short = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6296():Void { var l:Short = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6297():Void { var l:Short = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6298():Void { var l:Short = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6299():Void { var l:Short = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6300():Void { var l:Short = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6301():Void { var l:Short = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6302():Void { var l:Short = (-128)+(0); }
	def m6303():Void { var l:Short = (-128)+(-0); }
	def m6304():Void { var l:Short = (-128)+(1); }
	def m6305():Void { var l:Short = (-128)+(-1); }
	def m6306():Void { var l:Short = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6307():Void { var l:Short = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6308():Void { var l:Short = (-128)+(127); }
	def m6309():Void { var l:Short = (-128)+(-127); }
	def m6310():Void { var l:Short = (-128)+(128); }
	def m6311():Void { var l:Short = (-128)+(-128); }
	def m6312():Void { var l:Short = (-128)+(255); }
	def m6313():Void { var l:Short = (-128)+(-255); }
	def m6314():Void { var l:Short = (-128)+(256); }
	def m6315():Void { var l:Short = (-128)+(-256); }
	def m6316():Void { var l:Short = (-128)+(32767); }
	def m6317():Void { var l:Short = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6318():Void { var l:Short = (-128)+(32768); }
	def m6319():Void { var l:Short = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6320():Void { var l:Short = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6321():Void { var l:Short = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6322():Void { var l:Short = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6323():Void { var l:Short = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6324():Void { var l:Short = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6325():Void { var l:Short = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6326():Void { var l:Short = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6327():Void { var l:Short = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6328():Void { var l:Short = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6329():Void { var l:Short = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6330():Void { var l:Short = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6331():Void { var l:Short = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6332():Void { var l:Short = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6333():Void { var l:Short = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6334():Void { var l:Short = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6335():Void { var l:Short = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6336():Void { var l:Short = (255)+(0); }
	def m6337():Void { var l:Short = (255)+(-0); }
	def m6338():Void { var l:Short = (255)+(1); }
	def m6339():Void { var l:Short = (255)+(-1); }
	def m6340():Void { var l:Short = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6341():Void { var l:Short = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6342():Void { var l:Short = (255)+(127); }
	def m6343():Void { var l:Short = (255)+(-127); }
	def m6344():Void { var l:Short = (255)+(128); }
	def m6345():Void { var l:Short = (255)+(-128); }
	def m6346():Void { var l:Short = (255)+(255); }
	def m6347():Void { var l:Short = (255)+(-255); }
	def m6348():Void { var l:Short = (255)+(256); }
	def m6349():Void { var l:Short = (255)+(-256); }
	def m6350():Void { var l:Short = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6351():Void { var l:Short = (255)+(-32767); }
	def m6352():Void { var l:Short = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6353():Void { var l:Short = (255)+(-32768); }
	def m6354():Void { var l:Short = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6355():Void { var l:Short = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6356():Void { var l:Short = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6357():Void { var l:Short = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6358():Void { var l:Short = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6359():Void { var l:Short = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6360():Void { var l:Short = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6361():Void { var l:Short = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6362():Void { var l:Short = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6363():Void { var l:Short = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6364():Void { var l:Short = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6365():Void { var l:Short = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6366():Void { var l:Short = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6367():Void { var l:Short = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6368():Void { var l:Short = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6369():Void { var l:Short = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6370():Void { var l:Short = (-255)+(0); }
	def m6371():Void { var l:Short = (-255)+(-0); }
	def m6372():Void { var l:Short = (-255)+(1); }
	def m6373():Void { var l:Short = (-255)+(-1); }
	def m6374():Void { var l:Short = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6375():Void { var l:Short = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6376():Void { var l:Short = (-255)+(127); }
	def m6377():Void { var l:Short = (-255)+(-127); }
	def m6378():Void { var l:Short = (-255)+(128); }
	def m6379():Void { var l:Short = (-255)+(-128); }
	def m6380():Void { var l:Short = (-255)+(255); }
	def m6381():Void { var l:Short = (-255)+(-255); }
	def m6382():Void { var l:Short = (-255)+(256); }
	def m6383():Void { var l:Short = (-255)+(-256); }
	def m6384():Void { var l:Short = (-255)+(32767); }
	def m6385():Void { var l:Short = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6386():Void { var l:Short = (-255)+(32768); }
	def m6387():Void { var l:Short = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6388():Void { var l:Short = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6389():Void { var l:Short = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6390():Void { var l:Short = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6391():Void { var l:Short = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6392():Void { var l:Short = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6393():Void { var l:Short = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6394():Void { var l:Short = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6395():Void { var l:Short = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6396():Void { var l:Short = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6397():Void { var l:Short = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6398():Void { var l:Short = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6399():Void { var l:Short = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6400():Void { var l:Short = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6401():Void { var l:Short = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6402():Void { var l:Short = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6403():Void { var l:Short = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6404():Void { var l:Short = (256)+(0); }
	def m6405():Void { var l:Short = (256)+(-0); }
	def m6406():Void { var l:Short = (256)+(1); }
	def m6407():Void { var l:Short = (256)+(-1); }
	def m6408():Void { var l:Short = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6409():Void { var l:Short = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6410():Void { var l:Short = (256)+(127); }
	def m6411():Void { var l:Short = (256)+(-127); }
	def m6412():Void { var l:Short = (256)+(128); }
	def m6413():Void { var l:Short = (256)+(-128); }
	def m6414():Void { var l:Short = (256)+(255); }
	def m6415():Void { var l:Short = (256)+(-255); }
	def m6416():Void { var l:Short = (256)+(256); }
	def m6417():Void { var l:Short = (256)+(-256); }
	def m6418():Void { var l:Short = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6419():Void { var l:Short = (256)+(-32767); }
	def m6420():Void { var l:Short = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6421():Void { var l:Short = (256)+(-32768); }
	def m6422():Void { var l:Short = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6423():Void { var l:Short = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6424():Void { var l:Short = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6425():Void { var l:Short = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6426():Void { var l:Short = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6427():Void { var l:Short = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6428():Void { var l:Short = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6429():Void { var l:Short = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6430():Void { var l:Short = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6431():Void { var l:Short = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6432():Void { var l:Short = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6433():Void { var l:Short = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6434():Void { var l:Short = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6435():Void { var l:Short = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6436():Void { var l:Short = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6437():Void { var l:Short = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6438():Void { var l:Short = (-256)+(0); }
	def m6439():Void { var l:Short = (-256)+(-0); }
	def m6440():Void { var l:Short = (-256)+(1); }
	def m6441():Void { var l:Short = (-256)+(-1); }
	def m6442():Void { var l:Short = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6443():Void { var l:Short = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6444():Void { var l:Short = (-256)+(127); }
	def m6445():Void { var l:Short = (-256)+(-127); }
	def m6446():Void { var l:Short = (-256)+(128); }
	def m6447():Void { var l:Short = (-256)+(-128); }
	def m6448():Void { var l:Short = (-256)+(255); }
	def m6449():Void { var l:Short = (-256)+(-255); }
	def m6450():Void { var l:Short = (-256)+(256); }
	def m6451():Void { var l:Short = (-256)+(-256); }
	def m6452():Void { var l:Short = (-256)+(32767); }
	def m6453():Void { var l:Short = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6454():Void { var l:Short = (-256)+(32768); }
	def m6455():Void { var l:Short = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6456():Void { var l:Short = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6457():Void { var l:Short = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6458():Void { var l:Short = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6459():Void { var l:Short = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6460():Void { var l:Short = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6461():Void { var l:Short = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6462():Void { var l:Short = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6463():Void { var l:Short = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6464():Void { var l:Short = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6465():Void { var l:Short = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6466():Void { var l:Short = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6467():Void { var l:Short = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6468():Void { var l:Short = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6469():Void { var l:Short = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6470():Void { var l:Short = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6471():Void { var l:Short = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6472():Void { var l:Short = (32767)+(0); }
	def m6473():Void { var l:Short = (32767)+(-0); }
	def m6474():Void { var l:Short = (32767)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6475():Void { var l:Short = (32767)+(-1); }
	def m6476():Void { var l:Short = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6477():Void { var l:Short = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6478():Void { var l:Short = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6479():Void { var l:Short = (32767)+(-127); }
	def m6480():Void { var l:Short = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6481():Void { var l:Short = (32767)+(-128); }
	def m6482():Void { var l:Short = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6483():Void { var l:Short = (32767)+(-255); }
	def m6484():Void { var l:Short = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6485():Void { var l:Short = (32767)+(-256); }
	def m6486():Void { var l:Short = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6487():Void { var l:Short = (32767)+(-32767); }
	def m6488():Void { var l:Short = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6489():Void { var l:Short = (32767)+(-32768); }
	def m6490():Void { var l:Short = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6491():Void { var l:Short = (32767)+(-65535); }
	def m6492():Void { var l:Short = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6493():Void { var l:Short = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6494():Void { var l:Short = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6495():Void { var l:Short = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6496():Void { var l:Short = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6497():Void { var l:Short = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6498():Void { var l:Short = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6499():Void { var l:Short = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6500():Void { var l:Short = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6501():Void { var l:Short = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6502():Void { var l:Short = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6503():Void { var l:Short = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6504():Void { var l:Short = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6505():Void { var l:Short = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6506():Void { var l:Short = (-32767)+(0); }
	def m6507():Void { var l:Short = (-32767)+(-0); }
	def m6508():Void { var l:Short = (-32767)+(1); }
	def m6509():Void { var l:Short = (-32767)+(-1); }
	def m6510():Void { var l:Short = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6511():Void { var l:Short = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6512():Void { var l:Short = (-32767)+(127); }
	def m6513():Void { var l:Short = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6514():Void { var l:Short = (-32767)+(128); }
	def m6515():Void { var l:Short = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6516():Void { var l:Short = (-32767)+(255); }
	def m6517():Void { var l:Short = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6518():Void { var l:Short = (-32767)+(256); }
	def m6519():Void { var l:Short = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6520():Void { var l:Short = (-32767)+(32767); }
	def m6521():Void { var l:Short = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6522():Void { var l:Short = (-32767)+(32768); }
	def m6523():Void { var l:Short = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6524():Void { var l:Short = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6525():Void { var l:Short = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6526():Void { var l:Short = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6527():Void { var l:Short = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6528():Void { var l:Short = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6529():Void { var l:Short = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6530():Void { var l:Short = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6531():Void { var l:Short = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6532():Void { var l:Short = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6533():Void { var l:Short = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6534():Void { var l:Short = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6535():Void { var l:Short = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6536():Void { var l:Short = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6537():Void { var l:Short = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6538():Void { var l:Short = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6539():Void { var l:Short = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6540():Void { var l:Short = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6541():Void { var l:Short = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6542():Void { var l:Short = (32768)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6543():Void { var l:Short = (32768)+(-1); }
	def m6544():Void { var l:Short = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6545():Void { var l:Short = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6546():Void { var l:Short = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6547():Void { var l:Short = (32768)+(-127); }
	def m6548():Void { var l:Short = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6549():Void { var l:Short = (32768)+(-128); }
	def m6550():Void { var l:Short = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6551():Void { var l:Short = (32768)+(-255); }
	def m6552():Void { var l:Short = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6553():Void { var l:Short = (32768)+(-256); }
	def m6554():Void { var l:Short = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6555():Void { var l:Short = (32768)+(-32767); }
	def m6556():Void { var l:Short = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6557():Void { var l:Short = (32768)+(-32768); }
	def m6558():Void { var l:Short = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6559():Void { var l:Short = (32768)+(-65535); }
	def m6560():Void { var l:Short = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6561():Void { var l:Short = (32768)+(-65536); }
	def m6562():Void { var l:Short = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6563():Void { var l:Short = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6564():Void { var l:Short = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6565():Void { var l:Short = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6566():Void { var l:Short = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6567():Void { var l:Short = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6568():Void { var l:Short = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6569():Void { var l:Short = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6570():Void { var l:Short = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6571():Void { var l:Short = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6572():Void { var l:Short = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6573():Void { var l:Short = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6574():Void { var l:Short = (-32768)+(0); }
	def m6575():Void { var l:Short = (-32768)+(-0); }
	def m6576():Void { var l:Short = (-32768)+(1); }
	def m6577():Void { var l:Short = (-32768)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6578():Void { var l:Short = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6579():Void { var l:Short = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6580():Void { var l:Short = (-32768)+(127); }
	def m6581():Void { var l:Short = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6582():Void { var l:Short = (-32768)+(128); }
	def m6583():Void { var l:Short = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6584():Void { var l:Short = (-32768)+(255); }
	def m6585():Void { var l:Short = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6586():Void { var l:Short = (-32768)+(256); }
	def m6587():Void { var l:Short = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6588():Void { var l:Short = (-32768)+(32767); }
	def m6589():Void { var l:Short = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6590():Void { var l:Short = (-32768)+(32768); }
	def m6591():Void { var l:Short = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6592():Void { var l:Short = (-32768)+(65535); }
	def m6593():Void { var l:Short = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6594():Void { var l:Short = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6595():Void { var l:Short = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6596():Void { var l:Short = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6597():Void { var l:Short = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6598():Void { var l:Short = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6599():Void { var l:Short = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6600():Void { var l:Short = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6601():Void { var l:Short = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6602():Void { var l:Short = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6603():Void { var l:Short = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6604():Void { var l:Short = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6605():Void { var l:Short = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6606():Void { var l:Short = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6607():Void { var l:Short = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6608():Void { var l:Short = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6609():Void { var l:Short = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6610():Void { var l:Short = (65535)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6611():Void { var l:Short = (65535)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6612():Void { var l:Short = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6613():Void { var l:Short = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6614():Void { var l:Short = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6615():Void { var l:Short = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6616():Void { var l:Short = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6617():Void { var l:Short = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6618():Void { var l:Short = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6619():Void { var l:Short = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6620():Void { var l:Short = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6621():Void { var l:Short = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6622():Void { var l:Short = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6623():Void { var l:Short = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6624():Void { var l:Short = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6625():Void { var l:Short = (65535)+(-32768); }
	def m6626():Void { var l:Short = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6627():Void { var l:Short = (65535)+(-65535); }
	def m6628():Void { var l:Short = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6629():Void { var l:Short = (65535)+(-65536); }
	def m6630():Void { var l:Short = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6631():Void { var l:Short = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6632():Void { var l:Short = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6633():Void { var l:Short = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6634():Void { var l:Short = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6635():Void { var l:Short = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6636():Void { var l:Short = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6637():Void { var l:Short = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6638():Void { var l:Short = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6639():Void { var l:Short = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6640():Void { var l:Short = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6641():Void { var l:Short = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6642():Void { var l:Short = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6643():Void { var l:Short = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6644():Void { var l:Short = (-65535)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6645():Void { var l:Short = (-65535)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6646():Void { var l:Short = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6647():Void { var l:Short = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6648():Void { var l:Short = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6649():Void { var l:Short = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6650():Void { var l:Short = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6651():Void { var l:Short = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6652():Void { var l:Short = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6653():Void { var l:Short = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6654():Void { var l:Short = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6655():Void { var l:Short = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6656():Void { var l:Short = (-65535)+(32767); }
	def m6657():Void { var l:Short = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6658():Void { var l:Short = (-65535)+(32768); }
	def m6659():Void { var l:Short = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6660():Void { var l:Short = (-65535)+(65535); }
	def m6661():Void { var l:Short = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6662():Void { var l:Short = (-65535)+(65536); }
	def m6663():Void { var l:Short = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6664():Void { var l:Short = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6665():Void { var l:Short = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6666():Void { var l:Short = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6667():Void { var l:Short = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6668():Void { var l:Short = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6669():Void { var l:Short = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6670():Void { var l:Short = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6671():Void { var l:Short = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6672():Void { var l:Short = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6673():Void { var l:Short = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6674():Void { var l:Short = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6675():Void { var l:Short = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6676():Void { var l:Short = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6677():Void { var l:Short = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6678():Void { var l:Short = (65536)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6679():Void { var l:Short = (65536)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6680():Void { var l:Short = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6681():Void { var l:Short = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6682():Void { var l:Short = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6683():Void { var l:Short = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6684():Void { var l:Short = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6685():Void { var l:Short = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6686():Void { var l:Short = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6687():Void { var l:Short = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6688():Void { var l:Short = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6689():Void { var l:Short = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6690():Void { var l:Short = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6691():Void { var l:Short = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6692():Void { var l:Short = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6693():Void { var l:Short = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6694():Void { var l:Short = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6695():Void { var l:Short = (65536)+(-65535); }
	def m6696():Void { var l:Short = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6697():Void { var l:Short = (65536)+(-65536); }
	def m6698():Void { var l:Short = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6699():Void { var l:Short = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6700():Void { var l:Short = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6701():Void { var l:Short = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6702():Void { var l:Short = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6703():Void { var l:Short = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6704():Void { var l:Short = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6705():Void { var l:Short = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6706():Void { var l:Short = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6707():Void { var l:Short = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6708():Void { var l:Short = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6709():Void { var l:Short = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6710():Void { var l:Short = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6711():Void { var l:Short = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6712():Void { var l:Short = (-65536)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6713():Void { var l:Short = (-65536)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6714():Void { var l:Short = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6715():Void { var l:Short = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6716():Void { var l:Short = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6717():Void { var l:Short = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6718():Void { var l:Short = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6719():Void { var l:Short = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6720():Void { var l:Short = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6721():Void { var l:Short = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6722():Void { var l:Short = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6723():Void { var l:Short = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6724():Void { var l:Short = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6725():Void { var l:Short = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6726():Void { var l:Short = (-65536)+(32768); }
	def m6727():Void { var l:Short = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6728():Void { var l:Short = (-65536)+(65535); }
	def m6729():Void { var l:Short = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6730():Void { var l:Short = (-65536)+(65536); }
	def m6731():Void { var l:Short = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6732():Void { var l:Short = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6733():Void { var l:Short = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6734():Void { var l:Short = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6735():Void { var l:Short = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6736():Void { var l:Short = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6737():Void { var l:Short = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6738():Void { var l:Short = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6739():Void { var l:Short = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6740():Void { var l:Short = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6741():Void { var l:Short = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6742():Void { var l:Short = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6743():Void { var l:Short = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6744():Void { var l:Short = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6745():Void { var l:Short = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6746():Void { var l:Short = (16777216)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6747():Void { var l:Short = (16777216)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6748():Void { var l:Short = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6749():Void { var l:Short = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6750():Void { var l:Short = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6751():Void { var l:Short = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6752():Void { var l:Short = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6753():Void { var l:Short = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6754():Void { var l:Short = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6755():Void { var l:Short = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6756():Void { var l:Short = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6757():Void { var l:Short = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6758():Void { var l:Short = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6759():Void { var l:Short = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6760():Void { var l:Short = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6761():Void { var l:Short = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6762():Void { var l:Short = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6763():Void { var l:Short = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6764():Void { var l:Short = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6765():Void { var l:Short = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6766():Void { var l:Short = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6767():Void { var l:Short = (16777216)+(-16777216); }
	def m6768():Void { var l:Short = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6769():Void { var l:Short = (16777216)+(-16777217); }
	def m6770():Void { var l:Short = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6771():Void { var l:Short = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6772():Void { var l:Short = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6773():Void { var l:Short = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6774():Void { var l:Short = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6775():Void { var l:Short = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6776():Void { var l:Short = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6777():Void { var l:Short = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6778():Void { var l:Short = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6779():Void { var l:Short = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6780():Void { var l:Short = (-16777216)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6781():Void { var l:Short = (-16777216)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6782():Void { var l:Short = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6783():Void { var l:Short = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6784():Void { var l:Short = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6785():Void { var l:Short = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6786():Void { var l:Short = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6787():Void { var l:Short = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6788():Void { var l:Short = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6789():Void { var l:Short = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6790():Void { var l:Short = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6791():Void { var l:Short = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6792():Void { var l:Short = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6793():Void { var l:Short = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6794():Void { var l:Short = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6795():Void { var l:Short = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6796():Void { var l:Short = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6797():Void { var l:Short = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6798():Void { var l:Short = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6799():Void { var l:Short = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6800():Void { var l:Short = (-16777216)+(16777216); }
	def m6801():Void { var l:Short = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6802():Void { var l:Short = (-16777216)+(16777217); }
	def m6803():Void { var l:Short = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6804():Void { var l:Short = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6805():Void { var l:Short = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6806():Void { var l:Short = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6807():Void { var l:Short = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6808():Void { var l:Short = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6809():Void { var l:Short = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6810():Void { var l:Short = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6811():Void { var l:Short = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6812():Void { var l:Short = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6813():Void { var l:Short = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6814():Void { var l:Short = (16777217)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6815():Void { var l:Short = (16777217)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6816():Void { var l:Short = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6817():Void { var l:Short = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6818():Void { var l:Short = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6819():Void { var l:Short = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6820():Void { var l:Short = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6821():Void { var l:Short = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6822():Void { var l:Short = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6823():Void { var l:Short = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6824():Void { var l:Short = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6825():Void { var l:Short = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6826():Void { var l:Short = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6827():Void { var l:Short = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6828():Void { var l:Short = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6829():Void { var l:Short = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6830():Void { var l:Short = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6831():Void { var l:Short = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6832():Void { var l:Short = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6833():Void { var l:Short = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6834():Void { var l:Short = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6835():Void { var l:Short = (16777217)+(-16777216); }
	def m6836():Void { var l:Short = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6837():Void { var l:Short = (16777217)+(-16777217); }
	def m6838():Void { var l:Short = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6839():Void { var l:Short = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6840():Void { var l:Short = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6841():Void { var l:Short = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6842():Void { var l:Short = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6843():Void { var l:Short = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6844():Void { var l:Short = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6845():Void { var l:Short = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6846():Void { var l:Short = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6847():Void { var l:Short = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6848():Void { var l:Short = (-16777217)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6849():Void { var l:Short = (-16777217)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6850():Void { var l:Short = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6851():Void { var l:Short = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6852():Void { var l:Short = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6853():Void { var l:Short = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6854():Void { var l:Short = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6855():Void { var l:Short = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6856():Void { var l:Short = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6857():Void { var l:Short = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6858():Void { var l:Short = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6859():Void { var l:Short = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6860():Void { var l:Short = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6861():Void { var l:Short = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6862():Void { var l:Short = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6863():Void { var l:Short = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6864():Void { var l:Short = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6865():Void { var l:Short = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6866():Void { var l:Short = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6867():Void { var l:Short = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6868():Void { var l:Short = (-16777217)+(16777216); }
	def m6869():Void { var l:Short = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6870():Void { var l:Short = (-16777217)+(16777217); }
	def m6871():Void { var l:Short = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6872():Void { var l:Short = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6873():Void { var l:Short = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6874():Void { var l:Short = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6875():Void { var l:Short = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6876():Void { var l:Short = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6877():Void { var l:Short = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6878():Void { var l:Short = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6879():Void { var l:Short = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6880():Void { var l:Short = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6881():Void { var l:Short = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6882():Void { var l:Short = (2147483647)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6883():Void { var l:Short = (2147483647)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6884():Void { var l:Short = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6885():Void { var l:Short = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6886():Void { var l:Short = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6887():Void { var l:Short = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6888():Void { var l:Short = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6889():Void { var l:Short = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6890():Void { var l:Short = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6891():Void { var l:Short = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6892():Void { var l:Short = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6893():Void { var l:Short = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6894():Void { var l:Short = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6895():Void { var l:Short = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6896():Void { var l:Short = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6897():Void { var l:Short = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6898():Void { var l:Short = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6899():Void { var l:Short = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6900():Void { var l:Short = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6901():Void { var l:Short = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6902():Void { var l:Short = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6903():Void { var l:Short = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6904():Void { var l:Short = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6905():Void { var l:Short = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6906():Void { var l:Short = (2147483647)+(2147483647); }
	def m6907():Void { var l:Short = (2147483647)+(-2147483647); }
	def m6908():Void { var l:Short = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m6909():Void { var l:Short = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6910():Void { var l:Short = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6911():Void { var l:Short = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6912():Void { var l:Short = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m6913():Void { var l:Short = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6914():Void { var l:Short = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6915():Void { var l:Short = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6916():Void { var l:Short = (-2147483647)+(1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6917():Void { var l:Short = (-2147483647)+(-1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6918():Void { var l:Short = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6919():Void { var l:Short = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m6920():Void { var l:Short = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6921():Void { var l:Short = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6922():Void { var l:Short = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6923():Void { var l:Short = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6924():Void { var l:Short = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6925():Void { var l:Short = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6926():Void { var l:Short = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6927():Void { var l:Short = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6928():Void { var l:Short = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6929():Void { var l:Short = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6930():Void { var l:Short = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6931():Void { var l:Short = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6932():Void { var l:Short = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6933():Void { var l:Short = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6934():Void { var l:Short = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6935():Void { var l:Short = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6936():Void { var l:Short = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6937():Void { var l:Short = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6938():Void { var l:Short = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6939():Void { var l:Short = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m6940():Void { var l:Short = (-2147483647)+(2147483647); }
	def m6941():Void { var l:Short = (-2147483647)+(-2147483647); }
}
