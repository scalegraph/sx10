@author kemal, August 2005

How x10/bin/testScript (the nightly testing script) executes the
test cases in the x10/examples directory:

Following a depth-first enumeration of the contents of the
.../examples/ directory (the testing root directory), each file
that (1) has an .x10 extension and that (2) also contains a
"public static void main" method in it, is compiled and executed
as a test case.

While executing the test case, the classpath is set to the first
directory on the path from the root (.../examples/) to this test case,
which contains any .x10 file.

For example:

examples/Constructs/Import/ contains ImportTest.x10 (an .x10 file) but 
examples/ and examples/Constructs/ contain no .x10 files.

Then:

examples/Constructs/Import/ImportTest.x10 will be executed as a
test case with the classpath set to examples/Constructs/Import .

examples/Constructs/Import/ImportTestPackage1/SubPackage/T3.x10
will also be executed with the classpath set to
examples/Constructs/Import  (Since the ancestor directory
Import is the first one on the path from examples/ to T3.x10,
which contains an .x10 file).

Here is the required test case format:

Contents of test case file Foo.x10 :

public class Foo {
  public boolean run() {
   //This method contains the actual test case. 
   //If run returns false or throws an exception the test fails, 
   //otherwise it passes.
  }
  public static void main(String[] args) {
    // A verbatim copy of the standard main method.
    // You can copy this main method from any test case.
    // main is inkoved with args containing zero arguments.
       final boxedBoolean b= new boxedBoolean():
    
       ... try { finish async  { b.val=(new Foo()).run();} } ...
  }
}

You must use the standard (boilerplate) main method, that can
be copied from any other test case. The purpose of this is to
be able to change the main methods of all test cases en masse in
the future. Also, a test case must print the string "Test succeeded"
at the end, which is required by the test harness -- the standard
main method does print this string if the test is successful.

Tests are normally expected to pass. To indicate to testScript
that a test case is expected to fail, use a file name with a
_MustFail*.x10 suffix.  For example:

testName_MustFailCompile.x10 // expecting a compiler error
testName_MustFailTimeout.x10 // expecting deadlock or nonterminating loop

It is recommended that test cases that are expected to succeed
should take under 30 seconds to run on a typical laptop, to reduce
the total testing time. Short run times also help differentiate
the test cases that really deadlock or enter an infinite loop
from those that just run out of time in a highly loaded system.

For more details, try:

testScript -h | less
