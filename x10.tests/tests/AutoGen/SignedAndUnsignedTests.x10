class SignedAndUnsignedTests {
	var w0:Float=0;
	var w1:Double=0;
	var w2:Byte=0;
	var w3:Int=0;
	var w4:Long=0;
	var w5:Short=0;
	var w6:UByte=0;
	var w7:UInt=0;
	var w8:ULong=0;
	var w9:UShort=0;


	def m10():void { var l:Float = (w0)+(w0); }
	def m11():void { var l:Float = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m12():void { var l:Float = (w0)+(w2); }
	def m13():void { var l:Float = (w0)+(w3); }
	def m14():void { var l:Float = (w0)+(w4); }
	def m15():void { var l:Float = (w0)+(w5); }
	def m16():void { var l:Float = (w0)+(w6); }
	def m17():void { var l:Float = (w0)+(w7); }
	def m18():void { var l:Float = (w0)+(w8); }
	def m19():void { var l:Float = (w0)+(w9); }
	def m20():void { var l:Float = (w0)+(0); }
	def m21():void { var l:Float = (w0)+(-0); }
	def m22():void { var l:Float = (w0)+(1.1f); }
	def m23():void { var l:Float = (w0)+(-1.1f); }
	def m24():void { var l:Float = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m25():void { var l:Float = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m26():void { var l:Float = (w0)+(127); }
	def m27():void { var l:Float = (w0)+(-127); }
	def m28():void { var l:Float = (w0)+(128); }
	def m29():void { var l:Float = (w0)+(-128); }
	def m30():void { var l:Float = (w0)+(255); }
	def m31():void { var l:Float = (w0)+(-255); }
	def m32():void { var l:Float = (w0)+(256); }
	def m33():void { var l:Float = (w0)+(-256); }
	def m34():void { var l:Float = (w0)+(32767); }
	def m35():void { var l:Float = (w0)+(-32767); }
	def m36():void { var l:Float = (w0)+(32768); }
	def m37():void { var l:Float = (w0)+(-32768); }
	def m38():void { var l:Float = (w0)+(65535); }
	def m39():void { var l:Float = (w0)+(-65535); }
	def m40():void { var l:Float = (w0)+(65536); }
	def m41():void { var l:Float = (w0)+(-65536); }
	def m42():void { var l:Float = (w0)+(16777216); }
	def m43():void { var l:Float = (w0)+(-16777216); }
	def m44():void { var l:Float = (w0)+(16777217); }
	def m45():void { var l:Float = (w0)+(-16777217); }
	def m46():void { var l:Float = (w0)+(2147483647); }
	def m47():void { var l:Float = (w0)+(-2147483647); }
	def m48():void { var l:Float = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m49():void { var l:Float = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m50():void { var l:Float = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m51():void { var l:Float = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m52():void { var l:Float = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m53():void { var l:Float = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m54():void { var l:Float = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m55():void { var l:Float = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m56():void { var l:Float = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m57():void { var l:Float = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m58():void { var l:Float = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m59():void { var l:Float = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m60():void { var l:Float = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m61():void { var l:Float = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m62():void { var l:Float = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m63():void { var l:Float = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m64():void { var l:Float = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m65():void { var l:Float = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m66():void { var l:Float = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m67():void { var l:Float = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m68():void { var l:Float = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m69():void { var l:Float = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m70():void { var l:Float = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m71():void { var l:Float = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m72():void { var l:Float = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m73():void { var l:Float = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m74():void { var l:Float = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m75():void { var l:Float = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m76():void { var l:Float = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m77():void { var l:Float = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m78():void { var l:Float = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m79():void { var l:Float = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m80():void { var l:Float = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m81():void { var l:Float = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m82():void { var l:Float = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m83():void { var l:Float = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m84():void { var l:Float = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m85():void { var l:Float = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m86():void { var l:Float = (w2)+(w0); }
	def m87():void { var l:Float = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m88():void { var l:Float = (w2)+(w2); }
	def m89():void { var l:Float = (w2)+(w3); }
	def m90():void { var l:Float = (w2)+(w4); }
	def m91():void { var l:Float = (w2)+(w5); }
	def m92():void { var l:Float = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m93():void { var l:Float = (w2)+(w7); }  
	def m94():void { var l:Float = (w2)+(w8); }  
	def m95():void { var l:Float = (w2)+(w9); }  
	def m96():void { var l:Float = (w2)+(0); }
	def m97():void { var l:Float = (w2)+(-0); }
	def m98():void { var l:Float = (w2)+(1.1f); }
	def m99():void { var l:Float = (w2)+(-1.1f); }
	def m100():void { var l:Float = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m101():void { var l:Float = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m102():void { var l:Float = (w2)+(127); }
	def m103():void { var l:Float = (w2)+(-127); }
	def m104():void { var l:Float = (w2)+(128); }
	def m105():void { var l:Float = (w2)+(-128); }
	def m106():void { var l:Float = (w2)+(255); }
	def m107():void { var l:Float = (w2)+(-255); }
	def m108():void { var l:Float = (w2)+(256); }
	def m109():void { var l:Float = (w2)+(-256); }
	def m110():void { var l:Float = (w2)+(32767); }
	def m111():void { var l:Float = (w2)+(-32767); }
	def m112():void { var l:Float = (w2)+(32768); }
	def m113():void { var l:Float = (w2)+(-32768); }
	def m114():void { var l:Float = (w2)+(65535); }
	def m115():void { var l:Float = (w2)+(-65535); }
	def m116():void { var l:Float = (w2)+(65536); }
	def m117():void { var l:Float = (w2)+(-65536); }
	def m118():void { var l:Float = (w2)+(16777216); }
	def m119():void { var l:Float = (w2)+(-16777216); }
	def m120():void { var l:Float = (w2)+(16777217); }
	def m121():void { var l:Float = (w2)+(-16777217); }
	def m122():void { var l:Float = (w2)+(2147483647); }
	def m123():void { var l:Float = (w2)+(-2147483647); }
	def m124():void { var l:Float = (w3)+(w0); }
	def m125():void { var l:Float = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m126():void { var l:Float = (w3)+(w2); }
	def m127():void { var l:Float = (w3)+(w3); }
	def m128():void { var l:Float = (w3)+(w4); }
	def m129():void { var l:Float = (w3)+(w5); }
	def m130():void { var l:Float = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m131():void { var l:Float = (w3)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m132():void { var l:Float = (w3)+(w8); }  
	def m133():void { var l:Float = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m134():void { var l:Float = (w3)+(0); }
	def m135():void { var l:Float = (w3)+(-0); }
	def m136():void { var l:Float = (w3)+(1.1f); }
	def m137():void { var l:Float = (w3)+(-1.1f); }
	def m138():void { var l:Float = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m139():void { var l:Float = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m140():void { var l:Float = (w3)+(127); }
	def m141():void { var l:Float = (w3)+(-127); }
	def m142():void { var l:Float = (w3)+(128); }
	def m143():void { var l:Float = (w3)+(-128); }
	def m144():void { var l:Float = (w3)+(255); }
	def m145():void { var l:Float = (w3)+(-255); }
	def m146():void { var l:Float = (w3)+(256); }
	def m147():void { var l:Float = (w3)+(-256); }
	def m148():void { var l:Float = (w3)+(32767); }
	def m149():void { var l:Float = (w3)+(-32767); }
	def m150():void { var l:Float = (w3)+(32768); }
	def m151():void { var l:Float = (w3)+(-32768); }
	def m152():void { var l:Float = (w3)+(65535); }
	def m153():void { var l:Float = (w3)+(-65535); }
	def m154():void { var l:Float = (w3)+(65536); }
	def m155():void { var l:Float = (w3)+(-65536); }
	def m156():void { var l:Float = (w3)+(16777216); }
	def m157():void { var l:Float = (w3)+(-16777216); }
	def m158():void { var l:Float = (w3)+(16777217); }
	def m159():void { var l:Float = (w3)+(-16777217); }
	def m160():void { var l:Float = (w3)+(2147483647); }
	def m161():void { var l:Float = (w3)+(-2147483647); }
	def m162():void { var l:Float = (w4)+(w0); }
	def m163():void { var l:Float = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m164():void { var l:Float = (w4)+(w2); }
	def m165():void { var l:Float = (w4)+(w3); }
	def m166():void { var l:Float = (w4)+(w4); }
	def m167():void { var l:Float = (w4)+(w5); }
	def m168():void { var l:Float = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m169():void { var l:Float = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m170():void { var l:Float = (w4)+(w8); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m171():void { var l:Float = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m172():void { var l:Float = (w4)+(0); }
	def m173():void { var l:Float = (w4)+(-0); }
	def m174():void { var l:Float = (w4)+(1.1f); }
	def m175():void { var l:Float = (w4)+(-1.1f); }
	def m176():void { var l:Float = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m177():void { var l:Float = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m178():void { var l:Float = (w4)+(127); }
	def m179():void { var l:Float = (w4)+(-127); }
	def m180():void { var l:Float = (w4)+(128); }
	def m181():void { var l:Float = (w4)+(-128); }
	def m182():void { var l:Float = (w4)+(255); }
	def m183():void { var l:Float = (w4)+(-255); }
	def m184():void { var l:Float = (w4)+(256); }
	def m185():void { var l:Float = (w4)+(-256); }
	def m186():void { var l:Float = (w4)+(32767); }
	def m187():void { var l:Float = (w4)+(-32767); }
	def m188():void { var l:Float = (w4)+(32768); }
	def m189():void { var l:Float = (w4)+(-32768); }
	def m190():void { var l:Float = (w4)+(65535); }
	def m191():void { var l:Float = (w4)+(-65535); }
	def m192():void { var l:Float = (w4)+(65536); }
	def m193():void { var l:Float = (w4)+(-65536); }
	def m194():void { var l:Float = (w4)+(16777216); }
	def m195():void { var l:Float = (w4)+(-16777216); }
	def m196():void { var l:Float = (w4)+(16777217); }
	def m197():void { var l:Float = (w4)+(-16777217); }
	def m198():void { var l:Float = (w4)+(2147483647); }
	def m199():void { var l:Float = (w4)+(-2147483647); }
	def m200():void { var l:Float = (w5)+(w0); }
	def m201():void { var l:Float = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m202():void { var l:Float = (w5)+(w2); }
	def m203():void { var l:Float = (w5)+(w3); }
	def m204():void { var l:Float = (w5)+(w4); }
	def m205():void { var l:Float = (w5)+(w5); }
	def m206():void { var l:Float = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m207():void { var l:Float = (w5)+(w7); }  
	def m208():void { var l:Float = (w5)+(w8); }  
	def m209():void { var l:Float = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m210():void { var l:Float = (w5)+(0); }
	def m211():void { var l:Float = (w5)+(-0); }
	def m212():void { var l:Float = (w5)+(1.1f); }
	def m213():void { var l:Float = (w5)+(-1.1f); }
	def m214():void { var l:Float = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m215():void { var l:Float = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m216():void { var l:Float = (w5)+(127); }
	def m217():void { var l:Float = (w5)+(-127); }
	def m218():void { var l:Float = (w5)+(128); }
	def m219():void { var l:Float = (w5)+(-128); }
	def m220():void { var l:Float = (w5)+(255); }
	def m221():void { var l:Float = (w5)+(-255); }
	def m222():void { var l:Float = (w5)+(256); }
	def m223():void { var l:Float = (w5)+(-256); }
	def m224():void { var l:Float = (w5)+(32767); }
	def m225():void { var l:Float = (w5)+(-32767); }
	def m226():void { var l:Float = (w5)+(32768); }
	def m227():void { var l:Float = (w5)+(-32768); }
	def m228():void { var l:Float = (w5)+(65535); }
	def m229():void { var l:Float = (w5)+(-65535); }
	def m230():void { var l:Float = (w5)+(65536); }
	def m231():void { var l:Float = (w5)+(-65536); }
	def m232():void { var l:Float = (w5)+(16777216); }
	def m233():void { var l:Float = (w5)+(-16777216); }
	def m234():void { var l:Float = (w5)+(16777217); }
	def m235():void { var l:Float = (w5)+(-16777217); }
	def m236():void { var l:Float = (w5)+(2147483647); }
	def m237():void { var l:Float = (w5)+(-2147483647); }
	def m238():void { var l:Float = (w6)+(w0); }
	def m239():void { var l:Float = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m240():void { var l:Float = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m241():void { var l:Float = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m242():void { var l:Float = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m243():void { var l:Float = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m244():void { var l:Float = (w6)+(w6); }
	def m245():void { var l:Float = (w6)+(w7); }  
	def m246():void { var l:Float = (w6)+(w8); }  
	def m247():void { var l:Float = (w6)+(w9); }  
	def m248():void { var l:Float = (w6)+(0); }  
	def m249():void { var l:Float = (w6)+(-0); }  
	def m250():void { var l:Float = (w6)+(1.1f); }
	def m251():void { var l:Float = (w6)+(-1.1f); }
	def m252():void { var l:Float = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m253():void { var l:Float = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m254():void { var l:Float = (w6)+(127); }  
	def m255():void { var l:Float = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m256():void { var l:Float = (w6)+(128); }  
	def m257():void { var l:Float = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m258():void { var l:Float = (w6)+(255); }  
	def m259():void { var l:Float = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m260():void { var l:Float = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m261():void { var l:Float = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m262():void { var l:Float = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m263():void { var l:Float = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m264():void { var l:Float = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m265():void { var l:Float = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m266():void { var l:Float = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m267():void { var l:Float = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m268():void { var l:Float = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m269():void { var l:Float = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m270():void { var l:Float = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m271():void { var l:Float = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m272():void { var l:Float = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m273():void { var l:Float = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m274():void { var l:Float = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m275():void { var l:Float = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m276():void { var l:Float = (w7)+(w0); }
	def m277():void { var l:Float = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m278():void { var l:Float = (w7)+(w2); }  
	def m279():void { var l:Float = (w7)+(w3); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m280():void { var l:Float = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m281():void { var l:Float = (w7)+(w5); }  
	def m282():void { var l:Float = (w7)+(w6); }  
	def m283():void { var l:Float = (w7)+(w7); }
	def m284():void { var l:Float = (w7)+(w8); }  
	def m285():void { var l:Float = (w7)+(w9); }  
	def m286():void { var l:Float = (w7)+(0); }
	def m287():void { var l:Float = (w7)+(-0); }
	def m288():void { var l:Float = (w7)+(1.1f); }
	def m289():void { var l:Float = (w7)+(-1.1f); }
	def m290():void { var l:Float = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m291():void { var l:Float = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m292():void { var l:Float = (w7)+(127); }
	def m293():void { var l:Float = (w7)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m294():void { var l:Float = (w7)+(128); }
	def m295():void { var l:Float = (w7)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m296():void { var l:Float = (w7)+(255); }
	def m297():void { var l:Float = (w7)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m298():void { var l:Float = (w7)+(256); }
	def m299():void { var l:Float = (w7)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m300():void { var l:Float = (w7)+(32767); }
	def m301():void { var l:Float = (w7)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m302():void { var l:Float = (w7)+(32768); }
	def m303():void { var l:Float = (w7)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m304():void { var l:Float = (w7)+(65535); }
	def m305():void { var l:Float = (w7)+(-65535); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m306():void { var l:Float = (w7)+(65536); }
	def m307():void { var l:Float = (w7)+(-65536); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m308():void { var l:Float = (w7)+(16777216); }
	def m309():void { var l:Float = (w7)+(-16777216); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m310():void { var l:Float = (w7)+(16777217); }
	def m311():void { var l:Float = (w7)+(-16777217); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m312():void { var l:Float = (w7)+(2147483647); }
	def m313():void { var l:Float = (w7)+(-2147483647); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m314():void { var l:Float = (w8)+(w0); }
	def m315():void { var l:Float = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m316():void { var l:Float = (w8)+(w2); }  
	def m317():void { var l:Float = (w8)+(w3); }  
	def m318():void { var l:Float = (w8)+(w4); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m319():void { var l:Float = (w8)+(w5); }  
	def m320():void { var l:Float = (w8)+(w6); }  
	def m321():void { var l:Float = (w8)+(w7); }  
	def m322():void { var l:Float = (w8)+(w8); }
	def m323():void { var l:Float = (w8)+(w9); }  
	def m324():void { var l:Float = (w8)+(0); }  
	def m325():void { var l:Float = (w8)+(-0); }  
	def m326():void { var l:Float = (w8)+(1.1f); }
	def m327():void { var l:Float = (w8)+(-1.1f); }
	def m328():void { var l:Float = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m329():void { var l:Float = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m330():void { var l:Float = (w8)+(127); }  
	def m331():void { var l:Float = (w8)+(-127); }  
	def m332():void { var l:Float = (w8)+(128); }  
	def m333():void { var l:Float = (w8)+(-128); }  
	def m334():void { var l:Float = (w8)+(255); }  
	def m335():void { var l:Float = (w8)+(-255); }  
	def m336():void { var l:Float = (w8)+(256); }  
	def m337():void { var l:Float = (w8)+(-256); }  
	def m338():void { var l:Float = (w8)+(32767); }  
	def m339():void { var l:Float = (w8)+(-32767); }  
	def m340():void { var l:Float = (w8)+(32768); }  
	def m341():void { var l:Float = (w8)+(-32768); }  
	def m342():void { var l:Float = (w8)+(65535); }  
	def m343():void { var l:Float = (w8)+(-65535); }  
	def m344():void { var l:Float = (w8)+(65536); }  
	def m345():void { var l:Float = (w8)+(-65536); }  
	def m346():void { var l:Float = (w8)+(16777216); }  
	def m347():void { var l:Float = (w8)+(-16777216); }  
	def m348():void { var l:Float = (w8)+(16777217); }  
	def m349():void { var l:Float = (w8)+(-16777217); }  
	def m350():void { var l:Float = (w8)+(2147483647); }  
	def m351():void { var l:Float = (w8)+(-2147483647); }  
	def m352():void { var l:Float = (w9)+(w0); }
	def m353():void { var l:Float = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m354():void { var l:Float = (w9)+(w2); }  
	def m355():void { var l:Float = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m356():void { var l:Float = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m357():void { var l:Float = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m358():void { var l:Float = (w9)+(w6); }  
	def m359():void { var l:Float = (w9)+(w7); }  
	def m360():void { var l:Float = (w9)+(w8); }  
	def m361():void { var l:Float = (w9)+(w9); }
	def m362():void { var l:Float = (w9)+(0); }  
	def m363():void { var l:Float = (w9)+(-0); }  
	def m364():void { var l:Float = (w9)+(1.1f); }
	def m365():void { var l:Float = (w9)+(-1.1f); }
	def m366():void { var l:Float = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m367():void { var l:Float = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m368():void { var l:Float = (w9)+(127); }  
	def m369():void { var l:Float = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m370():void { var l:Float = (w9)+(128); }  
	def m371():void { var l:Float = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m372():void { var l:Float = (w9)+(255); }  
	def m373():void { var l:Float = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m374():void { var l:Float = (w9)+(256); }  
	def m375():void { var l:Float = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m376():void { var l:Float = (w9)+(32767); }  
	def m377():void { var l:Float = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m378():void { var l:Float = (w9)+(32768); }  
	def m379():void { var l:Float = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m380():void { var l:Float = (w9)+(65535); }  
	def m381():void { var l:Float = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m382():void { var l:Float = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m383():void { var l:Float = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m384():void { var l:Float = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m385():void { var l:Float = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m386():void { var l:Float = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m387():void { var l:Float = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m388():void { var l:Float = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m389():void { var l:Float = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m390():void { var l:Float = (0)+(w0); }
	def m391():void { var l:Float = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m392():void { var l:Float = (0)+(w2); }
	def m393():void { var l:Float = (0)+(w3); }
	def m394():void { var l:Float = (0)+(w4); }
	def m395():void { var l:Float = (0)+(w5); }
	def m396():void { var l:Float = (0)+(w6); }  
	def m397():void { var l:Float = (0)+(w7); }
	def m398():void { var l:Float = (0)+(w8); }  
	def m399():void { var l:Float = (0)+(w9); }  
	def m400():void { var l:Float = (0)+(0); }
	def m401():void { var l:Float = (0)+(-0); }
	def m402():void { var l:Float = (0)+(1.1f); }
	def m403():void { var l:Float = (0)+(-1.1f); }
	def m404():void { var l:Float = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m405():void { var l:Float = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m406():void { var l:Float = (0)+(127); }
	def m407():void { var l:Float = (0)+(-127); }
	def m408():void { var l:Float = (0)+(128); }
	def m409():void { var l:Float = (0)+(-128); }
	def m410():void { var l:Float = (0)+(255); }
	def m411():void { var l:Float = (0)+(-255); }
	def m412():void { var l:Float = (0)+(256); }
	def m413():void { var l:Float = (0)+(-256); }
	def m414():void { var l:Float = (0)+(32767); }
	def m415():void { var l:Float = (0)+(-32767); }
	def m416():void { var l:Float = (0)+(32768); }
	def m417():void { var l:Float = (0)+(-32768); }
	def m418():void { var l:Float = (0)+(65535); }
	def m419():void { var l:Float = (0)+(-65535); }
	def m420():void { var l:Float = (0)+(65536); }
	def m421():void { var l:Float = (0)+(-65536); }
	def m422():void { var l:Float = (0)+(16777216); }
	def m423():void { var l:Float = (0)+(-16777216); }
	def m424():void { var l:Float = (0)+(16777217); }
	def m425():void { var l:Float = (0)+(-16777217); }
	def m426():void { var l:Float = (0)+(2147483647); }
	def m427():void { var l:Float = (0)+(-2147483647); }
	def m428():void { var l:Float = (-0)+(w0); }
	def m429():void { var l:Float = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m430():void { var l:Float = (-0)+(w2); }
	def m431():void { var l:Float = (-0)+(w3); }
	def m432():void { var l:Float = (-0)+(w4); }
	def m433():void { var l:Float = (-0)+(w5); }
	def m434():void { var l:Float = (-0)+(w6); }  
	def m435():void { var l:Float = (-0)+(w7); }
	def m436():void { var l:Float = (-0)+(w8); }  
	def m437():void { var l:Float = (-0)+(w9); }  
	def m438():void { var l:Float = (-0)+(0); }
	def m439():void { var l:Float = (-0)+(-0); }
	def m440():void { var l:Float = (-0)+(1.1f); }
	def m441():void { var l:Float = (-0)+(-1.1f); }
	def m442():void { var l:Float = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m443():void { var l:Float = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m444():void { var l:Float = (-0)+(127); }
	def m445():void { var l:Float = (-0)+(-127); }
	def m446():void { var l:Float = (-0)+(128); }
	def m447():void { var l:Float = (-0)+(-128); }
	def m448():void { var l:Float = (-0)+(255); }
	def m449():void { var l:Float = (-0)+(-255); }
	def m450():void { var l:Float = (-0)+(256); }
	def m451():void { var l:Float = (-0)+(-256); }
	def m452():void { var l:Float = (-0)+(32767); }
	def m453():void { var l:Float = (-0)+(-32767); }
	def m454():void { var l:Float = (-0)+(32768); }
	def m455():void { var l:Float = (-0)+(-32768); }
	def m456():void { var l:Float = (-0)+(65535); }
	def m457():void { var l:Float = (-0)+(-65535); }
	def m458():void { var l:Float = (-0)+(65536); }
	def m459():void { var l:Float = (-0)+(-65536); }
	def m460():void { var l:Float = (-0)+(16777216); }
	def m461():void { var l:Float = (-0)+(-16777216); }
	def m462():void { var l:Float = (-0)+(16777217); }
	def m463():void { var l:Float = (-0)+(-16777217); }
	def m464():void { var l:Float = (-0)+(2147483647); }
	def m465():void { var l:Float = (-0)+(-2147483647); }
	def m466():void { var l:Float = (1.1f)+(w0); }
	def m467():void { var l:Float = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m468():void { var l:Float = (1.1f)+(w2); }
	def m469():void { var l:Float = (1.1f)+(w3); }
	def m470():void { var l:Float = (1.1f)+(w4); }
	def m471():void { var l:Float = (1.1f)+(w5); }
	def m472():void { var l:Float = (1.1f)+(w6); }
	def m473():void { var l:Float = (1.1f)+(w7); }
	def m474():void { var l:Float = (1.1f)+(w8); }
	def m475():void { var l:Float = (1.1f)+(w9); }
	def m476():void { var l:Float = (1.1f)+(0); }
	def m477():void { var l:Float = (1.1f)+(-0); }
	def m478():void { var l:Float = (1.1f)+(1.1f); }
	def m479():void { var l:Float = (1.1f)+(-1.1f); }
	def m480():void { var l:Float = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m481():void { var l:Float = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m482():void { var l:Float = (1.1f)+(127); }
	def m483():void { var l:Float = (1.1f)+(-127); }
	def m484():void { var l:Float = (1.1f)+(128); }
	def m485():void { var l:Float = (1.1f)+(-128); }
	def m486():void { var l:Float = (1.1f)+(255); }
	def m487():void { var l:Float = (1.1f)+(-255); }
	def m488():void { var l:Float = (1.1f)+(256); }
	def m489():void { var l:Float = (1.1f)+(-256); }
	def m490():void { var l:Float = (1.1f)+(32767); }
	def m491():void { var l:Float = (1.1f)+(-32767); }
	def m492():void { var l:Float = (1.1f)+(32768); }
	def m493():void { var l:Float = (1.1f)+(-32768); }
	def m494():void { var l:Float = (1.1f)+(65535); }
	def m495():void { var l:Float = (1.1f)+(-65535); }
	def m496():void { var l:Float = (1.1f)+(65536); }
	def m497():void { var l:Float = (1.1f)+(-65536); }
	def m498():void { var l:Float = (1.1f)+(16777216); }
	def m499():void { var l:Float = (1.1f)+(-16777216); }
	def m500():void { var l:Float = (1.1f)+(16777217); }
	def m501():void { var l:Float = (1.1f)+(-16777217); }
	def m502():void { var l:Float = (1.1f)+(2147483647); }
	def m503():void { var l:Float = (1.1f)+(-2147483647); }
	def m504():void { var l:Float = (-1.1f)+(w0); }
	def m505():void { var l:Float = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m506():void { var l:Float = (-1.1f)+(w2); }
	def m507():void { var l:Float = (-1.1f)+(w3); }
	def m508():void { var l:Float = (-1.1f)+(w4); }
	def m509():void { var l:Float = (-1.1f)+(w5); }
	def m510():void { var l:Float = (-1.1f)+(w6); }
	def m511():void { var l:Float = (-1.1f)+(w7); }
	def m512():void { var l:Float = (-1.1f)+(w8); }
	def m513():void { var l:Float = (-1.1f)+(w9); }
	def m514():void { var l:Float = (-1.1f)+(0); }
	def m515():void { var l:Float = (-1.1f)+(-0); }
	def m516():void { var l:Float = (-1.1f)+(1.1f); }
	def m517():void { var l:Float = (-1.1f)+(-1.1f); }
	def m518():void { var l:Float = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m519():void { var l:Float = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m520():void { var l:Float = (-1.1f)+(127); }
	def m521():void { var l:Float = (-1.1f)+(-127); }
	def m522():void { var l:Float = (-1.1f)+(128); }
	def m523():void { var l:Float = (-1.1f)+(-128); }
	def m524():void { var l:Float = (-1.1f)+(255); }
	def m525():void { var l:Float = (-1.1f)+(-255); }
	def m526():void { var l:Float = (-1.1f)+(256); }
	def m527():void { var l:Float = (-1.1f)+(-256); }
	def m528():void { var l:Float = (-1.1f)+(32767); }
	def m529():void { var l:Float = (-1.1f)+(-32767); }
	def m530():void { var l:Float = (-1.1f)+(32768); }
	def m531():void { var l:Float = (-1.1f)+(-32768); }
	def m532():void { var l:Float = (-1.1f)+(65535); }
	def m533():void { var l:Float = (-1.1f)+(-65535); }
	def m534():void { var l:Float = (-1.1f)+(65536); }
	def m535():void { var l:Float = (-1.1f)+(-65536); }
	def m536():void { var l:Float = (-1.1f)+(16777216); }
	def m537():void { var l:Float = (-1.1f)+(-16777216); }
	def m538():void { var l:Float = (-1.1f)+(16777217); }
	def m539():void { var l:Float = (-1.1f)+(-16777217); }
	def m540():void { var l:Float = (-1.1f)+(2147483647); }
	def m541():void { var l:Float = (-1.1f)+(-2147483647); }
	def m542():void { var l:Float = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m543():void { var l:Float = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m544():void { var l:Float = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m545():void { var l:Float = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m546():void { var l:Float = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m547():void { var l:Float = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m548():void { var l:Float = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m549():void { var l:Float = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m550():void { var l:Float = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m551():void { var l:Float = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m552():void { var l:Float = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m553():void { var l:Float = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m554():void { var l:Float = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m555():void { var l:Float = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m556():void { var l:Float = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m557():void { var l:Float = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m558():void { var l:Float = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m559():void { var l:Float = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m560():void { var l:Float = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m561():void { var l:Float = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m562():void { var l:Float = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m563():void { var l:Float = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m564():void { var l:Float = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m565():void { var l:Float = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m566():void { var l:Float = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m567():void { var l:Float = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m568():void { var l:Float = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m569():void { var l:Float = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m570():void { var l:Float = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m571():void { var l:Float = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m572():void { var l:Float = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m573():void { var l:Float = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m574():void { var l:Float = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m575():void { var l:Float = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m576():void { var l:Float = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m577():void { var l:Float = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m578():void { var l:Float = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m579():void { var l:Float = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m580():void { var l:Float = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m581():void { var l:Float = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m582():void { var l:Float = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m583():void { var l:Float = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m584():void { var l:Float = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m585():void { var l:Float = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m586():void { var l:Float = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m587():void { var l:Float = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m588():void { var l:Float = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m589():void { var l:Float = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m590():void { var l:Float = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m591():void { var l:Float = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m592():void { var l:Float = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m593():void { var l:Float = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m594():void { var l:Float = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m595():void { var l:Float = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m596():void { var l:Float = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m597():void { var l:Float = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m598():void { var l:Float = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m599():void { var l:Float = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m600():void { var l:Float = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m601():void { var l:Float = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m602():void { var l:Float = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m603():void { var l:Float = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m604():void { var l:Float = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m605():void { var l:Float = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m606():void { var l:Float = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m607():void { var l:Float = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m608():void { var l:Float = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m609():void { var l:Float = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m610():void { var l:Float = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m611():void { var l:Float = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m612():void { var l:Float = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m613():void { var l:Float = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m614():void { var l:Float = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m615():void { var l:Float = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m616():void { var l:Float = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m617():void { var l:Float = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m618():void { var l:Float = (127)+(w0); }
	def m619():void { var l:Float = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m620():void { var l:Float = (127)+(w2); }
	def m621():void { var l:Float = (127)+(w3); }
	def m622():void { var l:Float = (127)+(w4); }
	def m623():void { var l:Float = (127)+(w5); }
	def m624():void { var l:Float = (127)+(w6); }  
	def m625():void { var l:Float = (127)+(w7); }
	def m626():void { var l:Float = (127)+(w8); }  
	def m627():void { var l:Float = (127)+(w9); }  
	def m628():void { var l:Float = (127)+(0); }
	def m629():void { var l:Float = (127)+(-0); }
	def m630():void { var l:Float = (127)+(1.1f); }
	def m631():void { var l:Float = (127)+(-1.1f); }
	def m632():void { var l:Float = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m633():void { var l:Float = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m634():void { var l:Float = (127)+(127); }
	def m635():void { var l:Float = (127)+(-127); }
	def m636():void { var l:Float = (127)+(128); }
	def m637():void { var l:Float = (127)+(-128); }
	def m638():void { var l:Float = (127)+(255); }
	def m639():void { var l:Float = (127)+(-255); }
	def m640():void { var l:Float = (127)+(256); }
	def m641():void { var l:Float = (127)+(-256); }
	def m642():void { var l:Float = (127)+(32767); }
	def m643():void { var l:Float = (127)+(-32767); }
	def m644():void { var l:Float = (127)+(32768); }
	def m645():void { var l:Float = (127)+(-32768); }
	def m646():void { var l:Float = (127)+(65535); }
	def m647():void { var l:Float = (127)+(-65535); }
	def m648():void { var l:Float = (127)+(65536); }
	def m649():void { var l:Float = (127)+(-65536); }
	def m650():void { var l:Float = (127)+(16777216); }
	def m651():void { var l:Float = (127)+(-16777216); }
	def m652():void { var l:Float = (127)+(16777217); }
	def m653():void { var l:Float = (127)+(-16777217); }
	def m654():void { var l:Float = (127)+(2147483647); }
	def m655():void { var l:Float = (127)+(-2147483647); }
	def m656():void { var l:Float = (-127)+(w0); }
	def m657():void { var l:Float = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m658():void { var l:Float = (-127)+(w2); }
	def m659():void { var l:Float = (-127)+(w3); }
	def m660():void { var l:Float = (-127)+(w4); }
	def m661():void { var l:Float = (-127)+(w5); }
	def m662():void { var l:Float = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m663():void { var l:Float = (-127)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m664():void { var l:Float = (-127)+(w8); }  
	def m665():void { var l:Float = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m666():void { var l:Float = (-127)+(0); }
	def m667():void { var l:Float = (-127)+(-0); }
	def m668():void { var l:Float = (-127)+(1.1f); }
	def m669():void { var l:Float = (-127)+(-1.1f); }
	def m670():void { var l:Float = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m671():void { var l:Float = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m672():void { var l:Float = (-127)+(127); }
	def m673():void { var l:Float = (-127)+(-127); }
	def m674():void { var l:Float = (-127)+(128); }
	def m675():void { var l:Float = (-127)+(-128); }
	def m676():void { var l:Float = (-127)+(255); }
	def m677():void { var l:Float = (-127)+(-255); }
	def m678():void { var l:Float = (-127)+(256); }
	def m679():void { var l:Float = (-127)+(-256); }
	def m680():void { var l:Float = (-127)+(32767); }
	def m681():void { var l:Float = (-127)+(-32767); }
	def m682():void { var l:Float = (-127)+(32768); }
	def m683():void { var l:Float = (-127)+(-32768); }
	def m684():void { var l:Float = (-127)+(65535); }
	def m685():void { var l:Float = (-127)+(-65535); }
	def m686():void { var l:Float = (-127)+(65536); }
	def m687():void { var l:Float = (-127)+(-65536); }
	def m688():void { var l:Float = (-127)+(16777216); }
	def m689():void { var l:Float = (-127)+(-16777216); }
	def m690():void { var l:Float = (-127)+(16777217); }
	def m691():void { var l:Float = (-127)+(-16777217); }
	def m692():void { var l:Float = (-127)+(2147483647); }
	def m693():void { var l:Float = (-127)+(-2147483647); }
	def m694():void { var l:Float = (128)+(w0); }
	def m695():void { var l:Float = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m696():void { var l:Float = (128)+(w2); }
	def m697():void { var l:Float = (128)+(w3); }
	def m698():void { var l:Float = (128)+(w4); }
	def m699():void { var l:Float = (128)+(w5); }
	def m700():void { var l:Float = (128)+(w6); }  
	def m701():void { var l:Float = (128)+(w7); }
	def m702():void { var l:Float = (128)+(w8); }  
	def m703():void { var l:Float = (128)+(w9); }  
	def m704():void { var l:Float = (128)+(0); }
	def m705():void { var l:Float = (128)+(-0); }
	def m706():void { var l:Float = (128)+(1.1f); }
	def m707():void { var l:Float = (128)+(-1.1f); }
	def m708():void { var l:Float = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m709():void { var l:Float = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m710():void { var l:Float = (128)+(127); }
	def m711():void { var l:Float = (128)+(-127); }
	def m712():void { var l:Float = (128)+(128); }
	def m713():void { var l:Float = (128)+(-128); }
	def m714():void { var l:Float = (128)+(255); }
	def m715():void { var l:Float = (128)+(-255); }
	def m716():void { var l:Float = (128)+(256); }
	def m717():void { var l:Float = (128)+(-256); }
	def m718():void { var l:Float = (128)+(32767); }
	def m719():void { var l:Float = (128)+(-32767); }
	def m720():void { var l:Float = (128)+(32768); }
	def m721():void { var l:Float = (128)+(-32768); }
	def m722():void { var l:Float = (128)+(65535); }
	def m723():void { var l:Float = (128)+(-65535); }
	def m724():void { var l:Float = (128)+(65536); }
	def m725():void { var l:Float = (128)+(-65536); }
	def m726():void { var l:Float = (128)+(16777216); }
	def m727():void { var l:Float = (128)+(-16777216); }
	def m728():void { var l:Float = (128)+(16777217); }
	def m729():void { var l:Float = (128)+(-16777217); }
	def m730():void { var l:Float = (128)+(2147483647); }
	def m731():void { var l:Float = (128)+(-2147483647); }
	def m732():void { var l:Float = (-128)+(w0); }
	def m733():void { var l:Float = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m734():void { var l:Float = (-128)+(w2); }
	def m735():void { var l:Float = (-128)+(w3); }
	def m736():void { var l:Float = (-128)+(w4); }
	def m737():void { var l:Float = (-128)+(w5); }
	def m738():void { var l:Float = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m739():void { var l:Float = (-128)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m740():void { var l:Float = (-128)+(w8); }  
	def m741():void { var l:Float = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m742():void { var l:Float = (-128)+(0); }
	def m743():void { var l:Float = (-128)+(-0); }
	def m744():void { var l:Float = (-128)+(1.1f); }
	def m745():void { var l:Float = (-128)+(-1.1f); }
	def m746():void { var l:Float = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m747():void { var l:Float = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m748():void { var l:Float = (-128)+(127); }
	def m749():void { var l:Float = (-128)+(-127); }
	def m750():void { var l:Float = (-128)+(128); }
	def m751():void { var l:Float = (-128)+(-128); }
	def m752():void { var l:Float = (-128)+(255); }
	def m753():void { var l:Float = (-128)+(-255); }
	def m754():void { var l:Float = (-128)+(256); }
	def m755():void { var l:Float = (-128)+(-256); }
	def m756():void { var l:Float = (-128)+(32767); }
	def m757():void { var l:Float = (-128)+(-32767); }
	def m758():void { var l:Float = (-128)+(32768); }
	def m759():void { var l:Float = (-128)+(-32768); }
	def m760():void { var l:Float = (-128)+(65535); }
	def m761():void { var l:Float = (-128)+(-65535); }
	def m762():void { var l:Float = (-128)+(65536); }
	def m763():void { var l:Float = (-128)+(-65536); }
	def m764():void { var l:Float = (-128)+(16777216); }
	def m765():void { var l:Float = (-128)+(-16777216); }
	def m766():void { var l:Float = (-128)+(16777217); }
	def m767():void { var l:Float = (-128)+(-16777217); }
	def m768():void { var l:Float = (-128)+(2147483647); }
	def m769():void { var l:Float = (-128)+(-2147483647); }
	def m770():void { var l:Float = (255)+(w0); }
	def m771():void { var l:Float = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m772():void { var l:Float = (255)+(w2); }
	def m773():void { var l:Float = (255)+(w3); }
	def m774():void { var l:Float = (255)+(w4); }
	def m775():void { var l:Float = (255)+(w5); }
	def m776():void { var l:Float = (255)+(w6); }  
	def m777():void { var l:Float = (255)+(w7); }
	def m778():void { var l:Float = (255)+(w8); }  
	def m779():void { var l:Float = (255)+(w9); }  
	def m780():void { var l:Float = (255)+(0); }
	def m781():void { var l:Float = (255)+(-0); }
	def m782():void { var l:Float = (255)+(1.1f); }
	def m783():void { var l:Float = (255)+(-1.1f); }
	def m784():void { var l:Float = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m785():void { var l:Float = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m786():void { var l:Float = (255)+(127); }
	def m787():void { var l:Float = (255)+(-127); }
	def m788():void { var l:Float = (255)+(128); }
	def m789():void { var l:Float = (255)+(-128); }
	def m790():void { var l:Float = (255)+(255); }
	def m791():void { var l:Float = (255)+(-255); }
	def m792():void { var l:Float = (255)+(256); }
	def m793():void { var l:Float = (255)+(-256); }
	def m794():void { var l:Float = (255)+(32767); }
	def m795():void { var l:Float = (255)+(-32767); }
	def m796():void { var l:Float = (255)+(32768); }
	def m797():void { var l:Float = (255)+(-32768); }
	def m798():void { var l:Float = (255)+(65535); }
	def m799():void { var l:Float = (255)+(-65535); }
	def m800():void { var l:Float = (255)+(65536); }
	def m801():void { var l:Float = (255)+(-65536); }
	def m802():void { var l:Float = (255)+(16777216); }
	def m803():void { var l:Float = (255)+(-16777216); }
	def m804():void { var l:Float = (255)+(16777217); }
	def m805():void { var l:Float = (255)+(-16777217); }
	def m806():void { var l:Float = (255)+(2147483647); }
	def m807():void { var l:Float = (255)+(-2147483647); }
	def m808():void { var l:Float = (-255)+(w0); }
	def m809():void { var l:Float = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m810():void { var l:Float = (-255)+(w2); }
	def m811():void { var l:Float = (-255)+(w3); }
	def m812():void { var l:Float = (-255)+(w4); }
	def m813():void { var l:Float = (-255)+(w5); }
	def m814():void { var l:Float = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m815():void { var l:Float = (-255)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m816():void { var l:Float = (-255)+(w8); }  
	def m817():void { var l:Float = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m818():void { var l:Float = (-255)+(0); }
	def m819():void { var l:Float = (-255)+(-0); }
	def m820():void { var l:Float = (-255)+(1.1f); }
	def m821():void { var l:Float = (-255)+(-1.1f); }
	def m822():void { var l:Float = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m823():void { var l:Float = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m824():void { var l:Float = (-255)+(127); }
	def m825():void { var l:Float = (-255)+(-127); }
	def m826():void { var l:Float = (-255)+(128); }
	def m827():void { var l:Float = (-255)+(-128); }
	def m828():void { var l:Float = (-255)+(255); }
	def m829():void { var l:Float = (-255)+(-255); }
	def m830():void { var l:Float = (-255)+(256); }
	def m831():void { var l:Float = (-255)+(-256); }
	def m832():void { var l:Float = (-255)+(32767); }
	def m833():void { var l:Float = (-255)+(-32767); }
	def m834():void { var l:Float = (-255)+(32768); }
	def m835():void { var l:Float = (-255)+(-32768); }
	def m836():void { var l:Float = (-255)+(65535); }
	def m837():void { var l:Float = (-255)+(-65535); }
	def m838():void { var l:Float = (-255)+(65536); }
	def m839():void { var l:Float = (-255)+(-65536); }
	def m840():void { var l:Float = (-255)+(16777216); }
	def m841():void { var l:Float = (-255)+(-16777216); }
	def m842():void { var l:Float = (-255)+(16777217); }
	def m843():void { var l:Float = (-255)+(-16777217); }
	def m844():void { var l:Float = (-255)+(2147483647); }
	def m845():void { var l:Float = (-255)+(-2147483647); }
	def m846():void { var l:Float = (256)+(w0); }
	def m847():void { var l:Float = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m848():void { var l:Float = (256)+(w2); }
	def m849():void { var l:Float = (256)+(w3); }
	def m850():void { var l:Float = (256)+(w4); }
	def m851():void { var l:Float = (256)+(w5); }
	def m852():void { var l:Float = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m853():void { var l:Float = (256)+(w7); }
	def m854():void { var l:Float = (256)+(w8); }  
	def m855():void { var l:Float = (256)+(w9); }  
	def m856():void { var l:Float = (256)+(0); }
	def m857():void { var l:Float = (256)+(-0); }
	def m858():void { var l:Float = (256)+(1.1f); }
	def m859():void { var l:Float = (256)+(-1.1f); }
	def m860():void { var l:Float = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m861():void { var l:Float = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m862():void { var l:Float = (256)+(127); }
	def m863():void { var l:Float = (256)+(-127); }
	def m864():void { var l:Float = (256)+(128); }
	def m865():void { var l:Float = (256)+(-128); }
	def m866():void { var l:Float = (256)+(255); }
	def m867():void { var l:Float = (256)+(-255); }
	def m868():void { var l:Float = (256)+(256); }
	def m869():void { var l:Float = (256)+(-256); }
	def m870():void { var l:Float = (256)+(32767); }
	def m871():void { var l:Float = (256)+(-32767); }
	def m872():void { var l:Float = (256)+(32768); }
	def m873():void { var l:Float = (256)+(-32768); }
	def m874():void { var l:Float = (256)+(65535); }
	def m875():void { var l:Float = (256)+(-65535); }
	def m876():void { var l:Float = (256)+(65536); }
	def m877():void { var l:Float = (256)+(-65536); }
	def m878():void { var l:Float = (256)+(16777216); }
	def m879():void { var l:Float = (256)+(-16777216); }
	def m880():void { var l:Float = (256)+(16777217); }
	def m881():void { var l:Float = (256)+(-16777217); }
	def m882():void { var l:Float = (256)+(2147483647); }
	def m883():void { var l:Float = (256)+(-2147483647); }
	def m884():void { var l:Float = (-256)+(w0); }
	def m885():void { var l:Float = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m886():void { var l:Float = (-256)+(w2); }
	def m887():void { var l:Float = (-256)+(w3); }
	def m888():void { var l:Float = (-256)+(w4); }
	def m889():void { var l:Float = (-256)+(w5); }
	def m890():void { var l:Float = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m891():void { var l:Float = (-256)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m892():void { var l:Float = (-256)+(w8); }  
	def m893():void { var l:Float = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m894():void { var l:Float = (-256)+(0); }
	def m895():void { var l:Float = (-256)+(-0); }
	def m896():void { var l:Float = (-256)+(1.1f); }
	def m897():void { var l:Float = (-256)+(-1.1f); }
	def m898():void { var l:Float = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m899():void { var l:Float = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m900():void { var l:Float = (-256)+(127); }
	def m901():void { var l:Float = (-256)+(-127); }
	def m902():void { var l:Float = (-256)+(128); }
	def m903():void { var l:Float = (-256)+(-128); }
	def m904():void { var l:Float = (-256)+(255); }
	def m905():void { var l:Float = (-256)+(-255); }
	def m906():void { var l:Float = (-256)+(256); }
	def m907():void { var l:Float = (-256)+(-256); }
	def m908():void { var l:Float = (-256)+(32767); }
	def m909():void { var l:Float = (-256)+(-32767); }
	def m910():void { var l:Float = (-256)+(32768); }
	def m911():void { var l:Float = (-256)+(-32768); }
	def m912():void { var l:Float = (-256)+(65535); }
	def m913():void { var l:Float = (-256)+(-65535); }
	def m914():void { var l:Float = (-256)+(65536); }
	def m915():void { var l:Float = (-256)+(-65536); }
	def m916():void { var l:Float = (-256)+(16777216); }
	def m917():void { var l:Float = (-256)+(-16777216); }
	def m918():void { var l:Float = (-256)+(16777217); }
	def m919():void { var l:Float = (-256)+(-16777217); }
	def m920():void { var l:Float = (-256)+(2147483647); }
	def m921():void { var l:Float = (-256)+(-2147483647); }
	def m922():void { var l:Float = (32767)+(w0); }
	def m923():void { var l:Float = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m924():void { var l:Float = (32767)+(w2); }
	def m925():void { var l:Float = (32767)+(w3); }
	def m926():void { var l:Float = (32767)+(w4); }
	def m927():void { var l:Float = (32767)+(w5); }
	def m928():void { var l:Float = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m929():void { var l:Float = (32767)+(w7); }
	def m930():void { var l:Float = (32767)+(w8); }  
	def m931():void { var l:Float = (32767)+(w9); }  
	def m932():void { var l:Float = (32767)+(0); }
	def m933():void { var l:Float = (32767)+(-0); }
	def m934():void { var l:Float = (32767)+(1.1f); }
	def m935():void { var l:Float = (32767)+(-1.1f); }
	def m936():void { var l:Float = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m937():void { var l:Float = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m938():void { var l:Float = (32767)+(127); }
	def m939():void { var l:Float = (32767)+(-127); }
	def m940():void { var l:Float = (32767)+(128); }
	def m941():void { var l:Float = (32767)+(-128); }
	def m942():void { var l:Float = (32767)+(255); }
	def m943():void { var l:Float = (32767)+(-255); }
	def m944():void { var l:Float = (32767)+(256); }
	def m945():void { var l:Float = (32767)+(-256); }
	def m946():void { var l:Float = (32767)+(32767); }
	def m947():void { var l:Float = (32767)+(-32767); }
	def m948():void { var l:Float = (32767)+(32768); }
	def m949():void { var l:Float = (32767)+(-32768); }
	def m950():void { var l:Float = (32767)+(65535); }
	def m951():void { var l:Float = (32767)+(-65535); }
	def m952():void { var l:Float = (32767)+(65536); }
	def m953():void { var l:Float = (32767)+(-65536); }
	def m954():void { var l:Float = (32767)+(16777216); }
	def m955():void { var l:Float = (32767)+(-16777216); }
	def m956():void { var l:Float = (32767)+(16777217); }
	def m957():void { var l:Float = (32767)+(-16777217); }
	def m958():void { var l:Float = (32767)+(2147483647); }
	def m959():void { var l:Float = (32767)+(-2147483647); }
	def m960():void { var l:Float = (-32767)+(w0); }
	def m961():void { var l:Float = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m962():void { var l:Float = (-32767)+(w2); }
	def m963():void { var l:Float = (-32767)+(w3); }
	def m964():void { var l:Float = (-32767)+(w4); }
	def m965():void { var l:Float = (-32767)+(w5); }
	def m966():void { var l:Float = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m967():void { var l:Float = (-32767)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m968():void { var l:Float = (-32767)+(w8); }  
	def m969():void { var l:Float = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m970():void { var l:Float = (-32767)+(0); }
	def m971():void { var l:Float = (-32767)+(-0); }
	def m972():void { var l:Float = (-32767)+(1.1f); }
	def m973():void { var l:Float = (-32767)+(-1.1f); }
	def m974():void { var l:Float = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m975():void { var l:Float = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m976():void { var l:Float = (-32767)+(127); }
	def m977():void { var l:Float = (-32767)+(-127); }
	def m978():void { var l:Float = (-32767)+(128); }
	def m979():void { var l:Float = (-32767)+(-128); }
	def m980():void { var l:Float = (-32767)+(255); }
	def m981():void { var l:Float = (-32767)+(-255); }
	def m982():void { var l:Float = (-32767)+(256); }
	def m983():void { var l:Float = (-32767)+(-256); }
	def m984():void { var l:Float = (-32767)+(32767); }
	def m985():void { var l:Float = (-32767)+(-32767); }
	def m986():void { var l:Float = (-32767)+(32768); }
	def m987():void { var l:Float = (-32767)+(-32768); }
	def m988():void { var l:Float = (-32767)+(65535); }
	def m989():void { var l:Float = (-32767)+(-65535); }
	def m990():void { var l:Float = (-32767)+(65536); }
	def m991():void { var l:Float = (-32767)+(-65536); }
	def m992():void { var l:Float = (-32767)+(16777216); }
	def m993():void { var l:Float = (-32767)+(-16777216); }
	def m994():void { var l:Float = (-32767)+(16777217); }
	def m995():void { var l:Float = (-32767)+(-16777217); }
	def m996():void { var l:Float = (-32767)+(2147483647); }
	def m997():void { var l:Float = (-32767)+(-2147483647); }
	def m998():void { var l:Float = (32768)+(w0); }
	def m999():void { var l:Float = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1000():void { var l:Float = (32768)+(w2); }
	def m1001():void { var l:Float = (32768)+(w3); }
	def m1002():void { var l:Float = (32768)+(w4); }
	def m1003():void { var l:Float = (32768)+(w5); }
	def m1004():void { var l:Float = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m1005():void { var l:Float = (32768)+(w7); }
	def m1006():void { var l:Float = (32768)+(w8); }  
	def m1007():void { var l:Float = (32768)+(w9); }  
	def m1008():void { var l:Float = (32768)+(0); }
	def m1009():void { var l:Float = (32768)+(-0); }
	def m1010():void { var l:Float = (32768)+(1.1f); }
	def m1011():void { var l:Float = (32768)+(-1.1f); }
	def m1012():void { var l:Float = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1013():void { var l:Float = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1014():void { var l:Float = (32768)+(127); }
	def m1015():void { var l:Float = (32768)+(-127); }
	def m1016():void { var l:Float = (32768)+(128); }
	def m1017():void { var l:Float = (32768)+(-128); }
	def m1018():void { var l:Float = (32768)+(255); }
	def m1019():void { var l:Float = (32768)+(-255); }
	def m1020():void { var l:Float = (32768)+(256); }
	def m1021():void { var l:Float = (32768)+(-256); }
	def m1022():void { var l:Float = (32768)+(32767); }
	def m1023():void { var l:Float = (32768)+(-32767); }
	def m1024():void { var l:Float = (32768)+(32768); }
	def m1025():void { var l:Float = (32768)+(-32768); }
	def m1026():void { var l:Float = (32768)+(65535); }
	def m1027():void { var l:Float = (32768)+(-65535); }
	def m1028():void { var l:Float = (32768)+(65536); }
	def m1029():void { var l:Float = (32768)+(-65536); }
	def m1030():void { var l:Float = (32768)+(16777216); }
	def m1031():void { var l:Float = (32768)+(-16777216); }
	def m1032():void { var l:Float = (32768)+(16777217); }
	def m1033():void { var l:Float = (32768)+(-16777217); }
	def m1034():void { var l:Float = (32768)+(2147483647); }
	def m1035():void { var l:Float = (32768)+(-2147483647); }
	def m1036():void { var l:Float = (-32768)+(w0); }
	def m1037():void { var l:Float = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1038():void { var l:Float = (-32768)+(w2); }
	def m1039():void { var l:Float = (-32768)+(w3); }
	def m1040():void { var l:Float = (-32768)+(w4); }
	def m1041():void { var l:Float = (-32768)+(w5); }
	def m1042():void { var l:Float = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m1043():void { var l:Float = (-32768)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m1044():void { var l:Float = (-32768)+(w8); }  
	def m1045():void { var l:Float = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m1046():void { var l:Float = (-32768)+(0); }
	def m1047():void { var l:Float = (-32768)+(-0); }
	def m1048():void { var l:Float = (-32768)+(1.1f); }
	def m1049():void { var l:Float = (-32768)+(-1.1f); }
	def m1050():void { var l:Float = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1051():void { var l:Float = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1052():void { var l:Float = (-32768)+(127); }
	def m1053():void { var l:Float = (-32768)+(-127); }
	def m1054():void { var l:Float = (-32768)+(128); }
	def m1055():void { var l:Float = (-32768)+(-128); }
	def m1056():void { var l:Float = (-32768)+(255); }
	def m1057():void { var l:Float = (-32768)+(-255); }
	def m1058():void { var l:Float = (-32768)+(256); }
	def m1059():void { var l:Float = (-32768)+(-256); }
	def m1060():void { var l:Float = (-32768)+(32767); }
	def m1061():void { var l:Float = (-32768)+(-32767); }
	def m1062():void { var l:Float = (-32768)+(32768); }
	def m1063():void { var l:Float = (-32768)+(-32768); }
	def m1064():void { var l:Float = (-32768)+(65535); }
	def m1065():void { var l:Float = (-32768)+(-65535); }
	def m1066():void { var l:Float = (-32768)+(65536); }
	def m1067():void { var l:Float = (-32768)+(-65536); }
	def m1068():void { var l:Float = (-32768)+(16777216); }
	def m1069():void { var l:Float = (-32768)+(-16777216); }
	def m1070():void { var l:Float = (-32768)+(16777217); }
	def m1071():void { var l:Float = (-32768)+(-16777217); }
	def m1072():void { var l:Float = (-32768)+(2147483647); }
	def m1073():void { var l:Float = (-32768)+(-2147483647); }
	def m1074():void { var l:Float = (65535)+(w0); }
	def m1075():void { var l:Float = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1076():void { var l:Float = (65535)+(w2); }
	def m1077():void { var l:Float = (65535)+(w3); }
	def m1078():void { var l:Float = (65535)+(w4); }
	def m1079():void { var l:Float = (65535)+(w5); }
	def m1080():void { var l:Float = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m1081():void { var l:Float = (65535)+(w7); }
	def m1082():void { var l:Float = (65535)+(w8); }  
	def m1083():void { var l:Float = (65535)+(w9); }  
	def m1084():void { var l:Float = (65535)+(0); }
	def m1085():void { var l:Float = (65535)+(-0); }
	def m1086():void { var l:Float = (65535)+(1.1f); }
	def m1087():void { var l:Float = (65535)+(-1.1f); }
	def m1088():void { var l:Float = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1089():void { var l:Float = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1090():void { var l:Float = (65535)+(127); }
	def m1091():void { var l:Float = (65535)+(-127); }
	def m1092():void { var l:Float = (65535)+(128); }
	def m1093():void { var l:Float = (65535)+(-128); }
	def m1094():void { var l:Float = (65535)+(255); }
	def m1095():void { var l:Float = (65535)+(-255); }
	def m1096():void { var l:Float = (65535)+(256); }
	def m1097():void { var l:Float = (65535)+(-256); }
	def m1098():void { var l:Float = (65535)+(32767); }
	def m1099():void { var l:Float = (65535)+(-32767); }
	def m1100():void { var l:Float = (65535)+(32768); }
	def m1101():void { var l:Float = (65535)+(-32768); }
	def m1102():void { var l:Float = (65535)+(65535); }
	def m1103():void { var l:Float = (65535)+(-65535); }
	def m1104():void { var l:Float = (65535)+(65536); }
	def m1105():void { var l:Float = (65535)+(-65536); }
	def m1106():void { var l:Float = (65535)+(16777216); }
	def m1107():void { var l:Float = (65535)+(-16777216); }
	def m1108():void { var l:Float = (65535)+(16777217); }
	def m1109():void { var l:Float = (65535)+(-16777217); }
	def m1110():void { var l:Float = (65535)+(2147483647); }
	def m1111():void { var l:Float = (65535)+(-2147483647); }
	def m1112():void { var l:Float = (-65535)+(w0); }
	def m1113():void { var l:Float = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1114():void { var l:Float = (-65535)+(w2); }
	def m1115():void { var l:Float = (-65535)+(w3); }
	def m1116():void { var l:Float = (-65535)+(w4); }
	def m1117():void { var l:Float = (-65535)+(w5); }
	def m1118():void { var l:Float = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m1119():void { var l:Float = (-65535)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m1120():void { var l:Float = (-65535)+(w8); }  
	def m1121():void { var l:Float = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m1122():void { var l:Float = (-65535)+(0); }
	def m1123():void { var l:Float = (-65535)+(-0); }
	def m1124():void { var l:Float = (-65535)+(1.1f); }
	def m1125():void { var l:Float = (-65535)+(-1.1f); }
	def m1126():void { var l:Float = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1127():void { var l:Float = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1128():void { var l:Float = (-65535)+(127); }
	def m1129():void { var l:Float = (-65535)+(-127); }
	def m1130():void { var l:Float = (-65535)+(128); }
	def m1131():void { var l:Float = (-65535)+(-128); }
	def m1132():void { var l:Float = (-65535)+(255); }
	def m1133():void { var l:Float = (-65535)+(-255); }
	def m1134():void { var l:Float = (-65535)+(256); }
	def m1135():void { var l:Float = (-65535)+(-256); }
	def m1136():void { var l:Float = (-65535)+(32767); }
	def m1137():void { var l:Float = (-65535)+(-32767); }
	def m1138():void { var l:Float = (-65535)+(32768); }
	def m1139():void { var l:Float = (-65535)+(-32768); }
	def m1140():void { var l:Float = (-65535)+(65535); }
	def m1141():void { var l:Float = (-65535)+(-65535); }
	def m1142():void { var l:Float = (-65535)+(65536); }
	def m1143():void { var l:Float = (-65535)+(-65536); }
	def m1144():void { var l:Float = (-65535)+(16777216); }
	def m1145():void { var l:Float = (-65535)+(-16777216); }
	def m1146():void { var l:Float = (-65535)+(16777217); }
	def m1147():void { var l:Float = (-65535)+(-16777217); }
	def m1148():void { var l:Float = (-65535)+(2147483647); }
	def m1149():void { var l:Float = (-65535)+(-2147483647); }
	def m1150():void { var l:Float = (65536)+(w0); }
	def m1151():void { var l:Float = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1152():void { var l:Float = (65536)+(w2); }
	def m1153():void { var l:Float = (65536)+(w3); }
	def m1154():void { var l:Float = (65536)+(w4); }
	def m1155():void { var l:Float = (65536)+(w5); }
	def m1156():void { var l:Float = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m1157():void { var l:Float = (65536)+(w7); }
	def m1158():void { var l:Float = (65536)+(w8); }  
	def m1159():void { var l:Float = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m1160():void { var l:Float = (65536)+(0); }
	def m1161():void { var l:Float = (65536)+(-0); }
	def m1162():void { var l:Float = (65536)+(1.1f); }
	def m1163():void { var l:Float = (65536)+(-1.1f); }
	def m1164():void { var l:Float = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1165():void { var l:Float = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1166():void { var l:Float = (65536)+(127); }
	def m1167():void { var l:Float = (65536)+(-127); }
	def m1168():void { var l:Float = (65536)+(128); }
	def m1169():void { var l:Float = (65536)+(-128); }
	def m1170():void { var l:Float = (65536)+(255); }
	def m1171():void { var l:Float = (65536)+(-255); }
	def m1172():void { var l:Float = (65536)+(256); }
	def m1173():void { var l:Float = (65536)+(-256); }
	def m1174():void { var l:Float = (65536)+(32767); }
	def m1175():void { var l:Float = (65536)+(-32767); }
	def m1176():void { var l:Float = (65536)+(32768); }
	def m1177():void { var l:Float = (65536)+(-32768); }
	def m1178():void { var l:Float = (65536)+(65535); }
	def m1179():void { var l:Float = (65536)+(-65535); }
	def m1180():void { var l:Float = (65536)+(65536); }
	def m1181():void { var l:Float = (65536)+(-65536); }
	def m1182():void { var l:Float = (65536)+(16777216); }
	def m1183():void { var l:Float = (65536)+(-16777216); }
	def m1184():void { var l:Float = (65536)+(16777217); }
	def m1185():void { var l:Float = (65536)+(-16777217); }
	def m1186():void { var l:Float = (65536)+(2147483647); }
	def m1187():void { var l:Float = (65536)+(-2147483647); }
	def m1188():void { var l:Float = (-65536)+(w0); }
	def m1189():void { var l:Float = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1190():void { var l:Float = (-65536)+(w2); }
	def m1191():void { var l:Float = (-65536)+(w3); }
	def m1192():void { var l:Float = (-65536)+(w4); }
	def m1193():void { var l:Float = (-65536)+(w5); }
	def m1194():void { var l:Float = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m1195():void { var l:Float = (-65536)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m1196():void { var l:Float = (-65536)+(w8); }  
	def m1197():void { var l:Float = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m1198():void { var l:Float = (-65536)+(0); }
	def m1199():void { var l:Float = (-65536)+(-0); }
	def m1200():void { var l:Float = (-65536)+(1.1f); }
	def m1201():void { var l:Float = (-65536)+(-1.1f); }
	def m1202():void { var l:Float = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1203():void { var l:Float = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1204():void { var l:Float = (-65536)+(127); }
	def m1205():void { var l:Float = (-65536)+(-127); }
	def m1206():void { var l:Float = (-65536)+(128); }
	def m1207():void { var l:Float = (-65536)+(-128); }
	def m1208():void { var l:Float = (-65536)+(255); }
	def m1209():void { var l:Float = (-65536)+(-255); }
	def m1210():void { var l:Float = (-65536)+(256); }
	def m1211():void { var l:Float = (-65536)+(-256); }
	def m1212():void { var l:Float = (-65536)+(32767); }
	def m1213():void { var l:Float = (-65536)+(-32767); }
	def m1214():void { var l:Float = (-65536)+(32768); }
	def m1215():void { var l:Float = (-65536)+(-32768); }
	def m1216():void { var l:Float = (-65536)+(65535); }
	def m1217():void { var l:Float = (-65536)+(-65535); }
	def m1218():void { var l:Float = (-65536)+(65536); }
	def m1219():void { var l:Float = (-65536)+(-65536); }
	def m1220():void { var l:Float = (-65536)+(16777216); }
	def m1221():void { var l:Float = (-65536)+(-16777216); }
	def m1222():void { var l:Float = (-65536)+(16777217); }
	def m1223():void { var l:Float = (-65536)+(-16777217); }
	def m1224():void { var l:Float = (-65536)+(2147483647); }
	def m1225():void { var l:Float = (-65536)+(-2147483647); }
	def m1226():void { var l:Float = (16777216)+(w0); }
	def m1227():void { var l:Float = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1228():void { var l:Float = (16777216)+(w2); }
	def m1229():void { var l:Float = (16777216)+(w3); }
	def m1230():void { var l:Float = (16777216)+(w4); }
	def m1231():void { var l:Float = (16777216)+(w5); }
	def m1232():void { var l:Float = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m1233():void { var l:Float = (16777216)+(w7); }
	def m1234():void { var l:Float = (16777216)+(w8); }  
	def m1235():void { var l:Float = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m1236():void { var l:Float = (16777216)+(0); }
	def m1237():void { var l:Float = (16777216)+(-0); }
	def m1238():void { var l:Float = (16777216)+(1.1f); }
	def m1239():void { var l:Float = (16777216)+(-1.1f); }
	def m1240():void { var l:Float = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1241():void { var l:Float = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1242():void { var l:Float = (16777216)+(127); }
	def m1243():void { var l:Float = (16777216)+(-127); }
	def m1244():void { var l:Float = (16777216)+(128); }
	def m1245():void { var l:Float = (16777216)+(-128); }
	def m1246():void { var l:Float = (16777216)+(255); }
	def m1247():void { var l:Float = (16777216)+(-255); }
	def m1248():void { var l:Float = (16777216)+(256); }
	def m1249():void { var l:Float = (16777216)+(-256); }
	def m1250():void { var l:Float = (16777216)+(32767); }
	def m1251():void { var l:Float = (16777216)+(-32767); }
	def m1252():void { var l:Float = (16777216)+(32768); }
	def m1253():void { var l:Float = (16777216)+(-32768); }
	def m1254():void { var l:Float = (16777216)+(65535); }
	def m1255():void { var l:Float = (16777216)+(-65535); }
	def m1256():void { var l:Float = (16777216)+(65536); }
	def m1257():void { var l:Float = (16777216)+(-65536); }
	def m1258():void { var l:Float = (16777216)+(16777216); }
	def m1259():void { var l:Float = (16777216)+(-16777216); }
	def m1260():void { var l:Float = (16777216)+(16777217); }
	def m1261():void { var l:Float = (16777216)+(-16777217); }
	def m1262():void { var l:Float = (16777216)+(2147483647); }
	def m1263():void { var l:Float = (16777216)+(-2147483647); }
	def m1264():void { var l:Float = (-16777216)+(w0); }
	def m1265():void { var l:Float = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1266():void { var l:Float = (-16777216)+(w2); }
	def m1267():void { var l:Float = (-16777216)+(w3); }
	def m1268():void { var l:Float = (-16777216)+(w4); }
	def m1269():void { var l:Float = (-16777216)+(w5); }
	def m1270():void { var l:Float = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m1271():void { var l:Float = (-16777216)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m1272():void { var l:Float = (-16777216)+(w8); }  
	def m1273():void { var l:Float = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m1274():void { var l:Float = (-16777216)+(0); }
	def m1275():void { var l:Float = (-16777216)+(-0); }
	def m1276():void { var l:Float = (-16777216)+(1.1f); }
	def m1277():void { var l:Float = (-16777216)+(-1.1f); }
	def m1278():void { var l:Float = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1279():void { var l:Float = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1280():void { var l:Float = (-16777216)+(127); }
	def m1281():void { var l:Float = (-16777216)+(-127); }
	def m1282():void { var l:Float = (-16777216)+(128); }
	def m1283():void { var l:Float = (-16777216)+(-128); }
	def m1284():void { var l:Float = (-16777216)+(255); }
	def m1285():void { var l:Float = (-16777216)+(-255); }
	def m1286():void { var l:Float = (-16777216)+(256); }
	def m1287():void { var l:Float = (-16777216)+(-256); }
	def m1288():void { var l:Float = (-16777216)+(32767); }
	def m1289():void { var l:Float = (-16777216)+(-32767); }
	def m1290():void { var l:Float = (-16777216)+(32768); }
	def m1291():void { var l:Float = (-16777216)+(-32768); }
	def m1292():void { var l:Float = (-16777216)+(65535); }
	def m1293():void { var l:Float = (-16777216)+(-65535); }
	def m1294():void { var l:Float = (-16777216)+(65536); }
	def m1295():void { var l:Float = (-16777216)+(-65536); }
	def m1296():void { var l:Float = (-16777216)+(16777216); }
	def m1297():void { var l:Float = (-16777216)+(-16777216); }
	def m1298():void { var l:Float = (-16777216)+(16777217); }
	def m1299():void { var l:Float = (-16777216)+(-16777217); }
	def m1300():void { var l:Float = (-16777216)+(2147483647); }
	def m1301():void { var l:Float = (-16777216)+(-2147483647); }
	def m1302():void { var l:Float = (16777217)+(w0); }
	def m1303():void { var l:Float = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1304():void { var l:Float = (16777217)+(w2); }
	def m1305():void { var l:Float = (16777217)+(w3); }
	def m1306():void { var l:Float = (16777217)+(w4); }
	def m1307():void { var l:Float = (16777217)+(w5); }
	def m1308():void { var l:Float = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m1309():void { var l:Float = (16777217)+(w7); }
	def m1310():void { var l:Float = (16777217)+(w8); }  
	def m1311():void { var l:Float = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m1312():void { var l:Float = (16777217)+(0); }
	def m1313():void { var l:Float = (16777217)+(-0); }
	def m1314():void { var l:Float = (16777217)+(1.1f); }
	def m1315():void { var l:Float = (16777217)+(-1.1f); }
	def m1316():void { var l:Float = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1317():void { var l:Float = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1318():void { var l:Float = (16777217)+(127); }
	def m1319():void { var l:Float = (16777217)+(-127); }
	def m1320():void { var l:Float = (16777217)+(128); }
	def m1321():void { var l:Float = (16777217)+(-128); }
	def m1322():void { var l:Float = (16777217)+(255); }
	def m1323():void { var l:Float = (16777217)+(-255); }
	def m1324():void { var l:Float = (16777217)+(256); }
	def m1325():void { var l:Float = (16777217)+(-256); }
	def m1326():void { var l:Float = (16777217)+(32767); }
	def m1327():void { var l:Float = (16777217)+(-32767); }
	def m1328():void { var l:Float = (16777217)+(32768); }
	def m1329():void { var l:Float = (16777217)+(-32768); }
	def m1330():void { var l:Float = (16777217)+(65535); }
	def m1331():void { var l:Float = (16777217)+(-65535); }
	def m1332():void { var l:Float = (16777217)+(65536); }
	def m1333():void { var l:Float = (16777217)+(-65536); }
	def m1334():void { var l:Float = (16777217)+(16777216); }
	def m1335():void { var l:Float = (16777217)+(-16777216); }
	def m1336():void { var l:Float = (16777217)+(16777217); }
	def m1337():void { var l:Float = (16777217)+(-16777217); }
	def m1338():void { var l:Float = (16777217)+(2147483647); }
	def m1339():void { var l:Float = (16777217)+(-2147483647); }
	def m1340():void { var l:Float = (-16777217)+(w0); }
	def m1341():void { var l:Float = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1342():void { var l:Float = (-16777217)+(w2); }
	def m1343():void { var l:Float = (-16777217)+(w3); }
	def m1344():void { var l:Float = (-16777217)+(w4); }
	def m1345():void { var l:Float = (-16777217)+(w5); }
	def m1346():void { var l:Float = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m1347():void { var l:Float = (-16777217)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m1348():void { var l:Float = (-16777217)+(w8); }  
	def m1349():void { var l:Float = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m1350():void { var l:Float = (-16777217)+(0); }
	def m1351():void { var l:Float = (-16777217)+(-0); }
	def m1352():void { var l:Float = (-16777217)+(1.1f); }
	def m1353():void { var l:Float = (-16777217)+(-1.1f); }
	def m1354():void { var l:Float = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1355():void { var l:Float = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1356():void { var l:Float = (-16777217)+(127); }
	def m1357():void { var l:Float = (-16777217)+(-127); }
	def m1358():void { var l:Float = (-16777217)+(128); }
	def m1359():void { var l:Float = (-16777217)+(-128); }
	def m1360():void { var l:Float = (-16777217)+(255); }
	def m1361():void { var l:Float = (-16777217)+(-255); }
	def m1362():void { var l:Float = (-16777217)+(256); }
	def m1363():void { var l:Float = (-16777217)+(-256); }
	def m1364():void { var l:Float = (-16777217)+(32767); }
	def m1365():void { var l:Float = (-16777217)+(-32767); }
	def m1366():void { var l:Float = (-16777217)+(32768); }
	def m1367():void { var l:Float = (-16777217)+(-32768); }
	def m1368():void { var l:Float = (-16777217)+(65535); }
	def m1369():void { var l:Float = (-16777217)+(-65535); }
	def m1370():void { var l:Float = (-16777217)+(65536); }
	def m1371():void { var l:Float = (-16777217)+(-65536); }
	def m1372():void { var l:Float = (-16777217)+(16777216); }
	def m1373():void { var l:Float = (-16777217)+(-16777216); }
	def m1374():void { var l:Float = (-16777217)+(16777217); }
	def m1375():void { var l:Float = (-16777217)+(-16777217); }
	def m1376():void { var l:Float = (-16777217)+(2147483647); }
	def m1377():void { var l:Float = (-16777217)+(-2147483647); }
	def m1378():void { var l:Float = (2147483647)+(w0); }
	def m1379():void { var l:Float = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1380():void { var l:Float = (2147483647)+(w2); }
	def m1381():void { var l:Float = (2147483647)+(w3); }
	def m1382():void { var l:Float = (2147483647)+(w4); }
	def m1383():void { var l:Float = (2147483647)+(w5); }
	def m1384():void { var l:Float = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m1385():void { var l:Float = (2147483647)+(w7); }
	def m1386():void { var l:Float = (2147483647)+(w8); }  
	def m1387():void { var l:Float = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m1388():void { var l:Float = (2147483647)+(0); }
	def m1389():void { var l:Float = (2147483647)+(-0); }
	def m1390():void { var l:Float = (2147483647)+(1.1f); }
	def m1391():void { var l:Float = (2147483647)+(-1.1f); }
	def m1392():void { var l:Float = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1393():void { var l:Float = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1394():void { var l:Float = (2147483647)+(127); }
	def m1395():void { var l:Float = (2147483647)+(-127); }
	def m1396():void { var l:Float = (2147483647)+(128); }
	def m1397():void { var l:Float = (2147483647)+(-128); }
	def m1398():void { var l:Float = (2147483647)+(255); }
	def m1399():void { var l:Float = (2147483647)+(-255); }
	def m1400():void { var l:Float = (2147483647)+(256); }
	def m1401():void { var l:Float = (2147483647)+(-256); }
	def m1402():void { var l:Float = (2147483647)+(32767); }
	def m1403():void { var l:Float = (2147483647)+(-32767); }
	def m1404():void { var l:Float = (2147483647)+(32768); }
	def m1405():void { var l:Float = (2147483647)+(-32768); }
	def m1406():void { var l:Float = (2147483647)+(65535); }
	def m1407():void { var l:Float = (2147483647)+(-65535); }
	def m1408():void { var l:Float = (2147483647)+(65536); }
	def m1409():void { var l:Float = (2147483647)+(-65536); }
	def m1410():void { var l:Float = (2147483647)+(16777216); }
	def m1411():void { var l:Float = (2147483647)+(-16777216); }
	def m1412():void { var l:Float = (2147483647)+(16777217); }
	def m1413():void { var l:Float = (2147483647)+(-16777217); }
	def m1414():void { var l:Float = (2147483647)+(2147483647); }
	def m1415():void { var l:Float = (2147483647)+(-2147483647); }
	def m1416():void { var l:Float = (-2147483647)+(w0); }
	def m1417():void { var l:Float = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1418():void { var l:Float = (-2147483647)+(w2); }
	def m1419():void { var l:Float = (-2147483647)+(w3); }
	def m1420():void { var l:Float = (-2147483647)+(w4); }
	def m1421():void { var l:Float = (-2147483647)+(w5); }
	def m1422():void { var l:Float = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m1423():void { var l:Float = (-2147483647)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m1424():void { var l:Float = (-2147483647)+(w8); }  
	def m1425():void { var l:Float = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m1426():void { var l:Float = (-2147483647)+(0); }
	def m1427():void { var l:Float = (-2147483647)+(-0); }
	def m1428():void { var l:Float = (-2147483647)+(1.1f); }
	def m1429():void { var l:Float = (-2147483647)+(-1.1f); }
	def m1430():void { var l:Float = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1431():void { var l:Float = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m1432():void { var l:Float = (-2147483647)+(127); }
	def m1433():void { var l:Float = (-2147483647)+(-127); }
	def m1434():void { var l:Float = (-2147483647)+(128); }
	def m1435():void { var l:Float = (-2147483647)+(-128); }
	def m1436():void { var l:Float = (-2147483647)+(255); }
	def m1437():void { var l:Float = (-2147483647)+(-255); }
	def m1438():void { var l:Float = (-2147483647)+(256); }
	def m1439():void { var l:Float = (-2147483647)+(-256); }
	def m1440():void { var l:Float = (-2147483647)+(32767); }
	def m1441():void { var l:Float = (-2147483647)+(-32767); }
	def m1442():void { var l:Float = (-2147483647)+(32768); }
	def m1443():void { var l:Float = (-2147483647)+(-32768); }
	def m1444():void { var l:Float = (-2147483647)+(65535); }
	def m1445():void { var l:Float = (-2147483647)+(-65535); }
	def m1446():void { var l:Float = (-2147483647)+(65536); }
	def m1447():void { var l:Float = (-2147483647)+(-65536); }
	def m1448():void { var l:Float = (-2147483647)+(16777216); }
	def m1449():void { var l:Float = (-2147483647)+(-16777216); }
	def m1450():void { var l:Float = (-2147483647)+(16777217); }
	def m1451():void { var l:Float = (-2147483647)+(-16777217); }
	def m1452():void { var l:Float = (-2147483647)+(2147483647); }
	def m1453():void { var l:Float = (-2147483647)+(-2147483647); }
	def m1454():void { var l:Double = (w0)+(w0); }
	def m1455():void { var l:Double = (w0)+(w1); }
	def m1456():void { var l:Double = (w0)+(w2); }
	def m1457():void { var l:Double = (w0)+(w3); }
	def m1458():void { var l:Double = (w0)+(w4); }
	def m1459():void { var l:Double = (w0)+(w5); }
	def m1460():void { var l:Double = (w0)+(w6); }
	def m1461():void { var l:Double = (w0)+(w7); }
	def m1462():void { var l:Double = (w0)+(w8); }
	def m1463():void { var l:Double = (w0)+(w9); }
	def m1464():void { var l:Double = (w0)+(0); }
	def m1465():void { var l:Double = (w0)+(-0); }
	def m1466():void { var l:Double = (w0)+(1.1f); }
	def m1467():void { var l:Double = (w0)+(-1.1f); }
	def m1468():void { var l:Double = (w0)+(2.2); }
	def m1469():void { var l:Double = (w0)+(-2.2); }
	def m1470():void { var l:Double = (w0)+(127); }
	def m1471():void { var l:Double = (w0)+(-127); }
	def m1472():void { var l:Double = (w0)+(128); }
	def m1473():void { var l:Double = (w0)+(-128); }
	def m1474():void { var l:Double = (w0)+(255); }
	def m1475():void { var l:Double = (w0)+(-255); }
	def m1476():void { var l:Double = (w0)+(256); }
	def m1477():void { var l:Double = (w0)+(-256); }
	def m1478():void { var l:Double = (w0)+(32767); }
	def m1479():void { var l:Double = (w0)+(-32767); }
	def m1480():void { var l:Double = (w0)+(32768); }
	def m1481():void { var l:Double = (w0)+(-32768); }
	def m1482():void { var l:Double = (w0)+(65535); }
	def m1483():void { var l:Double = (w0)+(-65535); }
	def m1484():void { var l:Double = (w0)+(65536); }
	def m1485():void { var l:Double = (w0)+(-65536); }
	def m1486():void { var l:Double = (w0)+(16777216); }
	def m1487():void { var l:Double = (w0)+(-16777216); }
	def m1488():void { var l:Double = (w0)+(16777217); }
	def m1489():void { var l:Double = (w0)+(-16777217); }
	def m1490():void { var l:Double = (w0)+(2147483647); }
	def m1491():void { var l:Double = (w0)+(-2147483647); }
	def m1492():void { var l:Double = (w1)+(w0); }
	def m1493():void { var l:Double = (w1)+(w1); }
	def m1494():void { var l:Double = (w1)+(w2); }
	def m1495():void { var l:Double = (w1)+(w3); }
	def m1496():void { var l:Double = (w1)+(w4); }
	def m1497():void { var l:Double = (w1)+(w5); }
	def m1498():void { var l:Double = (w1)+(w6); }
	def m1499():void { var l:Double = (w1)+(w7); }
	def m1500():void { var l:Double = (w1)+(w8); }
	def m1501():void { var l:Double = (w1)+(w9); }
	def m1502():void { var l:Double = (w1)+(0); }
	def m1503():void { var l:Double = (w1)+(-0); }
	def m1504():void { var l:Double = (w1)+(1.1f); }
	def m1505():void { var l:Double = (w1)+(-1.1f); }
	def m1506():void { var l:Double = (w1)+(2.2); }
	def m1507():void { var l:Double = (w1)+(-2.2); }
	def m1508():void { var l:Double = (w1)+(127); }
	def m1509():void { var l:Double = (w1)+(-127); }
	def m1510():void { var l:Double = (w1)+(128); }
	def m1511():void { var l:Double = (w1)+(-128); }
	def m1512():void { var l:Double = (w1)+(255); }
	def m1513():void { var l:Double = (w1)+(-255); }
	def m1514():void { var l:Double = (w1)+(256); }
	def m1515():void { var l:Double = (w1)+(-256); }
	def m1516():void { var l:Double = (w1)+(32767); }
	def m1517():void { var l:Double = (w1)+(-32767); }
	def m1518():void { var l:Double = (w1)+(32768); }
	def m1519():void { var l:Double = (w1)+(-32768); }
	def m1520():void { var l:Double = (w1)+(65535); }
	def m1521():void { var l:Double = (w1)+(-65535); }
	def m1522():void { var l:Double = (w1)+(65536); }
	def m1523():void { var l:Double = (w1)+(-65536); }
	def m1524():void { var l:Double = (w1)+(16777216); }
	def m1525():void { var l:Double = (w1)+(-16777216); }
	def m1526():void { var l:Double = (w1)+(16777217); }
	def m1527():void { var l:Double = (w1)+(-16777217); }
	def m1528():void { var l:Double = (w1)+(2147483647); }
	def m1529():void { var l:Double = (w1)+(-2147483647); }
	def m1530():void { var l:Double = (w2)+(w0); }
	def m1531():void { var l:Double = (w2)+(w1); }
	def m1532():void { var l:Double = (w2)+(w2); }
	def m1533():void { var l:Double = (w2)+(w3); }
	def m1534():void { var l:Double = (w2)+(w4); }
	def m1535():void { var l:Double = (w2)+(w5); }
	def m1536():void { var l:Double = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m1537():void { var l:Double = (w2)+(w7); }  
	def m1538():void { var l:Double = (w2)+(w8); }  
	def m1539():void { var l:Double = (w2)+(w9); }  
	def m1540():void { var l:Double = (w2)+(0); }
	def m1541():void { var l:Double = (w2)+(-0); }
	def m1542():void { var l:Double = (w2)+(1.1f); }
	def m1543():void { var l:Double = (w2)+(-1.1f); }
	def m1544():void { var l:Double = (w2)+(2.2); }
	def m1545():void { var l:Double = (w2)+(-2.2); }
	def m1546():void { var l:Double = (w2)+(127); }
	def m1547():void { var l:Double = (w2)+(-127); }
	def m1548():void { var l:Double = (w2)+(128); }
	def m1549():void { var l:Double = (w2)+(-128); }
	def m1550():void { var l:Double = (w2)+(255); }
	def m1551():void { var l:Double = (w2)+(-255); }
	def m1552():void { var l:Double = (w2)+(256); }
	def m1553():void { var l:Double = (w2)+(-256); }
	def m1554():void { var l:Double = (w2)+(32767); }
	def m1555():void { var l:Double = (w2)+(-32767); }
	def m1556():void { var l:Double = (w2)+(32768); }
	def m1557():void { var l:Double = (w2)+(-32768); }
	def m1558():void { var l:Double = (w2)+(65535); }
	def m1559():void { var l:Double = (w2)+(-65535); }
	def m1560():void { var l:Double = (w2)+(65536); }
	def m1561():void { var l:Double = (w2)+(-65536); }
	def m1562():void { var l:Double = (w2)+(16777216); }
	def m1563():void { var l:Double = (w2)+(-16777216); }
	def m1564():void { var l:Double = (w2)+(16777217); }
	def m1565():void { var l:Double = (w2)+(-16777217); }
	def m1566():void { var l:Double = (w2)+(2147483647); }
	def m1567():void { var l:Double = (w2)+(-2147483647); }
	def m1568():void { var l:Double = (w3)+(w0); }
	def m1569():void { var l:Double = (w3)+(w1); }
	def m1570():void { var l:Double = (w3)+(w2); }
	def m1571():void { var l:Double = (w3)+(w3); }
	def m1572():void { var l:Double = (w3)+(w4); }
	def m1573():void { var l:Double = (w3)+(w5); }
	def m1574():void { var l:Double = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m1575():void { var l:Double = (w3)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m1576():void { var l:Double = (w3)+(w8); }  
	def m1577():void { var l:Double = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m1578():void { var l:Double = (w3)+(0); }
	def m1579():void { var l:Double = (w3)+(-0); }
	def m1580():void { var l:Double = (w3)+(1.1f); }
	def m1581():void { var l:Double = (w3)+(-1.1f); }
	def m1582():void { var l:Double = (w3)+(2.2); }
	def m1583():void { var l:Double = (w3)+(-2.2); }
	def m1584():void { var l:Double = (w3)+(127); }
	def m1585():void { var l:Double = (w3)+(-127); }
	def m1586():void { var l:Double = (w3)+(128); }
	def m1587():void { var l:Double = (w3)+(-128); }
	def m1588():void { var l:Double = (w3)+(255); }
	def m1589():void { var l:Double = (w3)+(-255); }
	def m1590():void { var l:Double = (w3)+(256); }
	def m1591():void { var l:Double = (w3)+(-256); }
	def m1592():void { var l:Double = (w3)+(32767); }
	def m1593():void { var l:Double = (w3)+(-32767); }
	def m1594():void { var l:Double = (w3)+(32768); }
	def m1595():void { var l:Double = (w3)+(-32768); }
	def m1596():void { var l:Double = (w3)+(65535); }
	def m1597():void { var l:Double = (w3)+(-65535); }
	def m1598():void { var l:Double = (w3)+(65536); }
	def m1599():void { var l:Double = (w3)+(-65536); }
	def m1600():void { var l:Double = (w3)+(16777216); }
	def m1601():void { var l:Double = (w3)+(-16777216); }
	def m1602():void { var l:Double = (w3)+(16777217); }
	def m1603():void { var l:Double = (w3)+(-16777217); }
	def m1604():void { var l:Double = (w3)+(2147483647); }
	def m1605():void { var l:Double = (w3)+(-2147483647); }
	def m1606():void { var l:Double = (w4)+(w0); }
	def m1607():void { var l:Double = (w4)+(w1); }
	def m1608():void { var l:Double = (w4)+(w2); }
	def m1609():void { var l:Double = (w4)+(w3); }
	def m1610():void { var l:Double = (w4)+(w4); }
	def m1611():void { var l:Double = (w4)+(w5); }
	def m1612():void { var l:Double = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m1613():void { var l:Double = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m1614():void { var l:Double = (w4)+(w8); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m1615():void { var l:Double = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m1616():void { var l:Double = (w4)+(0); }
	def m1617():void { var l:Double = (w4)+(-0); }
	def m1618():void { var l:Double = (w4)+(1.1f); }
	def m1619():void { var l:Double = (w4)+(-1.1f); }
	def m1620():void { var l:Double = (w4)+(2.2); }
	def m1621():void { var l:Double = (w4)+(-2.2); }
	def m1622():void { var l:Double = (w4)+(127); }
	def m1623():void { var l:Double = (w4)+(-127); }
	def m1624():void { var l:Double = (w4)+(128); }
	def m1625():void { var l:Double = (w4)+(-128); }
	def m1626():void { var l:Double = (w4)+(255); }
	def m1627():void { var l:Double = (w4)+(-255); }
	def m1628():void { var l:Double = (w4)+(256); }
	def m1629():void { var l:Double = (w4)+(-256); }
	def m1630():void { var l:Double = (w4)+(32767); }
	def m1631():void { var l:Double = (w4)+(-32767); }
	def m1632():void { var l:Double = (w4)+(32768); }
	def m1633():void { var l:Double = (w4)+(-32768); }
	def m1634():void { var l:Double = (w4)+(65535); }
	def m1635():void { var l:Double = (w4)+(-65535); }
	def m1636():void { var l:Double = (w4)+(65536); }
	def m1637():void { var l:Double = (w4)+(-65536); }
	def m1638():void { var l:Double = (w4)+(16777216); }
	def m1639():void { var l:Double = (w4)+(-16777216); }
	def m1640():void { var l:Double = (w4)+(16777217); }
	def m1641():void { var l:Double = (w4)+(-16777217); }
	def m1642():void { var l:Double = (w4)+(2147483647); }
	def m1643():void { var l:Double = (w4)+(-2147483647); }
	def m1644():void { var l:Double = (w5)+(w0); }
	def m1645():void { var l:Double = (w5)+(w1); }
	def m1646():void { var l:Double = (w5)+(w2); }
	def m1647():void { var l:Double = (w5)+(w3); }
	def m1648():void { var l:Double = (w5)+(w4); }
	def m1649():void { var l:Double = (w5)+(w5); }
	def m1650():void { var l:Double = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m1651():void { var l:Double = (w5)+(w7); }  
	def m1652():void { var l:Double = (w5)+(w8); }  
	def m1653():void { var l:Double = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m1654():void { var l:Double = (w5)+(0); }
	def m1655():void { var l:Double = (w5)+(-0); }
	def m1656():void { var l:Double = (w5)+(1.1f); }
	def m1657():void { var l:Double = (w5)+(-1.1f); }
	def m1658():void { var l:Double = (w5)+(2.2); }
	def m1659():void { var l:Double = (w5)+(-2.2); }
	def m1660():void { var l:Double = (w5)+(127); }
	def m1661():void { var l:Double = (w5)+(-127); }
	def m1662():void { var l:Double = (w5)+(128); }
	def m1663():void { var l:Double = (w5)+(-128); }
	def m1664():void { var l:Double = (w5)+(255); }
	def m1665():void { var l:Double = (w5)+(-255); }
	def m1666():void { var l:Double = (w5)+(256); }
	def m1667():void { var l:Double = (w5)+(-256); }
	def m1668():void { var l:Double = (w5)+(32767); }
	def m1669():void { var l:Double = (w5)+(-32767); }
	def m1670():void { var l:Double = (w5)+(32768); }
	def m1671():void { var l:Double = (w5)+(-32768); }
	def m1672():void { var l:Double = (w5)+(65535); }
	def m1673():void { var l:Double = (w5)+(-65535); }
	def m1674():void { var l:Double = (w5)+(65536); }
	def m1675():void { var l:Double = (w5)+(-65536); }
	def m1676():void { var l:Double = (w5)+(16777216); }
	def m1677():void { var l:Double = (w5)+(-16777216); }
	def m1678():void { var l:Double = (w5)+(16777217); }
	def m1679():void { var l:Double = (w5)+(-16777217); }
	def m1680():void { var l:Double = (w5)+(2147483647); }
	def m1681():void { var l:Double = (w5)+(-2147483647); }
	def m1682():void { var l:Double = (w6)+(w0); }
	def m1683():void { var l:Double = (w6)+(w1); }
	def m1684():void { var l:Double = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m1685():void { var l:Double = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m1686():void { var l:Double = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m1687():void { var l:Double = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m1688():void { var l:Double = (w6)+(w6); }
	def m1689():void { var l:Double = (w6)+(w7); }  
	def m1690():void { var l:Double = (w6)+(w8); }  
	def m1691():void { var l:Double = (w6)+(w9); }  
	def m1692():void { var l:Double = (w6)+(0); }  
	def m1693():void { var l:Double = (w6)+(-0); }  
	def m1694():void { var l:Double = (w6)+(1.1f); }
	def m1695():void { var l:Double = (w6)+(-1.1f); }
	def m1696():void { var l:Double = (w6)+(2.2); }
	def m1697():void { var l:Double = (w6)+(-2.2); }
	def m1698():void { var l:Double = (w6)+(127); }  
	def m1699():void { var l:Double = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m1700():void { var l:Double = (w6)+(128); }  
	def m1701():void { var l:Double = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m1702():void { var l:Double = (w6)+(255); }  
	def m1703():void { var l:Double = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m1704():void { var l:Double = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m1705():void { var l:Double = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m1706():void { var l:Double = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m1707():void { var l:Double = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m1708():void { var l:Double = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m1709():void { var l:Double = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m1710():void { var l:Double = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m1711():void { var l:Double = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m1712():void { var l:Double = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m1713():void { var l:Double = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m1714():void { var l:Double = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m1715():void { var l:Double = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m1716():void { var l:Double = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m1717():void { var l:Double = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m1718():void { var l:Double = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m1719():void { var l:Double = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m1720():void { var l:Double = (w7)+(w0); }
	def m1721():void { var l:Double = (w7)+(w1); }
	def m1722():void { var l:Double = (w7)+(w2); }  
	def m1723():void { var l:Double = (w7)+(w3); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m1724():void { var l:Double = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m1725():void { var l:Double = (w7)+(w5); }  
	def m1726():void { var l:Double = (w7)+(w6); }  
	def m1727():void { var l:Double = (w7)+(w7); }
	def m1728():void { var l:Double = (w7)+(w8); }  
	def m1729():void { var l:Double = (w7)+(w9); }  
	def m1730():void { var l:Double = (w7)+(0); }
	def m1731():void { var l:Double = (w7)+(-0); }
	def m1732():void { var l:Double = (w7)+(1.1f); }
	def m1733():void { var l:Double = (w7)+(-1.1f); }
	def m1734():void { var l:Double = (w7)+(2.2); }
	def m1735():void { var l:Double = (w7)+(-2.2); }
	def m1736():void { var l:Double = (w7)+(127); }
	def m1737():void { var l:Double = (w7)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m1738():void { var l:Double = (w7)+(128); }
	def m1739():void { var l:Double = (w7)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m1740():void { var l:Double = (w7)+(255); }
	def m1741():void { var l:Double = (w7)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m1742():void { var l:Double = (w7)+(256); }
	def m1743():void { var l:Double = (w7)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m1744():void { var l:Double = (w7)+(32767); }
	def m1745():void { var l:Double = (w7)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m1746():void { var l:Double = (w7)+(32768); }
	def m1747():void { var l:Double = (w7)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m1748():void { var l:Double = (w7)+(65535); }
	def m1749():void { var l:Double = (w7)+(-65535); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m1750():void { var l:Double = (w7)+(65536); }
	def m1751():void { var l:Double = (w7)+(-65536); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m1752():void { var l:Double = (w7)+(16777216); }
	def m1753():void { var l:Double = (w7)+(-16777216); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m1754():void { var l:Double = (w7)+(16777217); }
	def m1755():void { var l:Double = (w7)+(-16777217); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m1756():void { var l:Double = (w7)+(2147483647); }
	def m1757():void { var l:Double = (w7)+(-2147483647); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m1758():void { var l:Double = (w8)+(w0); }
	def m1759():void { var l:Double = (w8)+(w1); }
	def m1760():void { var l:Double = (w8)+(w2); }  
	def m1761():void { var l:Double = (w8)+(w3); }  
	def m1762():void { var l:Double = (w8)+(w4); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m1763():void { var l:Double = (w8)+(w5); }  
	def m1764():void { var l:Double = (w8)+(w6); }  
	def m1765():void { var l:Double = (w8)+(w7); }  
	def m1766():void { var l:Double = (w8)+(w8); }
	def m1767():void { var l:Double = (w8)+(w9); }  
	def m1768():void { var l:Double = (w8)+(0); }  
	def m1769():void { var l:Double = (w8)+(-0); }  
	def m1770():void { var l:Double = (w8)+(1.1f); }
	def m1771():void { var l:Double = (w8)+(-1.1f); }
	def m1772():void { var l:Double = (w8)+(2.2); }
	def m1773():void { var l:Double = (w8)+(-2.2); }
	def m1774():void { var l:Double = (w8)+(127); }  
	def m1775():void { var l:Double = (w8)+(-127); }  
	def m1776():void { var l:Double = (w8)+(128); }  
	def m1777():void { var l:Double = (w8)+(-128); }  
	def m1778():void { var l:Double = (w8)+(255); }  
	def m1779():void { var l:Double = (w8)+(-255); }  
	def m1780():void { var l:Double = (w8)+(256); }  
	def m1781():void { var l:Double = (w8)+(-256); }  
	def m1782():void { var l:Double = (w8)+(32767); }  
	def m1783():void { var l:Double = (w8)+(-32767); }  
	def m1784():void { var l:Double = (w8)+(32768); }  
	def m1785():void { var l:Double = (w8)+(-32768); }  
	def m1786():void { var l:Double = (w8)+(65535); }  
	def m1787():void { var l:Double = (w8)+(-65535); }  
	def m1788():void { var l:Double = (w8)+(65536); }  
	def m1789():void { var l:Double = (w8)+(-65536); }  
	def m1790():void { var l:Double = (w8)+(16777216); }  
	def m1791():void { var l:Double = (w8)+(-16777216); }  
	def m1792():void { var l:Double = (w8)+(16777217); }  
	def m1793():void { var l:Double = (w8)+(-16777217); }  
	def m1794():void { var l:Double = (w8)+(2147483647); }  
	def m1795():void { var l:Double = (w8)+(-2147483647); }  
	def m1796():void { var l:Double = (w9)+(w0); }
	def m1797():void { var l:Double = (w9)+(w1); }
	def m1798():void { var l:Double = (w9)+(w2); }  
	def m1799():void { var l:Double = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m1800():void { var l:Double = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m1801():void { var l:Double = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m1802():void { var l:Double = (w9)+(w6); }  
	def m1803():void { var l:Double = (w9)+(w7); }  
	def m1804():void { var l:Double = (w9)+(w8); }  
	def m1805():void { var l:Double = (w9)+(w9); }
	def m1806():void { var l:Double = (w9)+(0); }  
	def m1807():void { var l:Double = (w9)+(-0); }  
	def m1808():void { var l:Double = (w9)+(1.1f); }
	def m1809():void { var l:Double = (w9)+(-1.1f); }
	def m1810():void { var l:Double = (w9)+(2.2); }
	def m1811():void { var l:Double = (w9)+(-2.2); }
	def m1812():void { var l:Double = (w9)+(127); }  
	def m1813():void { var l:Double = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m1814():void { var l:Double = (w9)+(128); }  
	def m1815():void { var l:Double = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m1816():void { var l:Double = (w9)+(255); }  
	def m1817():void { var l:Double = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m1818():void { var l:Double = (w9)+(256); }  
	def m1819():void { var l:Double = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m1820():void { var l:Double = (w9)+(32767); }  
	def m1821():void { var l:Double = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m1822():void { var l:Double = (w9)+(32768); }  
	def m1823():void { var l:Double = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m1824():void { var l:Double = (w9)+(65535); }  
	def m1825():void { var l:Double = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m1826():void { var l:Double = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m1827():void { var l:Double = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m1828():void { var l:Double = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m1829():void { var l:Double = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m1830():void { var l:Double = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m1831():void { var l:Double = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m1832():void { var l:Double = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m1833():void { var l:Double = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m1834():void { var l:Double = (0)+(w0); }
	def m1835():void { var l:Double = (0)+(w1); }
	def m1836():void { var l:Double = (0)+(w2); }
	def m1837():void { var l:Double = (0)+(w3); }
	def m1838():void { var l:Double = (0)+(w4); }
	def m1839():void { var l:Double = (0)+(w5); }
	def m1840():void { var l:Double = (0)+(w6); }  
	def m1841():void { var l:Double = (0)+(w7); }
	def m1842():void { var l:Double = (0)+(w8); }  
	def m1843():void { var l:Double = (0)+(w9); }  
	def m1844():void { var l:Double = (0)+(0); }
	def m1845():void { var l:Double = (0)+(-0); }
	def m1846():void { var l:Double = (0)+(1.1f); }
	def m1847():void { var l:Double = (0)+(-1.1f); }
	def m1848():void { var l:Double = (0)+(2.2); }
	def m1849():void { var l:Double = (0)+(-2.2); }
	def m1850():void { var l:Double = (0)+(127); }
	def m1851():void { var l:Double = (0)+(-127); }
	def m1852():void { var l:Double = (0)+(128); }
	def m1853():void { var l:Double = (0)+(-128); }
	def m1854():void { var l:Double = (0)+(255); }
	def m1855():void { var l:Double = (0)+(-255); }
	def m1856():void { var l:Double = (0)+(256); }
	def m1857():void { var l:Double = (0)+(-256); }
	def m1858():void { var l:Double = (0)+(32767); }
	def m1859():void { var l:Double = (0)+(-32767); }
	def m1860():void { var l:Double = (0)+(32768); }
	def m1861():void { var l:Double = (0)+(-32768); }
	def m1862():void { var l:Double = (0)+(65535); }
	def m1863():void { var l:Double = (0)+(-65535); }
	def m1864():void { var l:Double = (0)+(65536); }
	def m1865():void { var l:Double = (0)+(-65536); }
	def m1866():void { var l:Double = (0)+(16777216); }
	def m1867():void { var l:Double = (0)+(-16777216); }
	def m1868():void { var l:Double = (0)+(16777217); }
	def m1869():void { var l:Double = (0)+(-16777217); }
	def m1870():void { var l:Double = (0)+(2147483647); }
	def m1871():void { var l:Double = (0)+(-2147483647); }
	def m1872():void { var l:Double = (-0)+(w0); }
	def m1873():void { var l:Double = (-0)+(w1); }
	def m1874():void { var l:Double = (-0)+(w2); }
	def m1875():void { var l:Double = (-0)+(w3); }
	def m1876():void { var l:Double = (-0)+(w4); }
	def m1877():void { var l:Double = (-0)+(w5); }
	def m1878():void { var l:Double = (-0)+(w6); }  
	def m1879():void { var l:Double = (-0)+(w7); }
	def m1880():void { var l:Double = (-0)+(w8); }  
	def m1881():void { var l:Double = (-0)+(w9); }  
	def m1882():void { var l:Double = (-0)+(0); }
	def m1883():void { var l:Double = (-0)+(-0); }
	def m1884():void { var l:Double = (-0)+(1.1f); }
	def m1885():void { var l:Double = (-0)+(-1.1f); }
	def m1886():void { var l:Double = (-0)+(2.2); }
	def m1887():void { var l:Double = (-0)+(-2.2); }
	def m1888():void { var l:Double = (-0)+(127); }
	def m1889():void { var l:Double = (-0)+(-127); }
	def m1890():void { var l:Double = (-0)+(128); }
	def m1891():void { var l:Double = (-0)+(-128); }
	def m1892():void { var l:Double = (-0)+(255); }
	def m1893():void { var l:Double = (-0)+(-255); }
	def m1894():void { var l:Double = (-0)+(256); }
	def m1895():void { var l:Double = (-0)+(-256); }
	def m1896():void { var l:Double = (-0)+(32767); }
	def m1897():void { var l:Double = (-0)+(-32767); }
	def m1898():void { var l:Double = (-0)+(32768); }
	def m1899():void { var l:Double = (-0)+(-32768); }
	def m1900():void { var l:Double = (-0)+(65535); }
	def m1901():void { var l:Double = (-0)+(-65535); }
	def m1902():void { var l:Double = (-0)+(65536); }
	def m1903():void { var l:Double = (-0)+(-65536); }
	def m1904():void { var l:Double = (-0)+(16777216); }
	def m1905():void { var l:Double = (-0)+(-16777216); }
	def m1906():void { var l:Double = (-0)+(16777217); }
	def m1907():void { var l:Double = (-0)+(-16777217); }
	def m1908():void { var l:Double = (-0)+(2147483647); }
	def m1909():void { var l:Double = (-0)+(-2147483647); }
	def m1910():void { var l:Double = (1.1f)+(w0); }
	def m1911():void { var l:Double = (1.1f)+(w1); }
	def m1912():void { var l:Double = (1.1f)+(w2); }
	def m1913():void { var l:Double = (1.1f)+(w3); }
	def m1914():void { var l:Double = (1.1f)+(w4); }
	def m1915():void { var l:Double = (1.1f)+(w5); }
	def m1916():void { var l:Double = (1.1f)+(w6); }
	def m1917():void { var l:Double = (1.1f)+(w7); }
	def m1918():void { var l:Double = (1.1f)+(w8); }
	def m1919():void { var l:Double = (1.1f)+(w9); }
	def m1920():void { var l:Double = (1.1f)+(0); }
	def m1921():void { var l:Double = (1.1f)+(-0); }
	def m1922():void { var l:Double = (1.1f)+(1.1f); }
	def m1923():void { var l:Double = (1.1f)+(-1.1f); }
	def m1924():void { var l:Double = (1.1f)+(2.2); }
	def m1925():void { var l:Double = (1.1f)+(-2.2); }
	def m1926():void { var l:Double = (1.1f)+(127); }
	def m1927():void { var l:Double = (1.1f)+(-127); }
	def m1928():void { var l:Double = (1.1f)+(128); }
	def m1929():void { var l:Double = (1.1f)+(-128); }
	def m1930():void { var l:Double = (1.1f)+(255); }
	def m1931():void { var l:Double = (1.1f)+(-255); }
	def m1932():void { var l:Double = (1.1f)+(256); }
	def m1933():void { var l:Double = (1.1f)+(-256); }
	def m1934():void { var l:Double = (1.1f)+(32767); }
	def m1935():void { var l:Double = (1.1f)+(-32767); }
	def m1936():void { var l:Double = (1.1f)+(32768); }
	def m1937():void { var l:Double = (1.1f)+(-32768); }
	def m1938():void { var l:Double = (1.1f)+(65535); }
	def m1939():void { var l:Double = (1.1f)+(-65535); }
	def m1940():void { var l:Double = (1.1f)+(65536); }
	def m1941():void { var l:Double = (1.1f)+(-65536); }
	def m1942():void { var l:Double = (1.1f)+(16777216); }
	def m1943():void { var l:Double = (1.1f)+(-16777216); }
	def m1944():void { var l:Double = (1.1f)+(16777217); }
	def m1945():void { var l:Double = (1.1f)+(-16777217); }
	def m1946():void { var l:Double = (1.1f)+(2147483647); }
	def m1947():void { var l:Double = (1.1f)+(-2147483647); }
	def m1948():void { var l:Double = (-1.1f)+(w0); }
	def m1949():void { var l:Double = (-1.1f)+(w1); }
	def m1950():void { var l:Double = (-1.1f)+(w2); }
	def m1951():void { var l:Double = (-1.1f)+(w3); }
	def m1952():void { var l:Double = (-1.1f)+(w4); }
	def m1953():void { var l:Double = (-1.1f)+(w5); }
	def m1954():void { var l:Double = (-1.1f)+(w6); }
	def m1955():void { var l:Double = (-1.1f)+(w7); }
	def m1956():void { var l:Double = (-1.1f)+(w8); }
	def m1957():void { var l:Double = (-1.1f)+(w9); }
	def m1958():void { var l:Double = (-1.1f)+(0); }
	def m1959():void { var l:Double = (-1.1f)+(-0); }
	def m1960():void { var l:Double = (-1.1f)+(1.1f); }
	def m1961():void { var l:Double = (-1.1f)+(-1.1f); }
	def m1962():void { var l:Double = (-1.1f)+(2.2); }
	def m1963():void { var l:Double = (-1.1f)+(-2.2); }
	def m1964():void { var l:Double = (-1.1f)+(127); }
	def m1965():void { var l:Double = (-1.1f)+(-127); }
	def m1966():void { var l:Double = (-1.1f)+(128); }
	def m1967():void { var l:Double = (-1.1f)+(-128); }
	def m1968():void { var l:Double = (-1.1f)+(255); }
	def m1969():void { var l:Double = (-1.1f)+(-255); }
	def m1970():void { var l:Double = (-1.1f)+(256); }
	def m1971():void { var l:Double = (-1.1f)+(-256); }
	def m1972():void { var l:Double = (-1.1f)+(32767); }
	def m1973():void { var l:Double = (-1.1f)+(-32767); }
	def m1974():void { var l:Double = (-1.1f)+(32768); }
	def m1975():void { var l:Double = (-1.1f)+(-32768); }
	def m1976():void { var l:Double = (-1.1f)+(65535); }
	def m1977():void { var l:Double = (-1.1f)+(-65535); }
	def m1978():void { var l:Double = (-1.1f)+(65536); }
	def m1979():void { var l:Double = (-1.1f)+(-65536); }
	def m1980():void { var l:Double = (-1.1f)+(16777216); }
	def m1981():void { var l:Double = (-1.1f)+(-16777216); }
	def m1982():void { var l:Double = (-1.1f)+(16777217); }
	def m1983():void { var l:Double = (-1.1f)+(-16777217); }
	def m1984():void { var l:Double = (-1.1f)+(2147483647); }
	def m1985():void { var l:Double = (-1.1f)+(-2147483647); }
	def m1986():void { var l:Double = (2.2)+(w0); }
	def m1987():void { var l:Double = (2.2)+(w1); }
	def m1988():void { var l:Double = (2.2)+(w2); }
	def m1989():void { var l:Double = (2.2)+(w3); }
	def m1990():void { var l:Double = (2.2)+(w4); }
	def m1991():void { var l:Double = (2.2)+(w5); }
	def m1992():void { var l:Double = (2.2)+(w6); }
	def m1993():void { var l:Double = (2.2)+(w7); }
	def m1994():void { var l:Double = (2.2)+(w8); }
	def m1995():void { var l:Double = (2.2)+(w9); }
	def m1996():void { var l:Double = (2.2)+(0); }
	def m1997():void { var l:Double = (2.2)+(-0); }
	def m1998():void { var l:Double = (2.2)+(1.1f); }
	def m1999():void { var l:Double = (2.2)+(-1.1f); }
	def m2000():void { var l:Double = (2.2)+(2.2); }
	def m2001():void { var l:Double = (2.2)+(-2.2); }
	def m2002():void { var l:Double = (2.2)+(127); }
	def m2003():void { var l:Double = (2.2)+(-127); }
	def m2004():void { var l:Double = (2.2)+(128); }
	def m2005():void { var l:Double = (2.2)+(-128); }
	def m2006():void { var l:Double = (2.2)+(255); }
	def m2007():void { var l:Double = (2.2)+(-255); }
	def m2008():void { var l:Double = (2.2)+(256); }
	def m2009():void { var l:Double = (2.2)+(-256); }
	def m2010():void { var l:Double = (2.2)+(32767); }
	def m2011():void { var l:Double = (2.2)+(-32767); }
	def m2012():void { var l:Double = (2.2)+(32768); }
	def m2013():void { var l:Double = (2.2)+(-32768); }
	def m2014():void { var l:Double = (2.2)+(65535); }
	def m2015():void { var l:Double = (2.2)+(-65535); }
	def m2016():void { var l:Double = (2.2)+(65536); }
	def m2017():void { var l:Double = (2.2)+(-65536); }
	def m2018():void { var l:Double = (2.2)+(16777216); }
	def m2019():void { var l:Double = (2.2)+(-16777216); }
	def m2020():void { var l:Double = (2.2)+(16777217); }
	def m2021():void { var l:Double = (2.2)+(-16777217); }
	def m2022():void { var l:Double = (2.2)+(2147483647); }
	def m2023():void { var l:Double = (2.2)+(-2147483647); }
	def m2024():void { var l:Double = (-2.2)+(w0); }
	def m2025():void { var l:Double = (-2.2)+(w1); }
	def m2026():void { var l:Double = (-2.2)+(w2); }
	def m2027():void { var l:Double = (-2.2)+(w3); }
	def m2028():void { var l:Double = (-2.2)+(w4); }
	def m2029():void { var l:Double = (-2.2)+(w5); }
	def m2030():void { var l:Double = (-2.2)+(w6); }
	def m2031():void { var l:Double = (-2.2)+(w7); }
	def m2032():void { var l:Double = (-2.2)+(w8); }
	def m2033():void { var l:Double = (-2.2)+(w9); }
	def m2034():void { var l:Double = (-2.2)+(0); }
	def m2035():void { var l:Double = (-2.2)+(-0); }
	def m2036():void { var l:Double = (-2.2)+(1.1f); }
	def m2037():void { var l:Double = (-2.2)+(-1.1f); }
	def m2038():void { var l:Double = (-2.2)+(2.2); }
	def m2039():void { var l:Double = (-2.2)+(-2.2); }
	def m2040():void { var l:Double = (-2.2)+(127); }
	def m2041():void { var l:Double = (-2.2)+(-127); }
	def m2042():void { var l:Double = (-2.2)+(128); }
	def m2043():void { var l:Double = (-2.2)+(-128); }
	def m2044():void { var l:Double = (-2.2)+(255); }
	def m2045():void { var l:Double = (-2.2)+(-255); }
	def m2046():void { var l:Double = (-2.2)+(256); }
	def m2047():void { var l:Double = (-2.2)+(-256); }
	def m2048():void { var l:Double = (-2.2)+(32767); }
	def m2049():void { var l:Double = (-2.2)+(-32767); }
	def m2050():void { var l:Double = (-2.2)+(32768); }
	def m2051():void { var l:Double = (-2.2)+(-32768); }
	def m2052():void { var l:Double = (-2.2)+(65535); }
	def m2053():void { var l:Double = (-2.2)+(-65535); }
	def m2054():void { var l:Double = (-2.2)+(65536); }
	def m2055():void { var l:Double = (-2.2)+(-65536); }
	def m2056():void { var l:Double = (-2.2)+(16777216); }
	def m2057():void { var l:Double = (-2.2)+(-16777216); }
	def m2058():void { var l:Double = (-2.2)+(16777217); }
	def m2059():void { var l:Double = (-2.2)+(-16777217); }
	def m2060():void { var l:Double = (-2.2)+(2147483647); }
	def m2061():void { var l:Double = (-2.2)+(-2147483647); }
	def m2062():void { var l:Double = (127)+(w0); }
	def m2063():void { var l:Double = (127)+(w1); }
	def m2064():void { var l:Double = (127)+(w2); }
	def m2065():void { var l:Double = (127)+(w3); }
	def m2066():void { var l:Double = (127)+(w4); }
	def m2067():void { var l:Double = (127)+(w5); }
	def m2068():void { var l:Double = (127)+(w6); }  
	def m2069():void { var l:Double = (127)+(w7); }
	def m2070():void { var l:Double = (127)+(w8); }  
	def m2071():void { var l:Double = (127)+(w9); }  
	def m2072():void { var l:Double = (127)+(0); }
	def m2073():void { var l:Double = (127)+(-0); }
	def m2074():void { var l:Double = (127)+(1.1f); }
	def m2075():void { var l:Double = (127)+(-1.1f); }
	def m2076():void { var l:Double = (127)+(2.2); }
	def m2077():void { var l:Double = (127)+(-2.2); }
	def m2078():void { var l:Double = (127)+(127); }
	def m2079():void { var l:Double = (127)+(-127); }
	def m2080():void { var l:Double = (127)+(128); }
	def m2081():void { var l:Double = (127)+(-128); }
	def m2082():void { var l:Double = (127)+(255); }
	def m2083():void { var l:Double = (127)+(-255); }
	def m2084():void { var l:Double = (127)+(256); }
	def m2085():void { var l:Double = (127)+(-256); }
	def m2086():void { var l:Double = (127)+(32767); }
	def m2087():void { var l:Double = (127)+(-32767); }
	def m2088():void { var l:Double = (127)+(32768); }
	def m2089():void { var l:Double = (127)+(-32768); }
	def m2090():void { var l:Double = (127)+(65535); }
	def m2091():void { var l:Double = (127)+(-65535); }
	def m2092():void { var l:Double = (127)+(65536); }
	def m2093():void { var l:Double = (127)+(-65536); }
	def m2094():void { var l:Double = (127)+(16777216); }
	def m2095():void { var l:Double = (127)+(-16777216); }
	def m2096():void { var l:Double = (127)+(16777217); }
	def m2097():void { var l:Double = (127)+(-16777217); }
	def m2098():void { var l:Double = (127)+(2147483647); }
	def m2099():void { var l:Double = (127)+(-2147483647); }
	def m2100():void { var l:Double = (-127)+(w0); }
	def m2101():void { var l:Double = (-127)+(w1); }
	def m2102():void { var l:Double = (-127)+(w2); }
	def m2103():void { var l:Double = (-127)+(w3); }
	def m2104():void { var l:Double = (-127)+(w4); }
	def m2105():void { var l:Double = (-127)+(w5); }
	def m2106():void { var l:Double = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m2107():void { var l:Double = (-127)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m2108():void { var l:Double = (-127)+(w8); }  
	def m2109():void { var l:Double = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m2110():void { var l:Double = (-127)+(0); }
	def m2111():void { var l:Double = (-127)+(-0); }
	def m2112():void { var l:Double = (-127)+(1.1f); }
	def m2113():void { var l:Double = (-127)+(-1.1f); }
	def m2114():void { var l:Double = (-127)+(2.2); }
	def m2115():void { var l:Double = (-127)+(-2.2); }
	def m2116():void { var l:Double = (-127)+(127); }
	def m2117():void { var l:Double = (-127)+(-127); }
	def m2118():void { var l:Double = (-127)+(128); }
	def m2119():void { var l:Double = (-127)+(-128); }
	def m2120():void { var l:Double = (-127)+(255); }
	def m2121():void { var l:Double = (-127)+(-255); }
	def m2122():void { var l:Double = (-127)+(256); }
	def m2123():void { var l:Double = (-127)+(-256); }
	def m2124():void { var l:Double = (-127)+(32767); }
	def m2125():void { var l:Double = (-127)+(-32767); }
	def m2126():void { var l:Double = (-127)+(32768); }
	def m2127():void { var l:Double = (-127)+(-32768); }
	def m2128():void { var l:Double = (-127)+(65535); }
	def m2129():void { var l:Double = (-127)+(-65535); }
	def m2130():void { var l:Double = (-127)+(65536); }
	def m2131():void { var l:Double = (-127)+(-65536); }
	def m2132():void { var l:Double = (-127)+(16777216); }
	def m2133():void { var l:Double = (-127)+(-16777216); }
	def m2134():void { var l:Double = (-127)+(16777217); }
	def m2135():void { var l:Double = (-127)+(-16777217); }
	def m2136():void { var l:Double = (-127)+(2147483647); }
	def m2137():void { var l:Double = (-127)+(-2147483647); }
	def m2138():void { var l:Double = (128)+(w0); }
	def m2139():void { var l:Double = (128)+(w1); }
	def m2140():void { var l:Double = (128)+(w2); }
	def m2141():void { var l:Double = (128)+(w3); }
	def m2142():void { var l:Double = (128)+(w4); }
	def m2143():void { var l:Double = (128)+(w5); }
	def m2144():void { var l:Double = (128)+(w6); }  
	def m2145():void { var l:Double = (128)+(w7); }
	def m2146():void { var l:Double = (128)+(w8); }  
	def m2147():void { var l:Double = (128)+(w9); }  
	def m2148():void { var l:Double = (128)+(0); }
	def m2149():void { var l:Double = (128)+(-0); }
	def m2150():void { var l:Double = (128)+(1.1f); }
	def m2151():void { var l:Double = (128)+(-1.1f); }
	def m2152():void { var l:Double = (128)+(2.2); }
	def m2153():void { var l:Double = (128)+(-2.2); }
	def m2154():void { var l:Double = (128)+(127); }
	def m2155():void { var l:Double = (128)+(-127); }
	def m2156():void { var l:Double = (128)+(128); }
	def m2157():void { var l:Double = (128)+(-128); }
	def m2158():void { var l:Double = (128)+(255); }
	def m2159():void { var l:Double = (128)+(-255); }
	def m2160():void { var l:Double = (128)+(256); }
	def m2161():void { var l:Double = (128)+(-256); }
	def m2162():void { var l:Double = (128)+(32767); }
	def m2163():void { var l:Double = (128)+(-32767); }
	def m2164():void { var l:Double = (128)+(32768); }
	def m2165():void { var l:Double = (128)+(-32768); }
	def m2166():void { var l:Double = (128)+(65535); }
	def m2167():void { var l:Double = (128)+(-65535); }
	def m2168():void { var l:Double = (128)+(65536); }
	def m2169():void { var l:Double = (128)+(-65536); }
	def m2170():void { var l:Double = (128)+(16777216); }
	def m2171():void { var l:Double = (128)+(-16777216); }
	def m2172():void { var l:Double = (128)+(16777217); }
	def m2173():void { var l:Double = (128)+(-16777217); }
	def m2174():void { var l:Double = (128)+(2147483647); }
	def m2175():void { var l:Double = (128)+(-2147483647); }
	def m2176():void { var l:Double = (-128)+(w0); }
	def m2177():void { var l:Double = (-128)+(w1); }
	def m2178():void { var l:Double = (-128)+(w2); }
	def m2179():void { var l:Double = (-128)+(w3); }
	def m2180():void { var l:Double = (-128)+(w4); }
	def m2181():void { var l:Double = (-128)+(w5); }
	def m2182():void { var l:Double = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m2183():void { var l:Double = (-128)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m2184():void { var l:Double = (-128)+(w8); }  
	def m2185():void { var l:Double = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m2186():void { var l:Double = (-128)+(0); }
	def m2187():void { var l:Double = (-128)+(-0); }
	def m2188():void { var l:Double = (-128)+(1.1f); }
	def m2189():void { var l:Double = (-128)+(-1.1f); }
	def m2190():void { var l:Double = (-128)+(2.2); }
	def m2191():void { var l:Double = (-128)+(-2.2); }
	def m2192():void { var l:Double = (-128)+(127); }
	def m2193():void { var l:Double = (-128)+(-127); }
	def m2194():void { var l:Double = (-128)+(128); }
	def m2195():void { var l:Double = (-128)+(-128); }
	def m2196():void { var l:Double = (-128)+(255); }
	def m2197():void { var l:Double = (-128)+(-255); }
	def m2198():void { var l:Double = (-128)+(256); }
	def m2199():void { var l:Double = (-128)+(-256); }
	def m2200():void { var l:Double = (-128)+(32767); }
	def m2201():void { var l:Double = (-128)+(-32767); }
	def m2202():void { var l:Double = (-128)+(32768); }
	def m2203():void { var l:Double = (-128)+(-32768); }
	def m2204():void { var l:Double = (-128)+(65535); }
	def m2205():void { var l:Double = (-128)+(-65535); }
	def m2206():void { var l:Double = (-128)+(65536); }
	def m2207():void { var l:Double = (-128)+(-65536); }
	def m2208():void { var l:Double = (-128)+(16777216); }
	def m2209():void { var l:Double = (-128)+(-16777216); }
	def m2210():void { var l:Double = (-128)+(16777217); }
	def m2211():void { var l:Double = (-128)+(-16777217); }
	def m2212():void { var l:Double = (-128)+(2147483647); }
	def m2213():void { var l:Double = (-128)+(-2147483647); }
	def m2214():void { var l:Double = (255)+(w0); }
	def m2215():void { var l:Double = (255)+(w1); }
	def m2216():void { var l:Double = (255)+(w2); }
	def m2217():void { var l:Double = (255)+(w3); }
	def m2218():void { var l:Double = (255)+(w4); }
	def m2219():void { var l:Double = (255)+(w5); }
	def m2220():void { var l:Double = (255)+(w6); }  
	def m2221():void { var l:Double = (255)+(w7); }
	def m2222():void { var l:Double = (255)+(w8); }  
	def m2223():void { var l:Double = (255)+(w9); }  
	def m2224():void { var l:Double = (255)+(0); }
	def m2225():void { var l:Double = (255)+(-0); }
	def m2226():void { var l:Double = (255)+(1.1f); }
	def m2227():void { var l:Double = (255)+(-1.1f); }
	def m2228():void { var l:Double = (255)+(2.2); }
	def m2229():void { var l:Double = (255)+(-2.2); }
	def m2230():void { var l:Double = (255)+(127); }
	def m2231():void { var l:Double = (255)+(-127); }
	def m2232():void { var l:Double = (255)+(128); }
	def m2233():void { var l:Double = (255)+(-128); }
	def m2234():void { var l:Double = (255)+(255); }
	def m2235():void { var l:Double = (255)+(-255); }
	def m2236():void { var l:Double = (255)+(256); }
	def m2237():void { var l:Double = (255)+(-256); }
	def m2238():void { var l:Double = (255)+(32767); }
	def m2239():void { var l:Double = (255)+(-32767); }
	def m2240():void { var l:Double = (255)+(32768); }
	def m2241():void { var l:Double = (255)+(-32768); }
	def m2242():void { var l:Double = (255)+(65535); }
	def m2243():void { var l:Double = (255)+(-65535); }
	def m2244():void { var l:Double = (255)+(65536); }
	def m2245():void { var l:Double = (255)+(-65536); }
	def m2246():void { var l:Double = (255)+(16777216); }
	def m2247():void { var l:Double = (255)+(-16777216); }
	def m2248():void { var l:Double = (255)+(16777217); }
	def m2249():void { var l:Double = (255)+(-16777217); }
	def m2250():void { var l:Double = (255)+(2147483647); }
	def m2251():void { var l:Double = (255)+(-2147483647); }
	def m2252():void { var l:Double = (-255)+(w0); }
	def m2253():void { var l:Double = (-255)+(w1); }
	def m2254():void { var l:Double = (-255)+(w2); }
	def m2255():void { var l:Double = (-255)+(w3); }
	def m2256():void { var l:Double = (-255)+(w4); }
	def m2257():void { var l:Double = (-255)+(w5); }
	def m2258():void { var l:Double = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m2259():void { var l:Double = (-255)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m2260():void { var l:Double = (-255)+(w8); }  
	def m2261():void { var l:Double = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m2262():void { var l:Double = (-255)+(0); }
	def m2263():void { var l:Double = (-255)+(-0); }
	def m2264():void { var l:Double = (-255)+(1.1f); }
	def m2265():void { var l:Double = (-255)+(-1.1f); }
	def m2266():void { var l:Double = (-255)+(2.2); }
	def m2267():void { var l:Double = (-255)+(-2.2); }
	def m2268():void { var l:Double = (-255)+(127); }
	def m2269():void { var l:Double = (-255)+(-127); }
	def m2270():void { var l:Double = (-255)+(128); }
	def m2271():void { var l:Double = (-255)+(-128); }
	def m2272():void { var l:Double = (-255)+(255); }
	def m2273():void { var l:Double = (-255)+(-255); }
	def m2274():void { var l:Double = (-255)+(256); }
	def m2275():void { var l:Double = (-255)+(-256); }
	def m2276():void { var l:Double = (-255)+(32767); }
	def m2277():void { var l:Double = (-255)+(-32767); }
	def m2278():void { var l:Double = (-255)+(32768); }
	def m2279():void { var l:Double = (-255)+(-32768); }
	def m2280():void { var l:Double = (-255)+(65535); }
	def m2281():void { var l:Double = (-255)+(-65535); }
	def m2282():void { var l:Double = (-255)+(65536); }
	def m2283():void { var l:Double = (-255)+(-65536); }
	def m2284():void { var l:Double = (-255)+(16777216); }
	def m2285():void { var l:Double = (-255)+(-16777216); }
	def m2286():void { var l:Double = (-255)+(16777217); }
	def m2287():void { var l:Double = (-255)+(-16777217); }
	def m2288():void { var l:Double = (-255)+(2147483647); }
	def m2289():void { var l:Double = (-255)+(-2147483647); }
	def m2290():void { var l:Double = (256)+(w0); }
	def m2291():void { var l:Double = (256)+(w1); }
	def m2292():void { var l:Double = (256)+(w2); }
	def m2293():void { var l:Double = (256)+(w3); }
	def m2294():void { var l:Double = (256)+(w4); }
	def m2295():void { var l:Double = (256)+(w5); }
	def m2296():void { var l:Double = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m2297():void { var l:Double = (256)+(w7); }
	def m2298():void { var l:Double = (256)+(w8); }  
	def m2299():void { var l:Double = (256)+(w9); }  
	def m2300():void { var l:Double = (256)+(0); }
	def m2301():void { var l:Double = (256)+(-0); }
	def m2302():void { var l:Double = (256)+(1.1f); }
	def m2303():void { var l:Double = (256)+(-1.1f); }
	def m2304():void { var l:Double = (256)+(2.2); }
	def m2305():void { var l:Double = (256)+(-2.2); }
	def m2306():void { var l:Double = (256)+(127); }
	def m2307():void { var l:Double = (256)+(-127); }
	def m2308():void { var l:Double = (256)+(128); }
	def m2309():void { var l:Double = (256)+(-128); }
	def m2310():void { var l:Double = (256)+(255); }
	def m2311():void { var l:Double = (256)+(-255); }
	def m2312():void { var l:Double = (256)+(256); }
	def m2313():void { var l:Double = (256)+(-256); }
	def m2314():void { var l:Double = (256)+(32767); }
	def m2315():void { var l:Double = (256)+(-32767); }
	def m2316():void { var l:Double = (256)+(32768); }
	def m2317():void { var l:Double = (256)+(-32768); }
	def m2318():void { var l:Double = (256)+(65535); }
	def m2319():void { var l:Double = (256)+(-65535); }
	def m2320():void { var l:Double = (256)+(65536); }
	def m2321():void { var l:Double = (256)+(-65536); }
	def m2322():void { var l:Double = (256)+(16777216); }
	def m2323():void { var l:Double = (256)+(-16777216); }
	def m2324():void { var l:Double = (256)+(16777217); }
	def m2325():void { var l:Double = (256)+(-16777217); }
	def m2326():void { var l:Double = (256)+(2147483647); }
	def m2327():void { var l:Double = (256)+(-2147483647); }
	def m2328():void { var l:Double = (-256)+(w0); }
	def m2329():void { var l:Double = (-256)+(w1); }
	def m2330():void { var l:Double = (-256)+(w2); }
	def m2331():void { var l:Double = (-256)+(w3); }
	def m2332():void { var l:Double = (-256)+(w4); }
	def m2333():void { var l:Double = (-256)+(w5); }
	def m2334():void { var l:Double = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m2335():void { var l:Double = (-256)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m2336():void { var l:Double = (-256)+(w8); }  
	def m2337():void { var l:Double = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m2338():void { var l:Double = (-256)+(0); }
	def m2339():void { var l:Double = (-256)+(-0); }
	def m2340():void { var l:Double = (-256)+(1.1f); }
	def m2341():void { var l:Double = (-256)+(-1.1f); }
	def m2342():void { var l:Double = (-256)+(2.2); }
	def m2343():void { var l:Double = (-256)+(-2.2); }
	def m2344():void { var l:Double = (-256)+(127); }
	def m2345():void { var l:Double = (-256)+(-127); }
	def m2346():void { var l:Double = (-256)+(128); }
	def m2347():void { var l:Double = (-256)+(-128); }
	def m2348():void { var l:Double = (-256)+(255); }
	def m2349():void { var l:Double = (-256)+(-255); }
	def m2350():void { var l:Double = (-256)+(256); }
	def m2351():void { var l:Double = (-256)+(-256); }
	def m2352():void { var l:Double = (-256)+(32767); }
	def m2353():void { var l:Double = (-256)+(-32767); }
	def m2354():void { var l:Double = (-256)+(32768); }
	def m2355():void { var l:Double = (-256)+(-32768); }
	def m2356():void { var l:Double = (-256)+(65535); }
	def m2357():void { var l:Double = (-256)+(-65535); }
	def m2358():void { var l:Double = (-256)+(65536); }
	def m2359():void { var l:Double = (-256)+(-65536); }
	def m2360():void { var l:Double = (-256)+(16777216); }
	def m2361():void { var l:Double = (-256)+(-16777216); }
	def m2362():void { var l:Double = (-256)+(16777217); }
	def m2363():void { var l:Double = (-256)+(-16777217); }
	def m2364():void { var l:Double = (-256)+(2147483647); }
	def m2365():void { var l:Double = (-256)+(-2147483647); }
	def m2366():void { var l:Double = (32767)+(w0); }
	def m2367():void { var l:Double = (32767)+(w1); }
	def m2368():void { var l:Double = (32767)+(w2); }
	def m2369():void { var l:Double = (32767)+(w3); }
	def m2370():void { var l:Double = (32767)+(w4); }
	def m2371():void { var l:Double = (32767)+(w5); }
	def m2372():void { var l:Double = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m2373():void { var l:Double = (32767)+(w7); }
	def m2374():void { var l:Double = (32767)+(w8); }  
	def m2375():void { var l:Double = (32767)+(w9); }  
	def m2376():void { var l:Double = (32767)+(0); }
	def m2377():void { var l:Double = (32767)+(-0); }
	def m2378():void { var l:Double = (32767)+(1.1f); }
	def m2379():void { var l:Double = (32767)+(-1.1f); }
	def m2380():void { var l:Double = (32767)+(2.2); }
	def m2381():void { var l:Double = (32767)+(-2.2); }
	def m2382():void { var l:Double = (32767)+(127); }
	def m2383():void { var l:Double = (32767)+(-127); }
	def m2384():void { var l:Double = (32767)+(128); }
	def m2385():void { var l:Double = (32767)+(-128); }
	def m2386():void { var l:Double = (32767)+(255); }
	def m2387():void { var l:Double = (32767)+(-255); }
	def m2388():void { var l:Double = (32767)+(256); }
	def m2389():void { var l:Double = (32767)+(-256); }
	def m2390():void { var l:Double = (32767)+(32767); }
	def m2391():void { var l:Double = (32767)+(-32767); }
	def m2392():void { var l:Double = (32767)+(32768); }
	def m2393():void { var l:Double = (32767)+(-32768); }
	def m2394():void { var l:Double = (32767)+(65535); }
	def m2395():void { var l:Double = (32767)+(-65535); }
	def m2396():void { var l:Double = (32767)+(65536); }
	def m2397():void { var l:Double = (32767)+(-65536); }
	def m2398():void { var l:Double = (32767)+(16777216); }
	def m2399():void { var l:Double = (32767)+(-16777216); }
	def m2400():void { var l:Double = (32767)+(16777217); }
	def m2401():void { var l:Double = (32767)+(-16777217); }
	def m2402():void { var l:Double = (32767)+(2147483647); }
	def m2403():void { var l:Double = (32767)+(-2147483647); }
	def m2404():void { var l:Double = (-32767)+(w0); }
	def m2405():void { var l:Double = (-32767)+(w1); }
	def m2406():void { var l:Double = (-32767)+(w2); }
	def m2407():void { var l:Double = (-32767)+(w3); }
	def m2408():void { var l:Double = (-32767)+(w4); }
	def m2409():void { var l:Double = (-32767)+(w5); }
	def m2410():void { var l:Double = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m2411():void { var l:Double = (-32767)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m2412():void { var l:Double = (-32767)+(w8); }  
	def m2413():void { var l:Double = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m2414():void { var l:Double = (-32767)+(0); }
	def m2415():void { var l:Double = (-32767)+(-0); }
	def m2416():void { var l:Double = (-32767)+(1.1f); }
	def m2417():void { var l:Double = (-32767)+(-1.1f); }
	def m2418():void { var l:Double = (-32767)+(2.2); }
	def m2419():void { var l:Double = (-32767)+(-2.2); }
	def m2420():void { var l:Double = (-32767)+(127); }
	def m2421():void { var l:Double = (-32767)+(-127); }
	def m2422():void { var l:Double = (-32767)+(128); }
	def m2423():void { var l:Double = (-32767)+(-128); }
	def m2424():void { var l:Double = (-32767)+(255); }
	def m2425():void { var l:Double = (-32767)+(-255); }
	def m2426():void { var l:Double = (-32767)+(256); }
	def m2427():void { var l:Double = (-32767)+(-256); }
	def m2428():void { var l:Double = (-32767)+(32767); }
	def m2429():void { var l:Double = (-32767)+(-32767); }
	def m2430():void { var l:Double = (-32767)+(32768); }
	def m2431():void { var l:Double = (-32767)+(-32768); }
	def m2432():void { var l:Double = (-32767)+(65535); }
	def m2433():void { var l:Double = (-32767)+(-65535); }
	def m2434():void { var l:Double = (-32767)+(65536); }
	def m2435():void { var l:Double = (-32767)+(-65536); }
	def m2436():void { var l:Double = (-32767)+(16777216); }
	def m2437():void { var l:Double = (-32767)+(-16777216); }
	def m2438():void { var l:Double = (-32767)+(16777217); }
	def m2439():void { var l:Double = (-32767)+(-16777217); }
	def m2440():void { var l:Double = (-32767)+(2147483647); }
	def m2441():void { var l:Double = (-32767)+(-2147483647); }
	def m2442():void { var l:Double = (32768)+(w0); }
	def m2443():void { var l:Double = (32768)+(w1); }
	def m2444():void { var l:Double = (32768)+(w2); }
	def m2445():void { var l:Double = (32768)+(w3); }
	def m2446():void { var l:Double = (32768)+(w4); }
	def m2447():void { var l:Double = (32768)+(w5); }
	def m2448():void { var l:Double = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m2449():void { var l:Double = (32768)+(w7); }
	def m2450():void { var l:Double = (32768)+(w8); }  
	def m2451():void { var l:Double = (32768)+(w9); }  
	def m2452():void { var l:Double = (32768)+(0); }
	def m2453():void { var l:Double = (32768)+(-0); }
	def m2454():void { var l:Double = (32768)+(1.1f); }
	def m2455():void { var l:Double = (32768)+(-1.1f); }
	def m2456():void { var l:Double = (32768)+(2.2); }
	def m2457():void { var l:Double = (32768)+(-2.2); }
	def m2458():void { var l:Double = (32768)+(127); }
	def m2459():void { var l:Double = (32768)+(-127); }
	def m2460():void { var l:Double = (32768)+(128); }
	def m2461():void { var l:Double = (32768)+(-128); }
	def m2462():void { var l:Double = (32768)+(255); }
	def m2463():void { var l:Double = (32768)+(-255); }
	def m2464():void { var l:Double = (32768)+(256); }
	def m2465():void { var l:Double = (32768)+(-256); }
	def m2466():void { var l:Double = (32768)+(32767); }
	def m2467():void { var l:Double = (32768)+(-32767); }
	def m2468():void { var l:Double = (32768)+(32768); }
	def m2469():void { var l:Double = (32768)+(-32768); }
	def m2470():void { var l:Double = (32768)+(65535); }
	def m2471():void { var l:Double = (32768)+(-65535); }
	def m2472():void { var l:Double = (32768)+(65536); }
	def m2473():void { var l:Double = (32768)+(-65536); }
	def m2474():void { var l:Double = (32768)+(16777216); }
	def m2475():void { var l:Double = (32768)+(-16777216); }
	def m2476():void { var l:Double = (32768)+(16777217); }
	def m2477():void { var l:Double = (32768)+(-16777217); }
	def m2478():void { var l:Double = (32768)+(2147483647); }
	def m2479():void { var l:Double = (32768)+(-2147483647); }
	def m2480():void { var l:Double = (-32768)+(w0); }
	def m2481():void { var l:Double = (-32768)+(w1); }
	def m2482():void { var l:Double = (-32768)+(w2); }
	def m2483():void { var l:Double = (-32768)+(w3); }
	def m2484():void { var l:Double = (-32768)+(w4); }
	def m2485():void { var l:Double = (-32768)+(w5); }
	def m2486():void { var l:Double = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m2487():void { var l:Double = (-32768)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m2488():void { var l:Double = (-32768)+(w8); }  
	def m2489():void { var l:Double = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m2490():void { var l:Double = (-32768)+(0); }
	def m2491():void { var l:Double = (-32768)+(-0); }
	def m2492():void { var l:Double = (-32768)+(1.1f); }
	def m2493():void { var l:Double = (-32768)+(-1.1f); }
	def m2494():void { var l:Double = (-32768)+(2.2); }
	def m2495():void { var l:Double = (-32768)+(-2.2); }
	def m2496():void { var l:Double = (-32768)+(127); }
	def m2497():void { var l:Double = (-32768)+(-127); }
	def m2498():void { var l:Double = (-32768)+(128); }
	def m2499():void { var l:Double = (-32768)+(-128); }
	def m2500():void { var l:Double = (-32768)+(255); }
	def m2501():void { var l:Double = (-32768)+(-255); }
	def m2502():void { var l:Double = (-32768)+(256); }
	def m2503():void { var l:Double = (-32768)+(-256); }
	def m2504():void { var l:Double = (-32768)+(32767); }
	def m2505():void { var l:Double = (-32768)+(-32767); }
	def m2506():void { var l:Double = (-32768)+(32768); }
	def m2507():void { var l:Double = (-32768)+(-32768); }
	def m2508():void { var l:Double = (-32768)+(65535); }
	def m2509():void { var l:Double = (-32768)+(-65535); }
	def m2510():void { var l:Double = (-32768)+(65536); }
	def m2511():void { var l:Double = (-32768)+(-65536); }
	def m2512():void { var l:Double = (-32768)+(16777216); }
	def m2513():void { var l:Double = (-32768)+(-16777216); }
	def m2514():void { var l:Double = (-32768)+(16777217); }
	def m2515():void { var l:Double = (-32768)+(-16777217); }
	def m2516():void { var l:Double = (-32768)+(2147483647); }
	def m2517():void { var l:Double = (-32768)+(-2147483647); }
	def m2518():void { var l:Double = (65535)+(w0); }
	def m2519():void { var l:Double = (65535)+(w1); }
	def m2520():void { var l:Double = (65535)+(w2); }
	def m2521():void { var l:Double = (65535)+(w3); }
	def m2522():void { var l:Double = (65535)+(w4); }
	def m2523():void { var l:Double = (65535)+(w5); }
	def m2524():void { var l:Double = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m2525():void { var l:Double = (65535)+(w7); }
	def m2526():void { var l:Double = (65535)+(w8); }  
	def m2527():void { var l:Double = (65535)+(w9); }  
	def m2528():void { var l:Double = (65535)+(0); }
	def m2529():void { var l:Double = (65535)+(-0); }
	def m2530():void { var l:Double = (65535)+(1.1f); }
	def m2531():void { var l:Double = (65535)+(-1.1f); }
	def m2532():void { var l:Double = (65535)+(2.2); }
	def m2533():void { var l:Double = (65535)+(-2.2); }
	def m2534():void { var l:Double = (65535)+(127); }
	def m2535():void { var l:Double = (65535)+(-127); }
	def m2536():void { var l:Double = (65535)+(128); }
	def m2537():void { var l:Double = (65535)+(-128); }
	def m2538():void { var l:Double = (65535)+(255); }
	def m2539():void { var l:Double = (65535)+(-255); }
	def m2540():void { var l:Double = (65535)+(256); }
	def m2541():void { var l:Double = (65535)+(-256); }
	def m2542():void { var l:Double = (65535)+(32767); }
	def m2543():void { var l:Double = (65535)+(-32767); }
	def m2544():void { var l:Double = (65535)+(32768); }
	def m2545():void { var l:Double = (65535)+(-32768); }
	def m2546():void { var l:Double = (65535)+(65535); }
	def m2547():void { var l:Double = (65535)+(-65535); }
	def m2548():void { var l:Double = (65535)+(65536); }
	def m2549():void { var l:Double = (65535)+(-65536); }
	def m2550():void { var l:Double = (65535)+(16777216); }
	def m2551():void { var l:Double = (65535)+(-16777216); }
	def m2552():void { var l:Double = (65535)+(16777217); }
	def m2553():void { var l:Double = (65535)+(-16777217); }
	def m2554():void { var l:Double = (65535)+(2147483647); }
	def m2555():void { var l:Double = (65535)+(-2147483647); }
	def m2556():void { var l:Double = (-65535)+(w0); }
	def m2557():void { var l:Double = (-65535)+(w1); }
	def m2558():void { var l:Double = (-65535)+(w2); }
	def m2559():void { var l:Double = (-65535)+(w3); }
	def m2560():void { var l:Double = (-65535)+(w4); }
	def m2561():void { var l:Double = (-65535)+(w5); }
	def m2562():void { var l:Double = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m2563():void { var l:Double = (-65535)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m2564():void { var l:Double = (-65535)+(w8); }  
	def m2565():void { var l:Double = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m2566():void { var l:Double = (-65535)+(0); }
	def m2567():void { var l:Double = (-65535)+(-0); }
	def m2568():void { var l:Double = (-65535)+(1.1f); }
	def m2569():void { var l:Double = (-65535)+(-1.1f); }
	def m2570():void { var l:Double = (-65535)+(2.2); }
	def m2571():void { var l:Double = (-65535)+(-2.2); }
	def m2572():void { var l:Double = (-65535)+(127); }
	def m2573():void { var l:Double = (-65535)+(-127); }
	def m2574():void { var l:Double = (-65535)+(128); }
	def m2575():void { var l:Double = (-65535)+(-128); }
	def m2576():void { var l:Double = (-65535)+(255); }
	def m2577():void { var l:Double = (-65535)+(-255); }
	def m2578():void { var l:Double = (-65535)+(256); }
	def m2579():void { var l:Double = (-65535)+(-256); }
	def m2580():void { var l:Double = (-65535)+(32767); }
	def m2581():void { var l:Double = (-65535)+(-32767); }
	def m2582():void { var l:Double = (-65535)+(32768); }
	def m2583():void { var l:Double = (-65535)+(-32768); }
	def m2584():void { var l:Double = (-65535)+(65535); }
	def m2585():void { var l:Double = (-65535)+(-65535); }
	def m2586():void { var l:Double = (-65535)+(65536); }
	def m2587():void { var l:Double = (-65535)+(-65536); }
	def m2588():void { var l:Double = (-65535)+(16777216); }
	def m2589():void { var l:Double = (-65535)+(-16777216); }
	def m2590():void { var l:Double = (-65535)+(16777217); }
	def m2591():void { var l:Double = (-65535)+(-16777217); }
	def m2592():void { var l:Double = (-65535)+(2147483647); }
	def m2593():void { var l:Double = (-65535)+(-2147483647); }
	def m2594():void { var l:Double = (65536)+(w0); }
	def m2595():void { var l:Double = (65536)+(w1); }
	def m2596():void { var l:Double = (65536)+(w2); }
	def m2597():void { var l:Double = (65536)+(w3); }
	def m2598():void { var l:Double = (65536)+(w4); }
	def m2599():void { var l:Double = (65536)+(w5); }
	def m2600():void { var l:Double = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m2601():void { var l:Double = (65536)+(w7); }
	def m2602():void { var l:Double = (65536)+(w8); }  
	def m2603():void { var l:Double = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m2604():void { var l:Double = (65536)+(0); }
	def m2605():void { var l:Double = (65536)+(-0); }
	def m2606():void { var l:Double = (65536)+(1.1f); }
	def m2607():void { var l:Double = (65536)+(-1.1f); }
	def m2608():void { var l:Double = (65536)+(2.2); }
	def m2609():void { var l:Double = (65536)+(-2.2); }
	def m2610():void { var l:Double = (65536)+(127); }
	def m2611():void { var l:Double = (65536)+(-127); }
	def m2612():void { var l:Double = (65536)+(128); }
	def m2613():void { var l:Double = (65536)+(-128); }
	def m2614():void { var l:Double = (65536)+(255); }
	def m2615():void { var l:Double = (65536)+(-255); }
	def m2616():void { var l:Double = (65536)+(256); }
	def m2617():void { var l:Double = (65536)+(-256); }
	def m2618():void { var l:Double = (65536)+(32767); }
	def m2619():void { var l:Double = (65536)+(-32767); }
	def m2620():void { var l:Double = (65536)+(32768); }
	def m2621():void { var l:Double = (65536)+(-32768); }
	def m2622():void { var l:Double = (65536)+(65535); }
	def m2623():void { var l:Double = (65536)+(-65535); }
	def m2624():void { var l:Double = (65536)+(65536); }
	def m2625():void { var l:Double = (65536)+(-65536); }
	def m2626():void { var l:Double = (65536)+(16777216); }
	def m2627():void { var l:Double = (65536)+(-16777216); }
	def m2628():void { var l:Double = (65536)+(16777217); }
	def m2629():void { var l:Double = (65536)+(-16777217); }
	def m2630():void { var l:Double = (65536)+(2147483647); }
	def m2631():void { var l:Double = (65536)+(-2147483647); }
	def m2632():void { var l:Double = (-65536)+(w0); }
	def m2633():void { var l:Double = (-65536)+(w1); }
	def m2634():void { var l:Double = (-65536)+(w2); }
	def m2635():void { var l:Double = (-65536)+(w3); }
	def m2636():void { var l:Double = (-65536)+(w4); }
	def m2637():void { var l:Double = (-65536)+(w5); }
	def m2638():void { var l:Double = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m2639():void { var l:Double = (-65536)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m2640():void { var l:Double = (-65536)+(w8); }  
	def m2641():void { var l:Double = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m2642():void { var l:Double = (-65536)+(0); }
	def m2643():void { var l:Double = (-65536)+(-0); }
	def m2644():void { var l:Double = (-65536)+(1.1f); }
	def m2645():void { var l:Double = (-65536)+(-1.1f); }
	def m2646():void { var l:Double = (-65536)+(2.2); }
	def m2647():void { var l:Double = (-65536)+(-2.2); }
	def m2648():void { var l:Double = (-65536)+(127); }
	def m2649():void { var l:Double = (-65536)+(-127); }
	def m2650():void { var l:Double = (-65536)+(128); }
	def m2651():void { var l:Double = (-65536)+(-128); }
	def m2652():void { var l:Double = (-65536)+(255); }
	def m2653():void { var l:Double = (-65536)+(-255); }
	def m2654():void { var l:Double = (-65536)+(256); }
	def m2655():void { var l:Double = (-65536)+(-256); }
	def m2656():void { var l:Double = (-65536)+(32767); }
	def m2657():void { var l:Double = (-65536)+(-32767); }
	def m2658():void { var l:Double = (-65536)+(32768); }
	def m2659():void { var l:Double = (-65536)+(-32768); }
	def m2660():void { var l:Double = (-65536)+(65535); }
	def m2661():void { var l:Double = (-65536)+(-65535); }
	def m2662():void { var l:Double = (-65536)+(65536); }
	def m2663():void { var l:Double = (-65536)+(-65536); }
	def m2664():void { var l:Double = (-65536)+(16777216); }
	def m2665():void { var l:Double = (-65536)+(-16777216); }
	def m2666():void { var l:Double = (-65536)+(16777217); }
	def m2667():void { var l:Double = (-65536)+(-16777217); }
	def m2668():void { var l:Double = (-65536)+(2147483647); }
	def m2669():void { var l:Double = (-65536)+(-2147483647); }
	def m2670():void { var l:Double = (16777216)+(w0); }
	def m2671():void { var l:Double = (16777216)+(w1); }
	def m2672():void { var l:Double = (16777216)+(w2); }
	def m2673():void { var l:Double = (16777216)+(w3); }
	def m2674():void { var l:Double = (16777216)+(w4); }
	def m2675():void { var l:Double = (16777216)+(w5); }
	def m2676():void { var l:Double = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m2677():void { var l:Double = (16777216)+(w7); }
	def m2678():void { var l:Double = (16777216)+(w8); }  
	def m2679():void { var l:Double = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m2680():void { var l:Double = (16777216)+(0); }
	def m2681():void { var l:Double = (16777216)+(-0); }
	def m2682():void { var l:Double = (16777216)+(1.1f); }
	def m2683():void { var l:Double = (16777216)+(-1.1f); }
	def m2684():void { var l:Double = (16777216)+(2.2); }
	def m2685():void { var l:Double = (16777216)+(-2.2); }
	def m2686():void { var l:Double = (16777216)+(127); }
	def m2687():void { var l:Double = (16777216)+(-127); }
	def m2688():void { var l:Double = (16777216)+(128); }
	def m2689():void { var l:Double = (16777216)+(-128); }
	def m2690():void { var l:Double = (16777216)+(255); }
	def m2691():void { var l:Double = (16777216)+(-255); }
	def m2692():void { var l:Double = (16777216)+(256); }
	def m2693():void { var l:Double = (16777216)+(-256); }
	def m2694():void { var l:Double = (16777216)+(32767); }
	def m2695():void { var l:Double = (16777216)+(-32767); }
	def m2696():void { var l:Double = (16777216)+(32768); }
	def m2697():void { var l:Double = (16777216)+(-32768); }
	def m2698():void { var l:Double = (16777216)+(65535); }
	def m2699():void { var l:Double = (16777216)+(-65535); }
	def m2700():void { var l:Double = (16777216)+(65536); }
	def m2701():void { var l:Double = (16777216)+(-65536); }
	def m2702():void { var l:Double = (16777216)+(16777216); }
	def m2703():void { var l:Double = (16777216)+(-16777216); }
	def m2704():void { var l:Double = (16777216)+(16777217); }
	def m2705():void { var l:Double = (16777216)+(-16777217); }
	def m2706():void { var l:Double = (16777216)+(2147483647); }
	def m2707():void { var l:Double = (16777216)+(-2147483647); }
	def m2708():void { var l:Double = (-16777216)+(w0); }
	def m2709():void { var l:Double = (-16777216)+(w1); }
	def m2710():void { var l:Double = (-16777216)+(w2); }
	def m2711():void { var l:Double = (-16777216)+(w3); }
	def m2712():void { var l:Double = (-16777216)+(w4); }
	def m2713():void { var l:Double = (-16777216)+(w5); }
	def m2714():void { var l:Double = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m2715():void { var l:Double = (-16777216)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m2716():void { var l:Double = (-16777216)+(w8); }  
	def m2717():void { var l:Double = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m2718():void { var l:Double = (-16777216)+(0); }
	def m2719():void { var l:Double = (-16777216)+(-0); }
	def m2720():void { var l:Double = (-16777216)+(1.1f); }
	def m2721():void { var l:Double = (-16777216)+(-1.1f); }
	def m2722():void { var l:Double = (-16777216)+(2.2); }
	def m2723():void { var l:Double = (-16777216)+(-2.2); }
	def m2724():void { var l:Double = (-16777216)+(127); }
	def m2725():void { var l:Double = (-16777216)+(-127); }
	def m2726():void { var l:Double = (-16777216)+(128); }
	def m2727():void { var l:Double = (-16777216)+(-128); }
	def m2728():void { var l:Double = (-16777216)+(255); }
	def m2729():void { var l:Double = (-16777216)+(-255); }
	def m2730():void { var l:Double = (-16777216)+(256); }
	def m2731():void { var l:Double = (-16777216)+(-256); }
	def m2732():void { var l:Double = (-16777216)+(32767); }
	def m2733():void { var l:Double = (-16777216)+(-32767); }
	def m2734():void { var l:Double = (-16777216)+(32768); }
	def m2735():void { var l:Double = (-16777216)+(-32768); }
	def m2736():void { var l:Double = (-16777216)+(65535); }
	def m2737():void { var l:Double = (-16777216)+(-65535); }
	def m2738():void { var l:Double = (-16777216)+(65536); }
	def m2739():void { var l:Double = (-16777216)+(-65536); }
	def m2740():void { var l:Double = (-16777216)+(16777216); }
	def m2741():void { var l:Double = (-16777216)+(-16777216); }
	def m2742():void { var l:Double = (-16777216)+(16777217); }
	def m2743():void { var l:Double = (-16777216)+(-16777217); }
	def m2744():void { var l:Double = (-16777216)+(2147483647); }
	def m2745():void { var l:Double = (-16777216)+(-2147483647); }
	def m2746():void { var l:Double = (16777217)+(w0); }
	def m2747():void { var l:Double = (16777217)+(w1); }
	def m2748():void { var l:Double = (16777217)+(w2); }
	def m2749():void { var l:Double = (16777217)+(w3); }
	def m2750():void { var l:Double = (16777217)+(w4); }
	def m2751():void { var l:Double = (16777217)+(w5); }
	def m2752():void { var l:Double = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m2753():void { var l:Double = (16777217)+(w7); }
	def m2754():void { var l:Double = (16777217)+(w8); }  
	def m2755():void { var l:Double = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m2756():void { var l:Double = (16777217)+(0); }
	def m2757():void { var l:Double = (16777217)+(-0); }
	def m2758():void { var l:Double = (16777217)+(1.1f); }
	def m2759():void { var l:Double = (16777217)+(-1.1f); }
	def m2760():void { var l:Double = (16777217)+(2.2); }
	def m2761():void { var l:Double = (16777217)+(-2.2); }
	def m2762():void { var l:Double = (16777217)+(127); }
	def m2763():void { var l:Double = (16777217)+(-127); }
	def m2764():void { var l:Double = (16777217)+(128); }
	def m2765():void { var l:Double = (16777217)+(-128); }
	def m2766():void { var l:Double = (16777217)+(255); }
	def m2767():void { var l:Double = (16777217)+(-255); }
	def m2768():void { var l:Double = (16777217)+(256); }
	def m2769():void { var l:Double = (16777217)+(-256); }
	def m2770():void { var l:Double = (16777217)+(32767); }
	def m2771():void { var l:Double = (16777217)+(-32767); }
	def m2772():void { var l:Double = (16777217)+(32768); }
	def m2773():void { var l:Double = (16777217)+(-32768); }
	def m2774():void { var l:Double = (16777217)+(65535); }
	def m2775():void { var l:Double = (16777217)+(-65535); }
	def m2776():void { var l:Double = (16777217)+(65536); }
	def m2777():void { var l:Double = (16777217)+(-65536); }
	def m2778():void { var l:Double = (16777217)+(16777216); }
	def m2779():void { var l:Double = (16777217)+(-16777216); }
	def m2780():void { var l:Double = (16777217)+(16777217); }
	def m2781():void { var l:Double = (16777217)+(-16777217); }
	def m2782():void { var l:Double = (16777217)+(2147483647); }
	def m2783():void { var l:Double = (16777217)+(-2147483647); }
	def m2784():void { var l:Double = (-16777217)+(w0); }
	def m2785():void { var l:Double = (-16777217)+(w1); }
	def m2786():void { var l:Double = (-16777217)+(w2); }
	def m2787():void { var l:Double = (-16777217)+(w3); }
	def m2788():void { var l:Double = (-16777217)+(w4); }
	def m2789():void { var l:Double = (-16777217)+(w5); }
	def m2790():void { var l:Double = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m2791():void { var l:Double = (-16777217)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m2792():void { var l:Double = (-16777217)+(w8); }  
	def m2793():void { var l:Double = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m2794():void { var l:Double = (-16777217)+(0); }
	def m2795():void { var l:Double = (-16777217)+(-0); }
	def m2796():void { var l:Double = (-16777217)+(1.1f); }
	def m2797():void { var l:Double = (-16777217)+(-1.1f); }
	def m2798():void { var l:Double = (-16777217)+(2.2); }
	def m2799():void { var l:Double = (-16777217)+(-2.2); }
	def m2800():void { var l:Double = (-16777217)+(127); }
	def m2801():void { var l:Double = (-16777217)+(-127); }
	def m2802():void { var l:Double = (-16777217)+(128); }
	def m2803():void { var l:Double = (-16777217)+(-128); }
	def m2804():void { var l:Double = (-16777217)+(255); }
	def m2805():void { var l:Double = (-16777217)+(-255); }
	def m2806():void { var l:Double = (-16777217)+(256); }
	def m2807():void { var l:Double = (-16777217)+(-256); }
	def m2808():void { var l:Double = (-16777217)+(32767); }
	def m2809():void { var l:Double = (-16777217)+(-32767); }
	def m2810():void { var l:Double = (-16777217)+(32768); }
	def m2811():void { var l:Double = (-16777217)+(-32768); }
	def m2812():void { var l:Double = (-16777217)+(65535); }
	def m2813():void { var l:Double = (-16777217)+(-65535); }
	def m2814():void { var l:Double = (-16777217)+(65536); }
	def m2815():void { var l:Double = (-16777217)+(-65536); }
	def m2816():void { var l:Double = (-16777217)+(16777216); }
	def m2817():void { var l:Double = (-16777217)+(-16777216); }
	def m2818():void { var l:Double = (-16777217)+(16777217); }
	def m2819():void { var l:Double = (-16777217)+(-16777217); }
	def m2820():void { var l:Double = (-16777217)+(2147483647); }
	def m2821():void { var l:Double = (-16777217)+(-2147483647); }
	def m2822():void { var l:Double = (2147483647)+(w0); }
	def m2823():void { var l:Double = (2147483647)+(w1); }
	def m2824():void { var l:Double = (2147483647)+(w2); }
	def m2825():void { var l:Double = (2147483647)+(w3); }
	def m2826():void { var l:Double = (2147483647)+(w4); }
	def m2827():void { var l:Double = (2147483647)+(w5); }
	def m2828():void { var l:Double = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m2829():void { var l:Double = (2147483647)+(w7); }
	def m2830():void { var l:Double = (2147483647)+(w8); }  
	def m2831():void { var l:Double = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m2832():void { var l:Double = (2147483647)+(0); }
	def m2833():void { var l:Double = (2147483647)+(-0); }
	def m2834():void { var l:Double = (2147483647)+(1.1f); }
	def m2835():void { var l:Double = (2147483647)+(-1.1f); }
	def m2836():void { var l:Double = (2147483647)+(2.2); }
	def m2837():void { var l:Double = (2147483647)+(-2.2); }
	def m2838():void { var l:Double = (2147483647)+(127); }
	def m2839():void { var l:Double = (2147483647)+(-127); }
	def m2840():void { var l:Double = (2147483647)+(128); }
	def m2841():void { var l:Double = (2147483647)+(-128); }
	def m2842():void { var l:Double = (2147483647)+(255); }
	def m2843():void { var l:Double = (2147483647)+(-255); }
	def m2844():void { var l:Double = (2147483647)+(256); }
	def m2845():void { var l:Double = (2147483647)+(-256); }
	def m2846():void { var l:Double = (2147483647)+(32767); }
	def m2847():void { var l:Double = (2147483647)+(-32767); }
	def m2848():void { var l:Double = (2147483647)+(32768); }
	def m2849():void { var l:Double = (2147483647)+(-32768); }
	def m2850():void { var l:Double = (2147483647)+(65535); }
	def m2851():void { var l:Double = (2147483647)+(-65535); }
	def m2852():void { var l:Double = (2147483647)+(65536); }
	def m2853():void { var l:Double = (2147483647)+(-65536); }
	def m2854():void { var l:Double = (2147483647)+(16777216); }
	def m2855():void { var l:Double = (2147483647)+(-16777216); }
	def m2856():void { var l:Double = (2147483647)+(16777217); }
	def m2857():void { var l:Double = (2147483647)+(-16777217); }
	def m2858():void { var l:Double = (2147483647)+(2147483647); }
	def m2859():void { var l:Double = (2147483647)+(-2147483647); }
	def m2860():void { var l:Double = (-2147483647)+(w0); }
	def m2861():void { var l:Double = (-2147483647)+(w1); }
	def m2862():void { var l:Double = (-2147483647)+(w2); }
	def m2863():void { var l:Double = (-2147483647)+(w3); }
	def m2864():void { var l:Double = (-2147483647)+(w4); }
	def m2865():void { var l:Double = (-2147483647)+(w5); }
	def m2866():void { var l:Double = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m2867():void { var l:Double = (-2147483647)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m2868():void { var l:Double = (-2147483647)+(w8); }  
	def m2869():void { var l:Double = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m2870():void { var l:Double = (-2147483647)+(0); }
	def m2871():void { var l:Double = (-2147483647)+(-0); }
	def m2872():void { var l:Double = (-2147483647)+(1.1f); }
	def m2873():void { var l:Double = (-2147483647)+(-1.1f); }
	def m2874():void { var l:Double = (-2147483647)+(2.2); }
	def m2875():void { var l:Double = (-2147483647)+(-2.2); }
	def m2876():void { var l:Double = (-2147483647)+(127); }
	def m2877():void { var l:Double = (-2147483647)+(-127); }
	def m2878():void { var l:Double = (-2147483647)+(128); }
	def m2879():void { var l:Double = (-2147483647)+(-128); }
	def m2880():void { var l:Double = (-2147483647)+(255); }
	def m2881():void { var l:Double = (-2147483647)+(-255); }
	def m2882():void { var l:Double = (-2147483647)+(256); }
	def m2883():void { var l:Double = (-2147483647)+(-256); }
	def m2884():void { var l:Double = (-2147483647)+(32767); }
	def m2885():void { var l:Double = (-2147483647)+(-32767); }
	def m2886():void { var l:Double = (-2147483647)+(32768); }
	def m2887():void { var l:Double = (-2147483647)+(-32768); }
	def m2888():void { var l:Double = (-2147483647)+(65535); }
	def m2889():void { var l:Double = (-2147483647)+(-65535); }
	def m2890():void { var l:Double = (-2147483647)+(65536); }
	def m2891():void { var l:Double = (-2147483647)+(-65536); }
	def m2892():void { var l:Double = (-2147483647)+(16777216); }
	def m2893():void { var l:Double = (-2147483647)+(-16777216); }
	def m2894():void { var l:Double = (-2147483647)+(16777217); }
	def m2895():void { var l:Double = (-2147483647)+(-16777217); }
	def m2896():void { var l:Double = (-2147483647)+(2147483647); }
	def m2897():void { var l:Double = (-2147483647)+(-2147483647); }
	def m2898():void { var l:Byte = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2899():void { var l:Byte = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2900():void { var l:Byte = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2901():void { var l:Byte = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2902():void { var l:Byte = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2903():void { var l:Byte = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2904():void { var l:Byte = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2905():void { var l:Byte = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2906():void { var l:Byte = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2907():void { var l:Byte = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2908():void { var l:Byte = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2909():void { var l:Byte = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2910():void { var l:Byte = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2911():void { var l:Byte = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2912():void { var l:Byte = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2913():void { var l:Byte = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2914():void { var l:Byte = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2915():void { var l:Byte = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2916():void { var l:Byte = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2917():void { var l:Byte = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2918():void { var l:Byte = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2919():void { var l:Byte = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2920():void { var l:Byte = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2921():void { var l:Byte = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2922():void { var l:Byte = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2923():void { var l:Byte = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2924():void { var l:Byte = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2925():void { var l:Byte = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2926():void { var l:Byte = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2927():void { var l:Byte = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2928():void { var l:Byte = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2929():void { var l:Byte = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2930():void { var l:Byte = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2931():void { var l:Byte = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2932():void { var l:Byte = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2933():void { var l:Byte = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2934():void { var l:Byte = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2935():void { var l:Byte = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2936():void { var l:Byte = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2937():void { var l:Byte = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2938():void { var l:Byte = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2939():void { var l:Byte = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2940():void { var l:Byte = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2941():void { var l:Byte = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2942():void { var l:Byte = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2943():void { var l:Byte = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2944():void { var l:Byte = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2945():void { var l:Byte = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2946():void { var l:Byte = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2947():void { var l:Byte = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2948():void { var l:Byte = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2949():void { var l:Byte = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2950():void { var l:Byte = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2951():void { var l:Byte = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2952():void { var l:Byte = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2953():void { var l:Byte = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2954():void { var l:Byte = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2955():void { var l:Byte = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2956():void { var l:Byte = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2957():void { var l:Byte = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2958():void { var l:Byte = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2959():void { var l:Byte = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2960():void { var l:Byte = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2961():void { var l:Byte = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2962():void { var l:Byte = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2963():void { var l:Byte = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2964():void { var l:Byte = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2965():void { var l:Byte = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2966():void { var l:Byte = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2967():void { var l:Byte = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2968():void { var l:Byte = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2969():void { var l:Byte = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2970():void { var l:Byte = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2971():void { var l:Byte = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2972():void { var l:Byte = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2973():void { var l:Byte = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2974():void { var l:Byte = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2975():void { var l:Byte = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2976():void { var l:Byte = (w2)+(w2); }
	def m2977():void { var l:Byte = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2978():void { var l:Byte = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m2979():void { var l:Byte = (w2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m2980():void { var l:Byte = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m2981():void { var l:Byte = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m2982():void { var l:Byte = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m2983():void { var l:Byte = (w2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m2984():void { var l:Byte = (w2)+(0); }  
	def m2985():void { var l:Byte = (w2)+(-0); }  
	def m2986():void { var l:Byte = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2987():void { var l:Byte = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m2988():void { var l:Byte = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2989():void { var l:Byte = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m2990():void { var l:Byte = (w2)+(127); }  
	def m2991():void { var l:Byte = (w2)+(-127); }  
	def m2992():void { var l:Byte = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2993():void { var l:Byte = (w2)+(-128); }  
	def m2994():void { var l:Byte = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2995():void { var l:Byte = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2996():void { var l:Byte = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2997():void { var l:Byte = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2998():void { var l:Byte = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m2999():void { var l:Byte = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3000():void { var l:Byte = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3001():void { var l:Byte = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3002():void { var l:Byte = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3003():void { var l:Byte = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3004():void { var l:Byte = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3005():void { var l:Byte = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3006():void { var l:Byte = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3007():void { var l:Byte = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3008():void { var l:Byte = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3009():void { var l:Byte = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3010():void { var l:Byte = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3011():void { var l:Byte = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3012():void { var l:Byte = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3013():void { var l:Byte = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3014():void { var l:Byte = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3015():void { var l:Byte = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3016():void { var l:Byte = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3017():void { var l:Byte = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3018():void { var l:Byte = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m3019():void { var l:Byte = (w3)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m3020():void { var l:Byte = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3021():void { var l:Byte = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m3022():void { var l:Byte = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3023():void { var l:Byte = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3024():void { var l:Byte = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3025():void { var l:Byte = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3026():void { var l:Byte = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3027():void { var l:Byte = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3028():void { var l:Byte = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3029():void { var l:Byte = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3030():void { var l:Byte = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3031():void { var l:Byte = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3032():void { var l:Byte = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3033():void { var l:Byte = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3034():void { var l:Byte = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3035():void { var l:Byte = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3036():void { var l:Byte = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3037():void { var l:Byte = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3038():void { var l:Byte = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3039():void { var l:Byte = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3040():void { var l:Byte = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3041():void { var l:Byte = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3042():void { var l:Byte = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3043():void { var l:Byte = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3044():void { var l:Byte = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3045():void { var l:Byte = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3046():void { var l:Byte = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3047():void { var l:Byte = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3048():void { var l:Byte = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3049():void { var l:Byte = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3050():void { var l:Byte = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3051():void { var l:Byte = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3052():void { var l:Byte = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3053():void { var l:Byte = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3054():void { var l:Byte = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3055():void { var l:Byte = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3056():void { var l:Byte = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m3057():void { var l:Byte = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m3058():void { var l:Byte = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m3059():void { var l:Byte = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m3060():void { var l:Byte = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3061():void { var l:Byte = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3062():void { var l:Byte = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3063():void { var l:Byte = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3064():void { var l:Byte = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3065():void { var l:Byte = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3066():void { var l:Byte = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3067():void { var l:Byte = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3068():void { var l:Byte = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3069():void { var l:Byte = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3070():void { var l:Byte = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3071():void { var l:Byte = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3072():void { var l:Byte = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3073():void { var l:Byte = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3074():void { var l:Byte = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3075():void { var l:Byte = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3076():void { var l:Byte = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3077():void { var l:Byte = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3078():void { var l:Byte = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3079():void { var l:Byte = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3080():void { var l:Byte = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3081():void { var l:Byte = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3082():void { var l:Byte = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3083():void { var l:Byte = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3084():void { var l:Byte = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3085():void { var l:Byte = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3086():void { var l:Byte = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3087():void { var l:Byte = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3088():void { var l:Byte = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3089():void { var l:Byte = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3090():void { var l:Byte = (w5)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3091():void { var l:Byte = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3092():void { var l:Byte = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3093():void { var l:Byte = (w5)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3094():void { var l:Byte = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m3095():void { var l:Byte = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3096():void { var l:Byte = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3097():void { var l:Byte = (w5)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m3098():void { var l:Byte = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3099():void { var l:Byte = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3100():void { var l:Byte = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3101():void { var l:Byte = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3102():void { var l:Byte = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3103():void { var l:Byte = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3104():void { var l:Byte = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3105():void { var l:Byte = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3106():void { var l:Byte = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3107():void { var l:Byte = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3108():void { var l:Byte = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3109():void { var l:Byte = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3110():void { var l:Byte = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3111():void { var l:Byte = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3112():void { var l:Byte = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3113():void { var l:Byte = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3114():void { var l:Byte = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3115():void { var l:Byte = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m3116():void { var l:Byte = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3117():void { var l:Byte = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3118():void { var l:Byte = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3119():void { var l:Byte = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3120():void { var l:Byte = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3121():void { var l:Byte = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3122():void { var l:Byte = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3123():void { var l:Byte = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3124():void { var l:Byte = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3125():void { var l:Byte = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3126():void { var l:Byte = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3127():void { var l:Byte = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3128():void { var l:Byte = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m3129():void { var l:Byte = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m3130():void { var l:Byte = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m3131():void { var l:Byte = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m3132():void { var l:Byte = (w6)+(w6); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3133():void { var l:Byte = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3134():void { var l:Byte = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3135():void { var l:Byte = (w6)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3136():void { var l:Byte = (w6)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3137():void { var l:Byte = (w6)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3138():void { var l:Byte = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3139():void { var l:Byte = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3140():void { var l:Byte = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3141():void { var l:Byte = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3142():void { var l:Byte = (w6)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3143():void { var l:Byte = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m3144():void { var l:Byte = (w6)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3145():void { var l:Byte = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m3146():void { var l:Byte = (w6)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3147():void { var l:Byte = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m3148():void { var l:Byte = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m3149():void { var l:Byte = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m3150():void { var l:Byte = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m3151():void { var l:Byte = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m3152():void { var l:Byte = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m3153():void { var l:Byte = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m3154():void { var l:Byte = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m3155():void { var l:Byte = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m3156():void { var l:Byte = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m3157():void { var l:Byte = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m3158():void { var l:Byte = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m3159():void { var l:Byte = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m3160():void { var l:Byte = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m3161():void { var l:Byte = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m3162():void { var l:Byte = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m3163():void { var l:Byte = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m3164():void { var l:Byte = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3165():void { var l:Byte = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3166():void { var l:Byte = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3167():void { var l:Byte = (w7)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m3168():void { var l:Byte = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m3169():void { var l:Byte = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3170():void { var l:Byte = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3171():void { var l:Byte = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3172():void { var l:Byte = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3173():void { var l:Byte = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3174():void { var l:Byte = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3175():void { var l:Byte = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3176():void { var l:Byte = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3177():void { var l:Byte = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3178():void { var l:Byte = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3179():void { var l:Byte = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3180():void { var l:Byte = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3181():void { var l:Byte = (w7)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m3182():void { var l:Byte = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3183():void { var l:Byte = (w7)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m3184():void { var l:Byte = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3185():void { var l:Byte = (w7)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m3186():void { var l:Byte = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3187():void { var l:Byte = (w7)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m3188():void { var l:Byte = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3189():void { var l:Byte = (w7)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m3190():void { var l:Byte = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3191():void { var l:Byte = (w7)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m3192():void { var l:Byte = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3193():void { var l:Byte = (w7)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m3194():void { var l:Byte = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3195():void { var l:Byte = (w7)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m3196():void { var l:Byte = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3197():void { var l:Byte = (w7)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m3198():void { var l:Byte = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3199():void { var l:Byte = (w7)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m3200():void { var l:Byte = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3201():void { var l:Byte = (w7)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m3202():void { var l:Byte = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3203():void { var l:Byte = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3204():void { var l:Byte = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3205():void { var l:Byte = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3206():void { var l:Byte = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m3207():void { var l:Byte = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3208():void { var l:Byte = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3209():void { var l:Byte = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3210():void { var l:Byte = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3211():void { var l:Byte = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3212():void { var l:Byte = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3213():void { var l:Byte = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3214():void { var l:Byte = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3215():void { var l:Byte = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3216():void { var l:Byte = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3217():void { var l:Byte = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3218():void { var l:Byte = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3219():void { var l:Byte = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3220():void { var l:Byte = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3221():void { var l:Byte = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3222():void { var l:Byte = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3223():void { var l:Byte = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3224():void { var l:Byte = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3225():void { var l:Byte = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3226():void { var l:Byte = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3227():void { var l:Byte = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3228():void { var l:Byte = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3229():void { var l:Byte = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3230():void { var l:Byte = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3231():void { var l:Byte = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3232():void { var l:Byte = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3233():void { var l:Byte = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3234():void { var l:Byte = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3235():void { var l:Byte = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3236():void { var l:Byte = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3237():void { var l:Byte = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3238():void { var l:Byte = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3239():void { var l:Byte = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3240():void { var l:Byte = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3241():void { var l:Byte = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3242():void { var l:Byte = (w9)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3243():void { var l:Byte = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m3244():void { var l:Byte = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m3245():void { var l:Byte = (w9)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m3246():void { var l:Byte = (w9)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3247():void { var l:Byte = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3248():void { var l:Byte = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3249():void { var l:Byte = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3250():void { var l:Byte = (w9)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3251():void { var l:Byte = (w9)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3252():void { var l:Byte = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3253():void { var l:Byte = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3254():void { var l:Byte = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3255():void { var l:Byte = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3256():void { var l:Byte = (w9)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3257():void { var l:Byte = (w9)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m3258():void { var l:Byte = (w9)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3259():void { var l:Byte = (w9)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m3260():void { var l:Byte = (w9)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3261():void { var l:Byte = (w9)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m3262():void { var l:Byte = (w9)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3263():void { var l:Byte = (w9)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m3264():void { var l:Byte = (w9)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3265():void { var l:Byte = (w9)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m3266():void { var l:Byte = (w9)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3267():void { var l:Byte = (w9)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m3268():void { var l:Byte = (w9)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3269():void { var l:Byte = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m3270():void { var l:Byte = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m3271():void { var l:Byte = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m3272():void { var l:Byte = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m3273():void { var l:Byte = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m3274():void { var l:Byte = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m3275():void { var l:Byte = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m3276():void { var l:Byte = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m3277():void { var l:Byte = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m3278():void { var l:Byte = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3279():void { var l:Byte = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3280():void { var l:Byte = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3281():void { var l:Byte = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3282():void { var l:Byte = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3283():void { var l:Byte = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3284():void { var l:Byte = (0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3285():void { var l:Byte = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3286():void { var l:Byte = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3287():void { var l:Byte = (0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3288():void { var l:Byte = (0)+(0); }
	def m3289():void { var l:Byte = (0)+(-0); }
	def m3290():void { var l:Byte = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3291():void { var l:Byte = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3292():void { var l:Byte = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3293():void { var l:Byte = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3294():void { var l:Byte = (0)+(127); }
	def m3295():void { var l:Byte = (0)+(-127); }
	def m3296():void { var l:Byte = (0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3297():void { var l:Byte = (0)+(-128); }
	def m3298():void { var l:Byte = (0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3299():void { var l:Byte = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3300():void { var l:Byte = (0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3301():void { var l:Byte = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3302():void { var l:Byte = (0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3303():void { var l:Byte = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3304():void { var l:Byte = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3305():void { var l:Byte = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3306():void { var l:Byte = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3307():void { var l:Byte = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3308():void { var l:Byte = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3309():void { var l:Byte = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3310():void { var l:Byte = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3311():void { var l:Byte = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3312():void { var l:Byte = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3313():void { var l:Byte = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3314():void { var l:Byte = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3315():void { var l:Byte = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3316():void { var l:Byte = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3317():void { var l:Byte = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3318():void { var l:Byte = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3319():void { var l:Byte = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3320():void { var l:Byte = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3321():void { var l:Byte = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3322():void { var l:Byte = (-0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3323():void { var l:Byte = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3324():void { var l:Byte = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3325():void { var l:Byte = (-0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3326():void { var l:Byte = (-0)+(0); }
	def m3327():void { var l:Byte = (-0)+(-0); }
	def m3328():void { var l:Byte = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3329():void { var l:Byte = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3330():void { var l:Byte = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3331():void { var l:Byte = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3332():void { var l:Byte = (-0)+(127); }
	def m3333():void { var l:Byte = (-0)+(-127); }
	def m3334():void { var l:Byte = (-0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3335():void { var l:Byte = (-0)+(-128); }
	def m3336():void { var l:Byte = (-0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3337():void { var l:Byte = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3338():void { var l:Byte = (-0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3339():void { var l:Byte = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3340():void { var l:Byte = (-0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3341():void { var l:Byte = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3342():void { var l:Byte = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3343():void { var l:Byte = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3344():void { var l:Byte = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3345():void { var l:Byte = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3346():void { var l:Byte = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3347():void { var l:Byte = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3348():void { var l:Byte = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3349():void { var l:Byte = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3350():void { var l:Byte = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3351():void { var l:Byte = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3352():void { var l:Byte = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3353():void { var l:Byte = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3354():void { var l:Byte = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3355():void { var l:Byte = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3356():void { var l:Byte = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3357():void { var l:Byte = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3358():void { var l:Byte = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3359():void { var l:Byte = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3360():void { var l:Byte = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3361():void { var l:Byte = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3362():void { var l:Byte = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3363():void { var l:Byte = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3364():void { var l:Byte = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3365():void { var l:Byte = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3366():void { var l:Byte = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3367():void { var l:Byte = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3368():void { var l:Byte = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3369():void { var l:Byte = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3370():void { var l:Byte = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3371():void { var l:Byte = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3372():void { var l:Byte = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3373():void { var l:Byte = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3374():void { var l:Byte = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3375():void { var l:Byte = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3376():void { var l:Byte = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3377():void { var l:Byte = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3378():void { var l:Byte = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3379():void { var l:Byte = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3380():void { var l:Byte = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3381():void { var l:Byte = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3382():void { var l:Byte = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3383():void { var l:Byte = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3384():void { var l:Byte = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3385():void { var l:Byte = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3386():void { var l:Byte = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3387():void { var l:Byte = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3388():void { var l:Byte = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3389():void { var l:Byte = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3390():void { var l:Byte = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3391():void { var l:Byte = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3392():void { var l:Byte = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3393():void { var l:Byte = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3394():void { var l:Byte = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3395():void { var l:Byte = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3396():void { var l:Byte = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3397():void { var l:Byte = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3398():void { var l:Byte = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3399():void { var l:Byte = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3400():void { var l:Byte = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3401():void { var l:Byte = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3402():void { var l:Byte = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3403():void { var l:Byte = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3404():void { var l:Byte = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3405():void { var l:Byte = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3406():void { var l:Byte = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3407():void { var l:Byte = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3408():void { var l:Byte = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3409():void { var l:Byte = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3410():void { var l:Byte = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3411():void { var l:Byte = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3412():void { var l:Byte = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3413():void { var l:Byte = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3414():void { var l:Byte = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3415():void { var l:Byte = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3416():void { var l:Byte = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3417():void { var l:Byte = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3418():void { var l:Byte = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3419():void { var l:Byte = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3420():void { var l:Byte = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3421():void { var l:Byte = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3422():void { var l:Byte = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3423():void { var l:Byte = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3424():void { var l:Byte = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3425():void { var l:Byte = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3426():void { var l:Byte = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3427():void { var l:Byte = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3428():void { var l:Byte = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3429():void { var l:Byte = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3430():void { var l:Byte = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3431():void { var l:Byte = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3432():void { var l:Byte = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3433():void { var l:Byte = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3434():void { var l:Byte = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3435():void { var l:Byte = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3436():void { var l:Byte = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3437():void { var l:Byte = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3438():void { var l:Byte = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3439():void { var l:Byte = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3440():void { var l:Byte = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3441():void { var l:Byte = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3442():void { var l:Byte = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3443():void { var l:Byte = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3444():void { var l:Byte = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3445():void { var l:Byte = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3446():void { var l:Byte = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3447():void { var l:Byte = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3448():void { var l:Byte = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3449():void { var l:Byte = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3450():void { var l:Byte = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3451():void { var l:Byte = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3452():void { var l:Byte = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3453():void { var l:Byte = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3454():void { var l:Byte = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3455():void { var l:Byte = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3456():void { var l:Byte = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3457():void { var l:Byte = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3458():void { var l:Byte = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3459():void { var l:Byte = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3460():void { var l:Byte = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3461():void { var l:Byte = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3462():void { var l:Byte = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3463():void { var l:Byte = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3464():void { var l:Byte = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3465():void { var l:Byte = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3466():void { var l:Byte = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3467():void { var l:Byte = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3468():void { var l:Byte = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3469():void { var l:Byte = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3470():void { var l:Byte = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3471():void { var l:Byte = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3472():void { var l:Byte = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3473():void { var l:Byte = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3474():void { var l:Byte = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3475():void { var l:Byte = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3476():void { var l:Byte = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3477():void { var l:Byte = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3478():void { var l:Byte = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3479():void { var l:Byte = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3480():void { var l:Byte = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3481():void { var l:Byte = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3482():void { var l:Byte = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3483():void { var l:Byte = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3484():void { var l:Byte = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3485():void { var l:Byte = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3486():void { var l:Byte = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3487():void { var l:Byte = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3488():void { var l:Byte = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3489():void { var l:Byte = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3490():void { var l:Byte = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3491():void { var l:Byte = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3492():void { var l:Byte = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3493():void { var l:Byte = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3494():void { var l:Byte = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3495():void { var l:Byte = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3496():void { var l:Byte = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3497():void { var l:Byte = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3498():void { var l:Byte = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3499():void { var l:Byte = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3500():void { var l:Byte = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3501():void { var l:Byte = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3502():void { var l:Byte = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3503():void { var l:Byte = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3504():void { var l:Byte = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3505():void { var l:Byte = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3506():void { var l:Byte = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3507():void { var l:Byte = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3508():void { var l:Byte = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3509():void { var l:Byte = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3510():void { var l:Byte = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3511():void { var l:Byte = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3512():void { var l:Byte = (127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((127)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3513():void { var l:Byte = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3514():void { var l:Byte = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3515():void { var l:Byte = (127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((127)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3516():void { var l:Byte = (127)+(0); }
	def m3517():void { var l:Byte = (127)+(-0); }
	def m3518():void { var l:Byte = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3519():void { var l:Byte = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3520():void { var l:Byte = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3521():void { var l:Byte = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3522():void { var l:Byte = (127)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3523():void { var l:Byte = (127)+(-127); }
	def m3524():void { var l:Byte = (127)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3525():void { var l:Byte = (127)+(-128); }
	def m3526():void { var l:Byte = (127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3527():void { var l:Byte = (127)+(-255); }
	def m3528():void { var l:Byte = (127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3529():void { var l:Byte = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3530():void { var l:Byte = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3531():void { var l:Byte = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3532():void { var l:Byte = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3533():void { var l:Byte = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3534():void { var l:Byte = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3535():void { var l:Byte = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3536():void { var l:Byte = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3537():void { var l:Byte = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3538():void { var l:Byte = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3539():void { var l:Byte = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3540():void { var l:Byte = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3541():void { var l:Byte = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3542():void { var l:Byte = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3543():void { var l:Byte = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3544():void { var l:Byte = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3545():void { var l:Byte = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3546():void { var l:Byte = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3547():void { var l:Byte = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3548():void { var l:Byte = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3549():void { var l:Byte = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3550():void { var l:Byte = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m3551():void { var l:Byte = (-127)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m3552():void { var l:Byte = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3553():void { var l:Byte = (-127)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m3554():void { var l:Byte = (-127)+(0); }
	def m3555():void { var l:Byte = (-127)+(-0); }
	def m3556():void { var l:Byte = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3557():void { var l:Byte = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3558():void { var l:Byte = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3559():void { var l:Byte = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3560():void { var l:Byte = (-127)+(127); }
	def m3561():void { var l:Byte = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3562():void { var l:Byte = (-127)+(128); }
	def m3563():void { var l:Byte = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3564():void { var l:Byte = (-127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3565():void { var l:Byte = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3566():void { var l:Byte = (-127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3567():void { var l:Byte = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3568():void { var l:Byte = (-127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3569():void { var l:Byte = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3570():void { var l:Byte = (-127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3571():void { var l:Byte = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3572():void { var l:Byte = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3573():void { var l:Byte = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3574():void { var l:Byte = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3575():void { var l:Byte = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3576():void { var l:Byte = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3577():void { var l:Byte = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3578():void { var l:Byte = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3579():void { var l:Byte = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3580():void { var l:Byte = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3581():void { var l:Byte = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3582():void { var l:Byte = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3583():void { var l:Byte = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3584():void { var l:Byte = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3585():void { var l:Byte = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3586():void { var l:Byte = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3587():void { var l:Byte = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3588():void { var l:Byte = (128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((128)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3589():void { var l:Byte = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3590():void { var l:Byte = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3591():void { var l:Byte = (128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((128)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3592():void { var l:Byte = (128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3593():void { var l:Byte = (128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3594():void { var l:Byte = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3595():void { var l:Byte = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3596():void { var l:Byte = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3597():void { var l:Byte = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3598():void { var l:Byte = (128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3599():void { var l:Byte = (128)+(-127); }
	def m3600():void { var l:Byte = (128)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3601():void { var l:Byte = (128)+(-128); }
	def m3602():void { var l:Byte = (128)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3603():void { var l:Byte = (128)+(-255); }
	def m3604():void { var l:Byte = (128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3605():void { var l:Byte = (128)+(-256); }
	def m3606():void { var l:Byte = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3607():void { var l:Byte = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3608():void { var l:Byte = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3609():void { var l:Byte = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3610():void { var l:Byte = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3611():void { var l:Byte = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3612():void { var l:Byte = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3613():void { var l:Byte = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3614():void { var l:Byte = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3615():void { var l:Byte = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3616():void { var l:Byte = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3617():void { var l:Byte = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3618():void { var l:Byte = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3619():void { var l:Byte = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3620():void { var l:Byte = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3621():void { var l:Byte = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3622():void { var l:Byte = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3623():void { var l:Byte = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3624():void { var l:Byte = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3625():void { var l:Byte = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3626():void { var l:Byte = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m3627():void { var l:Byte = (-128)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m3628():void { var l:Byte = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3629():void { var l:Byte = (-128)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m3630():void { var l:Byte = (-128)+(0); }
	def m3631():void { var l:Byte = (-128)+(-0); }
	def m3632():void { var l:Byte = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3633():void { var l:Byte = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3634():void { var l:Byte = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3635():void { var l:Byte = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3636():void { var l:Byte = (-128)+(127); }
	def m3637():void { var l:Byte = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3638():void { var l:Byte = (-128)+(128); }
	def m3639():void { var l:Byte = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3640():void { var l:Byte = (-128)+(255); }
	def m3641():void { var l:Byte = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3642():void { var l:Byte = (-128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3643():void { var l:Byte = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3644():void { var l:Byte = (-128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3645():void { var l:Byte = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3646():void { var l:Byte = (-128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3647():void { var l:Byte = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3648():void { var l:Byte = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3649():void { var l:Byte = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3650():void { var l:Byte = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3651():void { var l:Byte = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3652():void { var l:Byte = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3653():void { var l:Byte = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3654():void { var l:Byte = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3655():void { var l:Byte = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3656():void { var l:Byte = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3657():void { var l:Byte = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3658():void { var l:Byte = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3659():void { var l:Byte = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3660():void { var l:Byte = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3661():void { var l:Byte = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3662():void { var l:Byte = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3663():void { var l:Byte = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3664():void { var l:Byte = (255)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((255)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m3665():void { var l:Byte = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3666():void { var l:Byte = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3667():void { var l:Byte = (255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((255)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3668():void { var l:Byte = (255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3669():void { var l:Byte = (255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3670():void { var l:Byte = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3671():void { var l:Byte = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3672():void { var l:Byte = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3673():void { var l:Byte = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3674():void { var l:Byte = (255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3675():void { var l:Byte = (255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3676():void { var l:Byte = (255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3677():void { var l:Byte = (255)+(-128); }
	def m3678():void { var l:Byte = (255)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3679():void { var l:Byte = (255)+(-255); }
	def m3680():void { var l:Byte = (255)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3681():void { var l:Byte = (255)+(-256); }
	def m3682():void { var l:Byte = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3683():void { var l:Byte = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3684():void { var l:Byte = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3685():void { var l:Byte = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3686():void { var l:Byte = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3687():void { var l:Byte = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3688():void { var l:Byte = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3689():void { var l:Byte = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3690():void { var l:Byte = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3691():void { var l:Byte = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3692():void { var l:Byte = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3693():void { var l:Byte = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3694():void { var l:Byte = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3695():void { var l:Byte = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3696():void { var l:Byte = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3697():void { var l:Byte = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3698():void { var l:Byte = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3699():void { var l:Byte = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3700():void { var l:Byte = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3701():void { var l:Byte = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3702():void { var l:Byte = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m3703():void { var l:Byte = (-255)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m3704():void { var l:Byte = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3705():void { var l:Byte = (-255)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m3706():void { var l:Byte = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3707():void { var l:Byte = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3708():void { var l:Byte = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3709():void { var l:Byte = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3710():void { var l:Byte = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3711():void { var l:Byte = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3712():void { var l:Byte = (-255)+(127); }
	def m3713():void { var l:Byte = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3714():void { var l:Byte = (-255)+(128); }
	def m3715():void { var l:Byte = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3716():void { var l:Byte = (-255)+(255); }
	def m3717():void { var l:Byte = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3718():void { var l:Byte = (-255)+(256); }
	def m3719():void { var l:Byte = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3720():void { var l:Byte = (-255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3721():void { var l:Byte = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3722():void { var l:Byte = (-255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3723():void { var l:Byte = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3724():void { var l:Byte = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3725():void { var l:Byte = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3726():void { var l:Byte = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3727():void { var l:Byte = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3728():void { var l:Byte = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3729():void { var l:Byte = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3730():void { var l:Byte = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3731():void { var l:Byte = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3732():void { var l:Byte = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3733():void { var l:Byte = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3734():void { var l:Byte = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3735():void { var l:Byte = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3736():void { var l:Byte = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3737():void { var l:Byte = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3738():void { var l:Byte = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3739():void { var l:Byte = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3740():void { var l:Byte = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m3741():void { var l:Byte = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3742():void { var l:Byte = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3743():void { var l:Byte = (256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((256)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3744():void { var l:Byte = (256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3745():void { var l:Byte = (256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3746():void { var l:Byte = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3747():void { var l:Byte = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3748():void { var l:Byte = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3749():void { var l:Byte = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3750():void { var l:Byte = (256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3751():void { var l:Byte = (256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3752():void { var l:Byte = (256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3753():void { var l:Byte = (256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3754():void { var l:Byte = (256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3755():void { var l:Byte = (256)+(-255); }
	def m3756():void { var l:Byte = (256)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3757():void { var l:Byte = (256)+(-256); }
	def m3758():void { var l:Byte = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3759():void { var l:Byte = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3760():void { var l:Byte = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3761():void { var l:Byte = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3762():void { var l:Byte = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3763():void { var l:Byte = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3764():void { var l:Byte = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3765():void { var l:Byte = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3766():void { var l:Byte = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3767():void { var l:Byte = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3768():void { var l:Byte = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3769():void { var l:Byte = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3770():void { var l:Byte = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3771():void { var l:Byte = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3772():void { var l:Byte = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3773():void { var l:Byte = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3774():void { var l:Byte = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3775():void { var l:Byte = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3776():void { var l:Byte = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3777():void { var l:Byte = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3778():void { var l:Byte = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m3779():void { var l:Byte = (-256)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m3780():void { var l:Byte = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3781():void { var l:Byte = (-256)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m3782():void { var l:Byte = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3783():void { var l:Byte = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3784():void { var l:Byte = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3785():void { var l:Byte = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3786():void { var l:Byte = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3787():void { var l:Byte = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3788():void { var l:Byte = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3789():void { var l:Byte = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3790():void { var l:Byte = (-256)+(128); }
	def m3791():void { var l:Byte = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3792():void { var l:Byte = (-256)+(255); }
	def m3793():void { var l:Byte = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3794():void { var l:Byte = (-256)+(256); }
	def m3795():void { var l:Byte = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3796():void { var l:Byte = (-256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3797():void { var l:Byte = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3798():void { var l:Byte = (-256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3799():void { var l:Byte = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3800():void { var l:Byte = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3801():void { var l:Byte = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3802():void { var l:Byte = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3803():void { var l:Byte = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3804():void { var l:Byte = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3805():void { var l:Byte = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3806():void { var l:Byte = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3807():void { var l:Byte = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3808():void { var l:Byte = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3809():void { var l:Byte = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3810():void { var l:Byte = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3811():void { var l:Byte = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3812():void { var l:Byte = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3813():void { var l:Byte = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3814():void { var l:Byte = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3815():void { var l:Byte = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3816():void { var l:Byte = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m3817():void { var l:Byte = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3818():void { var l:Byte = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3819():void { var l:Byte = (32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32767)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3820():void { var l:Byte = (32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3821():void { var l:Byte = (32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3822():void { var l:Byte = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3823():void { var l:Byte = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3824():void { var l:Byte = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3825():void { var l:Byte = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3826():void { var l:Byte = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3827():void { var l:Byte = (32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3828():void { var l:Byte = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3829():void { var l:Byte = (32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3830():void { var l:Byte = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3831():void { var l:Byte = (32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3832():void { var l:Byte = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3833():void { var l:Byte = (32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3834():void { var l:Byte = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3835():void { var l:Byte = (32767)+(-32767); }
	def m3836():void { var l:Byte = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3837():void { var l:Byte = (32767)+(-32768); }
	def m3838():void { var l:Byte = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3839():void { var l:Byte = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3840():void { var l:Byte = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3841():void { var l:Byte = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3842():void { var l:Byte = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3843():void { var l:Byte = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3844():void { var l:Byte = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3845():void { var l:Byte = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3846():void { var l:Byte = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3847():void { var l:Byte = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3848():void { var l:Byte = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3849():void { var l:Byte = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3850():void { var l:Byte = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3851():void { var l:Byte = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3852():void { var l:Byte = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3853():void { var l:Byte = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3854():void { var l:Byte = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m3855():void { var l:Byte = (-32767)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m3856():void { var l:Byte = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3857():void { var l:Byte = (-32767)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m3858():void { var l:Byte = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3859():void { var l:Byte = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3860():void { var l:Byte = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3861():void { var l:Byte = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3862():void { var l:Byte = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3863():void { var l:Byte = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3864():void { var l:Byte = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3865():void { var l:Byte = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3866():void { var l:Byte = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3867():void { var l:Byte = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3868():void { var l:Byte = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3869():void { var l:Byte = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3870():void { var l:Byte = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3871():void { var l:Byte = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3872():void { var l:Byte = (-32767)+(32767); }
	def m3873():void { var l:Byte = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3874():void { var l:Byte = (-32767)+(32768); }
	def m3875():void { var l:Byte = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3876():void { var l:Byte = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3877():void { var l:Byte = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3878():void { var l:Byte = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3879():void { var l:Byte = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3880():void { var l:Byte = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3881():void { var l:Byte = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3882():void { var l:Byte = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3883():void { var l:Byte = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3884():void { var l:Byte = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3885():void { var l:Byte = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3886():void { var l:Byte = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3887():void { var l:Byte = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3888():void { var l:Byte = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3889():void { var l:Byte = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3890():void { var l:Byte = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3891():void { var l:Byte = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3892():void { var l:Byte = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m3893():void { var l:Byte = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3894():void { var l:Byte = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3895():void { var l:Byte = (32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32768)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3896():void { var l:Byte = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3897():void { var l:Byte = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3898():void { var l:Byte = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3899():void { var l:Byte = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3900():void { var l:Byte = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3901():void { var l:Byte = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3902():void { var l:Byte = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3903():void { var l:Byte = (32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3904():void { var l:Byte = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3905():void { var l:Byte = (32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3906():void { var l:Byte = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3907():void { var l:Byte = (32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3908():void { var l:Byte = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3909():void { var l:Byte = (32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3910():void { var l:Byte = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3911():void { var l:Byte = (32768)+(-32767); }
	def m3912():void { var l:Byte = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3913():void { var l:Byte = (32768)+(-32768); }
	def m3914():void { var l:Byte = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3915():void { var l:Byte = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3916():void { var l:Byte = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3917():void { var l:Byte = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3918():void { var l:Byte = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3919():void { var l:Byte = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3920():void { var l:Byte = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3921():void { var l:Byte = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3922():void { var l:Byte = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3923():void { var l:Byte = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3924():void { var l:Byte = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3925():void { var l:Byte = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3926():void { var l:Byte = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3927():void { var l:Byte = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3928():void { var l:Byte = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3929():void { var l:Byte = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3930():void { var l:Byte = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m3931():void { var l:Byte = (-32768)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m3932():void { var l:Byte = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3933():void { var l:Byte = (-32768)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m3934():void { var l:Byte = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3935():void { var l:Byte = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3936():void { var l:Byte = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3937():void { var l:Byte = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3938():void { var l:Byte = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3939():void { var l:Byte = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3940():void { var l:Byte = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3941():void { var l:Byte = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3942():void { var l:Byte = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3943():void { var l:Byte = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3944():void { var l:Byte = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3945():void { var l:Byte = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3946():void { var l:Byte = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3947():void { var l:Byte = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3948():void { var l:Byte = (-32768)+(32767); }
	def m3949():void { var l:Byte = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3950():void { var l:Byte = (-32768)+(32768); }
	def m3951():void { var l:Byte = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3952():void { var l:Byte = (-32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3953():void { var l:Byte = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3954():void { var l:Byte = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3955():void { var l:Byte = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3956():void { var l:Byte = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3957():void { var l:Byte = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3958():void { var l:Byte = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3959():void { var l:Byte = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3960():void { var l:Byte = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3961():void { var l:Byte = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3962():void { var l:Byte = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3963():void { var l:Byte = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3964():void { var l:Byte = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3965():void { var l:Byte = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3966():void { var l:Byte = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m3967():void { var l:Byte = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3968():void { var l:Byte = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m3969():void { var l:Byte = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m3970():void { var l:Byte = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m3971():void { var l:Byte = (65535)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((65535)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m3972():void { var l:Byte = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3973():void { var l:Byte = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3974():void { var l:Byte = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3975():void { var l:Byte = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m3976():void { var l:Byte = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3977():void { var l:Byte = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m3978():void { var l:Byte = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3979():void { var l:Byte = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3980():void { var l:Byte = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3981():void { var l:Byte = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3982():void { var l:Byte = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3983():void { var l:Byte = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3984():void { var l:Byte = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3985():void { var l:Byte = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3986():void { var l:Byte = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3987():void { var l:Byte = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3988():void { var l:Byte = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3989():void { var l:Byte = (65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3990():void { var l:Byte = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3991():void { var l:Byte = (65535)+(-65535); }
	def m3992():void { var l:Byte = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3993():void { var l:Byte = (65535)+(-65536); }
	def m3994():void { var l:Byte = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3995():void { var l:Byte = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3996():void { var l:Byte = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3997():void { var l:Byte = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3998():void { var l:Byte = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m3999():void { var l:Byte = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4000():void { var l:Byte = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4001():void { var l:Byte = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4002():void { var l:Byte = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4003():void { var l:Byte = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4004():void { var l:Byte = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4005():void { var l:Byte = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4006():void { var l:Byte = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m4007():void { var l:Byte = (-65535)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m4008():void { var l:Byte = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4009():void { var l:Byte = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m4010():void { var l:Byte = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4011():void { var l:Byte = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4012():void { var l:Byte = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4013():void { var l:Byte = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4014():void { var l:Byte = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4015():void { var l:Byte = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4016():void { var l:Byte = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4017():void { var l:Byte = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4018():void { var l:Byte = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4019():void { var l:Byte = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4020():void { var l:Byte = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4021():void { var l:Byte = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4022():void { var l:Byte = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4023():void { var l:Byte = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4024():void { var l:Byte = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4025():void { var l:Byte = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4026():void { var l:Byte = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4027():void { var l:Byte = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4028():void { var l:Byte = (-65535)+(65535); }
	def m4029():void { var l:Byte = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4030():void { var l:Byte = (-65535)+(65536); }
	def m4031():void { var l:Byte = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4032():void { var l:Byte = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4033():void { var l:Byte = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4034():void { var l:Byte = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4035():void { var l:Byte = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4036():void { var l:Byte = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4037():void { var l:Byte = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4038():void { var l:Byte = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4039():void { var l:Byte = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4040():void { var l:Byte = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4041():void { var l:Byte = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4042():void { var l:Byte = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4043():void { var l:Byte = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4044():void { var l:Byte = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m4045():void { var l:Byte = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4046():void { var l:Byte = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4047():void { var l:Byte = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m4048():void { var l:Byte = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4049():void { var l:Byte = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4050():void { var l:Byte = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4051():void { var l:Byte = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4052():void { var l:Byte = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4053():void { var l:Byte = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4054():void { var l:Byte = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4055():void { var l:Byte = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4056():void { var l:Byte = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4057():void { var l:Byte = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4058():void { var l:Byte = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4059():void { var l:Byte = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4060():void { var l:Byte = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4061():void { var l:Byte = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4062():void { var l:Byte = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4063():void { var l:Byte = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4064():void { var l:Byte = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4065():void { var l:Byte = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4066():void { var l:Byte = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4067():void { var l:Byte = (65536)+(-65535); }
	def m4068():void { var l:Byte = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4069():void { var l:Byte = (65536)+(-65536); }
	def m4070():void { var l:Byte = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4071():void { var l:Byte = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4072():void { var l:Byte = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4073():void { var l:Byte = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4074():void { var l:Byte = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4075():void { var l:Byte = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4076():void { var l:Byte = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4077():void { var l:Byte = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4078():void { var l:Byte = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4079():void { var l:Byte = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4080():void { var l:Byte = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4081():void { var l:Byte = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4082():void { var l:Byte = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m4083():void { var l:Byte = (-65536)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m4084():void { var l:Byte = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4085():void { var l:Byte = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m4086():void { var l:Byte = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4087():void { var l:Byte = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4088():void { var l:Byte = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4089():void { var l:Byte = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4090():void { var l:Byte = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4091():void { var l:Byte = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4092():void { var l:Byte = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4093():void { var l:Byte = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4094():void { var l:Byte = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4095():void { var l:Byte = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4096():void { var l:Byte = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4097():void { var l:Byte = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4098():void { var l:Byte = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4099():void { var l:Byte = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4100():void { var l:Byte = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4101():void { var l:Byte = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4102():void { var l:Byte = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4103():void { var l:Byte = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4104():void { var l:Byte = (-65536)+(65535); }
	def m4105():void { var l:Byte = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4106():void { var l:Byte = (-65536)+(65536); }
	def m4107():void { var l:Byte = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4108():void { var l:Byte = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4109():void { var l:Byte = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4110():void { var l:Byte = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4111():void { var l:Byte = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4112():void { var l:Byte = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4113():void { var l:Byte = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4114():void { var l:Byte = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4115():void { var l:Byte = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4116():void { var l:Byte = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4117():void { var l:Byte = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4118():void { var l:Byte = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4119():void { var l:Byte = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4120():void { var l:Byte = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m4121():void { var l:Byte = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4122():void { var l:Byte = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4123():void { var l:Byte = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m4124():void { var l:Byte = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4125():void { var l:Byte = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4126():void { var l:Byte = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4127():void { var l:Byte = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4128():void { var l:Byte = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4129():void { var l:Byte = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4130():void { var l:Byte = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4131():void { var l:Byte = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4132():void { var l:Byte = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4133():void { var l:Byte = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4134():void { var l:Byte = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4135():void { var l:Byte = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4136():void { var l:Byte = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4137():void { var l:Byte = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4138():void { var l:Byte = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4139():void { var l:Byte = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4140():void { var l:Byte = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4141():void { var l:Byte = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4142():void { var l:Byte = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4143():void { var l:Byte = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4144():void { var l:Byte = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4145():void { var l:Byte = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4146():void { var l:Byte = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4147():void { var l:Byte = (16777216)+(-16777216); }
	def m4148():void { var l:Byte = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4149():void { var l:Byte = (16777216)+(-16777217); }
	def m4150():void { var l:Byte = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4151():void { var l:Byte = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4152():void { var l:Byte = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4153():void { var l:Byte = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4154():void { var l:Byte = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4155():void { var l:Byte = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4156():void { var l:Byte = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4157():void { var l:Byte = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4158():void { var l:Byte = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m4159():void { var l:Byte = (-16777216)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m4160():void { var l:Byte = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4161():void { var l:Byte = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m4162():void { var l:Byte = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4163():void { var l:Byte = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4164():void { var l:Byte = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4165():void { var l:Byte = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4166():void { var l:Byte = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4167():void { var l:Byte = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4168():void { var l:Byte = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4169():void { var l:Byte = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4170():void { var l:Byte = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4171():void { var l:Byte = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4172():void { var l:Byte = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4173():void { var l:Byte = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4174():void { var l:Byte = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4175():void { var l:Byte = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4176():void { var l:Byte = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4177():void { var l:Byte = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4178():void { var l:Byte = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4179():void { var l:Byte = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4180():void { var l:Byte = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4181():void { var l:Byte = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4182():void { var l:Byte = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4183():void { var l:Byte = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4184():void { var l:Byte = (-16777216)+(16777216); }
	def m4185():void { var l:Byte = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4186():void { var l:Byte = (-16777216)+(16777217); }
	def m4187():void { var l:Byte = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4188():void { var l:Byte = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4189():void { var l:Byte = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4190():void { var l:Byte = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4191():void { var l:Byte = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4192():void { var l:Byte = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4193():void { var l:Byte = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4194():void { var l:Byte = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4195():void { var l:Byte = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4196():void { var l:Byte = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m4197():void { var l:Byte = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4198():void { var l:Byte = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4199():void { var l:Byte = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m4200():void { var l:Byte = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4201():void { var l:Byte = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4202():void { var l:Byte = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4203():void { var l:Byte = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4204():void { var l:Byte = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4205():void { var l:Byte = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4206():void { var l:Byte = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4207():void { var l:Byte = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4208():void { var l:Byte = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4209():void { var l:Byte = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4210():void { var l:Byte = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4211():void { var l:Byte = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4212():void { var l:Byte = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4213():void { var l:Byte = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4214():void { var l:Byte = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4215():void { var l:Byte = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4216():void { var l:Byte = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4217():void { var l:Byte = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4218():void { var l:Byte = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4219():void { var l:Byte = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4220():void { var l:Byte = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4221():void { var l:Byte = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4222():void { var l:Byte = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4223():void { var l:Byte = (16777217)+(-16777216); }
	def m4224():void { var l:Byte = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4225():void { var l:Byte = (16777217)+(-16777217); }
	def m4226():void { var l:Byte = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4227():void { var l:Byte = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4228():void { var l:Byte = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4229():void { var l:Byte = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4230():void { var l:Byte = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4231():void { var l:Byte = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4232():void { var l:Byte = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4233():void { var l:Byte = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4234():void { var l:Byte = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m4235():void { var l:Byte = (-16777217)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m4236():void { var l:Byte = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4237():void { var l:Byte = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m4238():void { var l:Byte = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4239():void { var l:Byte = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4240():void { var l:Byte = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4241():void { var l:Byte = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4242():void { var l:Byte = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4243():void { var l:Byte = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4244():void { var l:Byte = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4245():void { var l:Byte = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4246():void { var l:Byte = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4247():void { var l:Byte = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4248():void { var l:Byte = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4249():void { var l:Byte = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4250():void { var l:Byte = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4251():void { var l:Byte = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4252():void { var l:Byte = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4253():void { var l:Byte = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4254():void { var l:Byte = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4255():void { var l:Byte = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4256():void { var l:Byte = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4257():void { var l:Byte = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4258():void { var l:Byte = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4259():void { var l:Byte = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4260():void { var l:Byte = (-16777217)+(16777216); }
	def m4261():void { var l:Byte = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4262():void { var l:Byte = (-16777217)+(16777217); }
	def m4263():void { var l:Byte = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4264():void { var l:Byte = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4265():void { var l:Byte = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4266():void { var l:Byte = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4267():void { var l:Byte = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4268():void { var l:Byte = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4269():void { var l:Byte = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4270():void { var l:Byte = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4271():void { var l:Byte = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4272():void { var l:Byte = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m4273():void { var l:Byte = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m4274():void { var l:Byte = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4275():void { var l:Byte = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m4276():void { var l:Byte = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4277():void { var l:Byte = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4278():void { var l:Byte = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4279():void { var l:Byte = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4280():void { var l:Byte = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4281():void { var l:Byte = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4282():void { var l:Byte = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4283():void { var l:Byte = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4284():void { var l:Byte = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4285():void { var l:Byte = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4286():void { var l:Byte = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4287():void { var l:Byte = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4288():void { var l:Byte = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4289():void { var l:Byte = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4290():void { var l:Byte = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4291():void { var l:Byte = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4292():void { var l:Byte = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4293():void { var l:Byte = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4294():void { var l:Byte = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4295():void { var l:Byte = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4296():void { var l:Byte = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4297():void { var l:Byte = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4298():void { var l:Byte = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4299():void { var l:Byte = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4300():void { var l:Byte = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4301():void { var l:Byte = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4302():void { var l:Byte = (2147483647)+(2147483647); }
	def m4303():void { var l:Byte = (2147483647)+(-2147483647); }
	def m4304():void { var l:Byte = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4305():void { var l:Byte = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4306():void { var l:Byte = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4307():void { var l:Byte = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4308():void { var l:Byte = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m4309():void { var l:Byte = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4310():void { var l:Byte = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m4311():void { var l:Byte = (-2147483647)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m4312():void { var l:Byte = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m4313():void { var l:Byte = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m4314():void { var l:Byte = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4315():void { var l:Byte = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4316():void { var l:Byte = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4317():void { var l:Byte = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m4318():void { var l:Byte = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4319():void { var l:Byte = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m4320():void { var l:Byte = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4321():void { var l:Byte = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4322():void { var l:Byte = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4323():void { var l:Byte = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4324():void { var l:Byte = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4325():void { var l:Byte = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4326():void { var l:Byte = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4327():void { var l:Byte = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4328():void { var l:Byte = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4329():void { var l:Byte = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4330():void { var l:Byte = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4331():void { var l:Byte = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4332():void { var l:Byte = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4333():void { var l:Byte = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4334():void { var l:Byte = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4335():void { var l:Byte = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4336():void { var l:Byte = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4337():void { var l:Byte = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4338():void { var l:Byte = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4339():void { var l:Byte = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m4340():void { var l:Byte = (-2147483647)+(2147483647); }
	def m4341():void { var l:Byte = (-2147483647)+(-2147483647); }
	def m4342():void { var l:Int = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4343():void { var l:Int = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4344():void { var l:Int = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4345():void { var l:Int = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4346():void { var l:Int = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4347():void { var l:Int = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4348():void { var l:Int = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4349():void { var l:Int = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4350():void { var l:Int = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4351():void { var l:Int = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4352():void { var l:Int = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4353():void { var l:Int = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4354():void { var l:Int = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4355():void { var l:Int = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4356():void { var l:Int = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4357():void { var l:Int = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4358():void { var l:Int = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4359():void { var l:Int = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4360():void { var l:Int = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4361():void { var l:Int = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4362():void { var l:Int = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4363():void { var l:Int = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4364():void { var l:Int = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4365():void { var l:Int = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4366():void { var l:Int = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4367():void { var l:Int = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4368():void { var l:Int = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4369():void { var l:Int = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4370():void { var l:Int = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4371():void { var l:Int = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4372():void { var l:Int = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4373():void { var l:Int = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4374():void { var l:Int = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4375():void { var l:Int = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4376():void { var l:Int = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4377():void { var l:Int = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4378():void { var l:Int = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4379():void { var l:Int = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4380():void { var l:Int = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4381():void { var l:Int = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4382():void { var l:Int = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4383():void { var l:Int = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4384():void { var l:Int = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4385():void { var l:Int = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4386():void { var l:Int = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4387():void { var l:Int = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4388():void { var l:Int = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4389():void { var l:Int = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4390():void { var l:Int = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4391():void { var l:Int = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4392():void { var l:Int = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4393():void { var l:Int = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4394():void { var l:Int = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4395():void { var l:Int = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4396():void { var l:Int = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4397():void { var l:Int = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4398():void { var l:Int = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4399():void { var l:Int = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4400():void { var l:Int = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4401():void { var l:Int = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4402():void { var l:Int = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4403():void { var l:Int = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4404():void { var l:Int = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4405():void { var l:Int = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4406():void { var l:Int = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4407():void { var l:Int = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4408():void { var l:Int = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4409():void { var l:Int = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4410():void { var l:Int = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4411():void { var l:Int = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4412():void { var l:Int = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4413():void { var l:Int = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4414():void { var l:Int = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4415():void { var l:Int = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4416():void { var l:Int = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4417():void { var l:Int = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4418():void { var l:Int = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4419():void { var l:Int = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4420():void { var l:Int = (w2)+(w2); }
	def m4421():void { var l:Int = (w2)+(w3); }
	def m4422():void { var l:Int = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4423():void { var l:Int = (w2)+(w5); }
	def m4424():void { var l:Int = (w2)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m4425():void { var l:Int = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4426():void { var l:Int = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4427():void { var l:Int = (w2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4428():void { var l:Int = (w2)+(0); }
	def m4429():void { var l:Int = (w2)+(-0); }
	def m4430():void { var l:Int = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4431():void { var l:Int = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4432():void { var l:Int = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4433():void { var l:Int = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4434():void { var l:Int = (w2)+(127); }
	def m4435():void { var l:Int = (w2)+(-127); }
	def m4436():void { var l:Int = (w2)+(128); }
	def m4437():void { var l:Int = (w2)+(-128); }
	def m4438():void { var l:Int = (w2)+(255); }
	def m4439():void { var l:Int = (w2)+(-255); }
	def m4440():void { var l:Int = (w2)+(256); }
	def m4441():void { var l:Int = (w2)+(-256); }
	def m4442():void { var l:Int = (w2)+(32767); }
	def m4443():void { var l:Int = (w2)+(-32767); }
	def m4444():void { var l:Int = (w2)+(32768); }
	def m4445():void { var l:Int = (w2)+(-32768); }
	def m4446():void { var l:Int = (w2)+(65535); }
	def m4447():void { var l:Int = (w2)+(-65535); }
	def m4448():void { var l:Int = (w2)+(65536); }
	def m4449():void { var l:Int = (w2)+(-65536); }
	def m4450():void { var l:Int = (w2)+(16777216); }
	def m4451():void { var l:Int = (w2)+(-16777216); }
	def m4452():void { var l:Int = (w2)+(16777217); }
	def m4453():void { var l:Int = (w2)+(-16777217); }
	def m4454():void { var l:Int = (w2)+(2147483647); }
	def m4455():void { var l:Int = (w2)+(-2147483647); }
	def m4456():void { var l:Int = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4457():void { var l:Int = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4458():void { var l:Int = (w3)+(w2); }
	def m4459():void { var l:Int = (w3)+(w3); }
	def m4460():void { var l:Int = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4461():void { var l:Int = (w3)+(w5); }
	def m4462():void { var l:Int = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m4463():void { var l:Int = (w3)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m4464():void { var l:Int = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4465():void { var l:Int = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m4466():void { var l:Int = (w3)+(0); }
	def m4467():void { var l:Int = (w3)+(-0); }
	def m4468():void { var l:Int = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4469():void { var l:Int = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4470():void { var l:Int = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4471():void { var l:Int = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4472():void { var l:Int = (w3)+(127); }
	def m4473():void { var l:Int = (w3)+(-127); }
	def m4474():void { var l:Int = (w3)+(128); }
	def m4475():void { var l:Int = (w3)+(-128); }
	def m4476():void { var l:Int = (w3)+(255); }
	def m4477():void { var l:Int = (w3)+(-255); }
	def m4478():void { var l:Int = (w3)+(256); }
	def m4479():void { var l:Int = (w3)+(-256); }
	def m4480():void { var l:Int = (w3)+(32767); }
	def m4481():void { var l:Int = (w3)+(-32767); }
	def m4482():void { var l:Int = (w3)+(32768); }
	def m4483():void { var l:Int = (w3)+(-32768); }
	def m4484():void { var l:Int = (w3)+(65535); }
	def m4485():void { var l:Int = (w3)+(-65535); }
	def m4486():void { var l:Int = (w3)+(65536); }
	def m4487():void { var l:Int = (w3)+(-65536); }
	def m4488():void { var l:Int = (w3)+(16777216); }
	def m4489():void { var l:Int = (w3)+(-16777216); }
	def m4490():void { var l:Int = (w3)+(16777217); }
	def m4491():void { var l:Int = (w3)+(-16777217); }
	def m4492():void { var l:Int = (w3)+(2147483647); }
	def m4493():void { var l:Int = (w3)+(-2147483647); }
	def m4494():void { var l:Int = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4495():void { var l:Int = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4496():void { var l:Int = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4497():void { var l:Int = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4498():void { var l:Int = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4499():void { var l:Int = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4500():void { var l:Int = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m4501():void { var l:Int = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m4502():void { var l:Int = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m4503():void { var l:Int = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m4504():void { var l:Int = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4505():void { var l:Int = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4506():void { var l:Int = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4507():void { var l:Int = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4508():void { var l:Int = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4509():void { var l:Int = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4510():void { var l:Int = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4511():void { var l:Int = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4512():void { var l:Int = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4513():void { var l:Int = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4514():void { var l:Int = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4515():void { var l:Int = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4516():void { var l:Int = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4517():void { var l:Int = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4518():void { var l:Int = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4519():void { var l:Int = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4520():void { var l:Int = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4521():void { var l:Int = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4522():void { var l:Int = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4523():void { var l:Int = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4524():void { var l:Int = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4525():void { var l:Int = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4526():void { var l:Int = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4527():void { var l:Int = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4528():void { var l:Int = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4529():void { var l:Int = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4530():void { var l:Int = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4531():void { var l:Int = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4532():void { var l:Int = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4533():void { var l:Int = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4534():void { var l:Int = (w5)+(w2); }
	def m4535():void { var l:Int = (w5)+(w3); }
	def m4536():void { var l:Int = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4537():void { var l:Int = (w5)+(w5); }
	def m4538():void { var l:Int = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m4539():void { var l:Int = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4540():void { var l:Int = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4541():void { var l:Int = (w5)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m4542():void { var l:Int = (w5)+(0); }
	def m4543():void { var l:Int = (w5)+(-0); }
	def m4544():void { var l:Int = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4545():void { var l:Int = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4546():void { var l:Int = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4547():void { var l:Int = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4548():void { var l:Int = (w5)+(127); }
	def m4549():void { var l:Int = (w5)+(-127); }
	def m4550():void { var l:Int = (w5)+(128); }
	def m4551():void { var l:Int = (w5)+(-128); }
	def m4552():void { var l:Int = (w5)+(255); }
	def m4553():void { var l:Int = (w5)+(-255); }
	def m4554():void { var l:Int = (w5)+(256); }
	def m4555():void { var l:Int = (w5)+(-256); }
	def m4556():void { var l:Int = (w5)+(32767); }
	def m4557():void { var l:Int = (w5)+(-32767); }
	def m4558():void { var l:Int = (w5)+(32768); }
	def m4559():void { var l:Int = (w5)+(-32768); }
	def m4560():void { var l:Int = (w5)+(65535); }
	def m4561():void { var l:Int = (w5)+(-65535); }
	def m4562():void { var l:Int = (w5)+(65536); }
	def m4563():void { var l:Int = (w5)+(-65536); }
	def m4564():void { var l:Int = (w5)+(16777216); }
	def m4565():void { var l:Int = (w5)+(-16777216); }
	def m4566():void { var l:Int = (w5)+(16777217); }
	def m4567():void { var l:Int = (w5)+(-16777217); }
	def m4568():void { var l:Int = (w5)+(2147483647); }
	def m4569():void { var l:Int = (w5)+(-2147483647); }
	def m4570():void { var l:Int = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4571():void { var l:Int = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4572():void { var l:Int = (w6)+(w2); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m4573():void { var l:Int = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m4574():void { var l:Int = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m4575():void { var l:Int = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m4576():void { var l:Int = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4577():void { var l:Int = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4578():void { var l:Int = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4579():void { var l:Int = (w6)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4580():void { var l:Int = (w6)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4581():void { var l:Int = (w6)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4582():void { var l:Int = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4583():void { var l:Int = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4584():void { var l:Int = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4585():void { var l:Int = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4586():void { var l:Int = (w6)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4587():void { var l:Int = (w6)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m4588():void { var l:Int = (w6)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4589():void { var l:Int = (w6)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m4590():void { var l:Int = (w6)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4591():void { var l:Int = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m4592():void { var l:Int = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m4593():void { var l:Int = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m4594():void { var l:Int = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m4595():void { var l:Int = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m4596():void { var l:Int = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m4597():void { var l:Int = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m4598():void { var l:Int = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m4599():void { var l:Int = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m4600():void { var l:Int = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m4601():void { var l:Int = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m4602():void { var l:Int = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m4603():void { var l:Int = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m4604():void { var l:Int = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m4605():void { var l:Int = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m4606():void { var l:Int = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m4607():void { var l:Int = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m4608():void { var l:Int = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4609():void { var l:Int = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4610():void { var l:Int = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4611():void { var l:Int = (w7)+(w3); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m4612():void { var l:Int = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m4613():void { var l:Int = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4614():void { var l:Int = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4615():void { var l:Int = (w7)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4616():void { var l:Int = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4617():void { var l:Int = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4618():void { var l:Int = (w7)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4619():void { var l:Int = (w7)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4620():void { var l:Int = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4621():void { var l:Int = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4622():void { var l:Int = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4623():void { var l:Int = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4624():void { var l:Int = (w7)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4625():void { var l:Int = (w7)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m4626():void { var l:Int = (w7)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4627():void { var l:Int = (w7)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m4628():void { var l:Int = (w7)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4629():void { var l:Int = (w7)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m4630():void { var l:Int = (w7)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4631():void { var l:Int = (w7)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m4632():void { var l:Int = (w7)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4633():void { var l:Int = (w7)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m4634():void { var l:Int = (w7)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4635():void { var l:Int = (w7)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m4636():void { var l:Int = (w7)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4637():void { var l:Int = (w7)+(-65535); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m4638():void { var l:Int = (w7)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4639():void { var l:Int = (w7)+(-65536); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m4640():void { var l:Int = (w7)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4641():void { var l:Int = (w7)+(-16777216); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m4642():void { var l:Int = (w7)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4643():void { var l:Int = (w7)+(-16777217); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m4644():void { var l:Int = (w7)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4645():void { var l:Int = (w7)+(-2147483647); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m4646():void { var l:Int = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4647():void { var l:Int = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4648():void { var l:Int = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4649():void { var l:Int = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4650():void { var l:Int = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m4651():void { var l:Int = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4652():void { var l:Int = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4653():void { var l:Int = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4654():void { var l:Int = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4655():void { var l:Int = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4656():void { var l:Int = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4657():void { var l:Int = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4658():void { var l:Int = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4659():void { var l:Int = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4660():void { var l:Int = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4661():void { var l:Int = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4662():void { var l:Int = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4663():void { var l:Int = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4664():void { var l:Int = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4665():void { var l:Int = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4666():void { var l:Int = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4667():void { var l:Int = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4668():void { var l:Int = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4669():void { var l:Int = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4670():void { var l:Int = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4671():void { var l:Int = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4672():void { var l:Int = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4673():void { var l:Int = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4674():void { var l:Int = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4675():void { var l:Int = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4676():void { var l:Int = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4677():void { var l:Int = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4678():void { var l:Int = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4679():void { var l:Int = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4680():void { var l:Int = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4681():void { var l:Int = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4682():void { var l:Int = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4683():void { var l:Int = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4684():void { var l:Int = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4685():void { var l:Int = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4686():void { var l:Int = (w9)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4687():void { var l:Int = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m4688():void { var l:Int = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m4689():void { var l:Int = (w9)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m4690():void { var l:Int = (w9)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4691():void { var l:Int = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4692():void { var l:Int = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4693():void { var l:Int = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4694():void { var l:Int = (w9)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4695():void { var l:Int = (w9)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4696():void { var l:Int = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4697():void { var l:Int = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4698():void { var l:Int = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4699():void { var l:Int = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4700():void { var l:Int = (w9)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4701():void { var l:Int = (w9)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m4702():void { var l:Int = (w9)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4703():void { var l:Int = (w9)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m4704():void { var l:Int = (w9)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4705():void { var l:Int = (w9)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m4706():void { var l:Int = (w9)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4707():void { var l:Int = (w9)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m4708():void { var l:Int = (w9)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4709():void { var l:Int = (w9)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m4710():void { var l:Int = (w9)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4711():void { var l:Int = (w9)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m4712():void { var l:Int = (w9)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4713():void { var l:Int = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m4714():void { var l:Int = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m4715():void { var l:Int = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m4716():void { var l:Int = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m4717():void { var l:Int = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m4718():void { var l:Int = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m4719():void { var l:Int = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m4720():void { var l:Int = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m4721():void { var l:Int = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m4722():void { var l:Int = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4723():void { var l:Int = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4724():void { var l:Int = (0)+(w2); }
	def m4725():void { var l:Int = (0)+(w3); }
	def m4726():void { var l:Int = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4727():void { var l:Int = (0)+(w5); }
	def m4728():void { var l:Int = (0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4729():void { var l:Int = (0)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4730():void { var l:Int = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4731():void { var l:Int = (0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4732():void { var l:Int = (0)+(0); }
	def m4733():void { var l:Int = (0)+(-0); }
	def m4734():void { var l:Int = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4735():void { var l:Int = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4736():void { var l:Int = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4737():void { var l:Int = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4738():void { var l:Int = (0)+(127); }
	def m4739():void { var l:Int = (0)+(-127); }
	def m4740():void { var l:Int = (0)+(128); }
	def m4741():void { var l:Int = (0)+(-128); }
	def m4742():void { var l:Int = (0)+(255); }
	def m4743():void { var l:Int = (0)+(-255); }
	def m4744():void { var l:Int = (0)+(256); }
	def m4745():void { var l:Int = (0)+(-256); }
	def m4746():void { var l:Int = (0)+(32767); }
	def m4747():void { var l:Int = (0)+(-32767); }
	def m4748():void { var l:Int = (0)+(32768); }
	def m4749():void { var l:Int = (0)+(-32768); }
	def m4750():void { var l:Int = (0)+(65535); }
	def m4751():void { var l:Int = (0)+(-65535); }
	def m4752():void { var l:Int = (0)+(65536); }
	def m4753():void { var l:Int = (0)+(-65536); }
	def m4754():void { var l:Int = (0)+(16777216); }
	def m4755():void { var l:Int = (0)+(-16777216); }
	def m4756():void { var l:Int = (0)+(16777217); }
	def m4757():void { var l:Int = (0)+(-16777217); }
	def m4758():void { var l:Int = (0)+(2147483647); }
	def m4759():void { var l:Int = (0)+(-2147483647); }
	def m4760():void { var l:Int = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4761():void { var l:Int = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4762():void { var l:Int = (-0)+(w2); }
	def m4763():void { var l:Int = (-0)+(w3); }
	def m4764():void { var l:Int = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4765():void { var l:Int = (-0)+(w5); }
	def m4766():void { var l:Int = (-0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4767():void { var l:Int = (-0)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4768():void { var l:Int = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4769():void { var l:Int = (-0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4770():void { var l:Int = (-0)+(0); }
	def m4771():void { var l:Int = (-0)+(-0); }
	def m4772():void { var l:Int = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4773():void { var l:Int = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4774():void { var l:Int = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4775():void { var l:Int = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4776():void { var l:Int = (-0)+(127); }
	def m4777():void { var l:Int = (-0)+(-127); }
	def m4778():void { var l:Int = (-0)+(128); }
	def m4779():void { var l:Int = (-0)+(-128); }
	def m4780():void { var l:Int = (-0)+(255); }
	def m4781():void { var l:Int = (-0)+(-255); }
	def m4782():void { var l:Int = (-0)+(256); }
	def m4783():void { var l:Int = (-0)+(-256); }
	def m4784():void { var l:Int = (-0)+(32767); }
	def m4785():void { var l:Int = (-0)+(-32767); }
	def m4786():void { var l:Int = (-0)+(32768); }
	def m4787():void { var l:Int = (-0)+(-32768); }
	def m4788():void { var l:Int = (-0)+(65535); }
	def m4789():void { var l:Int = (-0)+(-65535); }
	def m4790():void { var l:Int = (-0)+(65536); }
	def m4791():void { var l:Int = (-0)+(-65536); }
	def m4792():void { var l:Int = (-0)+(16777216); }
	def m4793():void { var l:Int = (-0)+(-16777216); }
	def m4794():void { var l:Int = (-0)+(16777217); }
	def m4795():void { var l:Int = (-0)+(-16777217); }
	def m4796():void { var l:Int = (-0)+(2147483647); }
	def m4797():void { var l:Int = (-0)+(-2147483647); }
	def m4798():void { var l:Int = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4799():void { var l:Int = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4800():void { var l:Int = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4801():void { var l:Int = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4802():void { var l:Int = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4803():void { var l:Int = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4804():void { var l:Int = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4805():void { var l:Int = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4806():void { var l:Int = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4807():void { var l:Int = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4808():void { var l:Int = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4809():void { var l:Int = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4810():void { var l:Int = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4811():void { var l:Int = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4812():void { var l:Int = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4813():void { var l:Int = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4814():void { var l:Int = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4815():void { var l:Int = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4816():void { var l:Int = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4817():void { var l:Int = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4818():void { var l:Int = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4819():void { var l:Int = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4820():void { var l:Int = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4821():void { var l:Int = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4822():void { var l:Int = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4823():void { var l:Int = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4824():void { var l:Int = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4825():void { var l:Int = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4826():void { var l:Int = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4827():void { var l:Int = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4828():void { var l:Int = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4829():void { var l:Int = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4830():void { var l:Int = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4831():void { var l:Int = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4832():void { var l:Int = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4833():void { var l:Int = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4834():void { var l:Int = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4835():void { var l:Int = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4836():void { var l:Int = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4837():void { var l:Int = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4838():void { var l:Int = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4839():void { var l:Int = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4840():void { var l:Int = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4841():void { var l:Int = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4842():void { var l:Int = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4843():void { var l:Int = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4844():void { var l:Int = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4845():void { var l:Int = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4846():void { var l:Int = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4847():void { var l:Int = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4848():void { var l:Int = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4849():void { var l:Int = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4850():void { var l:Int = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4851():void { var l:Int = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4852():void { var l:Int = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4853():void { var l:Int = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4854():void { var l:Int = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4855():void { var l:Int = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4856():void { var l:Int = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4857():void { var l:Int = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4858():void { var l:Int = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4859():void { var l:Int = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4860():void { var l:Int = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4861():void { var l:Int = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4862():void { var l:Int = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4863():void { var l:Int = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4864():void { var l:Int = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4865():void { var l:Int = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4866():void { var l:Int = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4867():void { var l:Int = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4868():void { var l:Int = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4869():void { var l:Int = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4870():void { var l:Int = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4871():void { var l:Int = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4872():void { var l:Int = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4873():void { var l:Int = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4874():void { var l:Int = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4875():void { var l:Int = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4876():void { var l:Int = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4877():void { var l:Int = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4878():void { var l:Int = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4879():void { var l:Int = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4880():void { var l:Int = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4881():void { var l:Int = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4882():void { var l:Int = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4883():void { var l:Int = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4884():void { var l:Int = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4885():void { var l:Int = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4886():void { var l:Int = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4887():void { var l:Int = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4888():void { var l:Int = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4889():void { var l:Int = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4890():void { var l:Int = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4891():void { var l:Int = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4892():void { var l:Int = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4893():void { var l:Int = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4894():void { var l:Int = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4895():void { var l:Int = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4896():void { var l:Int = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4897():void { var l:Int = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4898():void { var l:Int = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4899():void { var l:Int = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4900():void { var l:Int = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4901():void { var l:Int = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4902():void { var l:Int = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4903():void { var l:Int = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4904():void { var l:Int = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4905():void { var l:Int = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4906():void { var l:Int = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4907():void { var l:Int = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4908():void { var l:Int = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4909():void { var l:Int = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4910():void { var l:Int = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4911():void { var l:Int = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4912():void { var l:Int = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4913():void { var l:Int = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4914():void { var l:Int = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4915():void { var l:Int = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4916():void { var l:Int = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4917():void { var l:Int = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4918():void { var l:Int = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4919():void { var l:Int = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4920():void { var l:Int = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4921():void { var l:Int = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4922():void { var l:Int = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4923():void { var l:Int = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4924():void { var l:Int = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4925():void { var l:Int = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4926():void { var l:Int = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4927():void { var l:Int = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4928():void { var l:Int = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4929():void { var l:Int = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4930():void { var l:Int = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4931():void { var l:Int = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4932():void { var l:Int = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4933():void { var l:Int = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4934():void { var l:Int = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4935():void { var l:Int = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4936():void { var l:Int = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4937():void { var l:Int = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4938():void { var l:Int = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4939():void { var l:Int = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4940():void { var l:Int = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4941():void { var l:Int = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4942():void { var l:Int = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4943():void { var l:Int = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4944():void { var l:Int = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4945():void { var l:Int = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4946():void { var l:Int = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4947():void { var l:Int = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4948():void { var l:Int = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4949():void { var l:Int = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4950():void { var l:Int = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4951():void { var l:Int = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4952():void { var l:Int = (127)+(w2); }
	def m4953():void { var l:Int = (127)+(w3); }
	def m4954():void { var l:Int = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4955():void { var l:Int = (127)+(w5); }
	def m4956():void { var l:Int = (127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((127)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m4957():void { var l:Int = (127)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m4958():void { var l:Int = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4959():void { var l:Int = (127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((127)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m4960():void { var l:Int = (127)+(0); }
	def m4961():void { var l:Int = (127)+(-0); }
	def m4962():void { var l:Int = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4963():void { var l:Int = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4964():void { var l:Int = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4965():void { var l:Int = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4966():void { var l:Int = (127)+(127); }
	def m4967():void { var l:Int = (127)+(-127); }
	def m4968():void { var l:Int = (127)+(128); }
	def m4969():void { var l:Int = (127)+(-128); }
	def m4970():void { var l:Int = (127)+(255); }
	def m4971():void { var l:Int = (127)+(-255); }
	def m4972():void { var l:Int = (127)+(256); }
	def m4973():void { var l:Int = (127)+(-256); }
	def m4974():void { var l:Int = (127)+(32767); }
	def m4975():void { var l:Int = (127)+(-32767); }
	def m4976():void { var l:Int = (127)+(32768); }
	def m4977():void { var l:Int = (127)+(-32768); }
	def m4978():void { var l:Int = (127)+(65535); }
	def m4979():void { var l:Int = (127)+(-65535); }
	def m4980():void { var l:Int = (127)+(65536); }
	def m4981():void { var l:Int = (127)+(-65536); }
	def m4982():void { var l:Int = (127)+(16777216); }
	def m4983():void { var l:Int = (127)+(-16777216); }
	def m4984():void { var l:Int = (127)+(16777217); }
	def m4985():void { var l:Int = (127)+(-16777217); }
	def m4986():void { var l:Int = (127)+(2147483647); }
	def m4987():void { var l:Int = (127)+(-2147483647); }
	def m4988():void { var l:Int = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m4989():void { var l:Int = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m4990():void { var l:Int = (-127)+(w2); }
	def m4991():void { var l:Int = (-127)+(w3); }
	def m4992():void { var l:Int = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m4993():void { var l:Int = (-127)+(w5); }
	def m4994():void { var l:Int = (-127)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m4995():void { var l:Int = (-127)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m4996():void { var l:Int = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m4997():void { var l:Int = (-127)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m4998():void { var l:Int = (-127)+(0); }
	def m4999():void { var l:Int = (-127)+(-0); }
	def m5000():void { var l:Int = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5001():void { var l:Int = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5002():void { var l:Int = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5003():void { var l:Int = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5004():void { var l:Int = (-127)+(127); }
	def m5005():void { var l:Int = (-127)+(-127); }
	def m5006():void { var l:Int = (-127)+(128); }
	def m5007():void { var l:Int = (-127)+(-128); }
	def m5008():void { var l:Int = (-127)+(255); }
	def m5009():void { var l:Int = (-127)+(-255); }
	def m5010():void { var l:Int = (-127)+(256); }
	def m5011():void { var l:Int = (-127)+(-256); }
	def m5012():void { var l:Int = (-127)+(32767); }
	def m5013():void { var l:Int = (-127)+(-32767); }
	def m5014():void { var l:Int = (-127)+(32768); }
	def m5015():void { var l:Int = (-127)+(-32768); }
	def m5016():void { var l:Int = (-127)+(65535); }
	def m5017():void { var l:Int = (-127)+(-65535); }
	def m5018():void { var l:Int = (-127)+(65536); }
	def m5019():void { var l:Int = (-127)+(-65536); }
	def m5020():void { var l:Int = (-127)+(16777216); }
	def m5021():void { var l:Int = (-127)+(-16777216); }
	def m5022():void { var l:Int = (-127)+(16777217); }
	def m5023():void { var l:Int = (-127)+(-16777217); }
	def m5024():void { var l:Int = (-127)+(2147483647); }
	def m5025():void { var l:Int = (-127)+(-2147483647); }
	def m5026():void { var l:Int = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5027():void { var l:Int = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5028():void { var l:Int = (128)+(w2); }
	def m5029():void { var l:Int = (128)+(w3); }
	def m5030():void { var l:Int = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5031():void { var l:Int = (128)+(w5); }
	def m5032():void { var l:Int = (128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((128)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5033():void { var l:Int = (128)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5034():void { var l:Int = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5035():void { var l:Int = (128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((128)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5036():void { var l:Int = (128)+(0); }
	def m5037():void { var l:Int = (128)+(-0); }
	def m5038():void { var l:Int = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5039():void { var l:Int = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5040():void { var l:Int = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5041():void { var l:Int = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5042():void { var l:Int = (128)+(127); }
	def m5043():void { var l:Int = (128)+(-127); }
	def m5044():void { var l:Int = (128)+(128); }
	def m5045():void { var l:Int = (128)+(-128); }
	def m5046():void { var l:Int = (128)+(255); }
	def m5047():void { var l:Int = (128)+(-255); }
	def m5048():void { var l:Int = (128)+(256); }
	def m5049():void { var l:Int = (128)+(-256); }
	def m5050():void { var l:Int = (128)+(32767); }
	def m5051():void { var l:Int = (128)+(-32767); }
	def m5052():void { var l:Int = (128)+(32768); }
	def m5053():void { var l:Int = (128)+(-32768); }
	def m5054():void { var l:Int = (128)+(65535); }
	def m5055():void { var l:Int = (128)+(-65535); }
	def m5056():void { var l:Int = (128)+(65536); }
	def m5057():void { var l:Int = (128)+(-65536); }
	def m5058():void { var l:Int = (128)+(16777216); }
	def m5059():void { var l:Int = (128)+(-16777216); }
	def m5060():void { var l:Int = (128)+(16777217); }
	def m5061():void { var l:Int = (128)+(-16777217); }
	def m5062():void { var l:Int = (128)+(2147483647); }
	def m5063():void { var l:Int = (128)+(-2147483647); }
	def m5064():void { var l:Int = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5065():void { var l:Int = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5066():void { var l:Int = (-128)+(w2); }
	def m5067():void { var l:Int = (-128)+(w3); }
	def m5068():void { var l:Int = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5069():void { var l:Int = (-128)+(w5); }
	def m5070():void { var l:Int = (-128)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m5071():void { var l:Int = (-128)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m5072():void { var l:Int = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5073():void { var l:Int = (-128)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m5074():void { var l:Int = (-128)+(0); }
	def m5075():void { var l:Int = (-128)+(-0); }
	def m5076():void { var l:Int = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5077():void { var l:Int = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5078():void { var l:Int = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5079():void { var l:Int = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5080():void { var l:Int = (-128)+(127); }
	def m5081():void { var l:Int = (-128)+(-127); }
	def m5082():void { var l:Int = (-128)+(128); }
	def m5083():void { var l:Int = (-128)+(-128); }
	def m5084():void { var l:Int = (-128)+(255); }
	def m5085():void { var l:Int = (-128)+(-255); }
	def m5086():void { var l:Int = (-128)+(256); }
	def m5087():void { var l:Int = (-128)+(-256); }
	def m5088():void { var l:Int = (-128)+(32767); }
	def m5089():void { var l:Int = (-128)+(-32767); }
	def m5090():void { var l:Int = (-128)+(32768); }
	def m5091():void { var l:Int = (-128)+(-32768); }
	def m5092():void { var l:Int = (-128)+(65535); }
	def m5093():void { var l:Int = (-128)+(-65535); }
	def m5094():void { var l:Int = (-128)+(65536); }
	def m5095():void { var l:Int = (-128)+(-65536); }
	def m5096():void { var l:Int = (-128)+(16777216); }
	def m5097():void { var l:Int = (-128)+(-16777216); }
	def m5098():void { var l:Int = (-128)+(16777217); }
	def m5099():void { var l:Int = (-128)+(-16777217); }
	def m5100():void { var l:Int = (-128)+(2147483647); }
	def m5101():void { var l:Int = (-128)+(-2147483647); }
	def m5102():void { var l:Int = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5103():void { var l:Int = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5104():void { var l:Int = (255)+(w2); }
	def m5105():void { var l:Int = (255)+(w3); }
	def m5106():void { var l:Int = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5107():void { var l:Int = (255)+(w5); }
	def m5108():void { var l:Int = (255)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((255)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m5109():void { var l:Int = (255)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5110():void { var l:Int = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5111():void { var l:Int = (255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((255)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5112():void { var l:Int = (255)+(0); }
	def m5113():void { var l:Int = (255)+(-0); }
	def m5114():void { var l:Int = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5115():void { var l:Int = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5116():void { var l:Int = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5117():void { var l:Int = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5118():void { var l:Int = (255)+(127); }
	def m5119():void { var l:Int = (255)+(-127); }
	def m5120():void { var l:Int = (255)+(128); }
	def m5121():void { var l:Int = (255)+(-128); }
	def m5122():void { var l:Int = (255)+(255); }
	def m5123():void { var l:Int = (255)+(-255); }
	def m5124():void { var l:Int = (255)+(256); }
	def m5125():void { var l:Int = (255)+(-256); }
	def m5126():void { var l:Int = (255)+(32767); }
	def m5127():void { var l:Int = (255)+(-32767); }
	def m5128():void { var l:Int = (255)+(32768); }
	def m5129():void { var l:Int = (255)+(-32768); }
	def m5130():void { var l:Int = (255)+(65535); }
	def m5131():void { var l:Int = (255)+(-65535); }
	def m5132():void { var l:Int = (255)+(65536); }
	def m5133():void { var l:Int = (255)+(-65536); }
	def m5134():void { var l:Int = (255)+(16777216); }
	def m5135():void { var l:Int = (255)+(-16777216); }
	def m5136():void { var l:Int = (255)+(16777217); }
	def m5137():void { var l:Int = (255)+(-16777217); }
	def m5138():void { var l:Int = (255)+(2147483647); }
	def m5139():void { var l:Int = (255)+(-2147483647); }
	def m5140():void { var l:Int = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5141():void { var l:Int = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5142():void { var l:Int = (-255)+(w2); }
	def m5143():void { var l:Int = (-255)+(w3); }
	def m5144():void { var l:Int = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5145():void { var l:Int = (-255)+(w5); }
	def m5146():void { var l:Int = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m5147():void { var l:Int = (-255)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m5148():void { var l:Int = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5149():void { var l:Int = (-255)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m5150():void { var l:Int = (-255)+(0); }
	def m5151():void { var l:Int = (-255)+(-0); }
	def m5152():void { var l:Int = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5153():void { var l:Int = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5154():void { var l:Int = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5155():void { var l:Int = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5156():void { var l:Int = (-255)+(127); }
	def m5157():void { var l:Int = (-255)+(-127); }
	def m5158():void { var l:Int = (-255)+(128); }
	def m5159():void { var l:Int = (-255)+(-128); }
	def m5160():void { var l:Int = (-255)+(255); }
	def m5161():void { var l:Int = (-255)+(-255); }
	def m5162():void { var l:Int = (-255)+(256); }
	def m5163():void { var l:Int = (-255)+(-256); }
	def m5164():void { var l:Int = (-255)+(32767); }
	def m5165():void { var l:Int = (-255)+(-32767); }
	def m5166():void { var l:Int = (-255)+(32768); }
	def m5167():void { var l:Int = (-255)+(-32768); }
	def m5168():void { var l:Int = (-255)+(65535); }
	def m5169():void { var l:Int = (-255)+(-65535); }
	def m5170():void { var l:Int = (-255)+(65536); }
	def m5171():void { var l:Int = (-255)+(-65536); }
	def m5172():void { var l:Int = (-255)+(16777216); }
	def m5173():void { var l:Int = (-255)+(-16777216); }
	def m5174():void { var l:Int = (-255)+(16777217); }
	def m5175():void { var l:Int = (-255)+(-16777217); }
	def m5176():void { var l:Int = (-255)+(2147483647); }
	def m5177():void { var l:Int = (-255)+(-2147483647); }
	def m5178():void { var l:Int = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5179():void { var l:Int = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5180():void { var l:Int = (256)+(w2); }
	def m5181():void { var l:Int = (256)+(w3); }
	def m5182():void { var l:Int = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5183():void { var l:Int = (256)+(w5); }
	def m5184():void { var l:Int = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m5185():void { var l:Int = (256)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5186():void { var l:Int = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5187():void { var l:Int = (256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((256)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5188():void { var l:Int = (256)+(0); }
	def m5189():void { var l:Int = (256)+(-0); }
	def m5190():void { var l:Int = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5191():void { var l:Int = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5192():void { var l:Int = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5193():void { var l:Int = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5194():void { var l:Int = (256)+(127); }
	def m5195():void { var l:Int = (256)+(-127); }
	def m5196():void { var l:Int = (256)+(128); }
	def m5197():void { var l:Int = (256)+(-128); }
	def m5198():void { var l:Int = (256)+(255); }
	def m5199():void { var l:Int = (256)+(-255); }
	def m5200():void { var l:Int = (256)+(256); }
	def m5201():void { var l:Int = (256)+(-256); }
	def m5202():void { var l:Int = (256)+(32767); }
	def m5203():void { var l:Int = (256)+(-32767); }
	def m5204():void { var l:Int = (256)+(32768); }
	def m5205():void { var l:Int = (256)+(-32768); }
	def m5206():void { var l:Int = (256)+(65535); }
	def m5207():void { var l:Int = (256)+(-65535); }
	def m5208():void { var l:Int = (256)+(65536); }
	def m5209():void { var l:Int = (256)+(-65536); }
	def m5210():void { var l:Int = (256)+(16777216); }
	def m5211():void { var l:Int = (256)+(-16777216); }
	def m5212():void { var l:Int = (256)+(16777217); }
	def m5213():void { var l:Int = (256)+(-16777217); }
	def m5214():void { var l:Int = (256)+(2147483647); }
	def m5215():void { var l:Int = (256)+(-2147483647); }
	def m5216():void { var l:Int = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5217():void { var l:Int = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5218():void { var l:Int = (-256)+(w2); }
	def m5219():void { var l:Int = (-256)+(w3); }
	def m5220():void { var l:Int = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5221():void { var l:Int = (-256)+(w5); }
	def m5222():void { var l:Int = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m5223():void { var l:Int = (-256)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m5224():void { var l:Int = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5225():void { var l:Int = (-256)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m5226():void { var l:Int = (-256)+(0); }
	def m5227():void { var l:Int = (-256)+(-0); }
	def m5228():void { var l:Int = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5229():void { var l:Int = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5230():void { var l:Int = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5231():void { var l:Int = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5232():void { var l:Int = (-256)+(127); }
	def m5233():void { var l:Int = (-256)+(-127); }
	def m5234():void { var l:Int = (-256)+(128); }
	def m5235():void { var l:Int = (-256)+(-128); }
	def m5236():void { var l:Int = (-256)+(255); }
	def m5237():void { var l:Int = (-256)+(-255); }
	def m5238():void { var l:Int = (-256)+(256); }
	def m5239():void { var l:Int = (-256)+(-256); }
	def m5240():void { var l:Int = (-256)+(32767); }
	def m5241():void { var l:Int = (-256)+(-32767); }
	def m5242():void { var l:Int = (-256)+(32768); }
	def m5243():void { var l:Int = (-256)+(-32768); }
	def m5244():void { var l:Int = (-256)+(65535); }
	def m5245():void { var l:Int = (-256)+(-65535); }
	def m5246():void { var l:Int = (-256)+(65536); }
	def m5247():void { var l:Int = (-256)+(-65536); }
	def m5248():void { var l:Int = (-256)+(16777216); }
	def m5249():void { var l:Int = (-256)+(-16777216); }
	def m5250():void { var l:Int = (-256)+(16777217); }
	def m5251():void { var l:Int = (-256)+(-16777217); }
	def m5252():void { var l:Int = (-256)+(2147483647); }
	def m5253():void { var l:Int = (-256)+(-2147483647); }
	def m5254():void { var l:Int = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5255():void { var l:Int = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5256():void { var l:Int = (32767)+(w2); }
	def m5257():void { var l:Int = (32767)+(w3); }
	def m5258():void { var l:Int = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5259():void { var l:Int = (32767)+(w5); }
	def m5260():void { var l:Int = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m5261():void { var l:Int = (32767)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5262():void { var l:Int = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5263():void { var l:Int = (32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32767)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5264():void { var l:Int = (32767)+(0); }
	def m5265():void { var l:Int = (32767)+(-0); }
	def m5266():void { var l:Int = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5267():void { var l:Int = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5268():void { var l:Int = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5269():void { var l:Int = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5270():void { var l:Int = (32767)+(127); }
	def m5271():void { var l:Int = (32767)+(-127); }
	def m5272():void { var l:Int = (32767)+(128); }
	def m5273():void { var l:Int = (32767)+(-128); }
	def m5274():void { var l:Int = (32767)+(255); }
	def m5275():void { var l:Int = (32767)+(-255); }
	def m5276():void { var l:Int = (32767)+(256); }
	def m5277():void { var l:Int = (32767)+(-256); }
	def m5278():void { var l:Int = (32767)+(32767); }
	def m5279():void { var l:Int = (32767)+(-32767); }
	def m5280():void { var l:Int = (32767)+(32768); }
	def m5281():void { var l:Int = (32767)+(-32768); }
	def m5282():void { var l:Int = (32767)+(65535); }
	def m5283():void { var l:Int = (32767)+(-65535); }
	def m5284():void { var l:Int = (32767)+(65536); }
	def m5285():void { var l:Int = (32767)+(-65536); }
	def m5286():void { var l:Int = (32767)+(16777216); }
	def m5287():void { var l:Int = (32767)+(-16777216); }
	def m5288():void { var l:Int = (32767)+(16777217); }
	def m5289():void { var l:Int = (32767)+(-16777217); }
	def m5290():void { var l:Int = (32767)+(2147483647); }
	def m5291():void { var l:Int = (32767)+(-2147483647); }
	def m5292():void { var l:Int = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5293():void { var l:Int = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5294():void { var l:Int = (-32767)+(w2); }
	def m5295():void { var l:Int = (-32767)+(w3); }
	def m5296():void { var l:Int = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5297():void { var l:Int = (-32767)+(w5); }
	def m5298():void { var l:Int = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m5299():void { var l:Int = (-32767)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m5300():void { var l:Int = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5301():void { var l:Int = (-32767)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m5302():void { var l:Int = (-32767)+(0); }
	def m5303():void { var l:Int = (-32767)+(-0); }
	def m5304():void { var l:Int = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5305():void { var l:Int = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5306():void { var l:Int = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5307():void { var l:Int = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5308():void { var l:Int = (-32767)+(127); }
	def m5309():void { var l:Int = (-32767)+(-127); }
	def m5310():void { var l:Int = (-32767)+(128); }
	def m5311():void { var l:Int = (-32767)+(-128); }
	def m5312():void { var l:Int = (-32767)+(255); }
	def m5313():void { var l:Int = (-32767)+(-255); }
	def m5314():void { var l:Int = (-32767)+(256); }
	def m5315():void { var l:Int = (-32767)+(-256); }
	def m5316():void { var l:Int = (-32767)+(32767); }
	def m5317():void { var l:Int = (-32767)+(-32767); }
	def m5318():void { var l:Int = (-32767)+(32768); }
	def m5319():void { var l:Int = (-32767)+(-32768); }
	def m5320():void { var l:Int = (-32767)+(65535); }
	def m5321():void { var l:Int = (-32767)+(-65535); }
	def m5322():void { var l:Int = (-32767)+(65536); }
	def m5323():void { var l:Int = (-32767)+(-65536); }
	def m5324():void { var l:Int = (-32767)+(16777216); }
	def m5325():void { var l:Int = (-32767)+(-16777216); }
	def m5326():void { var l:Int = (-32767)+(16777217); }
	def m5327():void { var l:Int = (-32767)+(-16777217); }
	def m5328():void { var l:Int = (-32767)+(2147483647); }
	def m5329():void { var l:Int = (-32767)+(-2147483647); }
	def m5330():void { var l:Int = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5331():void { var l:Int = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5332():void { var l:Int = (32768)+(w2); }
	def m5333():void { var l:Int = (32768)+(w3); }
	def m5334():void { var l:Int = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5335():void { var l:Int = (32768)+(w5); }
	def m5336():void { var l:Int = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m5337():void { var l:Int = (32768)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5338():void { var l:Int = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5339():void { var l:Int = (32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32768)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5340():void { var l:Int = (32768)+(0); }
	def m5341():void { var l:Int = (32768)+(-0); }
	def m5342():void { var l:Int = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5343():void { var l:Int = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5344():void { var l:Int = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5345():void { var l:Int = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5346():void { var l:Int = (32768)+(127); }
	def m5347():void { var l:Int = (32768)+(-127); }
	def m5348():void { var l:Int = (32768)+(128); }
	def m5349():void { var l:Int = (32768)+(-128); }
	def m5350():void { var l:Int = (32768)+(255); }
	def m5351():void { var l:Int = (32768)+(-255); }
	def m5352():void { var l:Int = (32768)+(256); }
	def m5353():void { var l:Int = (32768)+(-256); }
	def m5354():void { var l:Int = (32768)+(32767); }
	def m5355():void { var l:Int = (32768)+(-32767); }
	def m5356():void { var l:Int = (32768)+(32768); }
	def m5357():void { var l:Int = (32768)+(-32768); }
	def m5358():void { var l:Int = (32768)+(65535); }
	def m5359():void { var l:Int = (32768)+(-65535); }
	def m5360():void { var l:Int = (32768)+(65536); }
	def m5361():void { var l:Int = (32768)+(-65536); }
	def m5362():void { var l:Int = (32768)+(16777216); }
	def m5363():void { var l:Int = (32768)+(-16777216); }
	def m5364():void { var l:Int = (32768)+(16777217); }
	def m5365():void { var l:Int = (32768)+(-16777217); }
	def m5366():void { var l:Int = (32768)+(2147483647); }
	def m5367():void { var l:Int = (32768)+(-2147483647); }
	def m5368():void { var l:Int = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5369():void { var l:Int = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5370():void { var l:Int = (-32768)+(w2); }
	def m5371():void { var l:Int = (-32768)+(w3); }
	def m5372():void { var l:Int = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5373():void { var l:Int = (-32768)+(w5); }
	def m5374():void { var l:Int = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m5375():void { var l:Int = (-32768)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m5376():void { var l:Int = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5377():void { var l:Int = (-32768)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m5378():void { var l:Int = (-32768)+(0); }
	def m5379():void { var l:Int = (-32768)+(-0); }
	def m5380():void { var l:Int = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5381():void { var l:Int = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5382():void { var l:Int = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5383():void { var l:Int = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5384():void { var l:Int = (-32768)+(127); }
	def m5385():void { var l:Int = (-32768)+(-127); }
	def m5386():void { var l:Int = (-32768)+(128); }
	def m5387():void { var l:Int = (-32768)+(-128); }
	def m5388():void { var l:Int = (-32768)+(255); }
	def m5389():void { var l:Int = (-32768)+(-255); }
	def m5390():void { var l:Int = (-32768)+(256); }
	def m5391():void { var l:Int = (-32768)+(-256); }
	def m5392():void { var l:Int = (-32768)+(32767); }
	def m5393():void { var l:Int = (-32768)+(-32767); }
	def m5394():void { var l:Int = (-32768)+(32768); }
	def m5395():void { var l:Int = (-32768)+(-32768); }
	def m5396():void { var l:Int = (-32768)+(65535); }
	def m5397():void { var l:Int = (-32768)+(-65535); }
	def m5398():void { var l:Int = (-32768)+(65536); }
	def m5399():void { var l:Int = (-32768)+(-65536); }
	def m5400():void { var l:Int = (-32768)+(16777216); }
	def m5401():void { var l:Int = (-32768)+(-16777216); }
	def m5402():void { var l:Int = (-32768)+(16777217); }
	def m5403():void { var l:Int = (-32768)+(-16777217); }
	def m5404():void { var l:Int = (-32768)+(2147483647); }
	def m5405():void { var l:Int = (-32768)+(-2147483647); }
	def m5406():void { var l:Int = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5407():void { var l:Int = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5408():void { var l:Int = (65535)+(w2); }
	def m5409():void { var l:Int = (65535)+(w3); }
	def m5410():void { var l:Int = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5411():void { var l:Int = (65535)+(w5); }
	def m5412():void { var l:Int = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m5413():void { var l:Int = (65535)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5414():void { var l:Int = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5415():void { var l:Int = (65535)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((65535)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m5416():void { var l:Int = (65535)+(0); }
	def m5417():void { var l:Int = (65535)+(-0); }
	def m5418():void { var l:Int = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5419():void { var l:Int = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5420():void { var l:Int = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5421():void { var l:Int = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5422():void { var l:Int = (65535)+(127); }
	def m5423():void { var l:Int = (65535)+(-127); }
	def m5424():void { var l:Int = (65535)+(128); }
	def m5425():void { var l:Int = (65535)+(-128); }
	def m5426():void { var l:Int = (65535)+(255); }
	def m5427():void { var l:Int = (65535)+(-255); }
	def m5428():void { var l:Int = (65535)+(256); }
	def m5429():void { var l:Int = (65535)+(-256); }
	def m5430():void { var l:Int = (65535)+(32767); }
	def m5431():void { var l:Int = (65535)+(-32767); }
	def m5432():void { var l:Int = (65535)+(32768); }
	def m5433():void { var l:Int = (65535)+(-32768); }
	def m5434():void { var l:Int = (65535)+(65535); }
	def m5435():void { var l:Int = (65535)+(-65535); }
	def m5436():void { var l:Int = (65535)+(65536); }
	def m5437():void { var l:Int = (65535)+(-65536); }
	def m5438():void { var l:Int = (65535)+(16777216); }
	def m5439():void { var l:Int = (65535)+(-16777216); }
	def m5440():void { var l:Int = (65535)+(16777217); }
	def m5441():void { var l:Int = (65535)+(-16777217); }
	def m5442():void { var l:Int = (65535)+(2147483647); }
	def m5443():void { var l:Int = (65535)+(-2147483647); }
	def m5444():void { var l:Int = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5445():void { var l:Int = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5446():void { var l:Int = (-65535)+(w2); }
	def m5447():void { var l:Int = (-65535)+(w3); }
	def m5448():void { var l:Int = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5449():void { var l:Int = (-65535)+(w5); }
	def m5450():void { var l:Int = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m5451():void { var l:Int = (-65535)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m5452():void { var l:Int = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5453():void { var l:Int = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m5454():void { var l:Int = (-65535)+(0); }
	def m5455():void { var l:Int = (-65535)+(-0); }
	def m5456():void { var l:Int = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5457():void { var l:Int = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5458():void { var l:Int = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5459():void { var l:Int = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5460():void { var l:Int = (-65535)+(127); }
	def m5461():void { var l:Int = (-65535)+(-127); }
	def m5462():void { var l:Int = (-65535)+(128); }
	def m5463():void { var l:Int = (-65535)+(-128); }
	def m5464():void { var l:Int = (-65535)+(255); }
	def m5465():void { var l:Int = (-65535)+(-255); }
	def m5466():void { var l:Int = (-65535)+(256); }
	def m5467():void { var l:Int = (-65535)+(-256); }
	def m5468():void { var l:Int = (-65535)+(32767); }
	def m5469():void { var l:Int = (-65535)+(-32767); }
	def m5470():void { var l:Int = (-65535)+(32768); }
	def m5471():void { var l:Int = (-65535)+(-32768); }
	def m5472():void { var l:Int = (-65535)+(65535); }
	def m5473():void { var l:Int = (-65535)+(-65535); }
	def m5474():void { var l:Int = (-65535)+(65536); }
	def m5475():void { var l:Int = (-65535)+(-65536); }
	def m5476():void { var l:Int = (-65535)+(16777216); }
	def m5477():void { var l:Int = (-65535)+(-16777216); }
	def m5478():void { var l:Int = (-65535)+(16777217); }
	def m5479():void { var l:Int = (-65535)+(-16777217); }
	def m5480():void { var l:Int = (-65535)+(2147483647); }
	def m5481():void { var l:Int = (-65535)+(-2147483647); }
	def m5482():void { var l:Int = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5483():void { var l:Int = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5484():void { var l:Int = (65536)+(w2); }
	def m5485():void { var l:Int = (65536)+(w3); }
	def m5486():void { var l:Int = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5487():void { var l:Int = (65536)+(w5); }
	def m5488():void { var l:Int = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m5489():void { var l:Int = (65536)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5490():void { var l:Int = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5491():void { var l:Int = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m5492():void { var l:Int = (65536)+(0); }
	def m5493():void { var l:Int = (65536)+(-0); }
	def m5494():void { var l:Int = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5495():void { var l:Int = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5496():void { var l:Int = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5497():void { var l:Int = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5498():void { var l:Int = (65536)+(127); }
	def m5499():void { var l:Int = (65536)+(-127); }
	def m5500():void { var l:Int = (65536)+(128); }
	def m5501():void { var l:Int = (65536)+(-128); }
	def m5502():void { var l:Int = (65536)+(255); }
	def m5503():void { var l:Int = (65536)+(-255); }
	def m5504():void { var l:Int = (65536)+(256); }
	def m5505():void { var l:Int = (65536)+(-256); }
	def m5506():void { var l:Int = (65536)+(32767); }
	def m5507():void { var l:Int = (65536)+(-32767); }
	def m5508():void { var l:Int = (65536)+(32768); }
	def m5509():void { var l:Int = (65536)+(-32768); }
	def m5510():void { var l:Int = (65536)+(65535); }
	def m5511():void { var l:Int = (65536)+(-65535); }
	def m5512():void { var l:Int = (65536)+(65536); }
	def m5513():void { var l:Int = (65536)+(-65536); }
	def m5514():void { var l:Int = (65536)+(16777216); }
	def m5515():void { var l:Int = (65536)+(-16777216); }
	def m5516():void { var l:Int = (65536)+(16777217); }
	def m5517():void { var l:Int = (65536)+(-16777217); }
	def m5518():void { var l:Int = (65536)+(2147483647); }
	def m5519():void { var l:Int = (65536)+(-2147483647); }
	def m5520():void { var l:Int = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5521():void { var l:Int = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5522():void { var l:Int = (-65536)+(w2); }
	def m5523():void { var l:Int = (-65536)+(w3); }
	def m5524():void { var l:Int = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5525():void { var l:Int = (-65536)+(w5); }
	def m5526():void { var l:Int = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m5527():void { var l:Int = (-65536)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m5528():void { var l:Int = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5529():void { var l:Int = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m5530():void { var l:Int = (-65536)+(0); }
	def m5531():void { var l:Int = (-65536)+(-0); }
	def m5532():void { var l:Int = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5533():void { var l:Int = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5534():void { var l:Int = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5535():void { var l:Int = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5536():void { var l:Int = (-65536)+(127); }
	def m5537():void { var l:Int = (-65536)+(-127); }
	def m5538():void { var l:Int = (-65536)+(128); }
	def m5539():void { var l:Int = (-65536)+(-128); }
	def m5540():void { var l:Int = (-65536)+(255); }
	def m5541():void { var l:Int = (-65536)+(-255); }
	def m5542():void { var l:Int = (-65536)+(256); }
	def m5543():void { var l:Int = (-65536)+(-256); }
	def m5544():void { var l:Int = (-65536)+(32767); }
	def m5545():void { var l:Int = (-65536)+(-32767); }
	def m5546():void { var l:Int = (-65536)+(32768); }
	def m5547():void { var l:Int = (-65536)+(-32768); }
	def m5548():void { var l:Int = (-65536)+(65535); }
	def m5549():void { var l:Int = (-65536)+(-65535); }
	def m5550():void { var l:Int = (-65536)+(65536); }
	def m5551():void { var l:Int = (-65536)+(-65536); }
	def m5552():void { var l:Int = (-65536)+(16777216); }
	def m5553():void { var l:Int = (-65536)+(-16777216); }
	def m5554():void { var l:Int = (-65536)+(16777217); }
	def m5555():void { var l:Int = (-65536)+(-16777217); }
	def m5556():void { var l:Int = (-65536)+(2147483647); }
	def m5557():void { var l:Int = (-65536)+(-2147483647); }
	def m5558():void { var l:Int = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5559():void { var l:Int = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5560():void { var l:Int = (16777216)+(w2); }
	def m5561():void { var l:Int = (16777216)+(w3); }
	def m5562():void { var l:Int = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5563():void { var l:Int = (16777216)+(w5); }
	def m5564():void { var l:Int = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m5565():void { var l:Int = (16777216)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5566():void { var l:Int = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5567():void { var l:Int = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m5568():void { var l:Int = (16777216)+(0); }
	def m5569():void { var l:Int = (16777216)+(-0); }
	def m5570():void { var l:Int = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5571():void { var l:Int = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5572():void { var l:Int = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5573():void { var l:Int = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5574():void { var l:Int = (16777216)+(127); }
	def m5575():void { var l:Int = (16777216)+(-127); }
	def m5576():void { var l:Int = (16777216)+(128); }
	def m5577():void { var l:Int = (16777216)+(-128); }
	def m5578():void { var l:Int = (16777216)+(255); }
	def m5579():void { var l:Int = (16777216)+(-255); }
	def m5580():void { var l:Int = (16777216)+(256); }
	def m5581():void { var l:Int = (16777216)+(-256); }
	def m5582():void { var l:Int = (16777216)+(32767); }
	def m5583():void { var l:Int = (16777216)+(-32767); }
	def m5584():void { var l:Int = (16777216)+(32768); }
	def m5585():void { var l:Int = (16777216)+(-32768); }
	def m5586():void { var l:Int = (16777216)+(65535); }
	def m5587():void { var l:Int = (16777216)+(-65535); }
	def m5588():void { var l:Int = (16777216)+(65536); }
	def m5589():void { var l:Int = (16777216)+(-65536); }
	def m5590():void { var l:Int = (16777216)+(16777216); }
	def m5591():void { var l:Int = (16777216)+(-16777216); }
	def m5592():void { var l:Int = (16777216)+(16777217); }
	def m5593():void { var l:Int = (16777216)+(-16777217); }
	def m5594():void { var l:Int = (16777216)+(2147483647); }
	def m5595():void { var l:Int = (16777216)+(-2147483647); }
	def m5596():void { var l:Int = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5597():void { var l:Int = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5598():void { var l:Int = (-16777216)+(w2); }
	def m5599():void { var l:Int = (-16777216)+(w3); }
	def m5600():void { var l:Int = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5601():void { var l:Int = (-16777216)+(w5); }
	def m5602():void { var l:Int = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m5603():void { var l:Int = (-16777216)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m5604():void { var l:Int = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5605():void { var l:Int = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m5606():void { var l:Int = (-16777216)+(0); }
	def m5607():void { var l:Int = (-16777216)+(-0); }
	def m5608():void { var l:Int = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5609():void { var l:Int = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5610():void { var l:Int = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5611():void { var l:Int = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5612():void { var l:Int = (-16777216)+(127); }
	def m5613():void { var l:Int = (-16777216)+(-127); }
	def m5614():void { var l:Int = (-16777216)+(128); }
	def m5615():void { var l:Int = (-16777216)+(-128); }
	def m5616():void { var l:Int = (-16777216)+(255); }
	def m5617():void { var l:Int = (-16777216)+(-255); }
	def m5618():void { var l:Int = (-16777216)+(256); }
	def m5619():void { var l:Int = (-16777216)+(-256); }
	def m5620():void { var l:Int = (-16777216)+(32767); }
	def m5621():void { var l:Int = (-16777216)+(-32767); }
	def m5622():void { var l:Int = (-16777216)+(32768); }
	def m5623():void { var l:Int = (-16777216)+(-32768); }
	def m5624():void { var l:Int = (-16777216)+(65535); }
	def m5625():void { var l:Int = (-16777216)+(-65535); }
	def m5626():void { var l:Int = (-16777216)+(65536); }
	def m5627():void { var l:Int = (-16777216)+(-65536); }
	def m5628():void { var l:Int = (-16777216)+(16777216); }
	def m5629():void { var l:Int = (-16777216)+(-16777216); }
	def m5630():void { var l:Int = (-16777216)+(16777217); }
	def m5631():void { var l:Int = (-16777216)+(-16777217); }
	def m5632():void { var l:Int = (-16777216)+(2147483647); }
	def m5633():void { var l:Int = (-16777216)+(-2147483647); }
	def m5634():void { var l:Int = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5635():void { var l:Int = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5636():void { var l:Int = (16777217)+(w2); }
	def m5637():void { var l:Int = (16777217)+(w3); }
	def m5638():void { var l:Int = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5639():void { var l:Int = (16777217)+(w5); }
	def m5640():void { var l:Int = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m5641():void { var l:Int = (16777217)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5642():void { var l:Int = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5643():void { var l:Int = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m5644():void { var l:Int = (16777217)+(0); }
	def m5645():void { var l:Int = (16777217)+(-0); }
	def m5646():void { var l:Int = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5647():void { var l:Int = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5648():void { var l:Int = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5649():void { var l:Int = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5650():void { var l:Int = (16777217)+(127); }
	def m5651():void { var l:Int = (16777217)+(-127); }
	def m5652():void { var l:Int = (16777217)+(128); }
	def m5653():void { var l:Int = (16777217)+(-128); }
	def m5654():void { var l:Int = (16777217)+(255); }
	def m5655():void { var l:Int = (16777217)+(-255); }
	def m5656():void { var l:Int = (16777217)+(256); }
	def m5657():void { var l:Int = (16777217)+(-256); }
	def m5658():void { var l:Int = (16777217)+(32767); }
	def m5659():void { var l:Int = (16777217)+(-32767); }
	def m5660():void { var l:Int = (16777217)+(32768); }
	def m5661():void { var l:Int = (16777217)+(-32768); }
	def m5662():void { var l:Int = (16777217)+(65535); }
	def m5663():void { var l:Int = (16777217)+(-65535); }
	def m5664():void { var l:Int = (16777217)+(65536); }
	def m5665():void { var l:Int = (16777217)+(-65536); }
	def m5666():void { var l:Int = (16777217)+(16777216); }
	def m5667():void { var l:Int = (16777217)+(-16777216); }
	def m5668():void { var l:Int = (16777217)+(16777217); }
	def m5669():void { var l:Int = (16777217)+(-16777217); }
	def m5670():void { var l:Int = (16777217)+(2147483647); }
	def m5671():void { var l:Int = (16777217)+(-2147483647); }
	def m5672():void { var l:Int = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5673():void { var l:Int = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5674():void { var l:Int = (-16777217)+(w2); }
	def m5675():void { var l:Int = (-16777217)+(w3); }
	def m5676():void { var l:Int = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5677():void { var l:Int = (-16777217)+(w5); }
	def m5678():void { var l:Int = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m5679():void { var l:Int = (-16777217)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m5680():void { var l:Int = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5681():void { var l:Int = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m5682():void { var l:Int = (-16777217)+(0); }
	def m5683():void { var l:Int = (-16777217)+(-0); }
	def m5684():void { var l:Int = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5685():void { var l:Int = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5686():void { var l:Int = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5687():void { var l:Int = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5688():void { var l:Int = (-16777217)+(127); }
	def m5689():void { var l:Int = (-16777217)+(-127); }
	def m5690():void { var l:Int = (-16777217)+(128); }
	def m5691():void { var l:Int = (-16777217)+(-128); }
	def m5692():void { var l:Int = (-16777217)+(255); }
	def m5693():void { var l:Int = (-16777217)+(-255); }
	def m5694():void { var l:Int = (-16777217)+(256); }
	def m5695():void { var l:Int = (-16777217)+(-256); }
	def m5696():void { var l:Int = (-16777217)+(32767); }
	def m5697():void { var l:Int = (-16777217)+(-32767); }
	def m5698():void { var l:Int = (-16777217)+(32768); }
	def m5699():void { var l:Int = (-16777217)+(-32768); }
	def m5700():void { var l:Int = (-16777217)+(65535); }
	def m5701():void { var l:Int = (-16777217)+(-65535); }
	def m5702():void { var l:Int = (-16777217)+(65536); }
	def m5703():void { var l:Int = (-16777217)+(-65536); }
	def m5704():void { var l:Int = (-16777217)+(16777216); }
	def m5705():void { var l:Int = (-16777217)+(-16777216); }
	def m5706():void { var l:Int = (-16777217)+(16777217); }
	def m5707():void { var l:Int = (-16777217)+(-16777217); }
	def m5708():void { var l:Int = (-16777217)+(2147483647); }
	def m5709():void { var l:Int = (-16777217)+(-2147483647); }
	def m5710():void { var l:Int = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5711():void { var l:Int = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5712():void { var l:Int = (2147483647)+(w2); }
	def m5713():void { var l:Int = (2147483647)+(w3); }
	def m5714():void { var l:Int = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5715():void { var l:Int = (2147483647)+(w5); }
	def m5716():void { var l:Int = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m5717():void { var l:Int = (2147483647)+(w7); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m5718():void { var l:Int = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5719():void { var l:Int = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m5720():void { var l:Int = (2147483647)+(0); }
	def m5721():void { var l:Int = (2147483647)+(-0); }
	def m5722():void { var l:Int = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5723():void { var l:Int = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5724():void { var l:Int = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5725():void { var l:Int = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5726():void { var l:Int = (2147483647)+(127); }
	def m5727():void { var l:Int = (2147483647)+(-127); }
	def m5728():void { var l:Int = (2147483647)+(128); }
	def m5729():void { var l:Int = (2147483647)+(-128); }
	def m5730():void { var l:Int = (2147483647)+(255); }
	def m5731():void { var l:Int = (2147483647)+(-255); }
	def m5732():void { var l:Int = (2147483647)+(256); }
	def m5733():void { var l:Int = (2147483647)+(-256); }
	def m5734():void { var l:Int = (2147483647)+(32767); }
	def m5735():void { var l:Int = (2147483647)+(-32767); }
	def m5736():void { var l:Int = (2147483647)+(32768); }
	def m5737():void { var l:Int = (2147483647)+(-32768); }
	def m5738():void { var l:Int = (2147483647)+(65535); }
	def m5739():void { var l:Int = (2147483647)+(-65535); }
	def m5740():void { var l:Int = (2147483647)+(65536); }
	def m5741():void { var l:Int = (2147483647)+(-65536); }
	def m5742():void { var l:Int = (2147483647)+(16777216); }
	def m5743():void { var l:Int = (2147483647)+(-16777216); }
	def m5744():void { var l:Int = (2147483647)+(16777217); }
	def m5745():void { var l:Int = (2147483647)+(-16777217); }
	def m5746():void { var l:Int = (2147483647)+(2147483647); }
	def m5747():void { var l:Int = (2147483647)+(-2147483647); }
	def m5748():void { var l:Int = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5749():void { var l:Int = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5750():void { var l:Int = (-2147483647)+(w2); }
	def m5751():void { var l:Int = (-2147483647)+(w3); }
	def m5752():void { var l:Int = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m5753():void { var l:Int = (-2147483647)+(w5); }
	def m5754():void { var l:Int = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m5755():void { var l:Int = (-2147483647)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m5756():void { var l:Int = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m5757():void { var l:Int = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m5758():void { var l:Int = (-2147483647)+(0); }
	def m5759():void { var l:Int = (-2147483647)+(-0); }
	def m5760():void { var l:Int = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5761():void { var l:Int = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m5762():void { var l:Int = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5763():void { var l:Int = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m5764():void { var l:Int = (-2147483647)+(127); }
	def m5765():void { var l:Int = (-2147483647)+(-127); }
	def m5766():void { var l:Int = (-2147483647)+(128); }
	def m5767():void { var l:Int = (-2147483647)+(-128); }
	def m5768():void { var l:Int = (-2147483647)+(255); }
	def m5769():void { var l:Int = (-2147483647)+(-255); }
	def m5770():void { var l:Int = (-2147483647)+(256); }
	def m5771():void { var l:Int = (-2147483647)+(-256); }
	def m5772():void { var l:Int = (-2147483647)+(32767); }
	def m5773():void { var l:Int = (-2147483647)+(-32767); }
	def m5774():void { var l:Int = (-2147483647)+(32768); }
	def m5775():void { var l:Int = (-2147483647)+(-32768); }
	def m5776():void { var l:Int = (-2147483647)+(65535); }
	def m5777():void { var l:Int = (-2147483647)+(-65535); }
	def m5778():void { var l:Int = (-2147483647)+(65536); }
	def m5779():void { var l:Int = (-2147483647)+(-65536); }
	def m5780():void { var l:Int = (-2147483647)+(16777216); }
	def m5781():void { var l:Int = (-2147483647)+(-16777216); }
	def m5782():void { var l:Int = (-2147483647)+(16777217); }
	def m5783():void { var l:Int = (-2147483647)+(-16777217); }
	def m5784():void { var l:Int = (-2147483647)+(2147483647); }
	def m5785():void { var l:Int = (-2147483647)+(-2147483647); }
	def m5786():void { var l:Long = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5787():void { var l:Long = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5788():void { var l:Long = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5789():void { var l:Long = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5790():void { var l:Long = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5791():void { var l:Long = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5792():void { var l:Long = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5793():void { var l:Long = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5794():void { var l:Long = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5795():void { var l:Long = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5796():void { var l:Long = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5797():void { var l:Long = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5798():void { var l:Long = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5799():void { var l:Long = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5800():void { var l:Long = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5801():void { var l:Long = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5802():void { var l:Long = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5803():void { var l:Long = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5804():void { var l:Long = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5805():void { var l:Long = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5806():void { var l:Long = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5807():void { var l:Long = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5808():void { var l:Long = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5809():void { var l:Long = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5810():void { var l:Long = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5811():void { var l:Long = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5812():void { var l:Long = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5813():void { var l:Long = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5814():void { var l:Long = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5815():void { var l:Long = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5816():void { var l:Long = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5817():void { var l:Long = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5818():void { var l:Long = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5819():void { var l:Long = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5820():void { var l:Long = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5821():void { var l:Long = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5822():void { var l:Long = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5823():void { var l:Long = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5824():void { var l:Long = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5825():void { var l:Long = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5826():void { var l:Long = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5827():void { var l:Long = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5828():void { var l:Long = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5829():void { var l:Long = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5830():void { var l:Long = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5831():void { var l:Long = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5832():void { var l:Long = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5833():void { var l:Long = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5834():void { var l:Long = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5835():void { var l:Long = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5836():void { var l:Long = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5837():void { var l:Long = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5838():void { var l:Long = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5839():void { var l:Long = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5840():void { var l:Long = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5841():void { var l:Long = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5842():void { var l:Long = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5843():void { var l:Long = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5844():void { var l:Long = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5845():void { var l:Long = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5846():void { var l:Long = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5847():void { var l:Long = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5848():void { var l:Long = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5849():void { var l:Long = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5850():void { var l:Long = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5851():void { var l:Long = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5852():void { var l:Long = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5853():void { var l:Long = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5854():void { var l:Long = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5855():void { var l:Long = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5856():void { var l:Long = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5857():void { var l:Long = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5858():void { var l:Long = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5859():void { var l:Long = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5860():void { var l:Long = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5861():void { var l:Long = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5862():void { var l:Long = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5863():void { var l:Long = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5864():void { var l:Long = (w2)+(w2); }
	def m5865():void { var l:Long = (w2)+(w3); }
	def m5866():void { var l:Long = (w2)+(w4); }
	def m5867():void { var l:Long = (w2)+(w5); }
	def m5868():void { var l:Long = (w2)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m5869():void { var l:Long = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m5870():void { var l:Long = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m5871():void { var l:Long = (w2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m5872():void { var l:Long = (w2)+(0); }
	def m5873():void { var l:Long = (w2)+(-0); }
	def m5874():void { var l:Long = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5875():void { var l:Long = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5876():void { var l:Long = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5877():void { var l:Long = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5878():void { var l:Long = (w2)+(127); }
	def m5879():void { var l:Long = (w2)+(-127); }
	def m5880():void { var l:Long = (w2)+(128); }
	def m5881():void { var l:Long = (w2)+(-128); }
	def m5882():void { var l:Long = (w2)+(255); }
	def m5883():void { var l:Long = (w2)+(-255); }
	def m5884():void { var l:Long = (w2)+(256); }
	def m5885():void { var l:Long = (w2)+(-256); }
	def m5886():void { var l:Long = (w2)+(32767); }
	def m5887():void { var l:Long = (w2)+(-32767); }
	def m5888():void { var l:Long = (w2)+(32768); }
	def m5889():void { var l:Long = (w2)+(-32768); }
	def m5890():void { var l:Long = (w2)+(65535); }
	def m5891():void { var l:Long = (w2)+(-65535); }
	def m5892():void { var l:Long = (w2)+(65536); }
	def m5893():void { var l:Long = (w2)+(-65536); }
	def m5894():void { var l:Long = (w2)+(16777216); }
	def m5895():void { var l:Long = (w2)+(-16777216); }
	def m5896():void { var l:Long = (w2)+(16777217); }
	def m5897():void { var l:Long = (w2)+(-16777217); }
	def m5898():void { var l:Long = (w2)+(2147483647); }
	def m5899():void { var l:Long = (w2)+(-2147483647); }
	def m5900():void { var l:Long = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5901():void { var l:Long = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5902():void { var l:Long = (w3)+(w2); }
	def m5903():void { var l:Long = (w3)+(w3); }
	def m5904():void { var l:Long = (w3)+(w4); }
	def m5905():void { var l:Long = (w3)+(w5); }
	def m5906():void { var l:Long = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m5907():void { var l:Long = (w3)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m5908():void { var l:Long = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m5909():void { var l:Long = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m5910():void { var l:Long = (w3)+(0); }
	def m5911():void { var l:Long = (w3)+(-0); }
	def m5912():void { var l:Long = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5913():void { var l:Long = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5914():void { var l:Long = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5915():void { var l:Long = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5916():void { var l:Long = (w3)+(127); }
	def m5917():void { var l:Long = (w3)+(-127); }
	def m5918():void { var l:Long = (w3)+(128); }
	def m5919():void { var l:Long = (w3)+(-128); }
	def m5920():void { var l:Long = (w3)+(255); }
	def m5921():void { var l:Long = (w3)+(-255); }
	def m5922():void { var l:Long = (w3)+(256); }
	def m5923():void { var l:Long = (w3)+(-256); }
	def m5924():void { var l:Long = (w3)+(32767); }
	def m5925():void { var l:Long = (w3)+(-32767); }
	def m5926():void { var l:Long = (w3)+(32768); }
	def m5927():void { var l:Long = (w3)+(-32768); }
	def m5928():void { var l:Long = (w3)+(65535); }
	def m5929():void { var l:Long = (w3)+(-65535); }
	def m5930():void { var l:Long = (w3)+(65536); }
	def m5931():void { var l:Long = (w3)+(-65536); }
	def m5932():void { var l:Long = (w3)+(16777216); }
	def m5933():void { var l:Long = (w3)+(-16777216); }
	def m5934():void { var l:Long = (w3)+(16777217); }
	def m5935():void { var l:Long = (w3)+(-16777217); }
	def m5936():void { var l:Long = (w3)+(2147483647); }
	def m5937():void { var l:Long = (w3)+(-2147483647); }
	def m5938():void { var l:Long = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5939():void { var l:Long = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5940():void { var l:Long = (w4)+(w2); }
	def m5941():void { var l:Long = (w4)+(w3); }
	def m5942():void { var l:Long = (w4)+(w4); }
	def m5943():void { var l:Long = (w4)+(w5); }
	def m5944():void { var l:Long = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m5945():void { var l:Long = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m5946():void { var l:Long = (w4)+(w8); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m5947():void { var l:Long = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m5948():void { var l:Long = (w4)+(0); }
	def m5949():void { var l:Long = (w4)+(-0); }
	def m5950():void { var l:Long = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5951():void { var l:Long = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5952():void { var l:Long = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5953():void { var l:Long = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5954():void { var l:Long = (w4)+(127); }
	def m5955():void { var l:Long = (w4)+(-127); }
	def m5956():void { var l:Long = (w4)+(128); }
	def m5957():void { var l:Long = (w4)+(-128); }
	def m5958():void { var l:Long = (w4)+(255); }
	def m5959():void { var l:Long = (w4)+(-255); }
	def m5960():void { var l:Long = (w4)+(256); }
	def m5961():void { var l:Long = (w4)+(-256); }
	def m5962():void { var l:Long = (w4)+(32767); }
	def m5963():void { var l:Long = (w4)+(-32767); }
	def m5964():void { var l:Long = (w4)+(32768); }
	def m5965():void { var l:Long = (w4)+(-32768); }
	def m5966():void { var l:Long = (w4)+(65535); }
	def m5967():void { var l:Long = (w4)+(-65535); }
	def m5968():void { var l:Long = (w4)+(65536); }
	def m5969():void { var l:Long = (w4)+(-65536); }
	def m5970():void { var l:Long = (w4)+(16777216); }
	def m5971():void { var l:Long = (w4)+(-16777216); }
	def m5972():void { var l:Long = (w4)+(16777217); }
	def m5973():void { var l:Long = (w4)+(-16777217); }
	def m5974():void { var l:Long = (w4)+(2147483647); }
	def m5975():void { var l:Long = (w4)+(-2147483647); }
	def m5976():void { var l:Long = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5977():void { var l:Long = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5978():void { var l:Long = (w5)+(w2); }
	def m5979():void { var l:Long = (w5)+(w3); }
	def m5980():void { var l:Long = (w5)+(w4); }
	def m5981():void { var l:Long = (w5)+(w5); }
	def m5982():void { var l:Long = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m5983():void { var l:Long = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m5984():void { var l:Long = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m5985():void { var l:Long = (w5)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m5986():void { var l:Long = (w5)+(0); }
	def m5987():void { var l:Long = (w5)+(-0); }
	def m5988():void { var l:Long = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5989():void { var l:Long = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m5990():void { var l:Long = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5991():void { var l:Long = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m5992():void { var l:Long = (w5)+(127); }
	def m5993():void { var l:Long = (w5)+(-127); }
	def m5994():void { var l:Long = (w5)+(128); }
	def m5995():void { var l:Long = (w5)+(-128); }
	def m5996():void { var l:Long = (w5)+(255); }
	def m5997():void { var l:Long = (w5)+(-255); }
	def m5998():void { var l:Long = (w5)+(256); }
	def m5999():void { var l:Long = (w5)+(-256); }
	def m6000():void { var l:Long = (w5)+(32767); }
	def m6001():void { var l:Long = (w5)+(-32767); }
	def m6002():void { var l:Long = (w5)+(32768); }
	def m6003():void { var l:Long = (w5)+(-32768); }
	def m6004():void { var l:Long = (w5)+(65535); }
	def m6005():void { var l:Long = (w5)+(-65535); }
	def m6006():void { var l:Long = (w5)+(65536); }
	def m6007():void { var l:Long = (w5)+(-65536); }
	def m6008():void { var l:Long = (w5)+(16777216); }
	def m6009():void { var l:Long = (w5)+(-16777216); }
	def m6010():void { var l:Long = (w5)+(16777217); }
	def m6011():void { var l:Long = (w5)+(-16777217); }
	def m6012():void { var l:Long = (w5)+(2147483647); }
	def m6013():void { var l:Long = (w5)+(-2147483647); }
	def m6014():void { var l:Long = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6015():void { var l:Long = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6016():void { var l:Long = (w6)+(w2); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m6017():void { var l:Long = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m6018():void { var l:Long = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m6019():void { var l:Long = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m6020():void { var l:Long = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6021():void { var l:Long = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6022():void { var l:Long = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6023():void { var l:Long = (w6)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6024():void { var l:Long = (w6)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6025():void { var l:Long = (w6)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6026():void { var l:Long = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6027():void { var l:Long = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6028():void { var l:Long = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6029():void { var l:Long = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6030():void { var l:Long = (w6)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6031():void { var l:Long = (w6)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m6032():void { var l:Long = (w6)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6033():void { var l:Long = (w6)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m6034():void { var l:Long = (w6)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6035():void { var l:Long = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m6036():void { var l:Long = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m6037():void { var l:Long = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m6038():void { var l:Long = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m6039():void { var l:Long = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m6040():void { var l:Long = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m6041():void { var l:Long = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m6042():void { var l:Long = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m6043():void { var l:Long = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m6044():void { var l:Long = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m6045():void { var l:Long = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m6046():void { var l:Long = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m6047():void { var l:Long = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m6048():void { var l:Long = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m6049():void { var l:Long = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m6050():void { var l:Long = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m6051():void { var l:Long = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m6052():void { var l:Long = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6053():void { var l:Long = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6054():void { var l:Long = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6055():void { var l:Long = (w7)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m6056():void { var l:Long = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m6057():void { var l:Long = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6058():void { var l:Long = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6059():void { var l:Long = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6060():void { var l:Long = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6061():void { var l:Long = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6062():void { var l:Long = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6063():void { var l:Long = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6064():void { var l:Long = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6065():void { var l:Long = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6066():void { var l:Long = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6067():void { var l:Long = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6068():void { var l:Long = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6069():void { var l:Long = (w7)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m6070():void { var l:Long = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6071():void { var l:Long = (w7)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m6072():void { var l:Long = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6073():void { var l:Long = (w7)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m6074():void { var l:Long = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6075():void { var l:Long = (w7)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m6076():void { var l:Long = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6077():void { var l:Long = (w7)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m6078():void { var l:Long = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6079():void { var l:Long = (w7)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m6080():void { var l:Long = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6081():void { var l:Long = (w7)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m6082():void { var l:Long = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6083():void { var l:Long = (w7)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m6084():void { var l:Long = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6085():void { var l:Long = (w7)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m6086():void { var l:Long = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6087():void { var l:Long = (w7)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m6088():void { var l:Long = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6089():void { var l:Long = (w7)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m6090():void { var l:Long = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6091():void { var l:Long = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6092():void { var l:Long = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6093():void { var l:Long = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6094():void { var l:Long = (w8)+(w4); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m6095():void { var l:Long = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6096():void { var l:Long = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6097():void { var l:Long = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6098():void { var l:Long = (w8)+(w8); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6099():void { var l:Long = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6100():void { var l:Long = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6101():void { var l:Long = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6102():void { var l:Long = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6103():void { var l:Long = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6104():void { var l:Long = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6105():void { var l:Long = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6106():void { var l:Long = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6107():void { var l:Long = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6108():void { var l:Long = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6109():void { var l:Long = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6110():void { var l:Long = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6111():void { var l:Long = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6112():void { var l:Long = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6113():void { var l:Long = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6114():void { var l:Long = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6115():void { var l:Long = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6116():void { var l:Long = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6117():void { var l:Long = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6118():void { var l:Long = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6119():void { var l:Long = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6120():void { var l:Long = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6121():void { var l:Long = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6122():void { var l:Long = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6123():void { var l:Long = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6124():void { var l:Long = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6125():void { var l:Long = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6126():void { var l:Long = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6127():void { var l:Long = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6128():void { var l:Long = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6129():void { var l:Long = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6130():void { var l:Long = (w9)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6131():void { var l:Long = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m6132():void { var l:Long = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m6133():void { var l:Long = (w9)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m6134():void { var l:Long = (w9)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6135():void { var l:Long = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6136():void { var l:Long = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6137():void { var l:Long = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6138():void { var l:Long = (w9)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6139():void { var l:Long = (w9)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6140():void { var l:Long = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6141():void { var l:Long = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6142():void { var l:Long = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6143():void { var l:Long = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6144():void { var l:Long = (w9)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6145():void { var l:Long = (w9)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m6146():void { var l:Long = (w9)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6147():void { var l:Long = (w9)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m6148():void { var l:Long = (w9)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6149():void { var l:Long = (w9)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m6150():void { var l:Long = (w9)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6151():void { var l:Long = (w9)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m6152():void { var l:Long = (w9)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6153():void { var l:Long = (w9)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m6154():void { var l:Long = (w9)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6155():void { var l:Long = (w9)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m6156():void { var l:Long = (w9)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6157():void { var l:Long = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m6158():void { var l:Long = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m6159():void { var l:Long = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m6160():void { var l:Long = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m6161():void { var l:Long = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m6162():void { var l:Long = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m6163():void { var l:Long = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m6164():void { var l:Long = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m6165():void { var l:Long = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m6166():void { var l:Long = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6167():void { var l:Long = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6168():void { var l:Long = (0)+(w2); }
	def m6169():void { var l:Long = (0)+(w3); }
	def m6170():void { var l:Long = (0)+(w4); }
	def m6171():void { var l:Long = (0)+(w5); }
	def m6172():void { var l:Long = (0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6173():void { var l:Long = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6174():void { var l:Long = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6175():void { var l:Long = (0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6176():void { var l:Long = (0)+(0); }
	def m6177():void { var l:Long = (0)+(-0); }
	def m6178():void { var l:Long = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6179():void { var l:Long = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6180():void { var l:Long = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6181():void { var l:Long = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6182():void { var l:Long = (0)+(127); }
	def m6183():void { var l:Long = (0)+(-127); }
	def m6184():void { var l:Long = (0)+(128); }
	def m6185():void { var l:Long = (0)+(-128); }
	def m6186():void { var l:Long = (0)+(255); }
	def m6187():void { var l:Long = (0)+(-255); }
	def m6188():void { var l:Long = (0)+(256); }
	def m6189():void { var l:Long = (0)+(-256); }
	def m6190():void { var l:Long = (0)+(32767); }
	def m6191():void { var l:Long = (0)+(-32767); }
	def m6192():void { var l:Long = (0)+(32768); }
	def m6193():void { var l:Long = (0)+(-32768); }
	def m6194():void { var l:Long = (0)+(65535); }
	def m6195():void { var l:Long = (0)+(-65535); }
	def m6196():void { var l:Long = (0)+(65536); }
	def m6197():void { var l:Long = (0)+(-65536); }
	def m6198():void { var l:Long = (0)+(16777216); }
	def m6199():void { var l:Long = (0)+(-16777216); }
	def m6200():void { var l:Long = (0)+(16777217); }
	def m6201():void { var l:Long = (0)+(-16777217); }
	def m6202():void { var l:Long = (0)+(2147483647); }
	def m6203():void { var l:Long = (0)+(-2147483647); }
	def m6204():void { var l:Long = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6205():void { var l:Long = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6206():void { var l:Long = (-0)+(w2); }
	def m6207():void { var l:Long = (-0)+(w3); }
	def m6208():void { var l:Long = (-0)+(w4); }
	def m6209():void { var l:Long = (-0)+(w5); }
	def m6210():void { var l:Long = (-0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6211():void { var l:Long = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6212():void { var l:Long = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6213():void { var l:Long = (-0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6214():void { var l:Long = (-0)+(0); }
	def m6215():void { var l:Long = (-0)+(-0); }
	def m6216():void { var l:Long = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6217():void { var l:Long = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6218():void { var l:Long = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6219():void { var l:Long = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6220():void { var l:Long = (-0)+(127); }
	def m6221():void { var l:Long = (-0)+(-127); }
	def m6222():void { var l:Long = (-0)+(128); }
	def m6223():void { var l:Long = (-0)+(-128); }
	def m6224():void { var l:Long = (-0)+(255); }
	def m6225():void { var l:Long = (-0)+(-255); }
	def m6226():void { var l:Long = (-0)+(256); }
	def m6227():void { var l:Long = (-0)+(-256); }
	def m6228():void { var l:Long = (-0)+(32767); }
	def m6229():void { var l:Long = (-0)+(-32767); }
	def m6230():void { var l:Long = (-0)+(32768); }
	def m6231():void { var l:Long = (-0)+(-32768); }
	def m6232():void { var l:Long = (-0)+(65535); }
	def m6233():void { var l:Long = (-0)+(-65535); }
	def m6234():void { var l:Long = (-0)+(65536); }
	def m6235():void { var l:Long = (-0)+(-65536); }
	def m6236():void { var l:Long = (-0)+(16777216); }
	def m6237():void { var l:Long = (-0)+(-16777216); }
	def m6238():void { var l:Long = (-0)+(16777217); }
	def m6239():void { var l:Long = (-0)+(-16777217); }
	def m6240():void { var l:Long = (-0)+(2147483647); }
	def m6241():void { var l:Long = (-0)+(-2147483647); }
	def m6242():void { var l:Long = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6243():void { var l:Long = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6244():void { var l:Long = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6245():void { var l:Long = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6246():void { var l:Long = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6247():void { var l:Long = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6248():void { var l:Long = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6249():void { var l:Long = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6250():void { var l:Long = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6251():void { var l:Long = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6252():void { var l:Long = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6253():void { var l:Long = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6254():void { var l:Long = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6255():void { var l:Long = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6256():void { var l:Long = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6257():void { var l:Long = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6258():void { var l:Long = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6259():void { var l:Long = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6260():void { var l:Long = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6261():void { var l:Long = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6262():void { var l:Long = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6263():void { var l:Long = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6264():void { var l:Long = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6265():void { var l:Long = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6266():void { var l:Long = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6267():void { var l:Long = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6268():void { var l:Long = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6269():void { var l:Long = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6270():void { var l:Long = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6271():void { var l:Long = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6272():void { var l:Long = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6273():void { var l:Long = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6274():void { var l:Long = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6275():void { var l:Long = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6276():void { var l:Long = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6277():void { var l:Long = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6278():void { var l:Long = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6279():void { var l:Long = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6280():void { var l:Long = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6281():void { var l:Long = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6282():void { var l:Long = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6283():void { var l:Long = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6284():void { var l:Long = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6285():void { var l:Long = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6286():void { var l:Long = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6287():void { var l:Long = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6288():void { var l:Long = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6289():void { var l:Long = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6290():void { var l:Long = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6291():void { var l:Long = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6292():void { var l:Long = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6293():void { var l:Long = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6294():void { var l:Long = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6295():void { var l:Long = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6296():void { var l:Long = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6297():void { var l:Long = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6298():void { var l:Long = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6299():void { var l:Long = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6300():void { var l:Long = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6301():void { var l:Long = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6302():void { var l:Long = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6303():void { var l:Long = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6304():void { var l:Long = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6305():void { var l:Long = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6306():void { var l:Long = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6307():void { var l:Long = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6308():void { var l:Long = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6309():void { var l:Long = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6310():void { var l:Long = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6311():void { var l:Long = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6312():void { var l:Long = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6313():void { var l:Long = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6314():void { var l:Long = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6315():void { var l:Long = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6316():void { var l:Long = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6317():void { var l:Long = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6318():void { var l:Long = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6319():void { var l:Long = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6320():void { var l:Long = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6321():void { var l:Long = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6322():void { var l:Long = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6323():void { var l:Long = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6324():void { var l:Long = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6325():void { var l:Long = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6326():void { var l:Long = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6327():void { var l:Long = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6328():void { var l:Long = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6329():void { var l:Long = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6330():void { var l:Long = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6331():void { var l:Long = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6332():void { var l:Long = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6333():void { var l:Long = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6334():void { var l:Long = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6335():void { var l:Long = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6336():void { var l:Long = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6337():void { var l:Long = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6338():void { var l:Long = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6339():void { var l:Long = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6340():void { var l:Long = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6341():void { var l:Long = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6342():void { var l:Long = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6343():void { var l:Long = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6344():void { var l:Long = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6345():void { var l:Long = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6346():void { var l:Long = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6347():void { var l:Long = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6348():void { var l:Long = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6349():void { var l:Long = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6350():void { var l:Long = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6351():void { var l:Long = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6352():void { var l:Long = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6353():void { var l:Long = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6354():void { var l:Long = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6355():void { var l:Long = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6356():void { var l:Long = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6357():void { var l:Long = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6358():void { var l:Long = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6359():void { var l:Long = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6360():void { var l:Long = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6361():void { var l:Long = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6362():void { var l:Long = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6363():void { var l:Long = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6364():void { var l:Long = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6365():void { var l:Long = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6366():void { var l:Long = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6367():void { var l:Long = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6368():void { var l:Long = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6369():void { var l:Long = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6370():void { var l:Long = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6371():void { var l:Long = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6372():void { var l:Long = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6373():void { var l:Long = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6374():void { var l:Long = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6375():void { var l:Long = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6376():void { var l:Long = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6377():void { var l:Long = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6378():void { var l:Long = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6379():void { var l:Long = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6380():void { var l:Long = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6381():void { var l:Long = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6382():void { var l:Long = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6383():void { var l:Long = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6384():void { var l:Long = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6385():void { var l:Long = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6386():void { var l:Long = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6387():void { var l:Long = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6388():void { var l:Long = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6389():void { var l:Long = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6390():void { var l:Long = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6391():void { var l:Long = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6392():void { var l:Long = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6393():void { var l:Long = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6394():void { var l:Long = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6395():void { var l:Long = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6396():void { var l:Long = (127)+(w2); }
	def m6397():void { var l:Long = (127)+(w3); }
	def m6398():void { var l:Long = (127)+(w4); }
	def m6399():void { var l:Long = (127)+(w5); }
	def m6400():void { var l:Long = (127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((127)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6401():void { var l:Long = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6402():void { var l:Long = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6403():void { var l:Long = (127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((127)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6404():void { var l:Long = (127)+(0); }
	def m6405():void { var l:Long = (127)+(-0); }
	def m6406():void { var l:Long = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6407():void { var l:Long = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6408():void { var l:Long = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6409():void { var l:Long = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6410():void { var l:Long = (127)+(127); }
	def m6411():void { var l:Long = (127)+(-127); }
	def m6412():void { var l:Long = (127)+(128); }
	def m6413():void { var l:Long = (127)+(-128); }
	def m6414():void { var l:Long = (127)+(255); }
	def m6415():void { var l:Long = (127)+(-255); }
	def m6416():void { var l:Long = (127)+(256); }
	def m6417():void { var l:Long = (127)+(-256); }
	def m6418():void { var l:Long = (127)+(32767); }
	def m6419():void { var l:Long = (127)+(-32767); }
	def m6420():void { var l:Long = (127)+(32768); }
	def m6421():void { var l:Long = (127)+(-32768); }
	def m6422():void { var l:Long = (127)+(65535); }
	def m6423():void { var l:Long = (127)+(-65535); }
	def m6424():void { var l:Long = (127)+(65536); }
	def m6425():void { var l:Long = (127)+(-65536); }
	def m6426():void { var l:Long = (127)+(16777216); }
	def m6427():void { var l:Long = (127)+(-16777216); }
	def m6428():void { var l:Long = (127)+(16777217); }
	def m6429():void { var l:Long = (127)+(-16777217); }
	def m6430():void { var l:Long = (127)+(2147483647); }
	def m6431():void { var l:Long = (127)+(-2147483647); }
	def m6432():void { var l:Long = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6433():void { var l:Long = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6434():void { var l:Long = (-127)+(w2); }
	def m6435():void { var l:Long = (-127)+(w3); }
	def m6436():void { var l:Long = (-127)+(w4); }
	def m6437():void { var l:Long = (-127)+(w5); }
	def m6438():void { var l:Long = (-127)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m6439():void { var l:Long = (-127)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m6440():void { var l:Long = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6441():void { var l:Long = (-127)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m6442():void { var l:Long = (-127)+(0); }
	def m6443():void { var l:Long = (-127)+(-0); }
	def m6444():void { var l:Long = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6445():void { var l:Long = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6446():void { var l:Long = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6447():void { var l:Long = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6448():void { var l:Long = (-127)+(127); }
	def m6449():void { var l:Long = (-127)+(-127); }
	def m6450():void { var l:Long = (-127)+(128); }
	def m6451():void { var l:Long = (-127)+(-128); }
	def m6452():void { var l:Long = (-127)+(255); }
	def m6453():void { var l:Long = (-127)+(-255); }
	def m6454():void { var l:Long = (-127)+(256); }
	def m6455():void { var l:Long = (-127)+(-256); }
	def m6456():void { var l:Long = (-127)+(32767); }
	def m6457():void { var l:Long = (-127)+(-32767); }
	def m6458():void { var l:Long = (-127)+(32768); }
	def m6459():void { var l:Long = (-127)+(-32768); }
	def m6460():void { var l:Long = (-127)+(65535); }
	def m6461():void { var l:Long = (-127)+(-65535); }
	def m6462():void { var l:Long = (-127)+(65536); }
	def m6463():void { var l:Long = (-127)+(-65536); }
	def m6464():void { var l:Long = (-127)+(16777216); }
	def m6465():void { var l:Long = (-127)+(-16777216); }
	def m6466():void { var l:Long = (-127)+(16777217); }
	def m6467():void { var l:Long = (-127)+(-16777217); }
	def m6468():void { var l:Long = (-127)+(2147483647); }
	def m6469():void { var l:Long = (-127)+(-2147483647); }
	def m6470():void { var l:Long = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6471():void { var l:Long = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6472():void { var l:Long = (128)+(w2); }
	def m6473():void { var l:Long = (128)+(w3); }
	def m6474():void { var l:Long = (128)+(w4); }
	def m6475():void { var l:Long = (128)+(w5); }
	def m6476():void { var l:Long = (128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((128)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6477():void { var l:Long = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6478():void { var l:Long = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6479():void { var l:Long = (128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((128)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6480():void { var l:Long = (128)+(0); }
	def m6481():void { var l:Long = (128)+(-0); }
	def m6482():void { var l:Long = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6483():void { var l:Long = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6484():void { var l:Long = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6485():void { var l:Long = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6486():void { var l:Long = (128)+(127); }
	def m6487():void { var l:Long = (128)+(-127); }
	def m6488():void { var l:Long = (128)+(128); }
	def m6489():void { var l:Long = (128)+(-128); }
	def m6490():void { var l:Long = (128)+(255); }
	def m6491():void { var l:Long = (128)+(-255); }
	def m6492():void { var l:Long = (128)+(256); }
	def m6493():void { var l:Long = (128)+(-256); }
	def m6494():void { var l:Long = (128)+(32767); }
	def m6495():void { var l:Long = (128)+(-32767); }
	def m6496():void { var l:Long = (128)+(32768); }
	def m6497():void { var l:Long = (128)+(-32768); }
	def m6498():void { var l:Long = (128)+(65535); }
	def m6499():void { var l:Long = (128)+(-65535); }
	def m6500():void { var l:Long = (128)+(65536); }
	def m6501():void { var l:Long = (128)+(-65536); }
	def m6502():void { var l:Long = (128)+(16777216); }
	def m6503():void { var l:Long = (128)+(-16777216); }
	def m6504():void { var l:Long = (128)+(16777217); }
	def m6505():void { var l:Long = (128)+(-16777217); }
	def m6506():void { var l:Long = (128)+(2147483647); }
	def m6507():void { var l:Long = (128)+(-2147483647); }
	def m6508():void { var l:Long = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6509():void { var l:Long = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6510():void { var l:Long = (-128)+(w2); }
	def m6511():void { var l:Long = (-128)+(w3); }
	def m6512():void { var l:Long = (-128)+(w4); }
	def m6513():void { var l:Long = (-128)+(w5); }
	def m6514():void { var l:Long = (-128)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m6515():void { var l:Long = (-128)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m6516():void { var l:Long = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6517():void { var l:Long = (-128)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m6518():void { var l:Long = (-128)+(0); }
	def m6519():void { var l:Long = (-128)+(-0); }
	def m6520():void { var l:Long = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6521():void { var l:Long = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6522():void { var l:Long = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6523():void { var l:Long = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6524():void { var l:Long = (-128)+(127); }
	def m6525():void { var l:Long = (-128)+(-127); }
	def m6526():void { var l:Long = (-128)+(128); }
	def m6527():void { var l:Long = (-128)+(-128); }
	def m6528():void { var l:Long = (-128)+(255); }
	def m6529():void { var l:Long = (-128)+(-255); }
	def m6530():void { var l:Long = (-128)+(256); }
	def m6531():void { var l:Long = (-128)+(-256); }
	def m6532():void { var l:Long = (-128)+(32767); }
	def m6533():void { var l:Long = (-128)+(-32767); }
	def m6534():void { var l:Long = (-128)+(32768); }
	def m6535():void { var l:Long = (-128)+(-32768); }
	def m6536():void { var l:Long = (-128)+(65535); }
	def m6537():void { var l:Long = (-128)+(-65535); }
	def m6538():void { var l:Long = (-128)+(65536); }
	def m6539():void { var l:Long = (-128)+(-65536); }
	def m6540():void { var l:Long = (-128)+(16777216); }
	def m6541():void { var l:Long = (-128)+(-16777216); }
	def m6542():void { var l:Long = (-128)+(16777217); }
	def m6543():void { var l:Long = (-128)+(-16777217); }
	def m6544():void { var l:Long = (-128)+(2147483647); }
	def m6545():void { var l:Long = (-128)+(-2147483647); }
	def m6546():void { var l:Long = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6547():void { var l:Long = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6548():void { var l:Long = (255)+(w2); }
	def m6549():void { var l:Long = (255)+(w3); }
	def m6550():void { var l:Long = (255)+(w4); }
	def m6551():void { var l:Long = (255)+(w5); }
	def m6552():void { var l:Long = (255)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((255)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m6553():void { var l:Long = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6554():void { var l:Long = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6555():void { var l:Long = (255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((255)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6556():void { var l:Long = (255)+(0); }
	def m6557():void { var l:Long = (255)+(-0); }
	def m6558():void { var l:Long = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6559():void { var l:Long = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6560():void { var l:Long = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6561():void { var l:Long = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6562():void { var l:Long = (255)+(127); }
	def m6563():void { var l:Long = (255)+(-127); }
	def m6564():void { var l:Long = (255)+(128); }
	def m6565():void { var l:Long = (255)+(-128); }
	def m6566():void { var l:Long = (255)+(255); }
	def m6567():void { var l:Long = (255)+(-255); }
	def m6568():void { var l:Long = (255)+(256); }
	def m6569():void { var l:Long = (255)+(-256); }
	def m6570():void { var l:Long = (255)+(32767); }
	def m6571():void { var l:Long = (255)+(-32767); }
	def m6572():void { var l:Long = (255)+(32768); }
	def m6573():void { var l:Long = (255)+(-32768); }
	def m6574():void { var l:Long = (255)+(65535); }
	def m6575():void { var l:Long = (255)+(-65535); }
	def m6576():void { var l:Long = (255)+(65536); }
	def m6577():void { var l:Long = (255)+(-65536); }
	def m6578():void { var l:Long = (255)+(16777216); }
	def m6579():void { var l:Long = (255)+(-16777216); }
	def m6580():void { var l:Long = (255)+(16777217); }
	def m6581():void { var l:Long = (255)+(-16777217); }
	def m6582():void { var l:Long = (255)+(2147483647); }
	def m6583():void { var l:Long = (255)+(-2147483647); }
	def m6584():void { var l:Long = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6585():void { var l:Long = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6586():void { var l:Long = (-255)+(w2); }
	def m6587():void { var l:Long = (-255)+(w3); }
	def m6588():void { var l:Long = (-255)+(w4); }
	def m6589():void { var l:Long = (-255)+(w5); }
	def m6590():void { var l:Long = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m6591():void { var l:Long = (-255)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m6592():void { var l:Long = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6593():void { var l:Long = (-255)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m6594():void { var l:Long = (-255)+(0); }
	def m6595():void { var l:Long = (-255)+(-0); }
	def m6596():void { var l:Long = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6597():void { var l:Long = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6598():void { var l:Long = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6599():void { var l:Long = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6600():void { var l:Long = (-255)+(127); }
	def m6601():void { var l:Long = (-255)+(-127); }
	def m6602():void { var l:Long = (-255)+(128); }
	def m6603():void { var l:Long = (-255)+(-128); }
	def m6604():void { var l:Long = (-255)+(255); }
	def m6605():void { var l:Long = (-255)+(-255); }
	def m6606():void { var l:Long = (-255)+(256); }
	def m6607():void { var l:Long = (-255)+(-256); }
	def m6608():void { var l:Long = (-255)+(32767); }
	def m6609():void { var l:Long = (-255)+(-32767); }
	def m6610():void { var l:Long = (-255)+(32768); }
	def m6611():void { var l:Long = (-255)+(-32768); }
	def m6612():void { var l:Long = (-255)+(65535); }
	def m6613():void { var l:Long = (-255)+(-65535); }
	def m6614():void { var l:Long = (-255)+(65536); }
	def m6615():void { var l:Long = (-255)+(-65536); }
	def m6616():void { var l:Long = (-255)+(16777216); }
	def m6617():void { var l:Long = (-255)+(-16777216); }
	def m6618():void { var l:Long = (-255)+(16777217); }
	def m6619():void { var l:Long = (-255)+(-16777217); }
	def m6620():void { var l:Long = (-255)+(2147483647); }
	def m6621():void { var l:Long = (-255)+(-2147483647); }
	def m6622():void { var l:Long = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6623():void { var l:Long = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6624():void { var l:Long = (256)+(w2); }
	def m6625():void { var l:Long = (256)+(w3); }
	def m6626():void { var l:Long = (256)+(w4); }
	def m6627():void { var l:Long = (256)+(w5); }
	def m6628():void { var l:Long = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m6629():void { var l:Long = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6630():void { var l:Long = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6631():void { var l:Long = (256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((256)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6632():void { var l:Long = (256)+(0); }
	def m6633():void { var l:Long = (256)+(-0); }
	def m6634():void { var l:Long = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6635():void { var l:Long = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6636():void { var l:Long = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6637():void { var l:Long = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6638():void { var l:Long = (256)+(127); }
	def m6639():void { var l:Long = (256)+(-127); }
	def m6640():void { var l:Long = (256)+(128); }
	def m6641():void { var l:Long = (256)+(-128); }
	def m6642():void { var l:Long = (256)+(255); }
	def m6643():void { var l:Long = (256)+(-255); }
	def m6644():void { var l:Long = (256)+(256); }
	def m6645():void { var l:Long = (256)+(-256); }
	def m6646():void { var l:Long = (256)+(32767); }
	def m6647():void { var l:Long = (256)+(-32767); }
	def m6648():void { var l:Long = (256)+(32768); }
	def m6649():void { var l:Long = (256)+(-32768); }
	def m6650():void { var l:Long = (256)+(65535); }
	def m6651():void { var l:Long = (256)+(-65535); }
	def m6652():void { var l:Long = (256)+(65536); }
	def m6653():void { var l:Long = (256)+(-65536); }
	def m6654():void { var l:Long = (256)+(16777216); }
	def m6655():void { var l:Long = (256)+(-16777216); }
	def m6656():void { var l:Long = (256)+(16777217); }
	def m6657():void { var l:Long = (256)+(-16777217); }
	def m6658():void { var l:Long = (256)+(2147483647); }
	def m6659():void { var l:Long = (256)+(-2147483647); }
	def m6660():void { var l:Long = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6661():void { var l:Long = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6662():void { var l:Long = (-256)+(w2); }
	def m6663():void { var l:Long = (-256)+(w3); }
	def m6664():void { var l:Long = (-256)+(w4); }
	def m6665():void { var l:Long = (-256)+(w5); }
	def m6666():void { var l:Long = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m6667():void { var l:Long = (-256)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m6668():void { var l:Long = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6669():void { var l:Long = (-256)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m6670():void { var l:Long = (-256)+(0); }
	def m6671():void { var l:Long = (-256)+(-0); }
	def m6672():void { var l:Long = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6673():void { var l:Long = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6674():void { var l:Long = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6675():void { var l:Long = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6676():void { var l:Long = (-256)+(127); }
	def m6677():void { var l:Long = (-256)+(-127); }
	def m6678():void { var l:Long = (-256)+(128); }
	def m6679():void { var l:Long = (-256)+(-128); }
	def m6680():void { var l:Long = (-256)+(255); }
	def m6681():void { var l:Long = (-256)+(-255); }
	def m6682():void { var l:Long = (-256)+(256); }
	def m6683():void { var l:Long = (-256)+(-256); }
	def m6684():void { var l:Long = (-256)+(32767); }
	def m6685():void { var l:Long = (-256)+(-32767); }
	def m6686():void { var l:Long = (-256)+(32768); }
	def m6687():void { var l:Long = (-256)+(-32768); }
	def m6688():void { var l:Long = (-256)+(65535); }
	def m6689():void { var l:Long = (-256)+(-65535); }
	def m6690():void { var l:Long = (-256)+(65536); }
	def m6691():void { var l:Long = (-256)+(-65536); }
	def m6692():void { var l:Long = (-256)+(16777216); }
	def m6693():void { var l:Long = (-256)+(-16777216); }
	def m6694():void { var l:Long = (-256)+(16777217); }
	def m6695():void { var l:Long = (-256)+(-16777217); }
	def m6696():void { var l:Long = (-256)+(2147483647); }
	def m6697():void { var l:Long = (-256)+(-2147483647); }
	def m6698():void { var l:Long = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6699():void { var l:Long = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6700():void { var l:Long = (32767)+(w2); }
	def m6701():void { var l:Long = (32767)+(w3); }
	def m6702():void { var l:Long = (32767)+(w4); }
	def m6703():void { var l:Long = (32767)+(w5); }
	def m6704():void { var l:Long = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m6705():void { var l:Long = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6706():void { var l:Long = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6707():void { var l:Long = (32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32767)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6708():void { var l:Long = (32767)+(0); }
	def m6709():void { var l:Long = (32767)+(-0); }
	def m6710():void { var l:Long = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6711():void { var l:Long = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6712():void { var l:Long = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6713():void { var l:Long = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6714():void { var l:Long = (32767)+(127); }
	def m6715():void { var l:Long = (32767)+(-127); }
	def m6716():void { var l:Long = (32767)+(128); }
	def m6717():void { var l:Long = (32767)+(-128); }
	def m6718():void { var l:Long = (32767)+(255); }
	def m6719():void { var l:Long = (32767)+(-255); }
	def m6720():void { var l:Long = (32767)+(256); }
	def m6721():void { var l:Long = (32767)+(-256); }
	def m6722():void { var l:Long = (32767)+(32767); }
	def m6723():void { var l:Long = (32767)+(-32767); }
	def m6724():void { var l:Long = (32767)+(32768); }
	def m6725():void { var l:Long = (32767)+(-32768); }
	def m6726():void { var l:Long = (32767)+(65535); }
	def m6727():void { var l:Long = (32767)+(-65535); }
	def m6728():void { var l:Long = (32767)+(65536); }
	def m6729():void { var l:Long = (32767)+(-65536); }
	def m6730():void { var l:Long = (32767)+(16777216); }
	def m6731():void { var l:Long = (32767)+(-16777216); }
	def m6732():void { var l:Long = (32767)+(16777217); }
	def m6733():void { var l:Long = (32767)+(-16777217); }
	def m6734():void { var l:Long = (32767)+(2147483647); }
	def m6735():void { var l:Long = (32767)+(-2147483647); }
	def m6736():void { var l:Long = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6737():void { var l:Long = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6738():void { var l:Long = (-32767)+(w2); }
	def m6739():void { var l:Long = (-32767)+(w3); }
	def m6740():void { var l:Long = (-32767)+(w4); }
	def m6741():void { var l:Long = (-32767)+(w5); }
	def m6742():void { var l:Long = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m6743():void { var l:Long = (-32767)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m6744():void { var l:Long = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6745():void { var l:Long = (-32767)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m6746():void { var l:Long = (-32767)+(0); }
	def m6747():void { var l:Long = (-32767)+(-0); }
	def m6748():void { var l:Long = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6749():void { var l:Long = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6750():void { var l:Long = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6751():void { var l:Long = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6752():void { var l:Long = (-32767)+(127); }
	def m6753():void { var l:Long = (-32767)+(-127); }
	def m6754():void { var l:Long = (-32767)+(128); }
	def m6755():void { var l:Long = (-32767)+(-128); }
	def m6756():void { var l:Long = (-32767)+(255); }
	def m6757():void { var l:Long = (-32767)+(-255); }
	def m6758():void { var l:Long = (-32767)+(256); }
	def m6759():void { var l:Long = (-32767)+(-256); }
	def m6760():void { var l:Long = (-32767)+(32767); }
	def m6761():void { var l:Long = (-32767)+(-32767); }
	def m6762():void { var l:Long = (-32767)+(32768); }
	def m6763():void { var l:Long = (-32767)+(-32768); }
	def m6764():void { var l:Long = (-32767)+(65535); }
	def m6765():void { var l:Long = (-32767)+(-65535); }
	def m6766():void { var l:Long = (-32767)+(65536); }
	def m6767():void { var l:Long = (-32767)+(-65536); }
	def m6768():void { var l:Long = (-32767)+(16777216); }
	def m6769():void { var l:Long = (-32767)+(-16777216); }
	def m6770():void { var l:Long = (-32767)+(16777217); }
	def m6771():void { var l:Long = (-32767)+(-16777217); }
	def m6772():void { var l:Long = (-32767)+(2147483647); }
	def m6773():void { var l:Long = (-32767)+(-2147483647); }
	def m6774():void { var l:Long = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6775():void { var l:Long = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6776():void { var l:Long = (32768)+(w2); }
	def m6777():void { var l:Long = (32768)+(w3); }
	def m6778():void { var l:Long = (32768)+(w4); }
	def m6779():void { var l:Long = (32768)+(w5); }
	def m6780():void { var l:Long = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m6781():void { var l:Long = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6782():void { var l:Long = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6783():void { var l:Long = (32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32768)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6784():void { var l:Long = (32768)+(0); }
	def m6785():void { var l:Long = (32768)+(-0); }
	def m6786():void { var l:Long = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6787():void { var l:Long = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6788():void { var l:Long = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6789():void { var l:Long = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6790():void { var l:Long = (32768)+(127); }
	def m6791():void { var l:Long = (32768)+(-127); }
	def m6792():void { var l:Long = (32768)+(128); }
	def m6793():void { var l:Long = (32768)+(-128); }
	def m6794():void { var l:Long = (32768)+(255); }
	def m6795():void { var l:Long = (32768)+(-255); }
	def m6796():void { var l:Long = (32768)+(256); }
	def m6797():void { var l:Long = (32768)+(-256); }
	def m6798():void { var l:Long = (32768)+(32767); }
	def m6799():void { var l:Long = (32768)+(-32767); }
	def m6800():void { var l:Long = (32768)+(32768); }
	def m6801():void { var l:Long = (32768)+(-32768); }
	def m6802():void { var l:Long = (32768)+(65535); }
	def m6803():void { var l:Long = (32768)+(-65535); }
	def m6804():void { var l:Long = (32768)+(65536); }
	def m6805():void { var l:Long = (32768)+(-65536); }
	def m6806():void { var l:Long = (32768)+(16777216); }
	def m6807():void { var l:Long = (32768)+(-16777216); }
	def m6808():void { var l:Long = (32768)+(16777217); }
	def m6809():void { var l:Long = (32768)+(-16777217); }
	def m6810():void { var l:Long = (32768)+(2147483647); }
	def m6811():void { var l:Long = (32768)+(-2147483647); }
	def m6812():void { var l:Long = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6813():void { var l:Long = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6814():void { var l:Long = (-32768)+(w2); }
	def m6815():void { var l:Long = (-32768)+(w3); }
	def m6816():void { var l:Long = (-32768)+(w4); }
	def m6817():void { var l:Long = (-32768)+(w5); }
	def m6818():void { var l:Long = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m6819():void { var l:Long = (-32768)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m6820():void { var l:Long = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6821():void { var l:Long = (-32768)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m6822():void { var l:Long = (-32768)+(0); }
	def m6823():void { var l:Long = (-32768)+(-0); }
	def m6824():void { var l:Long = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6825():void { var l:Long = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6826():void { var l:Long = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6827():void { var l:Long = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6828():void { var l:Long = (-32768)+(127); }
	def m6829():void { var l:Long = (-32768)+(-127); }
	def m6830():void { var l:Long = (-32768)+(128); }
	def m6831():void { var l:Long = (-32768)+(-128); }
	def m6832():void { var l:Long = (-32768)+(255); }
	def m6833():void { var l:Long = (-32768)+(-255); }
	def m6834():void { var l:Long = (-32768)+(256); }
	def m6835():void { var l:Long = (-32768)+(-256); }
	def m6836():void { var l:Long = (-32768)+(32767); }
	def m6837():void { var l:Long = (-32768)+(-32767); }
	def m6838():void { var l:Long = (-32768)+(32768); }
	def m6839():void { var l:Long = (-32768)+(-32768); }
	def m6840():void { var l:Long = (-32768)+(65535); }
	def m6841():void { var l:Long = (-32768)+(-65535); }
	def m6842():void { var l:Long = (-32768)+(65536); }
	def m6843():void { var l:Long = (-32768)+(-65536); }
	def m6844():void { var l:Long = (-32768)+(16777216); }
	def m6845():void { var l:Long = (-32768)+(-16777216); }
	def m6846():void { var l:Long = (-32768)+(16777217); }
	def m6847():void { var l:Long = (-32768)+(-16777217); }
	def m6848():void { var l:Long = (-32768)+(2147483647); }
	def m6849():void { var l:Long = (-32768)+(-2147483647); }
	def m6850():void { var l:Long = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6851():void { var l:Long = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6852():void { var l:Long = (65535)+(w2); }
	def m6853():void { var l:Long = (65535)+(w3); }
	def m6854():void { var l:Long = (65535)+(w4); }
	def m6855():void { var l:Long = (65535)+(w5); }
	def m6856():void { var l:Long = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m6857():void { var l:Long = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6858():void { var l:Long = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6859():void { var l:Long = (65535)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((65535)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m6860():void { var l:Long = (65535)+(0); }
	def m6861():void { var l:Long = (65535)+(-0); }
	def m6862():void { var l:Long = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6863():void { var l:Long = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6864():void { var l:Long = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6865():void { var l:Long = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6866():void { var l:Long = (65535)+(127); }
	def m6867():void { var l:Long = (65535)+(-127); }
	def m6868():void { var l:Long = (65535)+(128); }
	def m6869():void { var l:Long = (65535)+(-128); }
	def m6870():void { var l:Long = (65535)+(255); }
	def m6871():void { var l:Long = (65535)+(-255); }
	def m6872():void { var l:Long = (65535)+(256); }
	def m6873():void { var l:Long = (65535)+(-256); }
	def m6874():void { var l:Long = (65535)+(32767); }
	def m6875():void { var l:Long = (65535)+(-32767); }
	def m6876():void { var l:Long = (65535)+(32768); }
	def m6877():void { var l:Long = (65535)+(-32768); }
	def m6878():void { var l:Long = (65535)+(65535); }
	def m6879():void { var l:Long = (65535)+(-65535); }
	def m6880():void { var l:Long = (65535)+(65536); }
	def m6881():void { var l:Long = (65535)+(-65536); }
	def m6882():void { var l:Long = (65535)+(16777216); }
	def m6883():void { var l:Long = (65535)+(-16777216); }
	def m6884():void { var l:Long = (65535)+(16777217); }
	def m6885():void { var l:Long = (65535)+(-16777217); }
	def m6886():void { var l:Long = (65535)+(2147483647); }
	def m6887():void { var l:Long = (65535)+(-2147483647); }
	def m6888():void { var l:Long = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6889():void { var l:Long = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6890():void { var l:Long = (-65535)+(w2); }
	def m6891():void { var l:Long = (-65535)+(w3); }
	def m6892():void { var l:Long = (-65535)+(w4); }
	def m6893():void { var l:Long = (-65535)+(w5); }
	def m6894():void { var l:Long = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m6895():void { var l:Long = (-65535)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m6896():void { var l:Long = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6897():void { var l:Long = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m6898():void { var l:Long = (-65535)+(0); }
	def m6899():void { var l:Long = (-65535)+(-0); }
	def m6900():void { var l:Long = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6901():void { var l:Long = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6902():void { var l:Long = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6903():void { var l:Long = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6904():void { var l:Long = (-65535)+(127); }
	def m6905():void { var l:Long = (-65535)+(-127); }
	def m6906():void { var l:Long = (-65535)+(128); }
	def m6907():void { var l:Long = (-65535)+(-128); }
	def m6908():void { var l:Long = (-65535)+(255); }
	def m6909():void { var l:Long = (-65535)+(-255); }
	def m6910():void { var l:Long = (-65535)+(256); }
	def m6911():void { var l:Long = (-65535)+(-256); }
	def m6912():void { var l:Long = (-65535)+(32767); }
	def m6913():void { var l:Long = (-65535)+(-32767); }
	def m6914():void { var l:Long = (-65535)+(32768); }
	def m6915():void { var l:Long = (-65535)+(-32768); }
	def m6916():void { var l:Long = (-65535)+(65535); }
	def m6917():void { var l:Long = (-65535)+(-65535); }
	def m6918():void { var l:Long = (-65535)+(65536); }
	def m6919():void { var l:Long = (-65535)+(-65536); }
	def m6920():void { var l:Long = (-65535)+(16777216); }
	def m6921():void { var l:Long = (-65535)+(-16777216); }
	def m6922():void { var l:Long = (-65535)+(16777217); }
	def m6923():void { var l:Long = (-65535)+(-16777217); }
	def m6924():void { var l:Long = (-65535)+(2147483647); }
	def m6925():void { var l:Long = (-65535)+(-2147483647); }
	def m6926():void { var l:Long = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6927():void { var l:Long = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6928():void { var l:Long = (65536)+(w2); }
	def m6929():void { var l:Long = (65536)+(w3); }
	def m6930():void { var l:Long = (65536)+(w4); }
	def m6931():void { var l:Long = (65536)+(w5); }
	def m6932():void { var l:Long = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m6933():void { var l:Long = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m6934():void { var l:Long = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6935():void { var l:Long = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m6936():void { var l:Long = (65536)+(0); }
	def m6937():void { var l:Long = (65536)+(-0); }
	def m6938():void { var l:Long = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6939():void { var l:Long = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6940():void { var l:Long = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6941():void { var l:Long = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6942():void { var l:Long = (65536)+(127); }
	def m6943():void { var l:Long = (65536)+(-127); }
	def m6944():void { var l:Long = (65536)+(128); }
	def m6945():void { var l:Long = (65536)+(-128); }
	def m6946():void { var l:Long = (65536)+(255); }
	def m6947():void { var l:Long = (65536)+(-255); }
	def m6948():void { var l:Long = (65536)+(256); }
	def m6949():void { var l:Long = (65536)+(-256); }
	def m6950():void { var l:Long = (65536)+(32767); }
	def m6951():void { var l:Long = (65536)+(-32767); }
	def m6952():void { var l:Long = (65536)+(32768); }
	def m6953():void { var l:Long = (65536)+(-32768); }
	def m6954():void { var l:Long = (65536)+(65535); }
	def m6955():void { var l:Long = (65536)+(-65535); }
	def m6956():void { var l:Long = (65536)+(65536); }
	def m6957():void { var l:Long = (65536)+(-65536); }
	def m6958():void { var l:Long = (65536)+(16777216); }
	def m6959():void { var l:Long = (65536)+(-16777216); }
	def m6960():void { var l:Long = (65536)+(16777217); }
	def m6961():void { var l:Long = (65536)+(-16777217); }
	def m6962():void { var l:Long = (65536)+(2147483647); }
	def m6963():void { var l:Long = (65536)+(-2147483647); }
	def m6964():void { var l:Long = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6965():void { var l:Long = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6966():void { var l:Long = (-65536)+(w2); }
	def m6967():void { var l:Long = (-65536)+(w3); }
	def m6968():void { var l:Long = (-65536)+(w4); }
	def m6969():void { var l:Long = (-65536)+(w5); }
	def m6970():void { var l:Long = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m6971():void { var l:Long = (-65536)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m6972():void { var l:Long = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m6973():void { var l:Long = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m6974():void { var l:Long = (-65536)+(0); }
	def m6975():void { var l:Long = (-65536)+(-0); }
	def m6976():void { var l:Long = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6977():void { var l:Long = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m6978():void { var l:Long = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6979():void { var l:Long = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m6980():void { var l:Long = (-65536)+(127); }
	def m6981():void { var l:Long = (-65536)+(-127); }
	def m6982():void { var l:Long = (-65536)+(128); }
	def m6983():void { var l:Long = (-65536)+(-128); }
	def m6984():void { var l:Long = (-65536)+(255); }
	def m6985():void { var l:Long = (-65536)+(-255); }
	def m6986():void { var l:Long = (-65536)+(256); }
	def m6987():void { var l:Long = (-65536)+(-256); }
	def m6988():void { var l:Long = (-65536)+(32767); }
	def m6989():void { var l:Long = (-65536)+(-32767); }
	def m6990():void { var l:Long = (-65536)+(32768); }
	def m6991():void { var l:Long = (-65536)+(-32768); }
	def m6992():void { var l:Long = (-65536)+(65535); }
	def m6993():void { var l:Long = (-65536)+(-65535); }
	def m6994():void { var l:Long = (-65536)+(65536); }
	def m6995():void { var l:Long = (-65536)+(-65536); }
	def m6996():void { var l:Long = (-65536)+(16777216); }
	def m6997():void { var l:Long = (-65536)+(-16777216); }
	def m6998():void { var l:Long = (-65536)+(16777217); }
	def m6999():void { var l:Long = (-65536)+(-16777217); }
	def m7000():void { var l:Long = (-65536)+(2147483647); }
	def m7001():void { var l:Long = (-65536)+(-2147483647); }
	def m7002():void { var l:Long = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7003():void { var l:Long = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7004():void { var l:Long = (16777216)+(w2); }
	def m7005():void { var l:Long = (16777216)+(w3); }
	def m7006():void { var l:Long = (16777216)+(w4); }
	def m7007():void { var l:Long = (16777216)+(w5); }
	def m7008():void { var l:Long = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m7009():void { var l:Long = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7010():void { var l:Long = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7011():void { var l:Long = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m7012():void { var l:Long = (16777216)+(0); }
	def m7013():void { var l:Long = (16777216)+(-0); }
	def m7014():void { var l:Long = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7015():void { var l:Long = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7016():void { var l:Long = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7017():void { var l:Long = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7018():void { var l:Long = (16777216)+(127); }
	def m7019():void { var l:Long = (16777216)+(-127); }
	def m7020():void { var l:Long = (16777216)+(128); }
	def m7021():void { var l:Long = (16777216)+(-128); }
	def m7022():void { var l:Long = (16777216)+(255); }
	def m7023():void { var l:Long = (16777216)+(-255); }
	def m7024():void { var l:Long = (16777216)+(256); }
	def m7025():void { var l:Long = (16777216)+(-256); }
	def m7026():void { var l:Long = (16777216)+(32767); }
	def m7027():void { var l:Long = (16777216)+(-32767); }
	def m7028():void { var l:Long = (16777216)+(32768); }
	def m7029():void { var l:Long = (16777216)+(-32768); }
	def m7030():void { var l:Long = (16777216)+(65535); }
	def m7031():void { var l:Long = (16777216)+(-65535); }
	def m7032():void { var l:Long = (16777216)+(65536); }
	def m7033():void { var l:Long = (16777216)+(-65536); }
	def m7034():void { var l:Long = (16777216)+(16777216); }
	def m7035():void { var l:Long = (16777216)+(-16777216); }
	def m7036():void { var l:Long = (16777216)+(16777217); }
	def m7037():void { var l:Long = (16777216)+(-16777217); }
	def m7038():void { var l:Long = (16777216)+(2147483647); }
	def m7039():void { var l:Long = (16777216)+(-2147483647); }
	def m7040():void { var l:Long = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7041():void { var l:Long = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7042():void { var l:Long = (-16777216)+(w2); }
	def m7043():void { var l:Long = (-16777216)+(w3); }
	def m7044():void { var l:Long = (-16777216)+(w4); }
	def m7045():void { var l:Long = (-16777216)+(w5); }
	def m7046():void { var l:Long = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m7047():void { var l:Long = (-16777216)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m7048():void { var l:Long = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7049():void { var l:Long = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m7050():void { var l:Long = (-16777216)+(0); }
	def m7051():void { var l:Long = (-16777216)+(-0); }
	def m7052():void { var l:Long = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7053():void { var l:Long = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7054():void { var l:Long = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7055():void { var l:Long = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7056():void { var l:Long = (-16777216)+(127); }
	def m7057():void { var l:Long = (-16777216)+(-127); }
	def m7058():void { var l:Long = (-16777216)+(128); }
	def m7059():void { var l:Long = (-16777216)+(-128); }
	def m7060():void { var l:Long = (-16777216)+(255); }
	def m7061():void { var l:Long = (-16777216)+(-255); }
	def m7062():void { var l:Long = (-16777216)+(256); }
	def m7063():void { var l:Long = (-16777216)+(-256); }
	def m7064():void { var l:Long = (-16777216)+(32767); }
	def m7065():void { var l:Long = (-16777216)+(-32767); }
	def m7066():void { var l:Long = (-16777216)+(32768); }
	def m7067():void { var l:Long = (-16777216)+(-32768); }
	def m7068():void { var l:Long = (-16777216)+(65535); }
	def m7069():void { var l:Long = (-16777216)+(-65535); }
	def m7070():void { var l:Long = (-16777216)+(65536); }
	def m7071():void { var l:Long = (-16777216)+(-65536); }
	def m7072():void { var l:Long = (-16777216)+(16777216); }
	def m7073():void { var l:Long = (-16777216)+(-16777216); }
	def m7074():void { var l:Long = (-16777216)+(16777217); }
	def m7075():void { var l:Long = (-16777216)+(-16777217); }
	def m7076():void { var l:Long = (-16777216)+(2147483647); }
	def m7077():void { var l:Long = (-16777216)+(-2147483647); }
	def m7078():void { var l:Long = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7079():void { var l:Long = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7080():void { var l:Long = (16777217)+(w2); }
	def m7081():void { var l:Long = (16777217)+(w3); }
	def m7082():void { var l:Long = (16777217)+(w4); }
	def m7083():void { var l:Long = (16777217)+(w5); }
	def m7084():void { var l:Long = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m7085():void { var l:Long = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7086():void { var l:Long = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7087():void { var l:Long = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m7088():void { var l:Long = (16777217)+(0); }
	def m7089():void { var l:Long = (16777217)+(-0); }
	def m7090():void { var l:Long = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7091():void { var l:Long = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7092():void { var l:Long = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7093():void { var l:Long = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7094():void { var l:Long = (16777217)+(127); }
	def m7095():void { var l:Long = (16777217)+(-127); }
	def m7096():void { var l:Long = (16777217)+(128); }
	def m7097():void { var l:Long = (16777217)+(-128); }
	def m7098():void { var l:Long = (16777217)+(255); }
	def m7099():void { var l:Long = (16777217)+(-255); }
	def m7100():void { var l:Long = (16777217)+(256); }
	def m7101():void { var l:Long = (16777217)+(-256); }
	def m7102():void { var l:Long = (16777217)+(32767); }
	def m7103():void { var l:Long = (16777217)+(-32767); }
	def m7104():void { var l:Long = (16777217)+(32768); }
	def m7105():void { var l:Long = (16777217)+(-32768); }
	def m7106():void { var l:Long = (16777217)+(65535); }
	def m7107():void { var l:Long = (16777217)+(-65535); }
	def m7108():void { var l:Long = (16777217)+(65536); }
	def m7109():void { var l:Long = (16777217)+(-65536); }
	def m7110():void { var l:Long = (16777217)+(16777216); }
	def m7111():void { var l:Long = (16777217)+(-16777216); }
	def m7112():void { var l:Long = (16777217)+(16777217); }
	def m7113():void { var l:Long = (16777217)+(-16777217); }
	def m7114():void { var l:Long = (16777217)+(2147483647); }
	def m7115():void { var l:Long = (16777217)+(-2147483647); }
	def m7116():void { var l:Long = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7117():void { var l:Long = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7118():void { var l:Long = (-16777217)+(w2); }
	def m7119():void { var l:Long = (-16777217)+(w3); }
	def m7120():void { var l:Long = (-16777217)+(w4); }
	def m7121():void { var l:Long = (-16777217)+(w5); }
	def m7122():void { var l:Long = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m7123():void { var l:Long = (-16777217)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m7124():void { var l:Long = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7125():void { var l:Long = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m7126():void { var l:Long = (-16777217)+(0); }
	def m7127():void { var l:Long = (-16777217)+(-0); }
	def m7128():void { var l:Long = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7129():void { var l:Long = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7130():void { var l:Long = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7131():void { var l:Long = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7132():void { var l:Long = (-16777217)+(127); }
	def m7133():void { var l:Long = (-16777217)+(-127); }
	def m7134():void { var l:Long = (-16777217)+(128); }
	def m7135():void { var l:Long = (-16777217)+(-128); }
	def m7136():void { var l:Long = (-16777217)+(255); }
	def m7137():void { var l:Long = (-16777217)+(-255); }
	def m7138():void { var l:Long = (-16777217)+(256); }
	def m7139():void { var l:Long = (-16777217)+(-256); }
	def m7140():void { var l:Long = (-16777217)+(32767); }
	def m7141():void { var l:Long = (-16777217)+(-32767); }
	def m7142():void { var l:Long = (-16777217)+(32768); }
	def m7143():void { var l:Long = (-16777217)+(-32768); }
	def m7144():void { var l:Long = (-16777217)+(65535); }
	def m7145():void { var l:Long = (-16777217)+(-65535); }
	def m7146():void { var l:Long = (-16777217)+(65536); }
	def m7147():void { var l:Long = (-16777217)+(-65536); }
	def m7148():void { var l:Long = (-16777217)+(16777216); }
	def m7149():void { var l:Long = (-16777217)+(-16777216); }
	def m7150():void { var l:Long = (-16777217)+(16777217); }
	def m7151():void { var l:Long = (-16777217)+(-16777217); }
	def m7152():void { var l:Long = (-16777217)+(2147483647); }
	def m7153():void { var l:Long = (-16777217)+(-2147483647); }
	def m7154():void { var l:Long = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7155():void { var l:Long = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7156():void { var l:Long = (2147483647)+(w2); }
	def m7157():void { var l:Long = (2147483647)+(w3); }
	def m7158():void { var l:Long = (2147483647)+(w4); }
	def m7159():void { var l:Long = (2147483647)+(w5); }
	def m7160():void { var l:Long = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m7161():void { var l:Long = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m7162():void { var l:Long = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7163():void { var l:Long = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m7164():void { var l:Long = (2147483647)+(0); }
	def m7165():void { var l:Long = (2147483647)+(-0); }
	def m7166():void { var l:Long = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7167():void { var l:Long = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7168():void { var l:Long = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7169():void { var l:Long = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7170():void { var l:Long = (2147483647)+(127); }
	def m7171():void { var l:Long = (2147483647)+(-127); }
	def m7172():void { var l:Long = (2147483647)+(128); }
	def m7173():void { var l:Long = (2147483647)+(-128); }
	def m7174():void { var l:Long = (2147483647)+(255); }
	def m7175():void { var l:Long = (2147483647)+(-255); }
	def m7176():void { var l:Long = (2147483647)+(256); }
	def m7177():void { var l:Long = (2147483647)+(-256); }
	def m7178():void { var l:Long = (2147483647)+(32767); }
	def m7179():void { var l:Long = (2147483647)+(-32767); }
	def m7180():void { var l:Long = (2147483647)+(32768); }
	def m7181():void { var l:Long = (2147483647)+(-32768); }
	def m7182():void { var l:Long = (2147483647)+(65535); }
	def m7183():void { var l:Long = (2147483647)+(-65535); }
	def m7184():void { var l:Long = (2147483647)+(65536); }
	def m7185():void { var l:Long = (2147483647)+(-65536); }
	def m7186():void { var l:Long = (2147483647)+(16777216); }
	def m7187():void { var l:Long = (2147483647)+(-16777216); }
	def m7188():void { var l:Long = (2147483647)+(16777217); }
	def m7189():void { var l:Long = (2147483647)+(-16777217); }
	def m7190():void { var l:Long = (2147483647)+(2147483647); }
	def m7191():void { var l:Long = (2147483647)+(-2147483647); }
	def m7192():void { var l:Long = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7193():void { var l:Long = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7194():void { var l:Long = (-2147483647)+(w2); }
	def m7195():void { var l:Long = (-2147483647)+(w3); }
	def m7196():void { var l:Long = (-2147483647)+(w4); }
	def m7197():void { var l:Long = (-2147483647)+(w5); }
	def m7198():void { var l:Long = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m7199():void { var l:Long = (-2147483647)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m7200():void { var l:Long = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m7201():void { var l:Long = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m7202():void { var l:Long = (-2147483647)+(0); }
	def m7203():void { var l:Long = (-2147483647)+(-0); }
	def m7204():void { var l:Long = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7205():void { var l:Long = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m7206():void { var l:Long = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7207():void { var l:Long = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m7208():void { var l:Long = (-2147483647)+(127); }
	def m7209():void { var l:Long = (-2147483647)+(-127); }
	def m7210():void { var l:Long = (-2147483647)+(128); }
	def m7211():void { var l:Long = (-2147483647)+(-128); }
	def m7212():void { var l:Long = (-2147483647)+(255); }
	def m7213():void { var l:Long = (-2147483647)+(-255); }
	def m7214():void { var l:Long = (-2147483647)+(256); }
	def m7215():void { var l:Long = (-2147483647)+(-256); }
	def m7216():void { var l:Long = (-2147483647)+(32767); }
	def m7217():void { var l:Long = (-2147483647)+(-32767); }
	def m7218():void { var l:Long = (-2147483647)+(32768); }
	def m7219():void { var l:Long = (-2147483647)+(-32768); }
	def m7220():void { var l:Long = (-2147483647)+(65535); }
	def m7221():void { var l:Long = (-2147483647)+(-65535); }
	def m7222():void { var l:Long = (-2147483647)+(65536); }
	def m7223():void { var l:Long = (-2147483647)+(-65536); }
	def m7224():void { var l:Long = (-2147483647)+(16777216); }
	def m7225():void { var l:Long = (-2147483647)+(-16777216); }
	def m7226():void { var l:Long = (-2147483647)+(16777217); }
	def m7227():void { var l:Long = (-2147483647)+(-16777217); }
	def m7228():void { var l:Long = (-2147483647)+(2147483647); }
	def m7229():void { var l:Long = (-2147483647)+(-2147483647); }
	def m7230():void { var l:Short = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7231():void { var l:Short = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7232():void { var l:Short = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7233():void { var l:Short = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7234():void { var l:Short = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7235():void { var l:Short = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7236():void { var l:Short = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7237():void { var l:Short = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7238():void { var l:Short = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7239():void { var l:Short = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7240():void { var l:Short = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7241():void { var l:Short = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7242():void { var l:Short = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7243():void { var l:Short = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7244():void { var l:Short = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7245():void { var l:Short = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7246():void { var l:Short = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7247():void { var l:Short = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7248():void { var l:Short = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7249():void { var l:Short = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7250():void { var l:Short = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7251():void { var l:Short = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7252():void { var l:Short = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7253():void { var l:Short = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7254():void { var l:Short = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7255():void { var l:Short = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7256():void { var l:Short = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7257():void { var l:Short = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7258():void { var l:Short = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7259():void { var l:Short = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7260():void { var l:Short = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7261():void { var l:Short = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7262():void { var l:Short = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7263():void { var l:Short = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7264():void { var l:Short = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7265():void { var l:Short = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7266():void { var l:Short = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7267():void { var l:Short = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7268():void { var l:Short = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7269():void { var l:Short = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7270():void { var l:Short = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7271():void { var l:Short = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7272():void { var l:Short = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7273():void { var l:Short = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7274():void { var l:Short = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7275():void { var l:Short = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7276():void { var l:Short = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7277():void { var l:Short = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7278():void { var l:Short = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7279():void { var l:Short = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7280():void { var l:Short = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7281():void { var l:Short = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7282():void { var l:Short = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7283():void { var l:Short = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7284():void { var l:Short = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7285():void { var l:Short = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7286():void { var l:Short = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7287():void { var l:Short = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7288():void { var l:Short = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7289():void { var l:Short = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7290():void { var l:Short = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7291():void { var l:Short = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7292():void { var l:Short = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7293():void { var l:Short = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7294():void { var l:Short = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7295():void { var l:Short = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7296():void { var l:Short = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7297():void { var l:Short = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7298():void { var l:Short = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7299():void { var l:Short = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7300():void { var l:Short = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7301():void { var l:Short = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7302():void { var l:Short = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7303():void { var l:Short = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7304():void { var l:Short = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7305():void { var l:Short = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7306():void { var l:Short = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7307():void { var l:Short = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7308():void { var l:Short = (w2)+(w2); }
	def m7309():void { var l:Short = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7310():void { var l:Short = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7311():void { var l:Short = (w2)+(w5); }
	def m7312():void { var l:Short = (w2)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m7313():void { var l:Short = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7314():void { var l:Short = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7315():void { var l:Short = (w2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7316():void { var l:Short = (w2)+(0); }  
	def m7317():void { var l:Short = (w2)+(-0); }  
	def m7318():void { var l:Short = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7319():void { var l:Short = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7320():void { var l:Short = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7321():void { var l:Short = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7322():void { var l:Short = (w2)+(127); }  
	def m7323():void { var l:Short = (w2)+(-127); }  
	def m7324():void { var l:Short = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7325():void { var l:Short = (w2)+(-128); }  
	def m7326():void { var l:Short = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7327():void { var l:Short = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7328():void { var l:Short = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7329():void { var l:Short = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7330():void { var l:Short = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7331():void { var l:Short = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7332():void { var l:Short = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7333():void { var l:Short = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7334():void { var l:Short = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7335():void { var l:Short = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7336():void { var l:Short = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7337():void { var l:Short = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7338():void { var l:Short = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7339():void { var l:Short = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7340():void { var l:Short = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7341():void { var l:Short = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7342():void { var l:Short = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7343():void { var l:Short = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7344():void { var l:Short = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7345():void { var l:Short = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7346():void { var l:Short = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7347():void { var l:Short = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7348():void { var l:Short = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7349():void { var l:Short = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7350():void { var l:Short = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m7351():void { var l:Short = (w3)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m7352():void { var l:Short = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7353():void { var l:Short = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m7354():void { var l:Short = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7355():void { var l:Short = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7356():void { var l:Short = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7357():void { var l:Short = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7358():void { var l:Short = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7359():void { var l:Short = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7360():void { var l:Short = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7361():void { var l:Short = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7362():void { var l:Short = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7363():void { var l:Short = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7364():void { var l:Short = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7365():void { var l:Short = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7366():void { var l:Short = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7367():void { var l:Short = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7368():void { var l:Short = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7369():void { var l:Short = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7370():void { var l:Short = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7371():void { var l:Short = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7372():void { var l:Short = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7373():void { var l:Short = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7374():void { var l:Short = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7375():void { var l:Short = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7376():void { var l:Short = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7377():void { var l:Short = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7378():void { var l:Short = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7379():void { var l:Short = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7380():void { var l:Short = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7381():void { var l:Short = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7382():void { var l:Short = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7383():void { var l:Short = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7384():void { var l:Short = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7385():void { var l:Short = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7386():void { var l:Short = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7387():void { var l:Short = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7388():void { var l:Short = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m7389():void { var l:Short = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m7390():void { var l:Short = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m7391():void { var l:Short = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m7392():void { var l:Short = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7393():void { var l:Short = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7394():void { var l:Short = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7395():void { var l:Short = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7396():void { var l:Short = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7397():void { var l:Short = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7398():void { var l:Short = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7399():void { var l:Short = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7400():void { var l:Short = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7401():void { var l:Short = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7402():void { var l:Short = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7403():void { var l:Short = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7404():void { var l:Short = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7405():void { var l:Short = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7406():void { var l:Short = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7407():void { var l:Short = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7408():void { var l:Short = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7409():void { var l:Short = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7410():void { var l:Short = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7411():void { var l:Short = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7412():void { var l:Short = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7413():void { var l:Short = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7414():void { var l:Short = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7415():void { var l:Short = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7416():void { var l:Short = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7417():void { var l:Short = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7418():void { var l:Short = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7419():void { var l:Short = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7420():void { var l:Short = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7421():void { var l:Short = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7422():void { var l:Short = (w5)+(w2); }
	def m7423():void { var l:Short = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7424():void { var l:Short = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7425():void { var l:Short = (w5)+(w5); }
	def m7426():void { var l:Short = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m7427():void { var l:Short = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7428():void { var l:Short = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7429():void { var l:Short = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m7430():void { var l:Short = (w5)+(0); }  
	def m7431():void { var l:Short = (w5)+(-0); }  
	def m7432():void { var l:Short = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7433():void { var l:Short = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7434():void { var l:Short = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7435():void { var l:Short = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7436():void { var l:Short = (w5)+(127); }  
	def m7437():void { var l:Short = (w5)+(-127); }  
	def m7438():void { var l:Short = (w5)+(128); }  
	def m7439():void { var l:Short = (w5)+(-128); }  
	def m7440():void { var l:Short = (w5)+(255); }  
	def m7441():void { var l:Short = (w5)+(-255); }  
	def m7442():void { var l:Short = (w5)+(256); }  
	def m7443():void { var l:Short = (w5)+(-256); }  
	def m7444():void { var l:Short = (w5)+(32767); }  
	def m7445():void { var l:Short = (w5)+(-32767); }  
	def m7446():void { var l:Short = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7447():void { var l:Short = (w5)+(-32768); }  
	def m7448():void { var l:Short = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7449():void { var l:Short = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7450():void { var l:Short = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7451():void { var l:Short = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7452():void { var l:Short = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7453():void { var l:Short = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7454():void { var l:Short = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7455():void { var l:Short = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7456():void { var l:Short = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7457():void { var l:Short = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7458():void { var l:Short = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7459():void { var l:Short = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7460():void { var l:Short = (w6)+(w2); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m7461():void { var l:Short = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m7462():void { var l:Short = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m7463():void { var l:Short = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m7464():void { var l:Short = (w6)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7465():void { var l:Short = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7466():void { var l:Short = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7467():void { var l:Short = (w6)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7468():void { var l:Short = (w6)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7469():void { var l:Short = (w6)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7470():void { var l:Short = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7471():void { var l:Short = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7472():void { var l:Short = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7473():void { var l:Short = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7474():void { var l:Short = (w6)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7475():void { var l:Short = (w6)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m7476():void { var l:Short = (w6)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7477():void { var l:Short = (w6)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m7478():void { var l:Short = (w6)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w6) + x10.lang.UByte.operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7479():void { var l:Short = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m7480():void { var l:Short = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m7481():void { var l:Short = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m7482():void { var l:Short = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m7483():void { var l:Short = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m7484():void { var l:Short = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m7485():void { var l:Short = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m7486():void { var l:Short = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m7487():void { var l:Short = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m7488():void { var l:Short = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m7489():void { var l:Short = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m7490():void { var l:Short = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m7491():void { var l:Short = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m7492():void { var l:Short = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m7493():void { var l:Short = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m7494():void { var l:Short = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m7495():void { var l:Short = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m7496():void { var l:Short = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7497():void { var l:Short = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7498():void { var l:Short = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7499():void { var l:Short = (w7)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m7500():void { var l:Short = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m7501():void { var l:Short = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7502():void { var l:Short = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7503():void { var l:Short = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7504():void { var l:Short = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7505():void { var l:Short = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7506():void { var l:Short = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7507():void { var l:Short = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7508():void { var l:Short = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7509():void { var l:Short = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7510():void { var l:Short = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7511():void { var l:Short = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7512():void { var l:Short = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7513():void { var l:Short = (w7)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m7514():void { var l:Short = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7515():void { var l:Short = (w7)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m7516():void { var l:Short = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7517():void { var l:Short = (w7)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m7518():void { var l:Short = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7519():void { var l:Short = (w7)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m7520():void { var l:Short = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7521():void { var l:Short = (w7)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m7522():void { var l:Short = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7523():void { var l:Short = (w7)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m7524():void { var l:Short = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7525():void { var l:Short = (w7)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m7526():void { var l:Short = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7527():void { var l:Short = (w7)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m7528():void { var l:Short = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7529():void { var l:Short = (w7)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m7530():void { var l:Short = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7531():void { var l:Short = (w7)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m7532():void { var l:Short = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7533():void { var l:Short = (w7)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m7534():void { var l:Short = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7535():void { var l:Short = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7536():void { var l:Short = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7537():void { var l:Short = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7538():void { var l:Short = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m7539():void { var l:Short = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7540():void { var l:Short = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7541():void { var l:Short = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7542():void { var l:Short = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7543():void { var l:Short = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7544():void { var l:Short = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7545():void { var l:Short = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7546():void { var l:Short = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7547():void { var l:Short = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7548():void { var l:Short = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7549():void { var l:Short = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7550():void { var l:Short = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7551():void { var l:Short = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7552():void { var l:Short = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7553():void { var l:Short = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7554():void { var l:Short = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7555():void { var l:Short = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7556():void { var l:Short = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7557():void { var l:Short = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7558():void { var l:Short = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7559():void { var l:Short = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7560():void { var l:Short = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7561():void { var l:Short = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7562():void { var l:Short = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7563():void { var l:Short = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7564():void { var l:Short = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7565():void { var l:Short = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7566():void { var l:Short = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7567():void { var l:Short = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7568():void { var l:Short = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7569():void { var l:Short = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7570():void { var l:Short = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7571():void { var l:Short = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7572():void { var l:Short = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7573():void { var l:Short = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7574():void { var l:Short = (w9)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7575():void { var l:Short = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m7576():void { var l:Short = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m7577():void { var l:Short = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m7578():void { var l:Short = (w9)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7579():void { var l:Short = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7580():void { var l:Short = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7581():void { var l:Short = (w9)+(w9); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7582():void { var l:Short = (w9)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7583():void { var l:Short = (w9)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7584():void { var l:Short = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7585():void { var l:Short = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7586():void { var l:Short = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7587():void { var l:Short = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7588():void { var l:Short = (w9)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7589():void { var l:Short = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m7590():void { var l:Short = (w9)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7591():void { var l:Short = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m7592():void { var l:Short = (w9)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7593():void { var l:Short = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m7594():void { var l:Short = (w9)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7595():void { var l:Short = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m7596():void { var l:Short = (w9)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7597():void { var l:Short = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m7598():void { var l:Short = (w9)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7599():void { var l:Short = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m7600():void { var l:Short = (w9)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7601():void { var l:Short = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m7602():void { var l:Short = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m7603():void { var l:Short = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m7604():void { var l:Short = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m7605():void { var l:Short = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m7606():void { var l:Short = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m7607():void { var l:Short = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m7608():void { var l:Short = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m7609():void { var l:Short = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m7610():void { var l:Short = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7611():void { var l:Short = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7612():void { var l:Short = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7613():void { var l:Short = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7614():void { var l:Short = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7615():void { var l:Short = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7616():void { var l:Short = (0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7617():void { var l:Short = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7618():void { var l:Short = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7619():void { var l:Short = (0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7620():void { var l:Short = (0)+(0); }
	def m7621():void { var l:Short = (0)+(-0); }
	def m7622():void { var l:Short = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7623():void { var l:Short = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7624():void { var l:Short = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7625():void { var l:Short = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7626():void { var l:Short = (0)+(127); }
	def m7627():void { var l:Short = (0)+(-127); }
	def m7628():void { var l:Short = (0)+(128); }
	def m7629():void { var l:Short = (0)+(-128); }
	def m7630():void { var l:Short = (0)+(255); }
	def m7631():void { var l:Short = (0)+(-255); }
	def m7632():void { var l:Short = (0)+(256); }
	def m7633():void { var l:Short = (0)+(-256); }
	def m7634():void { var l:Short = (0)+(32767); }
	def m7635():void { var l:Short = (0)+(-32767); }
	def m7636():void { var l:Short = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7637():void { var l:Short = (0)+(-32768); }
	def m7638():void { var l:Short = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7639():void { var l:Short = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7640():void { var l:Short = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7641():void { var l:Short = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7642():void { var l:Short = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7643():void { var l:Short = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7644():void { var l:Short = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7645():void { var l:Short = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7646():void { var l:Short = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7647():void { var l:Short = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7648():void { var l:Short = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7649():void { var l:Short = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7650():void { var l:Short = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7651():void { var l:Short = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7652():void { var l:Short = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7653():void { var l:Short = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7654():void { var l:Short = (-0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((0)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7655():void { var l:Short = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7656():void { var l:Short = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7657():void { var l:Short = (-0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7658():void { var l:Short = (-0)+(0); }
	def m7659():void { var l:Short = (-0)+(-0); }
	def m7660():void { var l:Short = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7661():void { var l:Short = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7662():void { var l:Short = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7663():void { var l:Short = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7664():void { var l:Short = (-0)+(127); }
	def m7665():void { var l:Short = (-0)+(-127); }
	def m7666():void { var l:Short = (-0)+(128); }
	def m7667():void { var l:Short = (-0)+(-128); }
	def m7668():void { var l:Short = (-0)+(255); }
	def m7669():void { var l:Short = (-0)+(-255); }
	def m7670():void { var l:Short = (-0)+(256); }
	def m7671():void { var l:Short = (-0)+(-256); }
	def m7672():void { var l:Short = (-0)+(32767); }
	def m7673():void { var l:Short = (-0)+(-32767); }
	def m7674():void { var l:Short = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7675():void { var l:Short = (-0)+(-32768); }
	def m7676():void { var l:Short = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7677():void { var l:Short = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7678():void { var l:Short = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7679():void { var l:Short = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7680():void { var l:Short = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7681():void { var l:Short = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7682():void { var l:Short = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7683():void { var l:Short = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7684():void { var l:Short = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7685():void { var l:Short = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7686():void { var l:Short = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7687():void { var l:Short = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7688():void { var l:Short = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7689():void { var l:Short = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7690():void { var l:Short = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7691():void { var l:Short = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7692():void { var l:Short = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7693():void { var l:Short = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7694():void { var l:Short = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7695():void { var l:Short = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7696():void { var l:Short = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7697():void { var l:Short = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7698():void { var l:Short = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7699():void { var l:Short = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7700():void { var l:Short = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7701():void { var l:Short = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7702():void { var l:Short = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7703():void { var l:Short = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7704():void { var l:Short = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7705():void { var l:Short = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7706():void { var l:Short = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7707():void { var l:Short = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7708():void { var l:Short = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7709():void { var l:Short = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7710():void { var l:Short = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7711():void { var l:Short = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7712():void { var l:Short = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7713():void { var l:Short = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7714():void { var l:Short = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7715():void { var l:Short = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7716():void { var l:Short = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7717():void { var l:Short = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7718():void { var l:Short = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7719():void { var l:Short = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7720():void { var l:Short = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7721():void { var l:Short = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7722():void { var l:Short = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7723():void { var l:Short = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7724():void { var l:Short = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7725():void { var l:Short = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7726():void { var l:Short = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7727():void { var l:Short = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7728():void { var l:Short = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7729():void { var l:Short = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7730():void { var l:Short = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7731():void { var l:Short = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7732():void { var l:Short = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7733():void { var l:Short = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7734():void { var l:Short = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7735():void { var l:Short = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7736():void { var l:Short = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7737():void { var l:Short = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7738():void { var l:Short = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7739():void { var l:Short = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7740():void { var l:Short = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7741():void { var l:Short = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7742():void { var l:Short = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7743():void { var l:Short = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7744():void { var l:Short = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7745():void { var l:Short = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7746():void { var l:Short = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7747():void { var l:Short = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7748():void { var l:Short = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7749():void { var l:Short = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7750():void { var l:Short = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7751():void { var l:Short = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7752():void { var l:Short = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7753():void { var l:Short = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7754():void { var l:Short = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7755():void { var l:Short = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7756():void { var l:Short = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7757():void { var l:Short = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7758():void { var l:Short = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7759():void { var l:Short = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7760():void { var l:Short = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7761():void { var l:Short = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7762():void { var l:Short = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7763():void { var l:Short = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7764():void { var l:Short = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7765():void { var l:Short = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7766():void { var l:Short = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7767():void { var l:Short = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7768():void { var l:Short = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7769():void { var l:Short = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7770():void { var l:Short = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7771():void { var l:Short = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7772():void { var l:Short = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7773():void { var l:Short = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7774():void { var l:Short = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7775():void { var l:Short = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7776():void { var l:Short = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7777():void { var l:Short = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7778():void { var l:Short = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7779():void { var l:Short = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7780():void { var l:Short = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7781():void { var l:Short = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7782():void { var l:Short = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7783():void { var l:Short = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7784():void { var l:Short = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7785():void { var l:Short = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7786():void { var l:Short = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7787():void { var l:Short = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7788():void { var l:Short = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7789():void { var l:Short = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7790():void { var l:Short = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7791():void { var l:Short = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7792():void { var l:Short = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7793():void { var l:Short = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7794():void { var l:Short = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7795():void { var l:Short = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7796():void { var l:Short = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7797():void { var l:Short = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7798():void { var l:Short = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7799():void { var l:Short = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7800():void { var l:Short = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7801():void { var l:Short = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7802():void { var l:Short = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7803():void { var l:Short = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7804():void { var l:Short = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7805():void { var l:Short = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7806():void { var l:Short = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7807():void { var l:Short = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7808():void { var l:Short = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7809():void { var l:Short = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7810():void { var l:Short = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7811():void { var l:Short = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7812():void { var l:Short = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7813():void { var l:Short = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7814():void { var l:Short = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7815():void { var l:Short = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7816():void { var l:Short = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7817():void { var l:Short = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7818():void { var l:Short = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7819():void { var l:Short = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7820():void { var l:Short = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7821():void { var l:Short = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7822():void { var l:Short = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7823():void { var l:Short = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7824():void { var l:Short = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7825():void { var l:Short = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7826():void { var l:Short = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7827():void { var l:Short = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7828():void { var l:Short = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7829():void { var l:Short = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7830():void { var l:Short = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7831():void { var l:Short = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7832():void { var l:Short = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7833():void { var l:Short = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7834():void { var l:Short = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7835():void { var l:Short = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7836():void { var l:Short = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7837():void { var l:Short = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7838():void { var l:Short = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7839():void { var l:Short = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7840():void { var l:Short = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7841():void { var l:Short = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7842():void { var l:Short = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7843():void { var l:Short = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7844():void { var l:Short = (127)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((127)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7845():void { var l:Short = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7846():void { var l:Short = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7847():void { var l:Short = (127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((127)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7848():void { var l:Short = (127)+(0); }
	def m7849():void { var l:Short = (127)+(-0); }
	def m7850():void { var l:Short = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7851():void { var l:Short = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7852():void { var l:Short = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7853():void { var l:Short = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7854():void { var l:Short = (127)+(127); }
	def m7855():void { var l:Short = (127)+(-127); }
	def m7856():void { var l:Short = (127)+(128); }
	def m7857():void { var l:Short = (127)+(-128); }
	def m7858():void { var l:Short = (127)+(255); }
	def m7859():void { var l:Short = (127)+(-255); }
	def m7860():void { var l:Short = (127)+(256); }
	def m7861():void { var l:Short = (127)+(-256); }
	def m7862():void { var l:Short = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7863():void { var l:Short = (127)+(-32767); }
	def m7864():void { var l:Short = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7865():void { var l:Short = (127)+(-32768); }
	def m7866():void { var l:Short = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7867():void { var l:Short = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7868():void { var l:Short = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7869():void { var l:Short = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7870():void { var l:Short = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7871():void { var l:Short = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7872():void { var l:Short = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7873():void { var l:Short = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7874():void { var l:Short = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7875():void { var l:Short = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7876():void { var l:Short = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7877():void { var l:Short = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7878():void { var l:Short = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7879():void { var l:Short = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7880():void { var l:Short = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7881():void { var l:Short = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7882():void { var l:Short = (-127)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m7883():void { var l:Short = (-127)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m7884():void { var l:Short = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7885():void { var l:Short = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m7886():void { var l:Short = (-127)+(0); }
	def m7887():void { var l:Short = (-127)+(-0); }
	def m7888():void { var l:Short = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7889():void { var l:Short = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7890():void { var l:Short = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7891():void { var l:Short = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7892():void { var l:Short = (-127)+(127); }
	def m7893():void { var l:Short = (-127)+(-127); }
	def m7894():void { var l:Short = (-127)+(128); }
	def m7895():void { var l:Short = (-127)+(-128); }
	def m7896():void { var l:Short = (-127)+(255); }
	def m7897():void { var l:Short = (-127)+(-255); }
	def m7898():void { var l:Short = (-127)+(256); }
	def m7899():void { var l:Short = (-127)+(-256); }
	def m7900():void { var l:Short = (-127)+(32767); }
	def m7901():void { var l:Short = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7902():void { var l:Short = (-127)+(32768); }
	def m7903():void { var l:Short = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7904():void { var l:Short = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7905():void { var l:Short = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7906():void { var l:Short = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7907():void { var l:Short = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7908():void { var l:Short = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7909():void { var l:Short = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7910():void { var l:Short = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7911():void { var l:Short = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7912():void { var l:Short = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7913():void { var l:Short = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7914():void { var l:Short = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7915():void { var l:Short = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7916():void { var l:Short = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7917():void { var l:Short = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7918():void { var l:Short = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7919():void { var l:Short = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7920():void { var l:Short = (128)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((128)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7921():void { var l:Short = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7922():void { var l:Short = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7923():void { var l:Short = (128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((128)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m7924():void { var l:Short = (128)+(0); }
	def m7925():void { var l:Short = (128)+(-0); }
	def m7926():void { var l:Short = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7927():void { var l:Short = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7928():void { var l:Short = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7929():void { var l:Short = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7930():void { var l:Short = (128)+(127); }
	def m7931():void { var l:Short = (128)+(-127); }
	def m7932():void { var l:Short = (128)+(128); }
	def m7933():void { var l:Short = (128)+(-128); }
	def m7934():void { var l:Short = (128)+(255); }
	def m7935():void { var l:Short = (128)+(-255); }
	def m7936():void { var l:Short = (128)+(256); }
	def m7937():void { var l:Short = (128)+(-256); }
	def m7938():void { var l:Short = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7939():void { var l:Short = (128)+(-32767); }
	def m7940():void { var l:Short = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7941():void { var l:Short = (128)+(-32768); }
	def m7942():void { var l:Short = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7943():void { var l:Short = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7944():void { var l:Short = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7945():void { var l:Short = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7946():void { var l:Short = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7947():void { var l:Short = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7948():void { var l:Short = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7949():void { var l:Short = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7950():void { var l:Short = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7951():void { var l:Short = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7952():void { var l:Short = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7953():void { var l:Short = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7954():void { var l:Short = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7955():void { var l:Short = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7956():void { var l:Short = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7957():void { var l:Short = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7958():void { var l:Short = (-128)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m7959():void { var l:Short = (-128)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m7960():void { var l:Short = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7961():void { var l:Short = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m7962():void { var l:Short = (-128)+(0); }
	def m7963():void { var l:Short = (-128)+(-0); }
	def m7964():void { var l:Short = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7965():void { var l:Short = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7966():void { var l:Short = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7967():void { var l:Short = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7968():void { var l:Short = (-128)+(127); }
	def m7969():void { var l:Short = (-128)+(-127); }
	def m7970():void { var l:Short = (-128)+(128); }
	def m7971():void { var l:Short = (-128)+(-128); }
	def m7972():void { var l:Short = (-128)+(255); }
	def m7973():void { var l:Short = (-128)+(-255); }
	def m7974():void { var l:Short = (-128)+(256); }
	def m7975():void { var l:Short = (-128)+(-256); }
	def m7976():void { var l:Short = (-128)+(32767); }
	def m7977():void { var l:Short = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7978():void { var l:Short = (-128)+(32768); }
	def m7979():void { var l:Short = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7980():void { var l:Short = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7981():void { var l:Short = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7982():void { var l:Short = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7983():void { var l:Short = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7984():void { var l:Short = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7985():void { var l:Short = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7986():void { var l:Short = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7987():void { var l:Short = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7988():void { var l:Short = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7989():void { var l:Short = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7990():void { var l:Short = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m7991():void { var l:Short = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m7992():void { var l:Short = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7993():void { var l:Short = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7994():void { var l:Short = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m7995():void { var l:Short = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m7996():void { var l:Short = (255)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UByte.operator_as((255)) + (SignedAndUnsignedTests.this.w6)		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m7997():void { var l:Short = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m7998():void { var l:Short = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m7999():void { var l:Short = (255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((255)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m8000():void { var l:Short = (255)+(0); }
	def m8001():void { var l:Short = (255)+(-0); }
	def m8002():void { var l:Short = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8003():void { var l:Short = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8004():void { var l:Short = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8005():void { var l:Short = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8006():void { var l:Short = (255)+(127); }
	def m8007():void { var l:Short = (255)+(-127); }
	def m8008():void { var l:Short = (255)+(128); }
	def m8009():void { var l:Short = (255)+(-128); }
	def m8010():void { var l:Short = (255)+(255); }
	def m8011():void { var l:Short = (255)+(-255); }
	def m8012():void { var l:Short = (255)+(256); }
	def m8013():void { var l:Short = (255)+(-256); }
	def m8014():void { var l:Short = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8015():void { var l:Short = (255)+(-32767); }
	def m8016():void { var l:Short = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8017():void { var l:Short = (255)+(-32768); }
	def m8018():void { var l:Short = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8019():void { var l:Short = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8020():void { var l:Short = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8021():void { var l:Short = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8022():void { var l:Short = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8023():void { var l:Short = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8024():void { var l:Short = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8025():void { var l:Short = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8026():void { var l:Short = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8027():void { var l:Short = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8028():void { var l:Short = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8029():void { var l:Short = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8030():void { var l:Short = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8031():void { var l:Short = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8032():void { var l:Short = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8033():void { var l:Short = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8034():void { var l:Short = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m8035():void { var l:Short = (-255)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m8036():void { var l:Short = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8037():void { var l:Short = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m8038():void { var l:Short = (-255)+(0); }
	def m8039():void { var l:Short = (-255)+(-0); }
	def m8040():void { var l:Short = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8041():void { var l:Short = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8042():void { var l:Short = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8043():void { var l:Short = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8044():void { var l:Short = (-255)+(127); }
	def m8045():void { var l:Short = (-255)+(-127); }
	def m8046():void { var l:Short = (-255)+(128); }
	def m8047():void { var l:Short = (-255)+(-128); }
	def m8048():void { var l:Short = (-255)+(255); }
	def m8049():void { var l:Short = (-255)+(-255); }
	def m8050():void { var l:Short = (-255)+(256); }
	def m8051():void { var l:Short = (-255)+(-256); }
	def m8052():void { var l:Short = (-255)+(32767); }
	def m8053():void { var l:Short = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8054():void { var l:Short = (-255)+(32768); }
	def m8055():void { var l:Short = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8056():void { var l:Short = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8057():void { var l:Short = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8058():void { var l:Short = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8059():void { var l:Short = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8060():void { var l:Short = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8061():void { var l:Short = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8062():void { var l:Short = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8063():void { var l:Short = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8064():void { var l:Short = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8065():void { var l:Short = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8066():void { var l:Short = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8067():void { var l:Short = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8068():void { var l:Short = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8069():void { var l:Short = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8070():void { var l:Short = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8071():void { var l:Short = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8072():void { var l:Short = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m8073():void { var l:Short = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8074():void { var l:Short = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8075():void { var l:Short = (256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((256)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m8076():void { var l:Short = (256)+(0); }
	def m8077():void { var l:Short = (256)+(-0); }
	def m8078():void { var l:Short = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8079():void { var l:Short = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8080():void { var l:Short = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8081():void { var l:Short = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8082():void { var l:Short = (256)+(127); }
	def m8083():void { var l:Short = (256)+(-127); }
	def m8084():void { var l:Short = (256)+(128); }
	def m8085():void { var l:Short = (256)+(-128); }
	def m8086():void { var l:Short = (256)+(255); }
	def m8087():void { var l:Short = (256)+(-255); }
	def m8088():void { var l:Short = (256)+(256); }
	def m8089():void { var l:Short = (256)+(-256); }
	def m8090():void { var l:Short = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8091():void { var l:Short = (256)+(-32767); }
	def m8092():void { var l:Short = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8093():void { var l:Short = (256)+(-32768); }
	def m8094():void { var l:Short = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8095():void { var l:Short = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8096():void { var l:Short = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8097():void { var l:Short = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8098():void { var l:Short = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8099():void { var l:Short = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8100():void { var l:Short = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8101():void { var l:Short = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8102():void { var l:Short = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8103():void { var l:Short = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8104():void { var l:Short = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8105():void { var l:Short = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8106():void { var l:Short = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8107():void { var l:Short = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8108():void { var l:Short = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8109():void { var l:Short = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8110():void { var l:Short = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m8111():void { var l:Short = (-256)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m8112():void { var l:Short = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8113():void { var l:Short = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m8114():void { var l:Short = (-256)+(0); }
	def m8115():void { var l:Short = (-256)+(-0); }
	def m8116():void { var l:Short = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8117():void { var l:Short = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8118():void { var l:Short = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8119():void { var l:Short = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8120():void { var l:Short = (-256)+(127); }
	def m8121():void { var l:Short = (-256)+(-127); }
	def m8122():void { var l:Short = (-256)+(128); }
	def m8123():void { var l:Short = (-256)+(-128); }
	def m8124():void { var l:Short = (-256)+(255); }
	def m8125():void { var l:Short = (-256)+(-255); }
	def m8126():void { var l:Short = (-256)+(256); }
	def m8127():void { var l:Short = (-256)+(-256); }
	def m8128():void { var l:Short = (-256)+(32767); }
	def m8129():void { var l:Short = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8130():void { var l:Short = (-256)+(32768); }
	def m8131():void { var l:Short = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8132():void { var l:Short = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8133():void { var l:Short = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8134():void { var l:Short = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8135():void { var l:Short = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8136():void { var l:Short = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8137():void { var l:Short = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8138():void { var l:Short = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8139():void { var l:Short = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8140():void { var l:Short = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8141():void { var l:Short = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8142():void { var l:Short = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8143():void { var l:Short = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8144():void { var l:Short = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8145():void { var l:Short = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8146():void { var l:Short = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8147():void { var l:Short = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8148():void { var l:Short = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m8149():void { var l:Short = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8150():void { var l:Short = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8151():void { var l:Short = (32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32767)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m8152():void { var l:Short = (32767)+(0); }
	def m8153():void { var l:Short = (32767)+(-0); }
	def m8154():void { var l:Short = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8155():void { var l:Short = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8156():void { var l:Short = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8157():void { var l:Short = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8158():void { var l:Short = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8159():void { var l:Short = (32767)+(-127); }
	def m8160():void { var l:Short = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8161():void { var l:Short = (32767)+(-128); }
	def m8162():void { var l:Short = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8163():void { var l:Short = (32767)+(-255); }
	def m8164():void { var l:Short = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8165():void { var l:Short = (32767)+(-256); }
	def m8166():void { var l:Short = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8167():void { var l:Short = (32767)+(-32767); }
	def m8168():void { var l:Short = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8169():void { var l:Short = (32767)+(-32768); }
	def m8170():void { var l:Short = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8171():void { var l:Short = (32767)+(-65535); }
	def m8172():void { var l:Short = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8173():void { var l:Short = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8174():void { var l:Short = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8175():void { var l:Short = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8176():void { var l:Short = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8177():void { var l:Short = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8178():void { var l:Short = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8179():void { var l:Short = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8180():void { var l:Short = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8181():void { var l:Short = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8182():void { var l:Short = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8183():void { var l:Short = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8184():void { var l:Short = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8185():void { var l:Short = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8186():void { var l:Short = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m8187():void { var l:Short = (-32767)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m8188():void { var l:Short = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8189():void { var l:Short = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m8190():void { var l:Short = (-32767)+(0); }
	def m8191():void { var l:Short = (-32767)+(-0); }
	def m8192():void { var l:Short = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8193():void { var l:Short = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8194():void { var l:Short = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8195():void { var l:Short = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8196():void { var l:Short = (-32767)+(127); }
	def m8197():void { var l:Short = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8198():void { var l:Short = (-32767)+(128); }
	def m8199():void { var l:Short = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8200():void { var l:Short = (-32767)+(255); }
	def m8201():void { var l:Short = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8202():void { var l:Short = (-32767)+(256); }
	def m8203():void { var l:Short = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8204():void { var l:Short = (-32767)+(32767); }
	def m8205():void { var l:Short = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8206():void { var l:Short = (-32767)+(32768); }
	def m8207():void { var l:Short = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8208():void { var l:Short = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8209():void { var l:Short = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8210():void { var l:Short = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8211():void { var l:Short = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8212():void { var l:Short = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8213():void { var l:Short = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8214():void { var l:Short = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8215():void { var l:Short = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8216():void { var l:Short = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8217():void { var l:Short = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8218():void { var l:Short = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8219():void { var l:Short = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8220():void { var l:Short = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8221():void { var l:Short = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8222():void { var l:Short = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8223():void { var l:Short = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8224():void { var l:Short = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m8225():void { var l:Short = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8226():void { var l:Short = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8227():void { var l:Short = (32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32768)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m8228():void { var l:Short = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8229():void { var l:Short = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8230():void { var l:Short = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8231():void { var l:Short = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8232():void { var l:Short = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8233():void { var l:Short = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8234():void { var l:Short = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8235():void { var l:Short = (32768)+(-127); }
	def m8236():void { var l:Short = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8237():void { var l:Short = (32768)+(-128); }
	def m8238():void { var l:Short = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8239():void { var l:Short = (32768)+(-255); }
	def m8240():void { var l:Short = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8241():void { var l:Short = (32768)+(-256); }
	def m8242():void { var l:Short = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8243():void { var l:Short = (32768)+(-32767); }
	def m8244():void { var l:Short = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8245():void { var l:Short = (32768)+(-32768); }
	def m8246():void { var l:Short = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8247():void { var l:Short = (32768)+(-65535); }
	def m8248():void { var l:Short = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8249():void { var l:Short = (32768)+(-65536); }
	def m8250():void { var l:Short = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8251():void { var l:Short = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8252():void { var l:Short = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8253():void { var l:Short = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8254():void { var l:Short = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8255():void { var l:Short = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8256():void { var l:Short = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8257():void { var l:Short = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8258():void { var l:Short = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8259():void { var l:Short = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8260():void { var l:Short = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8261():void { var l:Short = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8262():void { var l:Short = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m8263():void { var l:Short = (-32768)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m8264():void { var l:Short = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8265():void { var l:Short = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m8266():void { var l:Short = (-32768)+(0); }
	def m8267():void { var l:Short = (-32768)+(-0); }
	def m8268():void { var l:Short = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8269():void { var l:Short = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8270():void { var l:Short = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8271():void { var l:Short = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8272():void { var l:Short = (-32768)+(127); }
	def m8273():void { var l:Short = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8274():void { var l:Short = (-32768)+(128); }
	def m8275():void { var l:Short = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8276():void { var l:Short = (-32768)+(255); }
	def m8277():void { var l:Short = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8278():void { var l:Short = (-32768)+(256); }
	def m8279():void { var l:Short = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8280():void { var l:Short = (-32768)+(32767); }
	def m8281():void { var l:Short = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8282():void { var l:Short = (-32768)+(32768); }
	def m8283():void { var l:Short = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8284():void { var l:Short = (-32768)+(65535); }
	def m8285():void { var l:Short = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8286():void { var l:Short = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8287():void { var l:Short = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8288():void { var l:Short = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8289():void { var l:Short = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8290():void { var l:Short = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8291():void { var l:Short = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8292():void { var l:Short = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8293():void { var l:Short = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8294():void { var l:Short = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8295():void { var l:Short = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8296():void { var l:Short = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8297():void { var l:Short = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8298():void { var l:Short = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8299():void { var l:Short = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8300():void { var l:Short = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m8301():void { var l:Short = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8302():void { var l:Short = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8303():void { var l:Short = (65535)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((65535)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m8304():void { var l:Short = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8305():void { var l:Short = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8306():void { var l:Short = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8307():void { var l:Short = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8308():void { var l:Short = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8309():void { var l:Short = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8310():void { var l:Short = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8311():void { var l:Short = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8312():void { var l:Short = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8313():void { var l:Short = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8314():void { var l:Short = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8315():void { var l:Short = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8316():void { var l:Short = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8317():void { var l:Short = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8318():void { var l:Short = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8319():void { var l:Short = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8320():void { var l:Short = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8321():void { var l:Short = (65535)+(-32768); }
	def m8322():void { var l:Short = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8323():void { var l:Short = (65535)+(-65535); }
	def m8324():void { var l:Short = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8325():void { var l:Short = (65535)+(-65536); }
	def m8326():void { var l:Short = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8327():void { var l:Short = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8328():void { var l:Short = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8329():void { var l:Short = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8330():void { var l:Short = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8331():void { var l:Short = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8332():void { var l:Short = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8333():void { var l:Short = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8334():void { var l:Short = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8335():void { var l:Short = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8336():void { var l:Short = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8337():void { var l:Short = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8338():void { var l:Short = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m8339():void { var l:Short = (-65535)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m8340():void { var l:Short = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8341():void { var l:Short = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m8342():void { var l:Short = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8343():void { var l:Short = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8344():void { var l:Short = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8345():void { var l:Short = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8346():void { var l:Short = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8347():void { var l:Short = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8348():void { var l:Short = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8349():void { var l:Short = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8350():void { var l:Short = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8351():void { var l:Short = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8352():void { var l:Short = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8353():void { var l:Short = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8354():void { var l:Short = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8355():void { var l:Short = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8356():void { var l:Short = (-65535)+(32767); }
	def m8357():void { var l:Short = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8358():void { var l:Short = (-65535)+(32768); }
	def m8359():void { var l:Short = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8360():void { var l:Short = (-65535)+(65535); }
	def m8361():void { var l:Short = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8362():void { var l:Short = (-65535)+(65536); }
	def m8363():void { var l:Short = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8364():void { var l:Short = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8365():void { var l:Short = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8366():void { var l:Short = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8367():void { var l:Short = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8368():void { var l:Short = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8369():void { var l:Short = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8370():void { var l:Short = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8371():void { var l:Short = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8372():void { var l:Short = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8373():void { var l:Short = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8374():void { var l:Short = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8375():void { var l:Short = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8376():void { var l:Short = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m8377():void { var l:Short = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8378():void { var l:Short = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8379():void { var l:Short = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m8380():void { var l:Short = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8381():void { var l:Short = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8382():void { var l:Short = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8383():void { var l:Short = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8384():void { var l:Short = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8385():void { var l:Short = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8386():void { var l:Short = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8387():void { var l:Short = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8388():void { var l:Short = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8389():void { var l:Short = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8390():void { var l:Short = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8391():void { var l:Short = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8392():void { var l:Short = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8393():void { var l:Short = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8394():void { var l:Short = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8395():void { var l:Short = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8396():void { var l:Short = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8397():void { var l:Short = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8398():void { var l:Short = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8399():void { var l:Short = (65536)+(-65535); }
	def m8400():void { var l:Short = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8401():void { var l:Short = (65536)+(-65536); }
	def m8402():void { var l:Short = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8403():void { var l:Short = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8404():void { var l:Short = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8405():void { var l:Short = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8406():void { var l:Short = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8407():void { var l:Short = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8408():void { var l:Short = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8409():void { var l:Short = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8410():void { var l:Short = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8411():void { var l:Short = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8412():void { var l:Short = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8413():void { var l:Short = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8414():void { var l:Short = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m8415():void { var l:Short = (-65536)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m8416():void { var l:Short = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8417():void { var l:Short = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m8418():void { var l:Short = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8419():void { var l:Short = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8420():void { var l:Short = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8421():void { var l:Short = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8422():void { var l:Short = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8423():void { var l:Short = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8424():void { var l:Short = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8425():void { var l:Short = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8426():void { var l:Short = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8427():void { var l:Short = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8428():void { var l:Short = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8429():void { var l:Short = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8430():void { var l:Short = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8431():void { var l:Short = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8432():void { var l:Short = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8433():void { var l:Short = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8434():void { var l:Short = (-65536)+(32768); }
	def m8435():void { var l:Short = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8436():void { var l:Short = (-65536)+(65535); }
	def m8437():void { var l:Short = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8438():void { var l:Short = (-65536)+(65536); }
	def m8439():void { var l:Short = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8440():void { var l:Short = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8441():void { var l:Short = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8442():void { var l:Short = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8443():void { var l:Short = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8444():void { var l:Short = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8445():void { var l:Short = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8446():void { var l:Short = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8447():void { var l:Short = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8448():void { var l:Short = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8449():void { var l:Short = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8450():void { var l:Short = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8451():void { var l:Short = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8452():void { var l:Short = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m8453():void { var l:Short = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8454():void { var l:Short = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8455():void { var l:Short = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m8456():void { var l:Short = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8457():void { var l:Short = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8458():void { var l:Short = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8459():void { var l:Short = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8460():void { var l:Short = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8461():void { var l:Short = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8462():void { var l:Short = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8463():void { var l:Short = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8464():void { var l:Short = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8465():void { var l:Short = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8466():void { var l:Short = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8467():void { var l:Short = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8468():void { var l:Short = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8469():void { var l:Short = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8470():void { var l:Short = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8471():void { var l:Short = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8472():void { var l:Short = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8473():void { var l:Short = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8474():void { var l:Short = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8475():void { var l:Short = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8476():void { var l:Short = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8477():void { var l:Short = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8478():void { var l:Short = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8479():void { var l:Short = (16777216)+(-16777216); }
	def m8480():void { var l:Short = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8481():void { var l:Short = (16777216)+(-16777217); }
	def m8482():void { var l:Short = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8483():void { var l:Short = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8484():void { var l:Short = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8485():void { var l:Short = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8486():void { var l:Short = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8487():void { var l:Short = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8488():void { var l:Short = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8489():void { var l:Short = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8490():void { var l:Short = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m8491():void { var l:Short = (-16777216)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m8492():void { var l:Short = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8493():void { var l:Short = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m8494():void { var l:Short = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8495():void { var l:Short = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8496():void { var l:Short = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8497():void { var l:Short = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8498():void { var l:Short = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8499():void { var l:Short = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8500():void { var l:Short = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8501():void { var l:Short = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8502():void { var l:Short = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8503():void { var l:Short = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8504():void { var l:Short = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8505():void { var l:Short = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8506():void { var l:Short = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8507():void { var l:Short = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8508():void { var l:Short = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8509():void { var l:Short = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8510():void { var l:Short = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8511():void { var l:Short = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8512():void { var l:Short = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8513():void { var l:Short = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8514():void { var l:Short = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8515():void { var l:Short = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8516():void { var l:Short = (-16777216)+(16777216); }
	def m8517():void { var l:Short = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8518():void { var l:Short = (-16777216)+(16777217); }
	def m8519():void { var l:Short = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8520():void { var l:Short = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8521():void { var l:Short = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8522():void { var l:Short = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8523():void { var l:Short = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8524():void { var l:Short = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8525():void { var l:Short = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8526():void { var l:Short = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8527():void { var l:Short = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8528():void { var l:Short = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m8529():void { var l:Short = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8530():void { var l:Short = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8531():void { var l:Short = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m8532():void { var l:Short = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8533():void { var l:Short = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8534():void { var l:Short = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8535():void { var l:Short = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8536():void { var l:Short = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8537():void { var l:Short = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8538():void { var l:Short = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8539():void { var l:Short = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8540():void { var l:Short = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8541():void { var l:Short = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8542():void { var l:Short = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8543():void { var l:Short = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8544():void { var l:Short = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8545():void { var l:Short = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8546():void { var l:Short = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8547():void { var l:Short = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8548():void { var l:Short = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8549():void { var l:Short = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8550():void { var l:Short = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8551():void { var l:Short = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8552():void { var l:Short = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8553():void { var l:Short = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8554():void { var l:Short = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8555():void { var l:Short = (16777217)+(-16777216); }
	def m8556():void { var l:Short = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8557():void { var l:Short = (16777217)+(-16777217); }
	def m8558():void { var l:Short = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8559():void { var l:Short = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8560():void { var l:Short = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8561():void { var l:Short = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8562():void { var l:Short = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8563():void { var l:Short = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8564():void { var l:Short = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8565():void { var l:Short = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8566():void { var l:Short = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m8567():void { var l:Short = (-16777217)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m8568():void { var l:Short = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8569():void { var l:Short = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m8570():void { var l:Short = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8571():void { var l:Short = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8572():void { var l:Short = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8573():void { var l:Short = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8574():void { var l:Short = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8575():void { var l:Short = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8576():void { var l:Short = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8577():void { var l:Short = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8578():void { var l:Short = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8579():void { var l:Short = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8580():void { var l:Short = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8581():void { var l:Short = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8582():void { var l:Short = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8583():void { var l:Short = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8584():void { var l:Short = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8585():void { var l:Short = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8586():void { var l:Short = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8587():void { var l:Short = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8588():void { var l:Short = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8589():void { var l:Short = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8590():void { var l:Short = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8591():void { var l:Short = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8592():void { var l:Short = (-16777217)+(16777216); }
	def m8593():void { var l:Short = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8594():void { var l:Short = (-16777217)+(16777217); }
	def m8595():void { var l:Short = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8596():void { var l:Short = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8597():void { var l:Short = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8598():void { var l:Short = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8599():void { var l:Short = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8600():void { var l:Short = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8601():void { var l:Short = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8602():void { var l:Short = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8603():void { var l:Short = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8604():void { var l:Short = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m8605():void { var l:Short = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m8606():void { var l:Short = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8607():void { var l:Short = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m8608():void { var l:Short = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8609():void { var l:Short = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8610():void { var l:Short = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8611():void { var l:Short = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8612():void { var l:Short = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8613():void { var l:Short = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8614():void { var l:Short = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8615():void { var l:Short = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8616():void { var l:Short = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8617():void { var l:Short = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8618():void { var l:Short = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8619():void { var l:Short = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8620():void { var l:Short = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8621():void { var l:Short = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8622():void { var l:Short = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8623():void { var l:Short = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8624():void { var l:Short = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8625():void { var l:Short = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8626():void { var l:Short = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8627():void { var l:Short = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8628():void { var l:Short = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8629():void { var l:Short = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8630():void { var l:Short = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8631():void { var l:Short = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8632():void { var l:Short = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8633():void { var l:Short = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8634():void { var l:Short = (2147483647)+(2147483647); }
	def m8635():void { var l:Short = (2147483647)+(-2147483647); }
	def m8636():void { var l:Short = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8637():void { var l:Short = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8638():void { var l:Short = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8639():void { var l:Short = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8640():void { var l:Short = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m8641():void { var l:Short = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8642():void { var l:Short = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m8643():void { var l:Short = (-2147483647)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m8644():void { var l:Short = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m8645():void { var l:Short = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m8646():void { var l:Short = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8647():void { var l:Short = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8648():void { var l:Short = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8649():void { var l:Short = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m8650():void { var l:Short = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8651():void { var l:Short = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m8652():void { var l:Short = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8653():void { var l:Short = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8654():void { var l:Short = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8655():void { var l:Short = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8656():void { var l:Short = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8657():void { var l:Short = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8658():void { var l:Short = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8659():void { var l:Short = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8660():void { var l:Short = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8661():void { var l:Short = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8662():void { var l:Short = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8663():void { var l:Short = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8664():void { var l:Short = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8665():void { var l:Short = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8666():void { var l:Short = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8667():void { var l:Short = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8668():void { var l:Short = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8669():void { var l:Short = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8670():void { var l:Short = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8671():void { var l:Short = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m8672():void { var l:Short = (-2147483647)+(2147483647); }
	def m8673():void { var l:Short = (-2147483647)+(-2147483647); }
	def m8674():void { var l:UByte = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8675():void { var l:UByte = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8676():void { var l:UByte = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8677():void { var l:UByte = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8678():void { var l:UByte = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8679():void { var l:UByte = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8680():void { var l:UByte = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8681():void { var l:UByte = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8682():void { var l:UByte = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8683():void { var l:UByte = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8684():void { var l:UByte = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8685():void { var l:UByte = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8686():void { var l:UByte = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8687():void { var l:UByte = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8688():void { var l:UByte = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8689():void { var l:UByte = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8690():void { var l:UByte = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8691():void { var l:UByte = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8692():void { var l:UByte = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8693():void { var l:UByte = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8694():void { var l:UByte = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8695():void { var l:UByte = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8696():void { var l:UByte = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8697():void { var l:UByte = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8698():void { var l:UByte = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8699():void { var l:UByte = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8700():void { var l:UByte = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8701():void { var l:UByte = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8702():void { var l:UByte = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8703():void { var l:UByte = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8704():void { var l:UByte = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8705():void { var l:UByte = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8706():void { var l:UByte = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8707():void { var l:UByte = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8708():void { var l:UByte = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8709():void { var l:UByte = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8710():void { var l:UByte = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8711():void { var l:UByte = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8712():void { var l:UByte = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8713():void { var l:UByte = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8714():void { var l:UByte = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8715():void { var l:UByte = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8716():void { var l:UByte = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8717():void { var l:UByte = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8718():void { var l:UByte = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8719():void { var l:UByte = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8720():void { var l:UByte = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8721():void { var l:UByte = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8722():void { var l:UByte = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8723():void { var l:UByte = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8724():void { var l:UByte = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8725():void { var l:UByte = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8726():void { var l:UByte = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8727():void { var l:UByte = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8728():void { var l:UByte = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8729():void { var l:UByte = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8730():void { var l:UByte = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8731():void { var l:UByte = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8732():void { var l:UByte = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8733():void { var l:UByte = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8734():void { var l:UByte = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8735():void { var l:UByte = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8736():void { var l:UByte = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8737():void { var l:UByte = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8738():void { var l:UByte = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8739():void { var l:UByte = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8740():void { var l:UByte = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8741():void { var l:UByte = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8742():void { var l:UByte = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8743():void { var l:UByte = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8744():void { var l:UByte = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8745():void { var l:UByte = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8746():void { var l:UByte = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8747():void { var l:UByte = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8748():void { var l:UByte = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8749():void { var l:UByte = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8750():void { var l:UByte = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8751():void { var l:UByte = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8752():void { var l:UByte = (w2)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + (SignedAndUnsignedTests.this.w2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8753():void { var l:UByte = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8754():void { var l:UByte = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8755():void { var l:UByte = (w2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8756():void { var l:UByte = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m8757():void { var l:UByte = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8758():void { var l:UByte = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8759():void { var l:UByte = (w2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m8760():void { var l:UByte = (w2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + x10.lang.Byte.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8761():void { var l:UByte = (w2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + x10.lang.Byte.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8762():void { var l:UByte = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8763():void { var l:UByte = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8764():void { var l:UByte = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8765():void { var l:UByte = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8766():void { var l:UByte = (w2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + x10.lang.Byte.operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8767():void { var l:UByte = (w2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + x10.lang.Byte.operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8768():void { var l:UByte = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8769():void { var l:UByte = (w2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w2) + x10.lang.Byte.operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m8770():void { var l:UByte = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8771():void { var l:UByte = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8772():void { var l:UByte = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8773():void { var l:UByte = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8774():void { var l:UByte = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8775():void { var l:UByte = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8776():void { var l:UByte = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8777():void { var l:UByte = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8778():void { var l:UByte = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8779():void { var l:UByte = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8780():void { var l:UByte = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8781():void { var l:UByte = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8782():void { var l:UByte = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8783():void { var l:UByte = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8784():void { var l:UByte = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8785():void { var l:UByte = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8786():void { var l:UByte = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8787():void { var l:UByte = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8788():void { var l:UByte = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8789():void { var l:UByte = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8790():void { var l:UByte = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8791():void { var l:UByte = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8792():void { var l:UByte = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8793():void { var l:UByte = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8794():void { var l:UByte = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m8795():void { var l:UByte = (w3)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m8796():void { var l:UByte = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8797():void { var l:UByte = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m8798():void { var l:UByte = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8799():void { var l:UByte = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8800():void { var l:UByte = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8801():void { var l:UByte = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8802():void { var l:UByte = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8803():void { var l:UByte = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8804():void { var l:UByte = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8805():void { var l:UByte = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8806():void { var l:UByte = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8807():void { var l:UByte = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8808():void { var l:UByte = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8809():void { var l:UByte = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8810():void { var l:UByte = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8811():void { var l:UByte = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8812():void { var l:UByte = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8813():void { var l:UByte = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8814():void { var l:UByte = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8815():void { var l:UByte = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8816():void { var l:UByte = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8817():void { var l:UByte = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8818():void { var l:UByte = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8819():void { var l:UByte = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8820():void { var l:UByte = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8821():void { var l:UByte = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8822():void { var l:UByte = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8823():void { var l:UByte = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8824():void { var l:UByte = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8825():void { var l:UByte = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8826():void { var l:UByte = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8827():void { var l:UByte = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8828():void { var l:UByte = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8829():void { var l:UByte = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8830():void { var l:UByte = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8831():void { var l:UByte = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8832():void { var l:UByte = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m8833():void { var l:UByte = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m8834():void { var l:UByte = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m8835():void { var l:UByte = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m8836():void { var l:UByte = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8837():void { var l:UByte = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8838():void { var l:UByte = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8839():void { var l:UByte = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8840():void { var l:UByte = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8841():void { var l:UByte = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8842():void { var l:UByte = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8843():void { var l:UByte = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8844():void { var l:UByte = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8845():void { var l:UByte = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8846():void { var l:UByte = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8847():void { var l:UByte = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8848():void { var l:UByte = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8849():void { var l:UByte = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8850():void { var l:UByte = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8851():void { var l:UByte = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8852():void { var l:UByte = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8853():void { var l:UByte = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8854():void { var l:UByte = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8855():void { var l:UByte = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8856():void { var l:UByte = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8857():void { var l:UByte = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8858():void { var l:UByte = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8859():void { var l:UByte = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8860():void { var l:UByte = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8861():void { var l:UByte = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8862():void { var l:UByte = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8863():void { var l:UByte = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8864():void { var l:UByte = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8865():void { var l:UByte = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8866():void { var l:UByte = (w5)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8867():void { var l:UByte = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8868():void { var l:UByte = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m8869():void { var l:UByte = (w5)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8870():void { var l:UByte = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m8871():void { var l:UByte = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8872():void { var l:UByte = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8873():void { var l:UByte = (w5)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m8874():void { var l:UByte = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8875():void { var l:UByte = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8876():void { var l:UByte = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8877():void { var l:UByte = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8878():void { var l:UByte = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8879():void { var l:UByte = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8880():void { var l:UByte = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8881():void { var l:UByte = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8882():void { var l:UByte = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8883():void { var l:UByte = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8884():void { var l:UByte = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8885():void { var l:UByte = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8886():void { var l:UByte = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8887():void { var l:UByte = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8888():void { var l:UByte = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8889():void { var l:UByte = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8890():void { var l:UByte = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8891():void { var l:UByte = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m8892():void { var l:UByte = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8893():void { var l:UByte = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8894():void { var l:UByte = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8895():void { var l:UByte = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8896():void { var l:UByte = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8897():void { var l:UByte = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8898():void { var l:UByte = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8899():void { var l:UByte = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8900():void { var l:UByte = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8901():void { var l:UByte = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m8902():void { var l:UByte = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8903():void { var l:UByte = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8904():void { var l:UByte = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m8905():void { var l:UByte = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m8906():void { var l:UByte = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m8907():void { var l:UByte = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m8908():void { var l:UByte = (w6)+(w6); }
	def m8909():void { var l:UByte = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8910():void { var l:UByte = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8911():void { var l:UByte = (w6)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m8912():void { var l:UByte = (w6)+(0); }  
	def m8913():void { var l:UByte = (w6)+(-0); }  
	def m8914():void { var l:UByte = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8915():void { var l:UByte = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8916():void { var l:UByte = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8917():void { var l:UByte = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8918():void { var l:UByte = (w6)+(127); }  
	def m8919():void { var l:UByte = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m8920():void { var l:UByte = (w6)+(128); }  
	def m8921():void { var l:UByte = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m8922():void { var l:UByte = (w6)+(255); }  
	def m8923():void { var l:UByte = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m8924():void { var l:UByte = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m8925():void { var l:UByte = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m8926():void { var l:UByte = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m8927():void { var l:UByte = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m8928():void { var l:UByte = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m8929():void { var l:UByte = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m8930():void { var l:UByte = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m8931():void { var l:UByte = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m8932():void { var l:UByte = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m8933():void { var l:UByte = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m8934():void { var l:UByte = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m8935():void { var l:UByte = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m8936():void { var l:UByte = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m8937():void { var l:UByte = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m8938():void { var l:UByte = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m8939():void { var l:UByte = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m8940():void { var l:UByte = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8941():void { var l:UByte = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8942():void { var l:UByte = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8943():void { var l:UByte = (w7)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m8944():void { var l:UByte = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m8945():void { var l:UByte = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8946():void { var l:UByte = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8947():void { var l:UByte = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8948():void { var l:UByte = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8949():void { var l:UByte = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8950():void { var l:UByte = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8951():void { var l:UByte = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8952():void { var l:UByte = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8953():void { var l:UByte = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8954():void { var l:UByte = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8955():void { var l:UByte = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8956():void { var l:UByte = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8957():void { var l:UByte = (w7)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m8958():void { var l:UByte = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8959():void { var l:UByte = (w7)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m8960():void { var l:UByte = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8961():void { var l:UByte = (w7)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m8962():void { var l:UByte = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8963():void { var l:UByte = (w7)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m8964():void { var l:UByte = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8965():void { var l:UByte = (w7)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m8966():void { var l:UByte = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8967():void { var l:UByte = (w7)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m8968():void { var l:UByte = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8969():void { var l:UByte = (w7)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m8970():void { var l:UByte = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8971():void { var l:UByte = (w7)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m8972():void { var l:UByte = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8973():void { var l:UByte = (w7)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m8974():void { var l:UByte = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8975():void { var l:UByte = (w7)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m8976():void { var l:UByte = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m8977():void { var l:UByte = (w7)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m8978():void { var l:UByte = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8979():void { var l:UByte = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8980():void { var l:UByte = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8981():void { var l:UByte = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8982():void { var l:UByte = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m8983():void { var l:UByte = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8984():void { var l:UByte = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8985():void { var l:UByte = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8986():void { var l:UByte = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8987():void { var l:UByte = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8988():void { var l:UByte = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8989():void { var l:UByte = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8990():void { var l:UByte = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8991():void { var l:UByte = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m8992():void { var l:UByte = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8993():void { var l:UByte = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m8994():void { var l:UByte = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8995():void { var l:UByte = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8996():void { var l:UByte = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8997():void { var l:UByte = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8998():void { var l:UByte = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m8999():void { var l:UByte = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9000():void { var l:UByte = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9001():void { var l:UByte = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9002():void { var l:UByte = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9003():void { var l:UByte = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9004():void { var l:UByte = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9005():void { var l:UByte = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9006():void { var l:UByte = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9007():void { var l:UByte = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9008():void { var l:UByte = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9009():void { var l:UByte = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9010():void { var l:UByte = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9011():void { var l:UByte = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9012():void { var l:UByte = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9013():void { var l:UByte = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9014():void { var l:UByte = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9015():void { var l:UByte = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9016():void { var l:UByte = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9017():void { var l:UByte = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9018():void { var l:UByte = (w9)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9019():void { var l:UByte = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m9020():void { var l:UByte = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m9021():void { var l:UByte = (w9)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m9022():void { var l:UByte = (w9)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9023():void { var l:UByte = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9024():void { var l:UByte = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9025():void { var l:UByte = (w9)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9026():void { var l:UByte = (w9)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9027():void { var l:UByte = (w9)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9028():void { var l:UByte = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9029():void { var l:UByte = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9030():void { var l:UByte = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9031():void { var l:UByte = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9032():void { var l:UByte = (w9)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9033():void { var l:UByte = (w9)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m9034():void { var l:UByte = (w9)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9035():void { var l:UByte = (w9)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m9036():void { var l:UByte = (w9)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9037():void { var l:UByte = (w9)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m9038():void { var l:UByte = (w9)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9039():void { var l:UByte = (w9)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m9040():void { var l:UByte = (w9)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9041():void { var l:UByte = (w9)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m9042():void { var l:UByte = (w9)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9043():void { var l:UByte = (w9)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m9044():void { var l:UByte = (w9)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w9) + x10.lang.UShort.operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9045():void { var l:UByte = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m9046():void { var l:UByte = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m9047():void { var l:UByte = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m9048():void { var l:UByte = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m9049():void { var l:UByte = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m9050():void { var l:UByte = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m9051():void { var l:UByte = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m9052():void { var l:UByte = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m9053():void { var l:UByte = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m9054():void { var l:UByte = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9055():void { var l:UByte = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9056():void { var l:UByte = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9057():void { var l:UByte = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9058():void { var l:UByte = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9059():void { var l:UByte = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9060():void { var l:UByte = (0)+(w6); }  
	def m9061():void { var l:UByte = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9062():void { var l:UByte = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9063():void { var l:UByte = (0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9064():void { var l:UByte = (0)+(0); }
	def m9065():void { var l:UByte = (0)+(-0); }
	def m9066():void { var l:UByte = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9067():void { var l:UByte = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9068():void { var l:UByte = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9069():void { var l:UByte = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9070():void { var l:UByte = (0)+(127); }
	def m9071():void { var l:UByte = (0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9072():void { var l:UByte = (0)+(128); }
	def m9073():void { var l:UByte = (0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9074():void { var l:UByte = (0)+(255); }
	def m9075():void { var l:UByte = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9076():void { var l:UByte = (0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9077():void { var l:UByte = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9078():void { var l:UByte = (0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9079():void { var l:UByte = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9080():void { var l:UByte = (0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9081():void { var l:UByte = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9082():void { var l:UByte = (0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9083():void { var l:UByte = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9084():void { var l:UByte = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9085():void { var l:UByte = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9086():void { var l:UByte = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9087():void { var l:UByte = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9088():void { var l:UByte = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9089():void { var l:UByte = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9090():void { var l:UByte = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9091():void { var l:UByte = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9092():void { var l:UByte = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9093():void { var l:UByte = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9094():void { var l:UByte = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9095():void { var l:UByte = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9096():void { var l:UByte = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9097():void { var l:UByte = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9098():void { var l:UByte = (-0)+(w6); }  
	def m9099():void { var l:UByte = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9100():void { var l:UByte = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9101():void { var l:UByte = (-0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((0)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9102():void { var l:UByte = (-0)+(0); }
	def m9103():void { var l:UByte = (-0)+(-0); }
	def m9104():void { var l:UByte = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9105():void { var l:UByte = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9106():void { var l:UByte = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9107():void { var l:UByte = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9108():void { var l:UByte = (-0)+(127); }
	def m9109():void { var l:UByte = (-0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9110():void { var l:UByte = (-0)+(128); }
	def m9111():void { var l:UByte = (-0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9112():void { var l:UByte = (-0)+(255); }
	def m9113():void { var l:UByte = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9114():void { var l:UByte = (-0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9115():void { var l:UByte = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9116():void { var l:UByte = (-0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9117():void { var l:UByte = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9118():void { var l:UByte = (-0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9119():void { var l:UByte = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9120():void { var l:UByte = (-0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9121():void { var l:UByte = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9122():void { var l:UByte = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9123():void { var l:UByte = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9124():void { var l:UByte = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9125():void { var l:UByte = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9126():void { var l:UByte = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9127():void { var l:UByte = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9128():void { var l:UByte = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9129():void { var l:UByte = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9130():void { var l:UByte = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9131():void { var l:UByte = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9132():void { var l:UByte = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9133():void { var l:UByte = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9134():void { var l:UByte = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9135():void { var l:UByte = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9136():void { var l:UByte = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9137():void { var l:UByte = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9138():void { var l:UByte = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9139():void { var l:UByte = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9140():void { var l:UByte = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9141():void { var l:UByte = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9142():void { var l:UByte = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9143():void { var l:UByte = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9144():void { var l:UByte = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9145():void { var l:UByte = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9146():void { var l:UByte = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9147():void { var l:UByte = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9148():void { var l:UByte = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9149():void { var l:UByte = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9150():void { var l:UByte = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9151():void { var l:UByte = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9152():void { var l:UByte = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9153():void { var l:UByte = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9154():void { var l:UByte = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9155():void { var l:UByte = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9156():void { var l:UByte = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9157():void { var l:UByte = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9158():void { var l:UByte = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9159():void { var l:UByte = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9160():void { var l:UByte = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9161():void { var l:UByte = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9162():void { var l:UByte = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9163():void { var l:UByte = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9164():void { var l:UByte = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9165():void { var l:UByte = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9166():void { var l:UByte = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9167():void { var l:UByte = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9168():void { var l:UByte = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9169():void { var l:UByte = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9170():void { var l:UByte = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9171():void { var l:UByte = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9172():void { var l:UByte = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9173():void { var l:UByte = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9174():void { var l:UByte = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9175():void { var l:UByte = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9176():void { var l:UByte = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9177():void { var l:UByte = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9178():void { var l:UByte = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9179():void { var l:UByte = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9180():void { var l:UByte = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9181():void { var l:UByte = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9182():void { var l:UByte = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9183():void { var l:UByte = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9184():void { var l:UByte = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9185():void { var l:UByte = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9186():void { var l:UByte = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9187():void { var l:UByte = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9188():void { var l:UByte = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9189():void { var l:UByte = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9190():void { var l:UByte = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9191():void { var l:UByte = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9192():void { var l:UByte = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9193():void { var l:UByte = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9194():void { var l:UByte = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9195():void { var l:UByte = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9196():void { var l:UByte = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9197():void { var l:UByte = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9198():void { var l:UByte = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9199():void { var l:UByte = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9200():void { var l:UByte = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9201():void { var l:UByte = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9202():void { var l:UByte = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9203():void { var l:UByte = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9204():void { var l:UByte = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9205():void { var l:UByte = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9206():void { var l:UByte = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9207():void { var l:UByte = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9208():void { var l:UByte = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9209():void { var l:UByte = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9210():void { var l:UByte = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9211():void { var l:UByte = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9212():void { var l:UByte = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9213():void { var l:UByte = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9214():void { var l:UByte = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9215():void { var l:UByte = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9216():void { var l:UByte = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9217():void { var l:UByte = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9218():void { var l:UByte = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9219():void { var l:UByte = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9220():void { var l:UByte = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9221():void { var l:UByte = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9222():void { var l:UByte = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9223():void { var l:UByte = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9224():void { var l:UByte = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9225():void { var l:UByte = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9226():void { var l:UByte = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9227():void { var l:UByte = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9228():void { var l:UByte = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9229():void { var l:UByte = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9230():void { var l:UByte = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9231():void { var l:UByte = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9232():void { var l:UByte = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9233():void { var l:UByte = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9234():void { var l:UByte = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9235():void { var l:UByte = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9236():void { var l:UByte = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9237():void { var l:UByte = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9238():void { var l:UByte = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9239():void { var l:UByte = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9240():void { var l:UByte = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9241():void { var l:UByte = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9242():void { var l:UByte = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9243():void { var l:UByte = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9244():void { var l:UByte = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9245():void { var l:UByte = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9246():void { var l:UByte = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9247():void { var l:UByte = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9248():void { var l:UByte = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9249():void { var l:UByte = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9250():void { var l:UByte = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9251():void { var l:UByte = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9252():void { var l:UByte = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9253():void { var l:UByte = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9254():void { var l:UByte = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9255():void { var l:UByte = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9256():void { var l:UByte = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9257():void { var l:UByte = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9258():void { var l:UByte = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9259():void { var l:UByte = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9260():void { var l:UByte = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9261():void { var l:UByte = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9262():void { var l:UByte = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9263():void { var l:UByte = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9264():void { var l:UByte = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9265():void { var l:UByte = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9266():void { var l:UByte = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9267():void { var l:UByte = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9268():void { var l:UByte = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9269():void { var l:UByte = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9270():void { var l:UByte = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9271():void { var l:UByte = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9272():void { var l:UByte = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9273():void { var l:UByte = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9274():void { var l:UByte = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9275():void { var l:UByte = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9276():void { var l:UByte = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9277():void { var l:UByte = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9278():void { var l:UByte = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9279():void { var l:UByte = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9280():void { var l:UByte = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9281():void { var l:UByte = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9282():void { var l:UByte = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9283():void { var l:UByte = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9284():void { var l:UByte = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9285():void { var l:UByte = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9286():void { var l:UByte = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9287():void { var l:UByte = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9288():void { var l:UByte = (127)+(w6); }  
	def m9289():void { var l:UByte = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9290():void { var l:UByte = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9291():void { var l:UByte = (127)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((127)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9292():void { var l:UByte = (127)+(0); }
	def m9293():void { var l:UByte = (127)+(-0); }
	def m9294():void { var l:UByte = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9295():void { var l:UByte = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9296():void { var l:UByte = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9297():void { var l:UByte = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9298():void { var l:UByte = (127)+(127); }
	def m9299():void { var l:UByte = (127)+(-127); }
	def m9300():void { var l:UByte = (127)+(128); }
	def m9301():void { var l:UByte = (127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9302():void { var l:UByte = (127)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9303():void { var l:UByte = (127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9304():void { var l:UByte = (127)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9305():void { var l:UByte = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9306():void { var l:UByte = (127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9307():void { var l:UByte = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9308():void { var l:UByte = (127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9309():void { var l:UByte = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9310():void { var l:UByte = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9311():void { var l:UByte = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9312():void { var l:UByte = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9313():void { var l:UByte = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9314():void { var l:UByte = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9315():void { var l:UByte = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9316():void { var l:UByte = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9317():void { var l:UByte = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9318():void { var l:UByte = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9319():void { var l:UByte = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9320():void { var l:UByte = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9321():void { var l:UByte = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9322():void { var l:UByte = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9323():void { var l:UByte = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9324():void { var l:UByte = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9325():void { var l:UByte = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9326():void { var l:UByte = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m9327():void { var l:UByte = (-127)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m9328():void { var l:UByte = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9329():void { var l:UByte = (-127)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m9330():void { var l:UByte = (-127)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9331():void { var l:UByte = (-127)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9332():void { var l:UByte = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9333():void { var l:UByte = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9334():void { var l:UByte = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9335():void { var l:UByte = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9336():void { var l:UByte = (-127)+(127); }
	def m9337():void { var l:UByte = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9338():void { var l:UByte = (-127)+(128); }
	def m9339():void { var l:UByte = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9340():void { var l:UByte = (-127)+(255); }
	def m9341():void { var l:UByte = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9342():void { var l:UByte = (-127)+(256); }
	def m9343():void { var l:UByte = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9344():void { var l:UByte = (-127)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9345():void { var l:UByte = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9346():void { var l:UByte = (-127)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9347():void { var l:UByte = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9348():void { var l:UByte = (-127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9349():void { var l:UByte = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9350():void { var l:UByte = (-127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9351():void { var l:UByte = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9352():void { var l:UByte = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9353():void { var l:UByte = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9354():void { var l:UByte = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9355():void { var l:UByte = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9356():void { var l:UByte = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9357():void { var l:UByte = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9358():void { var l:UByte = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9359():void { var l:UByte = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9360():void { var l:UByte = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9361():void { var l:UByte = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9362():void { var l:UByte = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9363():void { var l:UByte = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9364():void { var l:UByte = (128)+(w6); }  
	def m9365():void { var l:UByte = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9366():void { var l:UByte = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9367():void { var l:UByte = (128)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((128)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9368():void { var l:UByte = (128)+(0); }
	def m9369():void { var l:UByte = (128)+(-0); }
	def m9370():void { var l:UByte = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9371():void { var l:UByte = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9372():void { var l:UByte = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9373():void { var l:UByte = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9374():void { var l:UByte = (128)+(127); }
	def m9375():void { var l:UByte = (128)+(-127); }
	def m9376():void { var l:UByte = (128)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9377():void { var l:UByte = (128)+(-128); }
	def m9378():void { var l:UByte = (128)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9379():void { var l:UByte = (128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9380():void { var l:UByte = (128)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9381():void { var l:UByte = (128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9382():void { var l:UByte = (128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9383():void { var l:UByte = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9384():void { var l:UByte = (128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9385():void { var l:UByte = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9386():void { var l:UByte = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9387():void { var l:UByte = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9388():void { var l:UByte = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9389():void { var l:UByte = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9390():void { var l:UByte = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9391():void { var l:UByte = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9392():void { var l:UByte = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9393():void { var l:UByte = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9394():void { var l:UByte = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9395():void { var l:UByte = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9396():void { var l:UByte = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9397():void { var l:UByte = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9398():void { var l:UByte = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9399():void { var l:UByte = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9400():void { var l:UByte = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9401():void { var l:UByte = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9402():void { var l:UByte = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m9403():void { var l:UByte = (-128)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m9404():void { var l:UByte = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9405():void { var l:UByte = (-128)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m9406():void { var l:UByte = (-128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9407():void { var l:UByte = (-128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9408():void { var l:UByte = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9409():void { var l:UByte = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9410():void { var l:UByte = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9411():void { var l:UByte = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9412():void { var l:UByte = (-128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9413():void { var l:UByte = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9414():void { var l:UByte = (-128)+(128); }
	def m9415():void { var l:UByte = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9416():void { var l:UByte = (-128)+(255); }
	def m9417():void { var l:UByte = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9418():void { var l:UByte = (-128)+(256); }
	def m9419():void { var l:UByte = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9420():void { var l:UByte = (-128)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9421():void { var l:UByte = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9422():void { var l:UByte = (-128)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9423():void { var l:UByte = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9424():void { var l:UByte = (-128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9425():void { var l:UByte = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9426():void { var l:UByte = (-128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9427():void { var l:UByte = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9428():void { var l:UByte = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9429():void { var l:UByte = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9430():void { var l:UByte = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9431():void { var l:UByte = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9432():void { var l:UByte = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9433():void { var l:UByte = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9434():void { var l:UByte = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9435():void { var l:UByte = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9436():void { var l:UByte = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9437():void { var l:UByte = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9438():void { var l:UByte = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9439():void { var l:UByte = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9440():void { var l:UByte = (255)+(w6); }  
	def m9441():void { var l:UByte = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9442():void { var l:UByte = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9443():void { var l:UByte = (255)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((255)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9444():void { var l:UByte = (255)+(0); }
	def m9445():void { var l:UByte = (255)+(-0); }
	def m9446():void { var l:UByte = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9447():void { var l:UByte = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9448():void { var l:UByte = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9449():void { var l:UByte = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9450():void { var l:UByte = (255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9451():void { var l:UByte = (255)+(-127); }
	def m9452():void { var l:UByte = (255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9453():void { var l:UByte = (255)+(-128); }
	def m9454():void { var l:UByte = (255)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9455():void { var l:UByte = (255)+(-255); }
	def m9456():void { var l:UByte = (255)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9457():void { var l:UByte = (255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9458():void { var l:UByte = (255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9459():void { var l:UByte = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9460():void { var l:UByte = (255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9461():void { var l:UByte = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9462():void { var l:UByte = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9463():void { var l:UByte = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9464():void { var l:UByte = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9465():void { var l:UByte = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9466():void { var l:UByte = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9467():void { var l:UByte = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9468():void { var l:UByte = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9469():void { var l:UByte = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9470():void { var l:UByte = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9471():void { var l:UByte = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9472():void { var l:UByte = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9473():void { var l:UByte = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9474():void { var l:UByte = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9475():void { var l:UByte = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9476():void { var l:UByte = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9477():void { var l:UByte = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9478():void { var l:UByte = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m9479():void { var l:UByte = (-255)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m9480():void { var l:UByte = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9481():void { var l:UByte = (-255)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m9482():void { var l:UByte = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9483():void { var l:UByte = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9484():void { var l:UByte = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9485():void { var l:UByte = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9486():void { var l:UByte = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9487():void { var l:UByte = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9488():void { var l:UByte = (-255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9489():void { var l:UByte = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9490():void { var l:UByte = (-255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9491():void { var l:UByte = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9492():void { var l:UByte = (-255)+(255); }
	def m9493():void { var l:UByte = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9494():void { var l:UByte = (-255)+(256); }
	def m9495():void { var l:UByte = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9496():void { var l:UByte = (-255)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9497():void { var l:UByte = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9498():void { var l:UByte = (-255)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9499():void { var l:UByte = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9500():void { var l:UByte = (-255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9501():void { var l:UByte = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9502():void { var l:UByte = (-255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9503():void { var l:UByte = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9504():void { var l:UByte = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9505():void { var l:UByte = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9506():void { var l:UByte = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9507():void { var l:UByte = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9508():void { var l:UByte = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9509():void { var l:UByte = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9510():void { var l:UByte = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9511():void { var l:UByte = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9512():void { var l:UByte = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9513():void { var l:UByte = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9514():void { var l:UByte = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9515():void { var l:UByte = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9516():void { var l:UByte = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m9517():void { var l:UByte = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9518():void { var l:UByte = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9519():void { var l:UByte = (256)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((256)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9520():void { var l:UByte = (256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9521():void { var l:UByte = (256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9522():void { var l:UByte = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9523():void { var l:UByte = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9524():void { var l:UByte = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9525():void { var l:UByte = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9526():void { var l:UByte = (256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9527():void { var l:UByte = (256)+(-127); }
	def m9528():void { var l:UByte = (256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9529():void { var l:UByte = (256)+(-128); }
	def m9530():void { var l:UByte = (256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9531():void { var l:UByte = (256)+(-255); }
	def m9532():void { var l:UByte = (256)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9533():void { var l:UByte = (256)+(-256); }
	def m9534():void { var l:UByte = (256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9535():void { var l:UByte = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9536():void { var l:UByte = (256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9537():void { var l:UByte = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9538():void { var l:UByte = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9539():void { var l:UByte = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9540():void { var l:UByte = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9541():void { var l:UByte = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9542():void { var l:UByte = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9543():void { var l:UByte = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9544():void { var l:UByte = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9545():void { var l:UByte = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9546():void { var l:UByte = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9547():void { var l:UByte = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9548():void { var l:UByte = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9549():void { var l:UByte = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9550():void { var l:UByte = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9551():void { var l:UByte = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9552():void { var l:UByte = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9553():void { var l:UByte = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9554():void { var l:UByte = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m9555():void { var l:UByte = (-256)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m9556():void { var l:UByte = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9557():void { var l:UByte = (-256)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m9558():void { var l:UByte = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9559():void { var l:UByte = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9560():void { var l:UByte = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9561():void { var l:UByte = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9562():void { var l:UByte = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9563():void { var l:UByte = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9564():void { var l:UByte = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9565():void { var l:UByte = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9566():void { var l:UByte = (-256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9567():void { var l:UByte = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9568():void { var l:UByte = (-256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9569():void { var l:UByte = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9570():void { var l:UByte = (-256)+(256); }
	def m9571():void { var l:UByte = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9572():void { var l:UByte = (-256)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9573():void { var l:UByte = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9574():void { var l:UByte = (-256)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9575():void { var l:UByte = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9576():void { var l:UByte = (-256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9577():void { var l:UByte = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9578():void { var l:UByte = (-256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9579():void { var l:UByte = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9580():void { var l:UByte = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9581():void { var l:UByte = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9582():void { var l:UByte = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9583():void { var l:UByte = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9584():void { var l:UByte = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9585():void { var l:UByte = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9586():void { var l:UByte = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9587():void { var l:UByte = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9588():void { var l:UByte = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9589():void { var l:UByte = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9590():void { var l:UByte = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9591():void { var l:UByte = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9592():void { var l:UByte = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m9593():void { var l:UByte = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9594():void { var l:UByte = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9595():void { var l:UByte = (32767)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32767)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9596():void { var l:UByte = (32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9597():void { var l:UByte = (32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9598():void { var l:UByte = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9599():void { var l:UByte = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9600():void { var l:UByte = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9601():void { var l:UByte = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9602():void { var l:UByte = (32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9603():void { var l:UByte = (32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9604():void { var l:UByte = (32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9605():void { var l:UByte = (32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9606():void { var l:UByte = (32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9607():void { var l:UByte = (32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9608():void { var l:UByte = (32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9609():void { var l:UByte = (32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9610():void { var l:UByte = (32767)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9611():void { var l:UByte = (32767)+(-32767); }
	def m9612():void { var l:UByte = (32767)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9613():void { var l:UByte = (32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9614():void { var l:UByte = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9615():void { var l:UByte = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9616():void { var l:UByte = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9617():void { var l:UByte = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9618():void { var l:UByte = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9619():void { var l:UByte = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9620():void { var l:UByte = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9621():void { var l:UByte = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9622():void { var l:UByte = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9623():void { var l:UByte = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9624():void { var l:UByte = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9625():void { var l:UByte = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9626():void { var l:UByte = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9627():void { var l:UByte = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9628():void { var l:UByte = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9629():void { var l:UByte = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9630():void { var l:UByte = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m9631():void { var l:UByte = (-32767)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m9632():void { var l:UByte = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9633():void { var l:UByte = (-32767)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m9634():void { var l:UByte = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9635():void { var l:UByte = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9636():void { var l:UByte = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9637():void { var l:UByte = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9638():void { var l:UByte = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9639():void { var l:UByte = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9640():void { var l:UByte = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9641():void { var l:UByte = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9642():void { var l:UByte = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9643():void { var l:UByte = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9644():void { var l:UByte = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9645():void { var l:UByte = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9646():void { var l:UByte = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9647():void { var l:UByte = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9648():void { var l:UByte = (-32767)+(32767); }
	def m9649():void { var l:UByte = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9650():void { var l:UByte = (-32767)+(32768); }
	def m9651():void { var l:UByte = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9652():void { var l:UByte = (-32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9653():void { var l:UByte = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9654():void { var l:UByte = (-32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9655():void { var l:UByte = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9656():void { var l:UByte = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9657():void { var l:UByte = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9658():void { var l:UByte = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9659():void { var l:UByte = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9660():void { var l:UByte = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9661():void { var l:UByte = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9662():void { var l:UByte = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9663():void { var l:UByte = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9664():void { var l:UByte = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9665():void { var l:UByte = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9666():void { var l:UByte = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9667():void { var l:UByte = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9668():void { var l:UByte = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m9669():void { var l:UByte = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9670():void { var l:UByte = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9671():void { var l:UByte = (32768)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((32768)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9672():void { var l:UByte = (32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9673():void { var l:UByte = (32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9674():void { var l:UByte = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9675():void { var l:UByte = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9676():void { var l:UByte = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9677():void { var l:UByte = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9678():void { var l:UByte = (32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9679():void { var l:UByte = (32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9680():void { var l:UByte = (32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9681():void { var l:UByte = (32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9682():void { var l:UByte = (32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9683():void { var l:UByte = (32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9684():void { var l:UByte = (32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9685():void { var l:UByte = (32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9686():void { var l:UByte = (32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9687():void { var l:UByte = (32768)+(-32767); }
	def m9688():void { var l:UByte = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9689():void { var l:UByte = (32768)+(-32768); }
	def m9690():void { var l:UByte = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9691():void { var l:UByte = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9692():void { var l:UByte = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9693():void { var l:UByte = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9694():void { var l:UByte = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9695():void { var l:UByte = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9696():void { var l:UByte = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9697():void { var l:UByte = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9698():void { var l:UByte = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9699():void { var l:UByte = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9700():void { var l:UByte = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9701():void { var l:UByte = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9702():void { var l:UByte = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9703():void { var l:UByte = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9704():void { var l:UByte = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9705():void { var l:UByte = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9706():void { var l:UByte = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m9707():void { var l:UByte = (-32768)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m9708():void { var l:UByte = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9709():void { var l:UByte = (-32768)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m9710():void { var l:UByte = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9711():void { var l:UByte = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9712():void { var l:UByte = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9713():void { var l:UByte = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9714():void { var l:UByte = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9715():void { var l:UByte = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9716():void { var l:UByte = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9717():void { var l:UByte = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9718():void { var l:UByte = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9719():void { var l:UByte = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9720():void { var l:UByte = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9721():void { var l:UByte = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9722():void { var l:UByte = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9723():void { var l:UByte = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9724():void { var l:UByte = (-32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9725():void { var l:UByte = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9726():void { var l:UByte = (-32768)+(32768); }
	def m9727():void { var l:UByte = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9728():void { var l:UByte = (-32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9729():void { var l:UByte = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9730():void { var l:UByte = (-32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9731():void { var l:UByte = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9732():void { var l:UByte = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9733():void { var l:UByte = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9734():void { var l:UByte = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9735():void { var l:UByte = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9736():void { var l:UByte = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9737():void { var l:UByte = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9738():void { var l:UByte = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9739():void { var l:UByte = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9740():void { var l:UByte = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9741():void { var l:UByte = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9742():void { var l:UByte = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9743():void { var l:UByte = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9744():void { var l:UByte = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m9745():void { var l:UByte = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9746():void { var l:UByte = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9747():void { var l:UByte = (65535)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UShort.operator_as((65535)) + (SignedAndUnsignedTests.this.w9)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m9748():void { var l:UByte = (65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9749():void { var l:UByte = (65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9750():void { var l:UByte = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9751():void { var l:UByte = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9752():void { var l:UByte = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9753():void { var l:UByte = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9754():void { var l:UByte = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9755():void { var l:UByte = (65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9756():void { var l:UByte = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9757():void { var l:UByte = (65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9758():void { var l:UByte = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9759():void { var l:UByte = (65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9760():void { var l:UByte = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9761():void { var l:UByte = (65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9762():void { var l:UByte = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9763():void { var l:UByte = (65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9764():void { var l:UByte = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9765():void { var l:UByte = (65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9766():void { var l:UByte = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9767():void { var l:UByte = (65535)+(-65535); }
	def m9768():void { var l:UByte = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9769():void { var l:UByte = (65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9770():void { var l:UByte = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9771():void { var l:UByte = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9772():void { var l:UByte = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9773():void { var l:UByte = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9774():void { var l:UByte = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9775():void { var l:UByte = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9776():void { var l:UByte = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9777():void { var l:UByte = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9778():void { var l:UByte = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9779():void { var l:UByte = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9780():void { var l:UByte = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9781():void { var l:UByte = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9782():void { var l:UByte = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m9783():void { var l:UByte = (-65535)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m9784():void { var l:UByte = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9785():void { var l:UByte = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m9786():void { var l:UByte = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9787():void { var l:UByte = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9788():void { var l:UByte = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9789():void { var l:UByte = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9790():void { var l:UByte = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9791():void { var l:UByte = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9792():void { var l:UByte = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9793():void { var l:UByte = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9794():void { var l:UByte = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9795():void { var l:UByte = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9796():void { var l:UByte = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9797():void { var l:UByte = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9798():void { var l:UByte = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9799():void { var l:UByte = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9800():void { var l:UByte = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9801():void { var l:UByte = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9802():void { var l:UByte = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9803():void { var l:UByte = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9804():void { var l:UByte = (-65535)+(65535); }
	def m9805():void { var l:UByte = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9806():void { var l:UByte = (-65535)+(65536); }
	def m9807():void { var l:UByte = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9808():void { var l:UByte = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9809():void { var l:UByte = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9810():void { var l:UByte = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9811():void { var l:UByte = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9812():void { var l:UByte = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9813():void { var l:UByte = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9814():void { var l:UByte = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9815():void { var l:UByte = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9816():void { var l:UByte = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9817():void { var l:UByte = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9818():void { var l:UByte = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9819():void { var l:UByte = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9820():void { var l:UByte = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m9821():void { var l:UByte = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9822():void { var l:UByte = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9823():void { var l:UByte = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m9824():void { var l:UByte = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9825():void { var l:UByte = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9826():void { var l:UByte = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9827():void { var l:UByte = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9828():void { var l:UByte = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9829():void { var l:UByte = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9830():void { var l:UByte = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9831():void { var l:UByte = (65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9832():void { var l:UByte = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9833():void { var l:UByte = (65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9834():void { var l:UByte = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9835():void { var l:UByte = (65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9836():void { var l:UByte = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9837():void { var l:UByte = (65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9838():void { var l:UByte = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9839():void { var l:UByte = (65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9840():void { var l:UByte = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9841():void { var l:UByte = (65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9842():void { var l:UByte = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9843():void { var l:UByte = (65536)+(-65535); }
	def m9844():void { var l:UByte = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9845():void { var l:UByte = (65536)+(-65536); }
	def m9846():void { var l:UByte = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9847():void { var l:UByte = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9848():void { var l:UByte = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9849():void { var l:UByte = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9850():void { var l:UByte = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9851():void { var l:UByte = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9852():void { var l:UByte = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9853():void { var l:UByte = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9854():void { var l:UByte = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9855():void { var l:UByte = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9856():void { var l:UByte = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9857():void { var l:UByte = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9858():void { var l:UByte = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m9859():void { var l:UByte = (-65536)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m9860():void { var l:UByte = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9861():void { var l:UByte = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m9862():void { var l:UByte = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9863():void { var l:UByte = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9864():void { var l:UByte = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9865():void { var l:UByte = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9866():void { var l:UByte = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9867():void { var l:UByte = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9868():void { var l:UByte = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9869():void { var l:UByte = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9870():void { var l:UByte = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9871():void { var l:UByte = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9872():void { var l:UByte = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9873():void { var l:UByte = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9874():void { var l:UByte = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9875():void { var l:UByte = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9876():void { var l:UByte = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9877():void { var l:UByte = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9878():void { var l:UByte = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9879():void { var l:UByte = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9880():void { var l:UByte = (-65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9881():void { var l:UByte = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9882():void { var l:UByte = (-65536)+(65536); }
	def m9883():void { var l:UByte = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9884():void { var l:UByte = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9885():void { var l:UByte = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9886():void { var l:UByte = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9887():void { var l:UByte = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9888():void { var l:UByte = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9889():void { var l:UByte = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9890():void { var l:UByte = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9891():void { var l:UByte = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9892():void { var l:UByte = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9893():void { var l:UByte = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9894():void { var l:UByte = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9895():void { var l:UByte = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9896():void { var l:UByte = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m9897():void { var l:UByte = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9898():void { var l:UByte = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9899():void { var l:UByte = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m9900():void { var l:UByte = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9901():void { var l:UByte = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9902():void { var l:UByte = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9903():void { var l:UByte = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9904():void { var l:UByte = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9905():void { var l:UByte = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9906():void { var l:UByte = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9907():void { var l:UByte = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9908():void { var l:UByte = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9909():void { var l:UByte = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9910():void { var l:UByte = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9911():void { var l:UByte = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9912():void { var l:UByte = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9913():void { var l:UByte = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9914():void { var l:UByte = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9915():void { var l:UByte = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9916():void { var l:UByte = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9917():void { var l:UByte = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9918():void { var l:UByte = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9919():void { var l:UByte = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9920():void { var l:UByte = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9921():void { var l:UByte = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9922():void { var l:UByte = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9923():void { var l:UByte = (16777216)+(-16777216); }
	def m9924():void { var l:UByte = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9925():void { var l:UByte = (16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9926():void { var l:UByte = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9927():void { var l:UByte = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9928():void { var l:UByte = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9929():void { var l:UByte = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9930():void { var l:UByte = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9931():void { var l:UByte = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9932():void { var l:UByte = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9933():void { var l:UByte = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9934():void { var l:UByte = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m9935():void { var l:UByte = (-16777216)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m9936():void { var l:UByte = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9937():void { var l:UByte = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m9938():void { var l:UByte = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9939():void { var l:UByte = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9940():void { var l:UByte = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9941():void { var l:UByte = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9942():void { var l:UByte = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9943():void { var l:UByte = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9944():void { var l:UByte = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9945():void { var l:UByte = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9946():void { var l:UByte = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9947():void { var l:UByte = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9948():void { var l:UByte = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9949():void { var l:UByte = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9950():void { var l:UByte = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9951():void { var l:UByte = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9952():void { var l:UByte = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9953():void { var l:UByte = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9954():void { var l:UByte = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9955():void { var l:UByte = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9956():void { var l:UByte = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9957():void { var l:UByte = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9958():void { var l:UByte = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9959():void { var l:UByte = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9960():void { var l:UByte = (-16777216)+(16777216); }
	def m9961():void { var l:UByte = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9962():void { var l:UByte = (-16777216)+(16777217); }
	def m9963():void { var l:UByte = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9964():void { var l:UByte = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9965():void { var l:UByte = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9966():void { var l:UByte = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9967():void { var l:UByte = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9968():void { var l:UByte = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9969():void { var l:UByte = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9970():void { var l:UByte = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m9971():void { var l:UByte = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9972():void { var l:UByte = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m9973():void { var l:UByte = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m9974():void { var l:UByte = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m9975():void { var l:UByte = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m9976():void { var l:UByte = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9977():void { var l:UByte = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9978():void { var l:UByte = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9979():void { var l:UByte = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m9980():void { var l:UByte = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9981():void { var l:UByte = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m9982():void { var l:UByte = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9983():void { var l:UByte = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9984():void { var l:UByte = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9985():void { var l:UByte = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9986():void { var l:UByte = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9987():void { var l:UByte = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9988():void { var l:UByte = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9989():void { var l:UByte = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9990():void { var l:UByte = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9991():void { var l:UByte = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9992():void { var l:UByte = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9993():void { var l:UByte = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9994():void { var l:UByte = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9995():void { var l:UByte = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9996():void { var l:UByte = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9997():void { var l:UByte = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9998():void { var l:UByte = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m9999():void { var l:UByte = (16777217)+(-16777216); }
	def m10000():void { var l:UByte = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10001():void { var l:UByte = (16777217)+(-16777217); }
	def m10002():void { var l:UByte = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10003():void { var l:UByte = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10004():void { var l:UByte = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10005():void { var l:UByte = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10006():void { var l:UByte = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10007():void { var l:UByte = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10008():void { var l:UByte = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10009():void { var l:UByte = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10010():void { var l:UByte = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m10011():void { var l:UByte = (-16777217)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m10012():void { var l:UByte = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m10013():void { var l:UByte = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m10014():void { var l:UByte = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10015():void { var l:UByte = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10016():void { var l:UByte = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10017():void { var l:UByte = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10018():void { var l:UByte = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10019():void { var l:UByte = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10020():void { var l:UByte = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10021():void { var l:UByte = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10022():void { var l:UByte = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10023():void { var l:UByte = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10024():void { var l:UByte = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10025():void { var l:UByte = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10026():void { var l:UByte = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10027():void { var l:UByte = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10028():void { var l:UByte = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10029():void { var l:UByte = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10030():void { var l:UByte = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10031():void { var l:UByte = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10032():void { var l:UByte = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10033():void { var l:UByte = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10034():void { var l:UByte = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10035():void { var l:UByte = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10036():void { var l:UByte = (-16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10037():void { var l:UByte = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10038():void { var l:UByte = (-16777217)+(16777217); }
	def m10039():void { var l:UByte = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10040():void { var l:UByte = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10041():void { var l:UByte = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10042():void { var l:UByte = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10043():void { var l:UByte = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10044():void { var l:UByte = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10045():void { var l:UByte = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10046():void { var l:UByte = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10047():void { var l:UByte = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10048():void { var l:UByte = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m10049():void { var l:UByte = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m10050():void { var l:UByte = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m10051():void { var l:UByte = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m10052():void { var l:UByte = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10053():void { var l:UByte = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10054():void { var l:UByte = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10055():void { var l:UByte = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10056():void { var l:UByte = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10057():void { var l:UByte = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10058():void { var l:UByte = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10059():void { var l:UByte = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10060():void { var l:UByte = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10061():void { var l:UByte = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10062():void { var l:UByte = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10063():void { var l:UByte = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10064():void { var l:UByte = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10065():void { var l:UByte = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10066():void { var l:UByte = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10067():void { var l:UByte = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10068():void { var l:UByte = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10069():void { var l:UByte = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10070():void { var l:UByte = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10071():void { var l:UByte = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10072():void { var l:UByte = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10073():void { var l:UByte = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10074():void { var l:UByte = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10075():void { var l:UByte = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10076():void { var l:UByte = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10077():void { var l:UByte = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10078():void { var l:UByte = (2147483647)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10079():void { var l:UByte = (2147483647)+(-2147483647); }
	def m10080():void { var l:UByte = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10081():void { var l:UByte = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10082():void { var l:UByte = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10083():void { var l:UByte = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10084():void { var l:UByte = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m10085():void { var l:UByte = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10086():void { var l:UByte = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m10087():void { var l:UByte = (-2147483647)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m10088():void { var l:UByte = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m10089():void { var l:UByte = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m10090():void { var l:UByte = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10091():void { var l:UByte = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10092():void { var l:UByte = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10093():void { var l:UByte = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m10094():void { var l:UByte = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10095():void { var l:UByte = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m10096():void { var l:UByte = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10097():void { var l:UByte = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10098():void { var l:UByte = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10099():void { var l:UByte = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10100():void { var l:UByte = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10101():void { var l:UByte = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10102():void { var l:UByte = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10103():void { var l:UByte = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10104():void { var l:UByte = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10105():void { var l:UByte = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10106():void { var l:UByte = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10107():void { var l:UByte = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10108():void { var l:UByte = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10109():void { var l:UByte = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10110():void { var l:UByte = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10111():void { var l:UByte = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10112():void { var l:UByte = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10113():void { var l:UByte = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10114():void { var l:UByte = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10115():void { var l:UByte = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m10116():void { var l:UByte = (-2147483647)+(2147483647); }
	def m10117():void { var l:UByte = (-2147483647)+(-2147483647); }
	def m10118():void { var l:UInt = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10119():void { var l:UInt = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10120():void { var l:UInt = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10121():void { var l:UInt = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10122():void { var l:UInt = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10123():void { var l:UInt = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10124():void { var l:UInt = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10125():void { var l:UInt = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10126():void { var l:UInt = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10127():void { var l:UInt = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10128():void { var l:UInt = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10129():void { var l:UInt = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10130():void { var l:UInt = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10131():void { var l:UInt = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10132():void { var l:UInt = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10133():void { var l:UInt = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10134():void { var l:UInt = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10135():void { var l:UInt = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10136():void { var l:UInt = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10137():void { var l:UInt = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10138():void { var l:UInt = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10139():void { var l:UInt = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10140():void { var l:UInt = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10141():void { var l:UInt = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10142():void { var l:UInt = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10143():void { var l:UInt = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10144():void { var l:UInt = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10145():void { var l:UInt = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10146():void { var l:UInt = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10147():void { var l:UInt = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10148():void { var l:UInt = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10149():void { var l:UInt = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10150():void { var l:UInt = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10151():void { var l:UInt = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10152():void { var l:UInt = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10153():void { var l:UInt = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10154():void { var l:UInt = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10155():void { var l:UInt = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10156():void { var l:UInt = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10157():void { var l:UInt = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10158():void { var l:UInt = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10159():void { var l:UInt = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10160():void { var l:UInt = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10161():void { var l:UInt = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10162():void { var l:UInt = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10163():void { var l:UInt = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10164():void { var l:UInt = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10165():void { var l:UInt = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10166():void { var l:UInt = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10167():void { var l:UInt = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10168():void { var l:UInt = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10169():void { var l:UInt = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10170():void { var l:UInt = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10171():void { var l:UInt = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10172():void { var l:UInt = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10173():void { var l:UInt = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10174():void { var l:UInt = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10175():void { var l:UInt = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10176():void { var l:UInt = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10177():void { var l:UInt = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10178():void { var l:UInt = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10179():void { var l:UInt = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10180():void { var l:UInt = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10181():void { var l:UInt = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10182():void { var l:UInt = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10183():void { var l:UInt = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10184():void { var l:UInt = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10185():void { var l:UInt = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10186():void { var l:UInt = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10187():void { var l:UInt = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10188():void { var l:UInt = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10189():void { var l:UInt = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10190():void { var l:UInt = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10191():void { var l:UInt = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10192():void { var l:UInt = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10193():void { var l:UInt = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10194():void { var l:UInt = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10195():void { var l:UInt = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10196():void { var l:UInt = (w2)+(w2); }
	def m10197():void { var l:UInt = (w2)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10198():void { var l:UInt = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10199():void { var l:UInt = (w2)+(w5); }
	def m10200():void { var l:UInt = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m10201():void { var l:UInt = (w2)+(w7); }  
	def m10202():void { var l:UInt = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10203():void { var l:UInt = (w2)+(w9); }  
	def m10204():void { var l:UInt = (w2)+(0); }
	def m10205():void { var l:UInt = (w2)+(-0); }
	def m10206():void { var l:UInt = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10207():void { var l:UInt = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10208():void { var l:UInt = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10209():void { var l:UInt = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10210():void { var l:UInt = (w2)+(127); }
	def m10211():void { var l:UInt = (w2)+(-127); }
	def m10212():void { var l:UInt = (w2)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10213():void { var l:UInt = (w2)+(-128); }
	def m10214():void { var l:UInt = (w2)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10215():void { var l:UInt = (w2)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10216():void { var l:UInt = (w2)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10217():void { var l:UInt = (w2)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10218():void { var l:UInt = (w2)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10219():void { var l:UInt = (w2)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10220():void { var l:UInt = (w2)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10221():void { var l:UInt = (w2)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10222():void { var l:UInt = (w2)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10223():void { var l:UInt = (w2)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10224():void { var l:UInt = (w2)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10225():void { var l:UInt = (w2)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10226():void { var l:UInt = (w2)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10227():void { var l:UInt = (w2)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10228():void { var l:UInt = (w2)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10229():void { var l:UInt = (w2)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10230():void { var l:UInt = (w2)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10231():void { var l:UInt = (w2)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10232():void { var l:UInt = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10233():void { var l:UInt = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10234():void { var l:UInt = (w3)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10235():void { var l:UInt = (w3)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10236():void { var l:UInt = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10237():void { var l:UInt = (w3)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10238():void { var l:UInt = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m10239():void { var l:UInt = (w3)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m10240():void { var l:UInt = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10241():void { var l:UInt = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m10242():void { var l:UInt = (w3)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10243():void { var l:UInt = (w3)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10244():void { var l:UInt = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10245():void { var l:UInt = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10246():void { var l:UInt = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10247():void { var l:UInt = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10248():void { var l:UInt = (w3)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10249():void { var l:UInt = (w3)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10250():void { var l:UInt = (w3)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10251():void { var l:UInt = (w3)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10252():void { var l:UInt = (w3)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10253():void { var l:UInt = (w3)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10254():void { var l:UInt = (w3)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10255():void { var l:UInt = (w3)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10256():void { var l:UInt = (w3)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10257():void { var l:UInt = (w3)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10258():void { var l:UInt = (w3)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10259():void { var l:UInt = (w3)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10260():void { var l:UInt = (w3)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10261():void { var l:UInt = (w3)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10262():void { var l:UInt = (w3)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10263():void { var l:UInt = (w3)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10264():void { var l:UInt = (w3)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10265():void { var l:UInt = (w3)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10266():void { var l:UInt = (w3)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10267():void { var l:UInt = (w3)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10268():void { var l:UInt = (w3)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10269():void { var l:UInt = (w3)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10270():void { var l:UInt = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10271():void { var l:UInt = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10272():void { var l:UInt = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10273():void { var l:UInt = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10274():void { var l:UInt = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10275():void { var l:UInt = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10276():void { var l:UInt = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m10277():void { var l:UInt = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m10278():void { var l:UInt = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m10279():void { var l:UInt = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m10280():void { var l:UInt = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10281():void { var l:UInt = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10282():void { var l:UInt = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10283():void { var l:UInt = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10284():void { var l:UInt = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10285():void { var l:UInt = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10286():void { var l:UInt = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10287():void { var l:UInt = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10288():void { var l:UInt = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10289():void { var l:UInt = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10290():void { var l:UInt = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10291():void { var l:UInt = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10292():void { var l:UInt = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10293():void { var l:UInt = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10294():void { var l:UInt = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10295():void { var l:UInt = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10296():void { var l:UInt = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10297():void { var l:UInt = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10298():void { var l:UInt = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10299():void { var l:UInt = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10300():void { var l:UInt = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10301():void { var l:UInt = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10302():void { var l:UInt = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10303():void { var l:UInt = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10304():void { var l:UInt = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10305():void { var l:UInt = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10306():void { var l:UInt = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10307():void { var l:UInt = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10308():void { var l:UInt = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10309():void { var l:UInt = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10310():void { var l:UInt = (w5)+(w2); }
	def m10311():void { var l:UInt = (w5)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10312():void { var l:UInt = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10313():void { var l:UInt = (w5)+(w5); }
	def m10314():void { var l:UInt = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m10315():void { var l:UInt = (w5)+(w7); }  
	def m10316():void { var l:UInt = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10317():void { var l:UInt = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m10318():void { var l:UInt = (w5)+(0); }
	def m10319():void { var l:UInt = (w5)+(-0); }
	def m10320():void { var l:UInt = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10321():void { var l:UInt = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10322():void { var l:UInt = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10323():void { var l:UInt = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10324():void { var l:UInt = (w5)+(127); }
	def m10325():void { var l:UInt = (w5)+(-127); }
	def m10326():void { var l:UInt = (w5)+(128); }
	def m10327():void { var l:UInt = (w5)+(-128); }
	def m10328():void { var l:UInt = (w5)+(255); }
	def m10329():void { var l:UInt = (w5)+(-255); }
	def m10330():void { var l:UInt = (w5)+(256); }
	def m10331():void { var l:UInt = (w5)+(-256); }
	def m10332():void { var l:UInt = (w5)+(32767); }
	def m10333():void { var l:UInt = (w5)+(-32767); }
	def m10334():void { var l:UInt = (w5)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10335():void { var l:UInt = (w5)+(-32768); }
	def m10336():void { var l:UInt = (w5)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10337():void { var l:UInt = (w5)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10338():void { var l:UInt = (w5)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10339():void { var l:UInt = (w5)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10340():void { var l:UInt = (w5)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10341():void { var l:UInt = (w5)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10342():void { var l:UInt = (w5)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10343():void { var l:UInt = (w5)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10344():void { var l:UInt = (w5)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10345():void { var l:UInt = (w5)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10346():void { var l:UInt = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10347():void { var l:UInt = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10348():void { var l:UInt = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m10349():void { var l:UInt = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m10350():void { var l:UInt = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m10351():void { var l:UInt = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m10352():void { var l:UInt = (w6)+(w6); }
	def m10353():void { var l:UInt = (w6)+(w7); }  
	def m10354():void { var l:UInt = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10355():void { var l:UInt = (w6)+(w9); }  
	def m10356():void { var l:UInt = (w6)+(0); }  
	def m10357():void { var l:UInt = (w6)+(-0); }  
	def m10358():void { var l:UInt = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10359():void { var l:UInt = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10360():void { var l:UInt = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10361():void { var l:UInt = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10362():void { var l:UInt = (w6)+(127); }  
	def m10363():void { var l:UInt = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m10364():void { var l:UInt = (w6)+(128); }  
	def m10365():void { var l:UInt = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m10366():void { var l:UInt = (w6)+(255); }  
	def m10367():void { var l:UInt = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m10368():void { var l:UInt = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m10369():void { var l:UInt = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m10370():void { var l:UInt = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m10371():void { var l:UInt = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m10372():void { var l:UInt = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m10373():void { var l:UInt = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m10374():void { var l:UInt = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m10375():void { var l:UInt = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m10376():void { var l:UInt = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m10377():void { var l:UInt = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m10378():void { var l:UInt = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m10379():void { var l:UInt = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m10380():void { var l:UInt = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m10381():void { var l:UInt = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m10382():void { var l:UInt = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m10383():void { var l:UInt = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m10384():void { var l:UInt = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10385():void { var l:UInt = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10386():void { var l:UInt = (w7)+(w2); }  
	def m10387():void { var l:UInt = (w7)+(w3); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m10388():void { var l:UInt = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m10389():void { var l:UInt = (w7)+(w5); }  
	def m10390():void { var l:UInt = (w7)+(w6); }  
	def m10391():void { var l:UInt = (w7)+(w7); }
	def m10392():void { var l:UInt = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10393():void { var l:UInt = (w7)+(w9); }  
	def m10394():void { var l:UInt = (w7)+(0); }
	def m10395():void { var l:UInt = (w7)+(-0); }
	def m10396():void { var l:UInt = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10397():void { var l:UInt = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10398():void { var l:UInt = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10399():void { var l:UInt = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10400():void { var l:UInt = (w7)+(127); }
	def m10401():void { var l:UInt = (w7)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m10402():void { var l:UInt = (w7)+(128); }
	def m10403():void { var l:UInt = (w7)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m10404():void { var l:UInt = (w7)+(255); }
	def m10405():void { var l:UInt = (w7)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m10406():void { var l:UInt = (w7)+(256); }
	def m10407():void { var l:UInt = (w7)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m10408():void { var l:UInt = (w7)+(32767); }
	def m10409():void { var l:UInt = (w7)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m10410():void { var l:UInt = (w7)+(32768); }
	def m10411():void { var l:UInt = (w7)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m10412():void { var l:UInt = (w7)+(65535); }
	def m10413():void { var l:UInt = (w7)+(-65535); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m10414():void { var l:UInt = (w7)+(65536); }
	def m10415():void { var l:UInt = (w7)+(-65536); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m10416():void { var l:UInt = (w7)+(16777216); }
	def m10417():void { var l:UInt = (w7)+(-16777216); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m10418():void { var l:UInt = (w7)+(16777217); }
	def m10419():void { var l:UInt = (w7)+(-16777217); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m10420():void { var l:UInt = (w7)+(2147483647); }
	def m10421():void { var l:UInt = (w7)+(-2147483647); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m10422():void { var l:UInt = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10423():void { var l:UInt = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10424():void { var l:UInt = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10425():void { var l:UInt = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10426():void { var l:UInt = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m10427():void { var l:UInt = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10428():void { var l:UInt = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10429():void { var l:UInt = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10430():void { var l:UInt = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10431():void { var l:UInt = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10432():void { var l:UInt = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10433():void { var l:UInt = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10434():void { var l:UInt = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10435():void { var l:UInt = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10436():void { var l:UInt = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10437():void { var l:UInt = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10438():void { var l:UInt = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10439():void { var l:UInt = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10440():void { var l:UInt = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10441():void { var l:UInt = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10442():void { var l:UInt = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10443():void { var l:UInt = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10444():void { var l:UInt = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10445():void { var l:UInt = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10446():void { var l:UInt = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10447():void { var l:UInt = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10448():void { var l:UInt = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10449():void { var l:UInt = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10450():void { var l:UInt = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10451():void { var l:UInt = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10452():void { var l:UInt = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10453():void { var l:UInt = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10454():void { var l:UInt = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10455():void { var l:UInt = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10456():void { var l:UInt = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10457():void { var l:UInt = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10458():void { var l:UInt = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10459():void { var l:UInt = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10460():void { var l:UInt = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10461():void { var l:UInt = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10462():void { var l:UInt = (w9)+(w2); }  
	def m10463():void { var l:UInt = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m10464():void { var l:UInt = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m10465():void { var l:UInt = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m10466():void { var l:UInt = (w9)+(w6); }  
	def m10467():void { var l:UInt = (w9)+(w7); }  
	def m10468():void { var l:UInt = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10469():void { var l:UInt = (w9)+(w9); }
	def m10470():void { var l:UInt = (w9)+(0); }  
	def m10471():void { var l:UInt = (w9)+(-0); }  
	def m10472():void { var l:UInt = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10473():void { var l:UInt = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10474():void { var l:UInt = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10475():void { var l:UInt = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10476():void { var l:UInt = (w9)+(127); }  
	def m10477():void { var l:UInt = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m10478():void { var l:UInt = (w9)+(128); }  
	def m10479():void { var l:UInt = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m10480():void { var l:UInt = (w9)+(255); }  
	def m10481():void { var l:UInt = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m10482():void { var l:UInt = (w9)+(256); }  
	def m10483():void { var l:UInt = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m10484():void { var l:UInt = (w9)+(32767); }  
	def m10485():void { var l:UInt = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m10486():void { var l:UInt = (w9)+(32768); }  
	def m10487():void { var l:UInt = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m10488():void { var l:UInt = (w9)+(65535); }  
	def m10489():void { var l:UInt = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m10490():void { var l:UInt = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m10491():void { var l:UInt = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m10492():void { var l:UInt = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m10493():void { var l:UInt = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m10494():void { var l:UInt = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m10495():void { var l:UInt = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m10496():void { var l:UInt = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m10497():void { var l:UInt = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m10498():void { var l:UInt = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10499():void { var l:UInt = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10500():void { var l:UInt = (0)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10501():void { var l:UInt = (0)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10502():void { var l:UInt = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10503():void { var l:UInt = (0)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10504():void { var l:UInt = (0)+(w6); }  
	def m10505():void { var l:UInt = (0)+(w7); }
	def m10506():void { var l:UInt = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10507():void { var l:UInt = (0)+(w9); }  
	def m10508():void { var l:UInt = (0)+(0); }
	def m10509():void { var l:UInt = (0)+(-0); }
	def m10510():void { var l:UInt = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10511():void { var l:UInt = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10512():void { var l:UInt = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10513():void { var l:UInt = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10514():void { var l:UInt = (0)+(127); }
	def m10515():void { var l:UInt = (0)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10516():void { var l:UInt = (0)+(128); }
	def m10517():void { var l:UInt = (0)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10518():void { var l:UInt = (0)+(255); }
	def m10519():void { var l:UInt = (0)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10520():void { var l:UInt = (0)+(256); }
	def m10521():void { var l:UInt = (0)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10522():void { var l:UInt = (0)+(32767); }
	def m10523():void { var l:UInt = (0)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10524():void { var l:UInt = (0)+(32768); }
	def m10525():void { var l:UInt = (0)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10526():void { var l:UInt = (0)+(65535); }
	def m10527():void { var l:UInt = (0)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10528():void { var l:UInt = (0)+(65536); }
	def m10529():void { var l:UInt = (0)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10530():void { var l:UInt = (0)+(16777216); }
	def m10531():void { var l:UInt = (0)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10532():void { var l:UInt = (0)+(16777217); }
	def m10533():void { var l:UInt = (0)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10534():void { var l:UInt = (0)+(2147483647); }
	def m10535():void { var l:UInt = (0)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10536():void { var l:UInt = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10537():void { var l:UInt = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10538():void { var l:UInt = (-0)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10539():void { var l:UInt = (-0)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10540():void { var l:UInt = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10541():void { var l:UInt = (-0)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10542():void { var l:UInt = (-0)+(w6); }  
	def m10543():void { var l:UInt = (-0)+(w7); }
	def m10544():void { var l:UInt = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10545():void { var l:UInt = (-0)+(w9); }  
	def m10546():void { var l:UInt = (-0)+(0); }
	def m10547():void { var l:UInt = (-0)+(-0); }
	def m10548():void { var l:UInt = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10549():void { var l:UInt = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10550():void { var l:UInt = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10551():void { var l:UInt = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10552():void { var l:UInt = (-0)+(127); }
	def m10553():void { var l:UInt = (-0)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10554():void { var l:UInt = (-0)+(128); }
	def m10555():void { var l:UInt = (-0)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10556():void { var l:UInt = (-0)+(255); }
	def m10557():void { var l:UInt = (-0)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10558():void { var l:UInt = (-0)+(256); }
	def m10559():void { var l:UInt = (-0)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10560():void { var l:UInt = (-0)+(32767); }
	def m10561():void { var l:UInt = (-0)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10562():void { var l:UInt = (-0)+(32768); }
	def m10563():void { var l:UInt = (-0)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10564():void { var l:UInt = (-0)+(65535); }
	def m10565():void { var l:UInt = (-0)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10566():void { var l:UInt = (-0)+(65536); }
	def m10567():void { var l:UInt = (-0)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10568():void { var l:UInt = (-0)+(16777216); }
	def m10569():void { var l:UInt = (-0)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10570():void { var l:UInt = (-0)+(16777217); }
	def m10571():void { var l:UInt = (-0)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10572():void { var l:UInt = (-0)+(2147483647); }
	def m10573():void { var l:UInt = (-0)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10574():void { var l:UInt = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10575():void { var l:UInt = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10576():void { var l:UInt = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10577():void { var l:UInt = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10578():void { var l:UInt = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10579():void { var l:UInt = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10580():void { var l:UInt = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10581():void { var l:UInt = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10582():void { var l:UInt = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10583():void { var l:UInt = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10584():void { var l:UInt = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10585():void { var l:UInt = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10586():void { var l:UInt = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10587():void { var l:UInt = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10588():void { var l:UInt = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10589():void { var l:UInt = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10590():void { var l:UInt = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10591():void { var l:UInt = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10592():void { var l:UInt = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10593():void { var l:UInt = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10594():void { var l:UInt = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10595():void { var l:UInt = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10596():void { var l:UInt = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10597():void { var l:UInt = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10598():void { var l:UInt = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10599():void { var l:UInt = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10600():void { var l:UInt = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10601():void { var l:UInt = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10602():void { var l:UInt = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10603():void { var l:UInt = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10604():void { var l:UInt = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10605():void { var l:UInt = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10606():void { var l:UInt = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10607():void { var l:UInt = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10608():void { var l:UInt = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10609():void { var l:UInt = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10610():void { var l:UInt = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10611():void { var l:UInt = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10612():void { var l:UInt = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10613():void { var l:UInt = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10614():void { var l:UInt = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10615():void { var l:UInt = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10616():void { var l:UInt = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10617():void { var l:UInt = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10618():void { var l:UInt = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10619():void { var l:UInt = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10620():void { var l:UInt = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10621():void { var l:UInt = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10622():void { var l:UInt = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10623():void { var l:UInt = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10624():void { var l:UInt = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10625():void { var l:UInt = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10626():void { var l:UInt = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10627():void { var l:UInt = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10628():void { var l:UInt = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10629():void { var l:UInt = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10630():void { var l:UInt = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10631():void { var l:UInt = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10632():void { var l:UInt = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10633():void { var l:UInt = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10634():void { var l:UInt = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10635():void { var l:UInt = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10636():void { var l:UInt = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10637():void { var l:UInt = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10638():void { var l:UInt = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10639():void { var l:UInt = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10640():void { var l:UInt = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10641():void { var l:UInt = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10642():void { var l:UInt = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10643():void { var l:UInt = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10644():void { var l:UInt = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10645():void { var l:UInt = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10646():void { var l:UInt = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10647():void { var l:UInt = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10648():void { var l:UInt = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10649():void { var l:UInt = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10650():void { var l:UInt = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10651():void { var l:UInt = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10652():void { var l:UInt = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10653():void { var l:UInt = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10654():void { var l:UInt = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10655():void { var l:UInt = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10656():void { var l:UInt = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10657():void { var l:UInt = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10658():void { var l:UInt = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10659():void { var l:UInt = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10660():void { var l:UInt = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10661():void { var l:UInt = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10662():void { var l:UInt = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10663():void { var l:UInt = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10664():void { var l:UInt = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10665():void { var l:UInt = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10666():void { var l:UInt = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10667():void { var l:UInt = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10668():void { var l:UInt = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10669():void { var l:UInt = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10670():void { var l:UInt = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10671():void { var l:UInt = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10672():void { var l:UInt = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10673():void { var l:UInt = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10674():void { var l:UInt = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10675():void { var l:UInt = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10676():void { var l:UInt = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10677():void { var l:UInt = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10678():void { var l:UInt = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10679():void { var l:UInt = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10680():void { var l:UInt = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10681():void { var l:UInt = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10682():void { var l:UInt = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10683():void { var l:UInt = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10684():void { var l:UInt = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10685():void { var l:UInt = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10686():void { var l:UInt = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10687():void { var l:UInt = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10688():void { var l:UInt = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10689():void { var l:UInt = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10690():void { var l:UInt = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10691():void { var l:UInt = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10692():void { var l:UInt = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10693():void { var l:UInt = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10694():void { var l:UInt = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10695():void { var l:UInt = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10696():void { var l:UInt = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10697():void { var l:UInt = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10698():void { var l:UInt = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10699():void { var l:UInt = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10700():void { var l:UInt = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10701():void { var l:UInt = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10702():void { var l:UInt = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10703():void { var l:UInt = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10704():void { var l:UInt = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10705():void { var l:UInt = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10706():void { var l:UInt = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10707():void { var l:UInt = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10708():void { var l:UInt = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10709():void { var l:UInt = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10710():void { var l:UInt = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10711():void { var l:UInt = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10712():void { var l:UInt = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10713():void { var l:UInt = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10714():void { var l:UInt = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10715():void { var l:UInt = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10716():void { var l:UInt = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10717():void { var l:UInt = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10718():void { var l:UInt = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10719():void { var l:UInt = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10720():void { var l:UInt = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10721():void { var l:UInt = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10722():void { var l:UInt = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10723():void { var l:UInt = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10724():void { var l:UInt = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10725():void { var l:UInt = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10726():void { var l:UInt = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10727():void { var l:UInt = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10728():void { var l:UInt = (127)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10729():void { var l:UInt = (127)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10730():void { var l:UInt = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10731():void { var l:UInt = (127)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10732():void { var l:UInt = (127)+(w6); }  
	def m10733():void { var l:UInt = (127)+(w7); }
	def m10734():void { var l:UInt = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10735():void { var l:UInt = (127)+(w9); }  
	def m10736():void { var l:UInt = (127)+(0); }
	def m10737():void { var l:UInt = (127)+(-0); }
	def m10738():void { var l:UInt = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10739():void { var l:UInt = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10740():void { var l:UInt = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10741():void { var l:UInt = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10742():void { var l:UInt = (127)+(127); }
	def m10743():void { var l:UInt = (127)+(-127); }
	def m10744():void { var l:UInt = (127)+(128); }
	def m10745():void { var l:UInt = (127)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10746():void { var l:UInt = (127)+(255); }
	def m10747():void { var l:UInt = (127)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10748():void { var l:UInt = (127)+(256); }
	def m10749():void { var l:UInt = (127)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10750():void { var l:UInt = (127)+(32767); }
	def m10751():void { var l:UInt = (127)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10752():void { var l:UInt = (127)+(32768); }
	def m10753():void { var l:UInt = (127)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10754():void { var l:UInt = (127)+(65535); }
	def m10755():void { var l:UInt = (127)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10756():void { var l:UInt = (127)+(65536); }
	def m10757():void { var l:UInt = (127)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10758():void { var l:UInt = (127)+(16777216); }
	def m10759():void { var l:UInt = (127)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10760():void { var l:UInt = (127)+(16777217); }
	def m10761():void { var l:UInt = (127)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10762():void { var l:UInt = (127)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10763():void { var l:UInt = (127)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10764():void { var l:UInt = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10765():void { var l:UInt = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10766():void { var l:UInt = (-127)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10767():void { var l:UInt = (-127)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10768():void { var l:UInt = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10769():void { var l:UInt = (-127)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10770():void { var l:UInt = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m10771():void { var l:UInt = (-127)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m10772():void { var l:UInt = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10773():void { var l:UInt = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m10774():void { var l:UInt = (-127)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10775():void { var l:UInt = (-127)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10776():void { var l:UInt = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10777():void { var l:UInt = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10778():void { var l:UInt = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10779():void { var l:UInt = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10780():void { var l:UInt = (-127)+(127); }
	def m10781():void { var l:UInt = (-127)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10782():void { var l:UInt = (-127)+(128); }
	def m10783():void { var l:UInt = (-127)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10784():void { var l:UInt = (-127)+(255); }
	def m10785():void { var l:UInt = (-127)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10786():void { var l:UInt = (-127)+(256); }
	def m10787():void { var l:UInt = (-127)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10788():void { var l:UInt = (-127)+(32767); }
	def m10789():void { var l:UInt = (-127)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10790():void { var l:UInt = (-127)+(32768); }
	def m10791():void { var l:UInt = (-127)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10792():void { var l:UInt = (-127)+(65535); }
	def m10793():void { var l:UInt = (-127)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10794():void { var l:UInt = (-127)+(65536); }
	def m10795():void { var l:UInt = (-127)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10796():void { var l:UInt = (-127)+(16777216); }
	def m10797():void { var l:UInt = (-127)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10798():void { var l:UInt = (-127)+(16777217); }
	def m10799():void { var l:UInt = (-127)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10800():void { var l:UInt = (-127)+(2147483647); }
	def m10801():void { var l:UInt = (-127)+(-2147483647); }
	def m10802():void { var l:UInt = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10803():void { var l:UInt = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10804():void { var l:UInt = (128)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10805():void { var l:UInt = (128)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10806():void { var l:UInt = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10807():void { var l:UInt = (128)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10808():void { var l:UInt = (128)+(w6); }  
	def m10809():void { var l:UInt = (128)+(w7); }
	def m10810():void { var l:UInt = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10811():void { var l:UInt = (128)+(w9); }  
	def m10812():void { var l:UInt = (128)+(0); }
	def m10813():void { var l:UInt = (128)+(-0); }
	def m10814():void { var l:UInt = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10815():void { var l:UInt = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10816():void { var l:UInt = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10817():void { var l:UInt = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10818():void { var l:UInt = (128)+(127); }
	def m10819():void { var l:UInt = (128)+(-127); }
	def m10820():void { var l:UInt = (128)+(128); }
	def m10821():void { var l:UInt = (128)+(-128); }
	def m10822():void { var l:UInt = (128)+(255); }
	def m10823():void { var l:UInt = (128)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10824():void { var l:UInt = (128)+(256); }
	def m10825():void { var l:UInt = (128)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10826():void { var l:UInt = (128)+(32767); }
	def m10827():void { var l:UInt = (128)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10828():void { var l:UInt = (128)+(32768); }
	def m10829():void { var l:UInt = (128)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10830():void { var l:UInt = (128)+(65535); }
	def m10831():void { var l:UInt = (128)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10832():void { var l:UInt = (128)+(65536); }
	def m10833():void { var l:UInt = (128)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10834():void { var l:UInt = (128)+(16777216); }
	def m10835():void { var l:UInt = (128)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10836():void { var l:UInt = (128)+(16777217); }
	def m10837():void { var l:UInt = (128)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10838():void { var l:UInt = (128)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10839():void { var l:UInt = (128)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10840():void { var l:UInt = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10841():void { var l:UInt = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10842():void { var l:UInt = (-128)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10843():void { var l:UInt = (-128)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10844():void { var l:UInt = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10845():void { var l:UInt = (-128)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10846():void { var l:UInt = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m10847():void { var l:UInt = (-128)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m10848():void { var l:UInt = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10849():void { var l:UInt = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m10850():void { var l:UInt = (-128)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10851():void { var l:UInt = (-128)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10852():void { var l:UInt = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10853():void { var l:UInt = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10854():void { var l:UInt = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10855():void { var l:UInt = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10856():void { var l:UInt = (-128)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10857():void { var l:UInt = (-128)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10858():void { var l:UInt = (-128)+(128); }
	def m10859():void { var l:UInt = (-128)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10860():void { var l:UInt = (-128)+(255); }
	def m10861():void { var l:UInt = (-128)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10862():void { var l:UInt = (-128)+(256); }
	def m10863():void { var l:UInt = (-128)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10864():void { var l:UInt = (-128)+(32767); }
	def m10865():void { var l:UInt = (-128)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10866():void { var l:UInt = (-128)+(32768); }
	def m10867():void { var l:UInt = (-128)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10868():void { var l:UInt = (-128)+(65535); }
	def m10869():void { var l:UInt = (-128)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10870():void { var l:UInt = (-128)+(65536); }
	def m10871():void { var l:UInt = (-128)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10872():void { var l:UInt = (-128)+(16777216); }
	def m10873():void { var l:UInt = (-128)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10874():void { var l:UInt = (-128)+(16777217); }
	def m10875():void { var l:UInt = (-128)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10876():void { var l:UInt = (-128)+(2147483647); }
	def m10877():void { var l:UInt = (-128)+(-2147483647); }
	def m10878():void { var l:UInt = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10879():void { var l:UInt = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10880():void { var l:UInt = (255)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10881():void { var l:UInt = (255)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10882():void { var l:UInt = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10883():void { var l:UInt = (255)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10884():void { var l:UInt = (255)+(w6); }  
	def m10885():void { var l:UInt = (255)+(w7); }
	def m10886():void { var l:UInt = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10887():void { var l:UInt = (255)+(w9); }  
	def m10888():void { var l:UInt = (255)+(0); }
	def m10889():void { var l:UInt = (255)+(-0); }
	def m10890():void { var l:UInt = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10891():void { var l:UInt = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10892():void { var l:UInt = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10893():void { var l:UInt = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10894():void { var l:UInt = (255)+(127); }
	def m10895():void { var l:UInt = (255)+(-127); }
	def m10896():void { var l:UInt = (255)+(128); }
	def m10897():void { var l:UInt = (255)+(-128); }
	def m10898():void { var l:UInt = (255)+(255); }
	def m10899():void { var l:UInt = (255)+(-255); }
	def m10900():void { var l:UInt = (255)+(256); }
	def m10901():void { var l:UInt = (255)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10902():void { var l:UInt = (255)+(32767); }
	def m10903():void { var l:UInt = (255)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10904():void { var l:UInt = (255)+(32768); }
	def m10905():void { var l:UInt = (255)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10906():void { var l:UInt = (255)+(65535); }
	def m10907():void { var l:UInt = (255)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10908():void { var l:UInt = (255)+(65536); }
	def m10909():void { var l:UInt = (255)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10910():void { var l:UInt = (255)+(16777216); }
	def m10911():void { var l:UInt = (255)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10912():void { var l:UInt = (255)+(16777217); }
	def m10913():void { var l:UInt = (255)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10914():void { var l:UInt = (255)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10915():void { var l:UInt = (255)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10916():void { var l:UInt = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10917():void { var l:UInt = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10918():void { var l:UInt = (-255)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10919():void { var l:UInt = (-255)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10920():void { var l:UInt = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10921():void { var l:UInt = (-255)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10922():void { var l:UInt = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m10923():void { var l:UInt = (-255)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m10924():void { var l:UInt = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10925():void { var l:UInt = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m10926():void { var l:UInt = (-255)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10927():void { var l:UInt = (-255)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10928():void { var l:UInt = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10929():void { var l:UInt = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10930():void { var l:UInt = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10931():void { var l:UInt = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10932():void { var l:UInt = (-255)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10933():void { var l:UInt = (-255)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10934():void { var l:UInt = (-255)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10935():void { var l:UInt = (-255)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10936():void { var l:UInt = (-255)+(255); }
	def m10937():void { var l:UInt = (-255)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10938():void { var l:UInt = (-255)+(256); }
	def m10939():void { var l:UInt = (-255)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10940():void { var l:UInt = (-255)+(32767); }
	def m10941():void { var l:UInt = (-255)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10942():void { var l:UInt = (-255)+(32768); }
	def m10943():void { var l:UInt = (-255)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10944():void { var l:UInt = (-255)+(65535); }
	def m10945():void { var l:UInt = (-255)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10946():void { var l:UInt = (-255)+(65536); }
	def m10947():void { var l:UInt = (-255)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10948():void { var l:UInt = (-255)+(16777216); }
	def m10949():void { var l:UInt = (-255)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10950():void { var l:UInt = (-255)+(16777217); }
	def m10951():void { var l:UInt = (-255)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10952():void { var l:UInt = (-255)+(2147483647); }
	def m10953():void { var l:UInt = (-255)+(-2147483647); }
	def m10954():void { var l:UInt = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10955():void { var l:UInt = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10956():void { var l:UInt = (256)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10957():void { var l:UInt = (256)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10958():void { var l:UInt = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10959():void { var l:UInt = (256)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10960():void { var l:UInt = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m10961():void { var l:UInt = (256)+(w7); }
	def m10962():void { var l:UInt = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m10963():void { var l:UInt = (256)+(w9); }  
	def m10964():void { var l:UInt = (256)+(0); }
	def m10965():void { var l:UInt = (256)+(-0); }
	def m10966():void { var l:UInt = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10967():void { var l:UInt = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10968():void { var l:UInt = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10969():void { var l:UInt = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10970():void { var l:UInt = (256)+(127); }
	def m10971():void { var l:UInt = (256)+(-127); }
	def m10972():void { var l:UInt = (256)+(128); }
	def m10973():void { var l:UInt = (256)+(-128); }
	def m10974():void { var l:UInt = (256)+(255); }
	def m10975():void { var l:UInt = (256)+(-255); }
	def m10976():void { var l:UInt = (256)+(256); }
	def m10977():void { var l:UInt = (256)+(-256); }
	def m10978():void { var l:UInt = (256)+(32767); }
	def m10979():void { var l:UInt = (256)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10980():void { var l:UInt = (256)+(32768); }
	def m10981():void { var l:UInt = (256)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10982():void { var l:UInt = (256)+(65535); }
	def m10983():void { var l:UInt = (256)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10984():void { var l:UInt = (256)+(65536); }
	def m10985():void { var l:UInt = (256)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10986():void { var l:UInt = (256)+(16777216); }
	def m10987():void { var l:UInt = (256)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10988():void { var l:UInt = (256)+(16777217); }
	def m10989():void { var l:UInt = (256)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10990():void { var l:UInt = (256)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10991():void { var l:UInt = (256)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10992():void { var l:UInt = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m10993():void { var l:UInt = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m10994():void { var l:UInt = (-256)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10995():void { var l:UInt = (-256)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10996():void { var l:UInt = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m10997():void { var l:UInt = (-256)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m10998():void { var l:UInt = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m10999():void { var l:UInt = (-256)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m11000():void { var l:UInt = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11001():void { var l:UInt = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m11002():void { var l:UInt = (-256)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11003():void { var l:UInt = (-256)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11004():void { var l:UInt = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11005():void { var l:UInt = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11006():void { var l:UInt = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11007():void { var l:UInt = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11008():void { var l:UInt = (-256)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11009():void { var l:UInt = (-256)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11010():void { var l:UInt = (-256)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11011():void { var l:UInt = (-256)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11012():void { var l:UInt = (-256)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11013():void { var l:UInt = (-256)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11014():void { var l:UInt = (-256)+(256); }
	def m11015():void { var l:UInt = (-256)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11016():void { var l:UInt = (-256)+(32767); }
	def m11017():void { var l:UInt = (-256)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11018():void { var l:UInt = (-256)+(32768); }
	def m11019():void { var l:UInt = (-256)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11020():void { var l:UInt = (-256)+(65535); }
	def m11021():void { var l:UInt = (-256)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11022():void { var l:UInt = (-256)+(65536); }
	def m11023():void { var l:UInt = (-256)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11024():void { var l:UInt = (-256)+(16777216); }
	def m11025():void { var l:UInt = (-256)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11026():void { var l:UInt = (-256)+(16777217); }
	def m11027():void { var l:UInt = (-256)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11028():void { var l:UInt = (-256)+(2147483647); }
	def m11029():void { var l:UInt = (-256)+(-2147483647); }
	def m11030():void { var l:UInt = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11031():void { var l:UInt = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11032():void { var l:UInt = (32767)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11033():void { var l:UInt = (32767)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11034():void { var l:UInt = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11035():void { var l:UInt = (32767)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11036():void { var l:UInt = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m11037():void { var l:UInt = (32767)+(w7); }
	def m11038():void { var l:UInt = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11039():void { var l:UInt = (32767)+(w9); }  
	def m11040():void { var l:UInt = (32767)+(0); }
	def m11041():void { var l:UInt = (32767)+(-0); }
	def m11042():void { var l:UInt = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11043():void { var l:UInt = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11044():void { var l:UInt = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11045():void { var l:UInt = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11046():void { var l:UInt = (32767)+(127); }
	def m11047():void { var l:UInt = (32767)+(-127); }
	def m11048():void { var l:UInt = (32767)+(128); }
	def m11049():void { var l:UInt = (32767)+(-128); }
	def m11050():void { var l:UInt = (32767)+(255); }
	def m11051():void { var l:UInt = (32767)+(-255); }
	def m11052():void { var l:UInt = (32767)+(256); }
	def m11053():void { var l:UInt = (32767)+(-256); }
	def m11054():void { var l:UInt = (32767)+(32767); }
	def m11055():void { var l:UInt = (32767)+(-32767); }
	def m11056():void { var l:UInt = (32767)+(32768); }
	def m11057():void { var l:UInt = (32767)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11058():void { var l:UInt = (32767)+(65535); }
	def m11059():void { var l:UInt = (32767)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11060():void { var l:UInt = (32767)+(65536); }
	def m11061():void { var l:UInt = (32767)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11062():void { var l:UInt = (32767)+(16777216); }
	def m11063():void { var l:UInt = (32767)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11064():void { var l:UInt = (32767)+(16777217); }
	def m11065():void { var l:UInt = (32767)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11066():void { var l:UInt = (32767)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11067():void { var l:UInt = (32767)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11068():void { var l:UInt = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11069():void { var l:UInt = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11070():void { var l:UInt = (-32767)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11071():void { var l:UInt = (-32767)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11072():void { var l:UInt = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11073():void { var l:UInt = (-32767)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11074():void { var l:UInt = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m11075():void { var l:UInt = (-32767)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m11076():void { var l:UInt = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11077():void { var l:UInt = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m11078():void { var l:UInt = (-32767)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11079():void { var l:UInt = (-32767)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11080():void { var l:UInt = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11081():void { var l:UInt = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11082():void { var l:UInt = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11083():void { var l:UInt = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11084():void { var l:UInt = (-32767)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11085():void { var l:UInt = (-32767)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11086():void { var l:UInt = (-32767)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11087():void { var l:UInt = (-32767)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11088():void { var l:UInt = (-32767)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11089():void { var l:UInt = (-32767)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11090():void { var l:UInt = (-32767)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11091():void { var l:UInt = (-32767)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11092():void { var l:UInt = (-32767)+(32767); }
	def m11093():void { var l:UInt = (-32767)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11094():void { var l:UInt = (-32767)+(32768); }
	def m11095():void { var l:UInt = (-32767)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11096():void { var l:UInt = (-32767)+(65535); }
	def m11097():void { var l:UInt = (-32767)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11098():void { var l:UInt = (-32767)+(65536); }
	def m11099():void { var l:UInt = (-32767)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11100():void { var l:UInt = (-32767)+(16777216); }
	def m11101():void { var l:UInt = (-32767)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11102():void { var l:UInt = (-32767)+(16777217); }
	def m11103():void { var l:UInt = (-32767)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11104():void { var l:UInt = (-32767)+(2147483647); }
	def m11105():void { var l:UInt = (-32767)+(-2147483647); }
	def m11106():void { var l:UInt = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11107():void { var l:UInt = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11108():void { var l:UInt = (32768)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11109():void { var l:UInt = (32768)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11110():void { var l:UInt = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11111():void { var l:UInt = (32768)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11112():void { var l:UInt = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m11113():void { var l:UInt = (32768)+(w7); }
	def m11114():void { var l:UInt = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11115():void { var l:UInt = (32768)+(w9); }  
	def m11116():void { var l:UInt = (32768)+(0); }
	def m11117():void { var l:UInt = (32768)+(-0); }
	def m11118():void { var l:UInt = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11119():void { var l:UInt = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11120():void { var l:UInt = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11121():void { var l:UInt = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11122():void { var l:UInt = (32768)+(127); }
	def m11123():void { var l:UInt = (32768)+(-127); }
	def m11124():void { var l:UInt = (32768)+(128); }
	def m11125():void { var l:UInt = (32768)+(-128); }
	def m11126():void { var l:UInt = (32768)+(255); }
	def m11127():void { var l:UInt = (32768)+(-255); }
	def m11128():void { var l:UInt = (32768)+(256); }
	def m11129():void { var l:UInt = (32768)+(-256); }
	def m11130():void { var l:UInt = (32768)+(32767); }
	def m11131():void { var l:UInt = (32768)+(-32767); }
	def m11132():void { var l:UInt = (32768)+(32768); }
	def m11133():void { var l:UInt = (32768)+(-32768); }
	def m11134():void { var l:UInt = (32768)+(65535); }
	def m11135():void { var l:UInt = (32768)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11136():void { var l:UInt = (32768)+(65536); }
	def m11137():void { var l:UInt = (32768)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11138():void { var l:UInt = (32768)+(16777216); }
	def m11139():void { var l:UInt = (32768)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11140():void { var l:UInt = (32768)+(16777217); }
	def m11141():void { var l:UInt = (32768)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11142():void { var l:UInt = (32768)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11143():void { var l:UInt = (32768)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11144():void { var l:UInt = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11145():void { var l:UInt = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11146():void { var l:UInt = (-32768)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11147():void { var l:UInt = (-32768)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11148():void { var l:UInt = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11149():void { var l:UInt = (-32768)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11150():void { var l:UInt = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m11151():void { var l:UInt = (-32768)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m11152():void { var l:UInt = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11153():void { var l:UInt = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m11154():void { var l:UInt = (-32768)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11155():void { var l:UInt = (-32768)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11156():void { var l:UInt = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11157():void { var l:UInt = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11158():void { var l:UInt = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11159():void { var l:UInt = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11160():void { var l:UInt = (-32768)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11161():void { var l:UInt = (-32768)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11162():void { var l:UInt = (-32768)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11163():void { var l:UInt = (-32768)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11164():void { var l:UInt = (-32768)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11165():void { var l:UInt = (-32768)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11166():void { var l:UInt = (-32768)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11167():void { var l:UInt = (-32768)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11168():void { var l:UInt = (-32768)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11169():void { var l:UInt = (-32768)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11170():void { var l:UInt = (-32768)+(32768); }
	def m11171():void { var l:UInt = (-32768)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11172():void { var l:UInt = (-32768)+(65535); }
	def m11173():void { var l:UInt = (-32768)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11174():void { var l:UInt = (-32768)+(65536); }
	def m11175():void { var l:UInt = (-32768)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11176():void { var l:UInt = (-32768)+(16777216); }
	def m11177():void { var l:UInt = (-32768)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11178():void { var l:UInt = (-32768)+(16777217); }
	def m11179():void { var l:UInt = (-32768)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11180():void { var l:UInt = (-32768)+(2147483647); }
	def m11181():void { var l:UInt = (-32768)+(-2147483647); }
	def m11182():void { var l:UInt = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11183():void { var l:UInt = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11184():void { var l:UInt = (65535)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11185():void { var l:UInt = (65535)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11186():void { var l:UInt = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11187():void { var l:UInt = (65535)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11188():void { var l:UInt = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m11189():void { var l:UInt = (65535)+(w7); }
	def m11190():void { var l:UInt = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11191():void { var l:UInt = (65535)+(w9); }  
	def m11192():void { var l:UInt = (65535)+(0); }
	def m11193():void { var l:UInt = (65535)+(-0); }
	def m11194():void { var l:UInt = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11195():void { var l:UInt = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11196():void { var l:UInt = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11197():void { var l:UInt = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11198():void { var l:UInt = (65535)+(127); }
	def m11199():void { var l:UInt = (65535)+(-127); }
	def m11200():void { var l:UInt = (65535)+(128); }
	def m11201():void { var l:UInt = (65535)+(-128); }
	def m11202():void { var l:UInt = (65535)+(255); }
	def m11203():void { var l:UInt = (65535)+(-255); }
	def m11204():void { var l:UInt = (65535)+(256); }
	def m11205():void { var l:UInt = (65535)+(-256); }
	def m11206():void { var l:UInt = (65535)+(32767); }
	def m11207():void { var l:UInt = (65535)+(-32767); }
	def m11208():void { var l:UInt = (65535)+(32768); }
	def m11209():void { var l:UInt = (65535)+(-32768); }
	def m11210():void { var l:UInt = (65535)+(65535); }
	def m11211():void { var l:UInt = (65535)+(-65535); }
	def m11212():void { var l:UInt = (65535)+(65536); }
	def m11213():void { var l:UInt = (65535)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11214():void { var l:UInt = (65535)+(16777216); }
	def m11215():void { var l:UInt = (65535)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11216():void { var l:UInt = (65535)+(16777217); }
	def m11217():void { var l:UInt = (65535)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11218():void { var l:UInt = (65535)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11219():void { var l:UInt = (65535)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11220():void { var l:UInt = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11221():void { var l:UInt = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11222():void { var l:UInt = (-65535)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11223():void { var l:UInt = (-65535)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11224():void { var l:UInt = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11225():void { var l:UInt = (-65535)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11226():void { var l:UInt = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m11227():void { var l:UInt = (-65535)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m11228():void { var l:UInt = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11229():void { var l:UInt = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m11230():void { var l:UInt = (-65535)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11231():void { var l:UInt = (-65535)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11232():void { var l:UInt = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11233():void { var l:UInt = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11234():void { var l:UInt = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11235():void { var l:UInt = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11236():void { var l:UInt = (-65535)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11237():void { var l:UInt = (-65535)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11238():void { var l:UInt = (-65535)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11239():void { var l:UInt = (-65535)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11240():void { var l:UInt = (-65535)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11241():void { var l:UInt = (-65535)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11242():void { var l:UInt = (-65535)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11243():void { var l:UInt = (-65535)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11244():void { var l:UInt = (-65535)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11245():void { var l:UInt = (-65535)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11246():void { var l:UInt = (-65535)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11247():void { var l:UInt = (-65535)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11248():void { var l:UInt = (-65535)+(65535); }
	def m11249():void { var l:UInt = (-65535)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11250():void { var l:UInt = (-65535)+(65536); }
	def m11251():void { var l:UInt = (-65535)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11252():void { var l:UInt = (-65535)+(16777216); }
	def m11253():void { var l:UInt = (-65535)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11254():void { var l:UInt = (-65535)+(16777217); }
	def m11255():void { var l:UInt = (-65535)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11256():void { var l:UInt = (-65535)+(2147483647); }
	def m11257():void { var l:UInt = (-65535)+(-2147483647); }
	def m11258():void { var l:UInt = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11259():void { var l:UInt = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11260():void { var l:UInt = (65536)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11261():void { var l:UInt = (65536)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11262():void { var l:UInt = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11263():void { var l:UInt = (65536)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11264():void { var l:UInt = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m11265():void { var l:UInt = (65536)+(w7); }
	def m11266():void { var l:UInt = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11267():void { var l:UInt = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m11268():void { var l:UInt = (65536)+(0); }
	def m11269():void { var l:UInt = (65536)+(-0); }
	def m11270():void { var l:UInt = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11271():void { var l:UInt = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11272():void { var l:UInt = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11273():void { var l:UInt = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11274():void { var l:UInt = (65536)+(127); }
	def m11275():void { var l:UInt = (65536)+(-127); }
	def m11276():void { var l:UInt = (65536)+(128); }
	def m11277():void { var l:UInt = (65536)+(-128); }
	def m11278():void { var l:UInt = (65536)+(255); }
	def m11279():void { var l:UInt = (65536)+(-255); }
	def m11280():void { var l:UInt = (65536)+(256); }
	def m11281():void { var l:UInt = (65536)+(-256); }
	def m11282():void { var l:UInt = (65536)+(32767); }
	def m11283():void { var l:UInt = (65536)+(-32767); }
	def m11284():void { var l:UInt = (65536)+(32768); }
	def m11285():void { var l:UInt = (65536)+(-32768); }
	def m11286():void { var l:UInt = (65536)+(65535); }
	def m11287():void { var l:UInt = (65536)+(-65535); }
	def m11288():void { var l:UInt = (65536)+(65536); }
	def m11289():void { var l:UInt = (65536)+(-65536); }
	def m11290():void { var l:UInt = (65536)+(16777216); }
	def m11291():void { var l:UInt = (65536)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11292():void { var l:UInt = (65536)+(16777217); }
	def m11293():void { var l:UInt = (65536)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11294():void { var l:UInt = (65536)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11295():void { var l:UInt = (65536)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11296():void { var l:UInt = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11297():void { var l:UInt = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11298():void { var l:UInt = (-65536)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11299():void { var l:UInt = (-65536)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11300():void { var l:UInt = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11301():void { var l:UInt = (-65536)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11302():void { var l:UInt = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m11303():void { var l:UInt = (-65536)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m11304():void { var l:UInt = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11305():void { var l:UInt = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m11306():void { var l:UInt = (-65536)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11307():void { var l:UInt = (-65536)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11308():void { var l:UInt = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11309():void { var l:UInt = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11310():void { var l:UInt = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11311():void { var l:UInt = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11312():void { var l:UInt = (-65536)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11313():void { var l:UInt = (-65536)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11314():void { var l:UInt = (-65536)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11315():void { var l:UInt = (-65536)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11316():void { var l:UInt = (-65536)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11317():void { var l:UInt = (-65536)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11318():void { var l:UInt = (-65536)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11319():void { var l:UInt = (-65536)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11320():void { var l:UInt = (-65536)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11321():void { var l:UInt = (-65536)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11322():void { var l:UInt = (-65536)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11323():void { var l:UInt = (-65536)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11324():void { var l:UInt = (-65536)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11325():void { var l:UInt = (-65536)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11326():void { var l:UInt = (-65536)+(65536); }
	def m11327():void { var l:UInt = (-65536)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11328():void { var l:UInt = (-65536)+(16777216); }
	def m11329():void { var l:UInt = (-65536)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11330():void { var l:UInt = (-65536)+(16777217); }
	def m11331():void { var l:UInt = (-65536)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11332():void { var l:UInt = (-65536)+(2147483647); }
	def m11333():void { var l:UInt = (-65536)+(-2147483647); }
	def m11334():void { var l:UInt = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11335():void { var l:UInt = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11336():void { var l:UInt = (16777216)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11337():void { var l:UInt = (16777216)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11338():void { var l:UInt = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11339():void { var l:UInt = (16777216)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11340():void { var l:UInt = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m11341():void { var l:UInt = (16777216)+(w7); }
	def m11342():void { var l:UInt = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11343():void { var l:UInt = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m11344():void { var l:UInt = (16777216)+(0); }
	def m11345():void { var l:UInt = (16777216)+(-0); }
	def m11346():void { var l:UInt = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11347():void { var l:UInt = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11348():void { var l:UInt = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11349():void { var l:UInt = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11350():void { var l:UInt = (16777216)+(127); }
	def m11351():void { var l:UInt = (16777216)+(-127); }
	def m11352():void { var l:UInt = (16777216)+(128); }
	def m11353():void { var l:UInt = (16777216)+(-128); }
	def m11354():void { var l:UInt = (16777216)+(255); }
	def m11355():void { var l:UInt = (16777216)+(-255); }
	def m11356():void { var l:UInt = (16777216)+(256); }
	def m11357():void { var l:UInt = (16777216)+(-256); }
	def m11358():void { var l:UInt = (16777216)+(32767); }
	def m11359():void { var l:UInt = (16777216)+(-32767); }
	def m11360():void { var l:UInt = (16777216)+(32768); }
	def m11361():void { var l:UInt = (16777216)+(-32768); }
	def m11362():void { var l:UInt = (16777216)+(65535); }
	def m11363():void { var l:UInt = (16777216)+(-65535); }
	def m11364():void { var l:UInt = (16777216)+(65536); }
	def m11365():void { var l:UInt = (16777216)+(-65536); }
	def m11366():void { var l:UInt = (16777216)+(16777216); }
	def m11367():void { var l:UInt = (16777216)+(-16777216); }
	def m11368():void { var l:UInt = (16777216)+(16777217); }
	def m11369():void { var l:UInt = (16777216)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11370():void { var l:UInt = (16777216)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11371():void { var l:UInt = (16777216)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11372():void { var l:UInt = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11373():void { var l:UInt = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11374():void { var l:UInt = (-16777216)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11375():void { var l:UInt = (-16777216)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11376():void { var l:UInt = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11377():void { var l:UInt = (-16777216)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11378():void { var l:UInt = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m11379():void { var l:UInt = (-16777216)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m11380():void { var l:UInt = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11381():void { var l:UInt = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m11382():void { var l:UInt = (-16777216)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11383():void { var l:UInt = (-16777216)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11384():void { var l:UInt = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11385():void { var l:UInt = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11386():void { var l:UInt = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11387():void { var l:UInt = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11388():void { var l:UInt = (-16777216)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11389():void { var l:UInt = (-16777216)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11390():void { var l:UInt = (-16777216)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11391():void { var l:UInt = (-16777216)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11392():void { var l:UInt = (-16777216)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11393():void { var l:UInt = (-16777216)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11394():void { var l:UInt = (-16777216)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11395():void { var l:UInt = (-16777216)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11396():void { var l:UInt = (-16777216)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11397():void { var l:UInt = (-16777216)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11398():void { var l:UInt = (-16777216)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11399():void { var l:UInt = (-16777216)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11400():void { var l:UInt = (-16777216)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11401():void { var l:UInt = (-16777216)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11402():void { var l:UInt = (-16777216)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11403():void { var l:UInt = (-16777216)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11404():void { var l:UInt = (-16777216)+(16777216); }
	def m11405():void { var l:UInt = (-16777216)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11406():void { var l:UInt = (-16777216)+(16777217); }
	def m11407():void { var l:UInt = (-16777216)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11408():void { var l:UInt = (-16777216)+(2147483647); }
	def m11409():void { var l:UInt = (-16777216)+(-2147483647); }
	def m11410():void { var l:UInt = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11411():void { var l:UInt = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11412():void { var l:UInt = (16777217)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11413():void { var l:UInt = (16777217)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11414():void { var l:UInt = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11415():void { var l:UInt = (16777217)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11416():void { var l:UInt = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m11417():void { var l:UInt = (16777217)+(w7); }
	def m11418():void { var l:UInt = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11419():void { var l:UInt = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m11420():void { var l:UInt = (16777217)+(0); }
	def m11421():void { var l:UInt = (16777217)+(-0); }
	def m11422():void { var l:UInt = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11423():void { var l:UInt = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11424():void { var l:UInt = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11425():void { var l:UInt = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11426():void { var l:UInt = (16777217)+(127); }
	def m11427():void { var l:UInt = (16777217)+(-127); }
	def m11428():void { var l:UInt = (16777217)+(128); }
	def m11429():void { var l:UInt = (16777217)+(-128); }
	def m11430():void { var l:UInt = (16777217)+(255); }
	def m11431():void { var l:UInt = (16777217)+(-255); }
	def m11432():void { var l:UInt = (16777217)+(256); }
	def m11433():void { var l:UInt = (16777217)+(-256); }
	def m11434():void { var l:UInt = (16777217)+(32767); }
	def m11435():void { var l:UInt = (16777217)+(-32767); }
	def m11436():void { var l:UInt = (16777217)+(32768); }
	def m11437():void { var l:UInt = (16777217)+(-32768); }
	def m11438():void { var l:UInt = (16777217)+(65535); }
	def m11439():void { var l:UInt = (16777217)+(-65535); }
	def m11440():void { var l:UInt = (16777217)+(65536); }
	def m11441():void { var l:UInt = (16777217)+(-65536); }
	def m11442():void { var l:UInt = (16777217)+(16777216); }
	def m11443():void { var l:UInt = (16777217)+(-16777216); }
	def m11444():void { var l:UInt = (16777217)+(16777217); }
	def m11445():void { var l:UInt = (16777217)+(-16777217); }
	def m11446():void { var l:UInt = (16777217)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11447():void { var l:UInt = (16777217)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11448():void { var l:UInt = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11449():void { var l:UInt = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11450():void { var l:UInt = (-16777217)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11451():void { var l:UInt = (-16777217)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11452():void { var l:UInt = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11453():void { var l:UInt = (-16777217)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11454():void { var l:UInt = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m11455():void { var l:UInt = (-16777217)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m11456():void { var l:UInt = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11457():void { var l:UInt = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m11458():void { var l:UInt = (-16777217)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11459():void { var l:UInt = (-16777217)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11460():void { var l:UInt = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11461():void { var l:UInt = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11462():void { var l:UInt = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11463():void { var l:UInt = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11464():void { var l:UInt = (-16777217)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11465():void { var l:UInt = (-16777217)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11466():void { var l:UInt = (-16777217)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11467():void { var l:UInt = (-16777217)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11468():void { var l:UInt = (-16777217)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11469():void { var l:UInt = (-16777217)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11470():void { var l:UInt = (-16777217)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11471():void { var l:UInt = (-16777217)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11472():void { var l:UInt = (-16777217)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11473():void { var l:UInt = (-16777217)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11474():void { var l:UInt = (-16777217)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11475():void { var l:UInt = (-16777217)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11476():void { var l:UInt = (-16777217)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11477():void { var l:UInt = (-16777217)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11478():void { var l:UInt = (-16777217)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11479():void { var l:UInt = (-16777217)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11480():void { var l:UInt = (-16777217)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11481():void { var l:UInt = (-16777217)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11482():void { var l:UInt = (-16777217)+(16777217); }
	def m11483():void { var l:UInt = (-16777217)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11484():void { var l:UInt = (-16777217)+(2147483647); }
	def m11485():void { var l:UInt = (-16777217)+(-2147483647); }
	def m11486():void { var l:UInt = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11487():void { var l:UInt = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11488():void { var l:UInt = (2147483647)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11489():void { var l:UInt = (2147483647)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11490():void { var l:UInt = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11491():void { var l:UInt = (2147483647)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11492():void { var l:UInt = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m11493():void { var l:UInt = (2147483647)+(w7); }
	def m11494():void { var l:UInt = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11495():void { var l:UInt = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m11496():void { var l:UInt = (2147483647)+(0); }
	def m11497():void { var l:UInt = (2147483647)+(-0); }
	def m11498():void { var l:UInt = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11499():void { var l:UInt = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11500():void { var l:UInt = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11501():void { var l:UInt = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11502():void { var l:UInt = (2147483647)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11503():void { var l:UInt = (2147483647)+(-127); }
	def m11504():void { var l:UInt = (2147483647)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11505():void { var l:UInt = (2147483647)+(-128); }
	def m11506():void { var l:UInt = (2147483647)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11507():void { var l:UInt = (2147483647)+(-255); }
	def m11508():void { var l:UInt = (2147483647)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11509():void { var l:UInt = (2147483647)+(-256); }
	def m11510():void { var l:UInt = (2147483647)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11511():void { var l:UInt = (2147483647)+(-32767); }
	def m11512():void { var l:UInt = (2147483647)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11513():void { var l:UInt = (2147483647)+(-32768); }
	def m11514():void { var l:UInt = (2147483647)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11515():void { var l:UInt = (2147483647)+(-65535); }
	def m11516():void { var l:UInt = (2147483647)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11517():void { var l:UInt = (2147483647)+(-65536); }
	def m11518():void { var l:UInt = (2147483647)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11519():void { var l:UInt = (2147483647)+(-16777216); }
	def m11520():void { var l:UInt = (2147483647)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11521():void { var l:UInt = (2147483647)+(-16777217); }
	def m11522():void { var l:UInt = (2147483647)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (2147483647)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11523():void { var l:UInt = (2147483647)+(-2147483647); }
	def m11524():void { var l:UInt = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11525():void { var l:UInt = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11526():void { var l:UInt = (-2147483647)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11527():void { var l:UInt = (-2147483647)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11528():void { var l:UInt = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m11529():void { var l:UInt = (-2147483647)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11530():void { var l:UInt = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m11531():void { var l:UInt = (-2147483647)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m11532():void { var l:UInt = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m11533():void { var l:UInt = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m11534():void { var l:UInt = (-2147483647)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11535():void { var l:UInt = (-2147483647)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11536():void { var l:UInt = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11537():void { var l:UInt = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m11538():void { var l:UInt = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11539():void { var l:UInt = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m11540():void { var l:UInt = (-2147483647)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11541():void { var l:UInt = (-2147483647)+(-127); }
	def m11542():void { var l:UInt = (-2147483647)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11543():void { var l:UInt = (-2147483647)+(-128); }
	def m11544():void { var l:UInt = (-2147483647)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11545():void { var l:UInt = (-2147483647)+(-255); }
	def m11546():void { var l:UInt = (-2147483647)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11547():void { var l:UInt = (-2147483647)+(-256); }
	def m11548():void { var l:UInt = (-2147483647)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11549():void { var l:UInt = (-2147483647)+(-32767); }
	def m11550():void { var l:UInt = (-2147483647)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11551():void { var l:UInt = (-2147483647)+(-32768); }
	def m11552():void { var l:UInt = (-2147483647)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11553():void { var l:UInt = (-2147483647)+(-65535); }
	def m11554():void { var l:UInt = (-2147483647)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11555():void { var l:UInt = (-2147483647)+(-65536); }
	def m11556():void { var l:UInt = (-2147483647)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11557():void { var l:UInt = (-2147483647)+(-16777216); }
	def m11558():void { var l:UInt = (-2147483647)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m11559():void { var l:UInt = (-2147483647)+(-16777217); }
	def m11560():void { var l:UInt = (-2147483647)+(2147483647); }
	def m11561():void { var l:UInt = (-2147483647)+(-2147483647); }
	def m11562():void { var l:ULong = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11563():void { var l:ULong = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11564():void { var l:ULong = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11565():void { var l:ULong = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11566():void { var l:ULong = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11567():void { var l:ULong = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11568():void { var l:ULong = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11569():void { var l:ULong = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11570():void { var l:ULong = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11571():void { var l:ULong = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11572():void { var l:ULong = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11573():void { var l:ULong = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11574():void { var l:ULong = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11575():void { var l:ULong = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11576():void { var l:ULong = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11577():void { var l:ULong = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11578():void { var l:ULong = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11579():void { var l:ULong = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11580():void { var l:ULong = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11581():void { var l:ULong = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11582():void { var l:ULong = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11583():void { var l:ULong = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11584():void { var l:ULong = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11585():void { var l:ULong = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11586():void { var l:ULong = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11587():void { var l:ULong = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11588():void { var l:ULong = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11589():void { var l:ULong = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11590():void { var l:ULong = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11591():void { var l:ULong = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11592():void { var l:ULong = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11593():void { var l:ULong = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11594():void { var l:ULong = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11595():void { var l:ULong = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11596():void { var l:ULong = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11597():void { var l:ULong = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11598():void { var l:ULong = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11599():void { var l:ULong = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11600():void { var l:ULong = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11601():void { var l:ULong = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11602():void { var l:ULong = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11603():void { var l:ULong = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11604():void { var l:ULong = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11605():void { var l:ULong = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11606():void { var l:ULong = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11607():void { var l:ULong = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11608():void { var l:ULong = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11609():void { var l:ULong = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11610():void { var l:ULong = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11611():void { var l:ULong = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11612():void { var l:ULong = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11613():void { var l:ULong = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11614():void { var l:ULong = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11615():void { var l:ULong = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11616():void { var l:ULong = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11617():void { var l:ULong = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11618():void { var l:ULong = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11619():void { var l:ULong = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11620():void { var l:ULong = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11621():void { var l:ULong = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11622():void { var l:ULong = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11623():void { var l:ULong = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11624():void { var l:ULong = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11625():void { var l:ULong = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11626():void { var l:ULong = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11627():void { var l:ULong = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11628():void { var l:ULong = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11629():void { var l:ULong = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11630():void { var l:ULong = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11631():void { var l:ULong = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11632():void { var l:ULong = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11633():void { var l:ULong = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11634():void { var l:ULong = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11635():void { var l:ULong = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11636():void { var l:ULong = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11637():void { var l:ULong = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11638():void { var l:ULong = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11639():void { var l:ULong = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11640():void { var l:ULong = (w2)+(w2); }
	def m11641():void { var l:ULong = (w2)+(w3); }
	def m11642():void { var l:ULong = (w2)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11643():void { var l:ULong = (w2)+(w5); }
	def m11644():void { var l:ULong = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m11645():void { var l:ULong = (w2)+(w7); }  
	def m11646():void { var l:ULong = (w2)+(w8); }  
	def m11647():void { var l:ULong = (w2)+(w9); }  
	def m11648():void { var l:ULong = (w2)+(0); }
	def m11649():void { var l:ULong = (w2)+(-0); }
	def m11650():void { var l:ULong = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11651():void { var l:ULong = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11652():void { var l:ULong = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11653():void { var l:ULong = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11654():void { var l:ULong = (w2)+(127); }
	def m11655():void { var l:ULong = (w2)+(-127); }
	def m11656():void { var l:ULong = (w2)+(128); }
	def m11657():void { var l:ULong = (w2)+(-128); }
	def m11658():void { var l:ULong = (w2)+(255); }
	def m11659():void { var l:ULong = (w2)+(-255); }
	def m11660():void { var l:ULong = (w2)+(256); }
	def m11661():void { var l:ULong = (w2)+(-256); }
	def m11662():void { var l:ULong = (w2)+(32767); }
	def m11663():void { var l:ULong = (w2)+(-32767); }
	def m11664():void { var l:ULong = (w2)+(32768); }
	def m11665():void { var l:ULong = (w2)+(-32768); }
	def m11666():void { var l:ULong = (w2)+(65535); }
	def m11667():void { var l:ULong = (w2)+(-65535); }
	def m11668():void { var l:ULong = (w2)+(65536); }
	def m11669():void { var l:ULong = (w2)+(-65536); }
	def m11670():void { var l:ULong = (w2)+(16777216); }
	def m11671():void { var l:ULong = (w2)+(-16777216); }
	def m11672():void { var l:ULong = (w2)+(16777217); }
	def m11673():void { var l:ULong = (w2)+(-16777217); }
	def m11674():void { var l:ULong = (w2)+(2147483647); }
	def m11675():void { var l:ULong = (w2)+(-2147483647); }
	def m11676():void { var l:ULong = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11677():void { var l:ULong = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11678():void { var l:ULong = (w3)+(w2); }
	def m11679():void { var l:ULong = (w3)+(w3); }
	def m11680():void { var l:ULong = (w3)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11681():void { var l:ULong = (w3)+(w5); }
	def m11682():void { var l:ULong = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m11683():void { var l:ULong = (w3)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m11684():void { var l:ULong = (w3)+(w8); }  
	def m11685():void { var l:ULong = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m11686():void { var l:ULong = (w3)+(0); }
	def m11687():void { var l:ULong = (w3)+(-0); }
	def m11688():void { var l:ULong = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11689():void { var l:ULong = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11690():void { var l:ULong = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11691():void { var l:ULong = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11692():void { var l:ULong = (w3)+(127); }
	def m11693():void { var l:ULong = (w3)+(-127); }
	def m11694():void { var l:ULong = (w3)+(128); }
	def m11695():void { var l:ULong = (w3)+(-128); }
	def m11696():void { var l:ULong = (w3)+(255); }
	def m11697():void { var l:ULong = (w3)+(-255); }
	def m11698():void { var l:ULong = (w3)+(256); }
	def m11699():void { var l:ULong = (w3)+(-256); }
	def m11700():void { var l:ULong = (w3)+(32767); }
	def m11701():void { var l:ULong = (w3)+(-32767); }
	def m11702():void { var l:ULong = (w3)+(32768); }
	def m11703():void { var l:ULong = (w3)+(-32768); }
	def m11704():void { var l:ULong = (w3)+(65535); }
	def m11705():void { var l:ULong = (w3)+(-65535); }
	def m11706():void { var l:ULong = (w3)+(65536); }
	def m11707():void { var l:ULong = (w3)+(-65536); }
	def m11708():void { var l:ULong = (w3)+(16777216); }
	def m11709():void { var l:ULong = (w3)+(-16777216); }
	def m11710():void { var l:ULong = (w3)+(16777217); }
	def m11711():void { var l:ULong = (w3)+(-16777217); }
	def m11712():void { var l:ULong = (w3)+(2147483647); }
	def m11713():void { var l:ULong = (w3)+(-2147483647); }
	def m11714():void { var l:ULong = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11715():void { var l:ULong = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11716():void { var l:ULong = (w4)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11717():void { var l:ULong = (w4)+(w3); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11718():void { var l:ULong = (w4)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11719():void { var l:ULong = (w4)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11720():void { var l:ULong = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m11721():void { var l:ULong = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m11722():void { var l:ULong = (w4)+(w8); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m11723():void { var l:ULong = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m11724():void { var l:ULong = (w4)+(0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11725():void { var l:ULong = (w4)+(-0); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11726():void { var l:ULong = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11727():void { var l:ULong = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11728():void { var l:ULong = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11729():void { var l:ULong = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11730():void { var l:ULong = (w4)+(127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11731():void { var l:ULong = (w4)+(-127); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11732():void { var l:ULong = (w4)+(128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11733():void { var l:ULong = (w4)+(-128); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11734():void { var l:ULong = (w4)+(255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11735():void { var l:ULong = (w4)+(-255); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11736():void { var l:ULong = (w4)+(256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11737():void { var l:ULong = (w4)+(-256); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11738():void { var l:ULong = (w4)+(32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11739():void { var l:ULong = (w4)+(-32767); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11740():void { var l:ULong = (w4)+(32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11741():void { var l:ULong = (w4)+(-32768); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11742():void { var l:ULong = (w4)+(65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11743():void { var l:ULong = (w4)+(-65535); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11744():void { var l:ULong = (w4)+(65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11745():void { var l:ULong = (w4)+(-65536); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11746():void { var l:ULong = (w4)+(16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11747():void { var l:ULong = (w4)+(-16777216); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11748():void { var l:ULong = (w4)+(16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11749():void { var l:ULong = (w4)+(-16777217); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11750():void { var l:ULong = (w4)+(2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11751():void { var l:ULong = (w4)+(-2147483647); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11752():void { var l:ULong = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11753():void { var l:ULong = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11754():void { var l:ULong = (w5)+(w2); }
	def m11755():void { var l:ULong = (w5)+(w3); }
	def m11756():void { var l:ULong = (w5)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11757():void { var l:ULong = (w5)+(w5); }
	def m11758():void { var l:ULong = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m11759():void { var l:ULong = (w5)+(w7); }  
	def m11760():void { var l:ULong = (w5)+(w8); }  
	def m11761():void { var l:ULong = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m11762():void { var l:ULong = (w5)+(0); }
	def m11763():void { var l:ULong = (w5)+(-0); }
	def m11764():void { var l:ULong = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11765():void { var l:ULong = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11766():void { var l:ULong = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11767():void { var l:ULong = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11768():void { var l:ULong = (w5)+(127); }
	def m11769():void { var l:ULong = (w5)+(-127); }
	def m11770():void { var l:ULong = (w5)+(128); }
	def m11771():void { var l:ULong = (w5)+(-128); }
	def m11772():void { var l:ULong = (w5)+(255); }
	def m11773():void { var l:ULong = (w5)+(-255); }
	def m11774():void { var l:ULong = (w5)+(256); }
	def m11775():void { var l:ULong = (w5)+(-256); }
	def m11776():void { var l:ULong = (w5)+(32767); }
	def m11777():void { var l:ULong = (w5)+(-32767); }
	def m11778():void { var l:ULong = (w5)+(32768); }
	def m11779():void { var l:ULong = (w5)+(-32768); }
	def m11780():void { var l:ULong = (w5)+(65535); }
	def m11781():void { var l:ULong = (w5)+(-65535); }
	def m11782():void { var l:ULong = (w5)+(65536); }
	def m11783():void { var l:ULong = (w5)+(-65536); }
	def m11784():void { var l:ULong = (w5)+(16777216); }
	def m11785():void { var l:ULong = (w5)+(-16777216); }
	def m11786():void { var l:ULong = (w5)+(16777217); }
	def m11787():void { var l:ULong = (w5)+(-16777217); }
	def m11788():void { var l:ULong = (w5)+(2147483647); }
	def m11789():void { var l:ULong = (w5)+(-2147483647); }
	def m11790():void { var l:ULong = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11791():void { var l:ULong = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11792():void { var l:ULong = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m11793():void { var l:ULong = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m11794():void { var l:ULong = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m11795():void { var l:ULong = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m11796():void { var l:ULong = (w6)+(w6); }
	def m11797():void { var l:ULong = (w6)+(w7); }  
	def m11798():void { var l:ULong = (w6)+(w8); }  
	def m11799():void { var l:ULong = (w6)+(w9); }  
	def m11800():void { var l:ULong = (w6)+(0); }  
	def m11801():void { var l:ULong = (w6)+(-0); }  
	def m11802():void { var l:ULong = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11803():void { var l:ULong = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11804():void { var l:ULong = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11805():void { var l:ULong = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11806():void { var l:ULong = (w6)+(127); }  
	def m11807():void { var l:ULong = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m11808():void { var l:ULong = (w6)+(128); }  
	def m11809():void { var l:ULong = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m11810():void { var l:ULong = (w6)+(255); }  
	def m11811():void { var l:ULong = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m11812():void { var l:ULong = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m11813():void { var l:ULong = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m11814():void { var l:ULong = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m11815():void { var l:ULong = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m11816():void { var l:ULong = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m11817():void { var l:ULong = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m11818():void { var l:ULong = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m11819():void { var l:ULong = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m11820():void { var l:ULong = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m11821():void { var l:ULong = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m11822():void { var l:ULong = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m11823():void { var l:ULong = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m11824():void { var l:ULong = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m11825():void { var l:ULong = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m11826():void { var l:ULong = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m11827():void { var l:ULong = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m11828():void { var l:ULong = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11829():void { var l:ULong = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11830():void { var l:ULong = (w7)+(w2); }  
	def m11831():void { var l:ULong = (w7)+(w3); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m11832():void { var l:ULong = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m11833():void { var l:ULong = (w7)+(w5); }  
	def m11834():void { var l:ULong = (w7)+(w6); }  
	def m11835():void { var l:ULong = (w7)+(w7); }
	def m11836():void { var l:ULong = (w7)+(w8); }  
	def m11837():void { var l:ULong = (w7)+(w9); }  
	def m11838():void { var l:ULong = (w7)+(0); }
	def m11839():void { var l:ULong = (w7)+(-0); }
	def m11840():void { var l:ULong = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11841():void { var l:ULong = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11842():void { var l:ULong = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11843():void { var l:ULong = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11844():void { var l:ULong = (w7)+(127); }
	def m11845():void { var l:ULong = (w7)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m11846():void { var l:ULong = (w7)+(128); }
	def m11847():void { var l:ULong = (w7)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m11848():void { var l:ULong = (w7)+(255); }
	def m11849():void { var l:ULong = (w7)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m11850():void { var l:ULong = (w7)+(256); }
	def m11851():void { var l:ULong = (w7)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m11852():void { var l:ULong = (w7)+(32767); }
	def m11853():void { var l:ULong = (w7)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m11854():void { var l:ULong = (w7)+(32768); }
	def m11855():void { var l:ULong = (w7)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m11856():void { var l:ULong = (w7)+(65535); }
	def m11857():void { var l:ULong = (w7)+(-65535); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m11858():void { var l:ULong = (w7)+(65536); }
	def m11859():void { var l:ULong = (w7)+(-65536); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m11860():void { var l:ULong = (w7)+(16777216); }
	def m11861():void { var l:ULong = (w7)+(-16777216); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m11862():void { var l:ULong = (w7)+(16777217); }
	def m11863():void { var l:ULong = (w7)+(-16777217); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m11864():void { var l:ULong = (w7)+(2147483647); }
	def m11865():void { var l:ULong = (w7)+(-2147483647); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m11866():void { var l:ULong = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11867():void { var l:ULong = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11868():void { var l:ULong = (w8)+(w2); }  
	def m11869():void { var l:ULong = (w8)+(w3); }  
	def m11870():void { var l:ULong = (w8)+(w4); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m11871():void { var l:ULong = (w8)+(w5); }  
	def m11872():void { var l:ULong = (w8)+(w6); }  
	def m11873():void { var l:ULong = (w8)+(w7); }  
	def m11874():void { var l:ULong = (w8)+(w8); }
	def m11875():void { var l:ULong = (w8)+(w9); }  
	def m11876():void { var l:ULong = (w8)+(0); }  
	def m11877():void { var l:ULong = (w8)+(-0); }  
	def m11878():void { var l:ULong = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11879():void { var l:ULong = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11880():void { var l:ULong = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11881():void { var l:ULong = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11882():void { var l:ULong = (w8)+(127); }  
	def m11883():void { var l:ULong = (w8)+(-127); }  
	def m11884():void { var l:ULong = (w8)+(128); }  
	def m11885():void { var l:ULong = (w8)+(-128); }  
	def m11886():void { var l:ULong = (w8)+(255); }  
	def m11887():void { var l:ULong = (w8)+(-255); }  
	def m11888():void { var l:ULong = (w8)+(256); }  
	def m11889():void { var l:ULong = (w8)+(-256); }  
	def m11890():void { var l:ULong = (w8)+(32767); }  
	def m11891():void { var l:ULong = (w8)+(-32767); }  
	def m11892():void { var l:ULong = (w8)+(32768); }  
	def m11893():void { var l:ULong = (w8)+(-32768); }  
	def m11894():void { var l:ULong = (w8)+(65535); }  
	def m11895():void { var l:ULong = (w8)+(-65535); }  
	def m11896():void { var l:ULong = (w8)+(65536); }  
	def m11897():void { var l:ULong = (w8)+(-65536); }  
	def m11898():void { var l:ULong = (w8)+(16777216); }  
	def m11899():void { var l:ULong = (w8)+(-16777216); }  
	def m11900():void { var l:ULong = (w8)+(16777217); }  
	def m11901():void { var l:ULong = (w8)+(-16777217); }  
	def m11902():void { var l:ULong = (w8)+(2147483647); }  
	def m11903():void { var l:ULong = (w8)+(-2147483647); }  
	def m11904():void { var l:ULong = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11905():void { var l:ULong = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11906():void { var l:ULong = (w9)+(w2); }  
	def m11907():void { var l:ULong = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m11908():void { var l:ULong = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m11909():void { var l:ULong = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m11910():void { var l:ULong = (w9)+(w6); }  
	def m11911():void { var l:ULong = (w9)+(w7); }  
	def m11912():void { var l:ULong = (w9)+(w8); }  
	def m11913():void { var l:ULong = (w9)+(w9); }
	def m11914():void { var l:ULong = (w9)+(0); }  
	def m11915():void { var l:ULong = (w9)+(-0); }  
	def m11916():void { var l:ULong = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11917():void { var l:ULong = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11918():void { var l:ULong = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11919():void { var l:ULong = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11920():void { var l:ULong = (w9)+(127); }  
	def m11921():void { var l:ULong = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m11922():void { var l:ULong = (w9)+(128); }  
	def m11923():void { var l:ULong = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m11924():void { var l:ULong = (w9)+(255); }  
	def m11925():void { var l:ULong = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m11926():void { var l:ULong = (w9)+(256); }  
	def m11927():void { var l:ULong = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m11928():void { var l:ULong = (w9)+(32767); }  
	def m11929():void { var l:ULong = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m11930():void { var l:ULong = (w9)+(32768); }  
	def m11931():void { var l:ULong = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m11932():void { var l:ULong = (w9)+(65535); }  
	def m11933():void { var l:ULong = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m11934():void { var l:ULong = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m11935():void { var l:ULong = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m11936():void { var l:ULong = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m11937():void { var l:ULong = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m11938():void { var l:ULong = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m11939():void { var l:ULong = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m11940():void { var l:ULong = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m11941():void { var l:ULong = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m11942():void { var l:ULong = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11943():void { var l:ULong = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11944():void { var l:ULong = (0)+(w2); }
	def m11945():void { var l:ULong = (0)+(w3); }
	def m11946():void { var l:ULong = (0)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11947():void { var l:ULong = (0)+(w5); }
	def m11948():void { var l:ULong = (0)+(w6); }  
	def m11949():void { var l:ULong = (0)+(w7); }
	def m11950():void { var l:ULong = (0)+(w8); }  
	def m11951():void { var l:ULong = (0)+(w9); }  
	def m11952():void { var l:ULong = (0)+(0); }
	def m11953():void { var l:ULong = (0)+(-0); }
	def m11954():void { var l:ULong = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11955():void { var l:ULong = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11956():void { var l:ULong = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11957():void { var l:ULong = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11958():void { var l:ULong = (0)+(127); }
	def m11959():void { var l:ULong = (0)+(-127); }
	def m11960():void { var l:ULong = (0)+(128); }
	def m11961():void { var l:ULong = (0)+(-128); }
	def m11962():void { var l:ULong = (0)+(255); }
	def m11963():void { var l:ULong = (0)+(-255); }
	def m11964():void { var l:ULong = (0)+(256); }
	def m11965():void { var l:ULong = (0)+(-256); }
	def m11966():void { var l:ULong = (0)+(32767); }
	def m11967():void { var l:ULong = (0)+(-32767); }
	def m11968():void { var l:ULong = (0)+(32768); }
	def m11969():void { var l:ULong = (0)+(-32768); }
	def m11970():void { var l:ULong = (0)+(65535); }
	def m11971():void { var l:ULong = (0)+(-65535); }
	def m11972():void { var l:ULong = (0)+(65536); }
	def m11973():void { var l:ULong = (0)+(-65536); }
	def m11974():void { var l:ULong = (0)+(16777216); }
	def m11975():void { var l:ULong = (0)+(-16777216); }
	def m11976():void { var l:ULong = (0)+(16777217); }
	def m11977():void { var l:ULong = (0)+(-16777217); }
	def m11978():void { var l:ULong = (0)+(2147483647); }
	def m11979():void { var l:ULong = (0)+(-2147483647); }
	def m11980():void { var l:ULong = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11981():void { var l:ULong = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11982():void { var l:ULong = (-0)+(w2); }
	def m11983():void { var l:ULong = (-0)+(w3); }
	def m11984():void { var l:ULong = (-0)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m11985():void { var l:ULong = (-0)+(w5); }
	def m11986():void { var l:ULong = (-0)+(w6); }  
	def m11987():void { var l:ULong = (-0)+(w7); }
	def m11988():void { var l:ULong = (-0)+(w8); }  
	def m11989():void { var l:ULong = (-0)+(w9); }  
	def m11990():void { var l:ULong = (-0)+(0); }
	def m11991():void { var l:ULong = (-0)+(-0); }
	def m11992():void { var l:ULong = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11993():void { var l:ULong = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m11994():void { var l:ULong = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11995():void { var l:ULong = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m11996():void { var l:ULong = (-0)+(127); }
	def m11997():void { var l:ULong = (-0)+(-127); }
	def m11998():void { var l:ULong = (-0)+(128); }
	def m11999():void { var l:ULong = (-0)+(-128); }
	def m12000():void { var l:ULong = (-0)+(255); }
	def m12001():void { var l:ULong = (-0)+(-255); }
	def m12002():void { var l:ULong = (-0)+(256); }
	def m12003():void { var l:ULong = (-0)+(-256); }
	def m12004():void { var l:ULong = (-0)+(32767); }
	def m12005():void { var l:ULong = (-0)+(-32767); }
	def m12006():void { var l:ULong = (-0)+(32768); }
	def m12007():void { var l:ULong = (-0)+(-32768); }
	def m12008():void { var l:ULong = (-0)+(65535); }
	def m12009():void { var l:ULong = (-0)+(-65535); }
	def m12010():void { var l:ULong = (-0)+(65536); }
	def m12011():void { var l:ULong = (-0)+(-65536); }
	def m12012():void { var l:ULong = (-0)+(16777216); }
	def m12013():void { var l:ULong = (-0)+(-16777216); }
	def m12014():void { var l:ULong = (-0)+(16777217); }
	def m12015():void { var l:ULong = (-0)+(-16777217); }
	def m12016():void { var l:ULong = (-0)+(2147483647); }
	def m12017():void { var l:ULong = (-0)+(-2147483647); }
	def m12018():void { var l:ULong = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12019():void { var l:ULong = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12020():void { var l:ULong = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12021():void { var l:ULong = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12022():void { var l:ULong = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12023():void { var l:ULong = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12024():void { var l:ULong = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12025():void { var l:ULong = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12026():void { var l:ULong = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12027():void { var l:ULong = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12028():void { var l:ULong = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12029():void { var l:ULong = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12030():void { var l:ULong = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12031():void { var l:ULong = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12032():void { var l:ULong = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12033():void { var l:ULong = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12034():void { var l:ULong = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12035():void { var l:ULong = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12036():void { var l:ULong = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12037():void { var l:ULong = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12038():void { var l:ULong = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12039():void { var l:ULong = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12040():void { var l:ULong = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12041():void { var l:ULong = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12042():void { var l:ULong = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12043():void { var l:ULong = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12044():void { var l:ULong = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12045():void { var l:ULong = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12046():void { var l:ULong = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12047():void { var l:ULong = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12048():void { var l:ULong = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12049():void { var l:ULong = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12050():void { var l:ULong = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12051():void { var l:ULong = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12052():void { var l:ULong = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12053():void { var l:ULong = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12054():void { var l:ULong = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12055():void { var l:ULong = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12056():void { var l:ULong = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12057():void { var l:ULong = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12058():void { var l:ULong = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12059():void { var l:ULong = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12060():void { var l:ULong = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12061():void { var l:ULong = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12062():void { var l:ULong = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12063():void { var l:ULong = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12064():void { var l:ULong = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12065():void { var l:ULong = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12066():void { var l:ULong = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12067():void { var l:ULong = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12068():void { var l:ULong = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12069():void { var l:ULong = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12070():void { var l:ULong = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12071():void { var l:ULong = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12072():void { var l:ULong = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12073():void { var l:ULong = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12074():void { var l:ULong = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12075():void { var l:ULong = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12076():void { var l:ULong = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12077():void { var l:ULong = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12078():void { var l:ULong = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12079():void { var l:ULong = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12080():void { var l:ULong = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12081():void { var l:ULong = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12082():void { var l:ULong = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12083():void { var l:ULong = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12084():void { var l:ULong = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12085():void { var l:ULong = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12086():void { var l:ULong = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12087():void { var l:ULong = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12088():void { var l:ULong = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12089():void { var l:ULong = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12090():void { var l:ULong = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12091():void { var l:ULong = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12092():void { var l:ULong = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12093():void { var l:ULong = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12094():void { var l:ULong = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12095():void { var l:ULong = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12096():void { var l:ULong = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12097():void { var l:ULong = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12098():void { var l:ULong = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12099():void { var l:ULong = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12100():void { var l:ULong = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12101():void { var l:ULong = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12102():void { var l:ULong = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12103():void { var l:ULong = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12104():void { var l:ULong = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12105():void { var l:ULong = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12106():void { var l:ULong = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12107():void { var l:ULong = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12108():void { var l:ULong = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12109():void { var l:ULong = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12110():void { var l:ULong = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12111():void { var l:ULong = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12112():void { var l:ULong = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12113():void { var l:ULong = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12114():void { var l:ULong = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12115():void { var l:ULong = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12116():void { var l:ULong = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12117():void { var l:ULong = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12118():void { var l:ULong = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12119():void { var l:ULong = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12120():void { var l:ULong = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12121():void { var l:ULong = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12122():void { var l:ULong = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12123():void { var l:ULong = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12124():void { var l:ULong = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12125():void { var l:ULong = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12126():void { var l:ULong = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12127():void { var l:ULong = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12128():void { var l:ULong = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12129():void { var l:ULong = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12130():void { var l:ULong = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12131():void { var l:ULong = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12132():void { var l:ULong = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12133():void { var l:ULong = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12134():void { var l:ULong = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12135():void { var l:ULong = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12136():void { var l:ULong = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12137():void { var l:ULong = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12138():void { var l:ULong = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12139():void { var l:ULong = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12140():void { var l:ULong = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12141():void { var l:ULong = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12142():void { var l:ULong = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12143():void { var l:ULong = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12144():void { var l:ULong = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12145():void { var l:ULong = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12146():void { var l:ULong = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12147():void { var l:ULong = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12148():void { var l:ULong = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12149():void { var l:ULong = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12150():void { var l:ULong = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12151():void { var l:ULong = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12152():void { var l:ULong = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12153():void { var l:ULong = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12154():void { var l:ULong = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12155():void { var l:ULong = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12156():void { var l:ULong = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12157():void { var l:ULong = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12158():void { var l:ULong = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12159():void { var l:ULong = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12160():void { var l:ULong = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12161():void { var l:ULong = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12162():void { var l:ULong = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12163():void { var l:ULong = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12164():void { var l:ULong = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12165():void { var l:ULong = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12166():void { var l:ULong = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12167():void { var l:ULong = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12168():void { var l:ULong = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12169():void { var l:ULong = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12170():void { var l:ULong = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12171():void { var l:ULong = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12172():void { var l:ULong = (127)+(w2); }
	def m12173():void { var l:ULong = (127)+(w3); }
	def m12174():void { var l:ULong = (127)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12175():void { var l:ULong = (127)+(w5); }
	def m12176():void { var l:ULong = (127)+(w6); }  
	def m12177():void { var l:ULong = (127)+(w7); }
	def m12178():void { var l:ULong = (127)+(w8); }  
	def m12179():void { var l:ULong = (127)+(w9); }  
	def m12180():void { var l:ULong = (127)+(0); }
	def m12181():void { var l:ULong = (127)+(-0); }
	def m12182():void { var l:ULong = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12183():void { var l:ULong = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12184():void { var l:ULong = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12185():void { var l:ULong = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12186():void { var l:ULong = (127)+(127); }
	def m12187():void { var l:ULong = (127)+(-127); }
	def m12188():void { var l:ULong = (127)+(128); }
	def m12189():void { var l:ULong = (127)+(-128); }
	def m12190():void { var l:ULong = (127)+(255); }
	def m12191():void { var l:ULong = (127)+(-255); }
	def m12192():void { var l:ULong = (127)+(256); }
	def m12193():void { var l:ULong = (127)+(-256); }
	def m12194():void { var l:ULong = (127)+(32767); }
	def m12195():void { var l:ULong = (127)+(-32767); }
	def m12196():void { var l:ULong = (127)+(32768); }
	def m12197():void { var l:ULong = (127)+(-32768); }
	def m12198():void { var l:ULong = (127)+(65535); }
	def m12199():void { var l:ULong = (127)+(-65535); }
	def m12200():void { var l:ULong = (127)+(65536); }
	def m12201():void { var l:ULong = (127)+(-65536); }
	def m12202():void { var l:ULong = (127)+(16777216); }
	def m12203():void { var l:ULong = (127)+(-16777216); }
	def m12204():void { var l:ULong = (127)+(16777217); }
	def m12205():void { var l:ULong = (127)+(-16777217); }
	def m12206():void { var l:ULong = (127)+(2147483647); }
	def m12207():void { var l:ULong = (127)+(-2147483647); }
	def m12208():void { var l:ULong = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12209():void { var l:ULong = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12210():void { var l:ULong = (-127)+(w2); }
	def m12211():void { var l:ULong = (-127)+(w3); }
	def m12212():void { var l:ULong = (-127)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12213():void { var l:ULong = (-127)+(w5); }
	def m12214():void { var l:ULong = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m12215():void { var l:ULong = (-127)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m12216():void { var l:ULong = (-127)+(w8); }  
	def m12217():void { var l:ULong = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m12218():void { var l:ULong = (-127)+(0); }
	def m12219():void { var l:ULong = (-127)+(-0); }
	def m12220():void { var l:ULong = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12221():void { var l:ULong = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12222():void { var l:ULong = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12223():void { var l:ULong = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12224():void { var l:ULong = (-127)+(127); }
	def m12225():void { var l:ULong = (-127)+(-127); }
	def m12226():void { var l:ULong = (-127)+(128); }
	def m12227():void { var l:ULong = (-127)+(-128); }
	def m12228():void { var l:ULong = (-127)+(255); }
	def m12229():void { var l:ULong = (-127)+(-255); }
	def m12230():void { var l:ULong = (-127)+(256); }
	def m12231():void { var l:ULong = (-127)+(-256); }
	def m12232():void { var l:ULong = (-127)+(32767); }
	def m12233():void { var l:ULong = (-127)+(-32767); }
	def m12234():void { var l:ULong = (-127)+(32768); }
	def m12235():void { var l:ULong = (-127)+(-32768); }
	def m12236():void { var l:ULong = (-127)+(65535); }
	def m12237():void { var l:ULong = (-127)+(-65535); }
	def m12238():void { var l:ULong = (-127)+(65536); }
	def m12239():void { var l:ULong = (-127)+(-65536); }
	def m12240():void { var l:ULong = (-127)+(16777216); }
	def m12241():void { var l:ULong = (-127)+(-16777216); }
	def m12242():void { var l:ULong = (-127)+(16777217); }
	def m12243():void { var l:ULong = (-127)+(-16777217); }
	def m12244():void { var l:ULong = (-127)+(2147483647); }
	def m12245():void { var l:ULong = (-127)+(-2147483647); }
	def m12246():void { var l:ULong = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12247():void { var l:ULong = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12248():void { var l:ULong = (128)+(w2); }
	def m12249():void { var l:ULong = (128)+(w3); }
	def m12250():void { var l:ULong = (128)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12251():void { var l:ULong = (128)+(w5); }
	def m12252():void { var l:ULong = (128)+(w6); }  
	def m12253():void { var l:ULong = (128)+(w7); }
	def m12254():void { var l:ULong = (128)+(w8); }  
	def m12255():void { var l:ULong = (128)+(w9); }  
	def m12256():void { var l:ULong = (128)+(0); }
	def m12257():void { var l:ULong = (128)+(-0); }
	def m12258():void { var l:ULong = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12259():void { var l:ULong = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12260():void { var l:ULong = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12261():void { var l:ULong = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12262():void { var l:ULong = (128)+(127); }
	def m12263():void { var l:ULong = (128)+(-127); }
	def m12264():void { var l:ULong = (128)+(128); }
	def m12265():void { var l:ULong = (128)+(-128); }
	def m12266():void { var l:ULong = (128)+(255); }
	def m12267():void { var l:ULong = (128)+(-255); }
	def m12268():void { var l:ULong = (128)+(256); }
	def m12269():void { var l:ULong = (128)+(-256); }
	def m12270():void { var l:ULong = (128)+(32767); }
	def m12271():void { var l:ULong = (128)+(-32767); }
	def m12272():void { var l:ULong = (128)+(32768); }
	def m12273():void { var l:ULong = (128)+(-32768); }
	def m12274():void { var l:ULong = (128)+(65535); }
	def m12275():void { var l:ULong = (128)+(-65535); }
	def m12276():void { var l:ULong = (128)+(65536); }
	def m12277():void { var l:ULong = (128)+(-65536); }
	def m12278():void { var l:ULong = (128)+(16777216); }
	def m12279():void { var l:ULong = (128)+(-16777216); }
	def m12280():void { var l:ULong = (128)+(16777217); }
	def m12281():void { var l:ULong = (128)+(-16777217); }
	def m12282():void { var l:ULong = (128)+(2147483647); }
	def m12283():void { var l:ULong = (128)+(-2147483647); }
	def m12284():void { var l:ULong = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12285():void { var l:ULong = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12286():void { var l:ULong = (-128)+(w2); }
	def m12287():void { var l:ULong = (-128)+(w3); }
	def m12288():void { var l:ULong = (-128)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12289():void { var l:ULong = (-128)+(w5); }
	def m12290():void { var l:ULong = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m12291():void { var l:ULong = (-128)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m12292():void { var l:ULong = (-128)+(w8); }  
	def m12293():void { var l:ULong = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m12294():void { var l:ULong = (-128)+(0); }
	def m12295():void { var l:ULong = (-128)+(-0); }
	def m12296():void { var l:ULong = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12297():void { var l:ULong = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12298():void { var l:ULong = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12299():void { var l:ULong = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12300():void { var l:ULong = (-128)+(127); }
	def m12301():void { var l:ULong = (-128)+(-127); }
	def m12302():void { var l:ULong = (-128)+(128); }
	def m12303():void { var l:ULong = (-128)+(-128); }
	def m12304():void { var l:ULong = (-128)+(255); }
	def m12305():void { var l:ULong = (-128)+(-255); }
	def m12306():void { var l:ULong = (-128)+(256); }
	def m12307():void { var l:ULong = (-128)+(-256); }
	def m12308():void { var l:ULong = (-128)+(32767); }
	def m12309():void { var l:ULong = (-128)+(-32767); }
	def m12310():void { var l:ULong = (-128)+(32768); }
	def m12311():void { var l:ULong = (-128)+(-32768); }
	def m12312():void { var l:ULong = (-128)+(65535); }
	def m12313():void { var l:ULong = (-128)+(-65535); }
	def m12314():void { var l:ULong = (-128)+(65536); }
	def m12315():void { var l:ULong = (-128)+(-65536); }
	def m12316():void { var l:ULong = (-128)+(16777216); }
	def m12317():void { var l:ULong = (-128)+(-16777216); }
	def m12318():void { var l:ULong = (-128)+(16777217); }
	def m12319():void { var l:ULong = (-128)+(-16777217); }
	def m12320():void { var l:ULong = (-128)+(2147483647); }
	def m12321():void { var l:ULong = (-128)+(-2147483647); }
	def m12322():void { var l:ULong = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12323():void { var l:ULong = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12324():void { var l:ULong = (255)+(w2); }
	def m12325():void { var l:ULong = (255)+(w3); }
	def m12326():void { var l:ULong = (255)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12327():void { var l:ULong = (255)+(w5); }
	def m12328():void { var l:ULong = (255)+(w6); }  
	def m12329():void { var l:ULong = (255)+(w7); }
	def m12330():void { var l:ULong = (255)+(w8); }  
	def m12331():void { var l:ULong = (255)+(w9); }  
	def m12332():void { var l:ULong = (255)+(0); }
	def m12333():void { var l:ULong = (255)+(-0); }
	def m12334():void { var l:ULong = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12335():void { var l:ULong = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12336():void { var l:ULong = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12337():void { var l:ULong = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12338():void { var l:ULong = (255)+(127); }
	def m12339():void { var l:ULong = (255)+(-127); }
	def m12340():void { var l:ULong = (255)+(128); }
	def m12341():void { var l:ULong = (255)+(-128); }
	def m12342():void { var l:ULong = (255)+(255); }
	def m12343():void { var l:ULong = (255)+(-255); }
	def m12344():void { var l:ULong = (255)+(256); }
	def m12345():void { var l:ULong = (255)+(-256); }
	def m12346():void { var l:ULong = (255)+(32767); }
	def m12347():void { var l:ULong = (255)+(-32767); }
	def m12348():void { var l:ULong = (255)+(32768); }
	def m12349():void { var l:ULong = (255)+(-32768); }
	def m12350():void { var l:ULong = (255)+(65535); }
	def m12351():void { var l:ULong = (255)+(-65535); }
	def m12352():void { var l:ULong = (255)+(65536); }
	def m12353():void { var l:ULong = (255)+(-65536); }
	def m12354():void { var l:ULong = (255)+(16777216); }
	def m12355():void { var l:ULong = (255)+(-16777216); }
	def m12356():void { var l:ULong = (255)+(16777217); }
	def m12357():void { var l:ULong = (255)+(-16777217); }
	def m12358():void { var l:ULong = (255)+(2147483647); }
	def m12359():void { var l:ULong = (255)+(-2147483647); }
	def m12360():void { var l:ULong = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12361():void { var l:ULong = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12362():void { var l:ULong = (-255)+(w2); }
	def m12363():void { var l:ULong = (-255)+(w3); }
	def m12364():void { var l:ULong = (-255)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12365():void { var l:ULong = (-255)+(w5); }
	def m12366():void { var l:ULong = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m12367():void { var l:ULong = (-255)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m12368():void { var l:ULong = (-255)+(w8); }  
	def m12369():void { var l:ULong = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m12370():void { var l:ULong = (-255)+(0); }
	def m12371():void { var l:ULong = (-255)+(-0); }
	def m12372():void { var l:ULong = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12373():void { var l:ULong = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12374():void { var l:ULong = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12375():void { var l:ULong = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12376():void { var l:ULong = (-255)+(127); }
	def m12377():void { var l:ULong = (-255)+(-127); }
	def m12378():void { var l:ULong = (-255)+(128); }
	def m12379():void { var l:ULong = (-255)+(-128); }
	def m12380():void { var l:ULong = (-255)+(255); }
	def m12381():void { var l:ULong = (-255)+(-255); }
	def m12382():void { var l:ULong = (-255)+(256); }
	def m12383():void { var l:ULong = (-255)+(-256); }
	def m12384():void { var l:ULong = (-255)+(32767); }
	def m12385():void { var l:ULong = (-255)+(-32767); }
	def m12386():void { var l:ULong = (-255)+(32768); }
	def m12387():void { var l:ULong = (-255)+(-32768); }
	def m12388():void { var l:ULong = (-255)+(65535); }
	def m12389():void { var l:ULong = (-255)+(-65535); }
	def m12390():void { var l:ULong = (-255)+(65536); }
	def m12391():void { var l:ULong = (-255)+(-65536); }
	def m12392():void { var l:ULong = (-255)+(16777216); }
	def m12393():void { var l:ULong = (-255)+(-16777216); }
	def m12394():void { var l:ULong = (-255)+(16777217); }
	def m12395():void { var l:ULong = (-255)+(-16777217); }
	def m12396():void { var l:ULong = (-255)+(2147483647); }
	def m12397():void { var l:ULong = (-255)+(-2147483647); }
	def m12398():void { var l:ULong = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12399():void { var l:ULong = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12400():void { var l:ULong = (256)+(w2); }
	def m12401():void { var l:ULong = (256)+(w3); }
	def m12402():void { var l:ULong = (256)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12403():void { var l:ULong = (256)+(w5); }
	def m12404():void { var l:ULong = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m12405():void { var l:ULong = (256)+(w7); }
	def m12406():void { var l:ULong = (256)+(w8); }  
	def m12407():void { var l:ULong = (256)+(w9); }  
	def m12408():void { var l:ULong = (256)+(0); }
	def m12409():void { var l:ULong = (256)+(-0); }
	def m12410():void { var l:ULong = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12411():void { var l:ULong = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12412():void { var l:ULong = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12413():void { var l:ULong = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12414():void { var l:ULong = (256)+(127); }
	def m12415():void { var l:ULong = (256)+(-127); }
	def m12416():void { var l:ULong = (256)+(128); }
	def m12417():void { var l:ULong = (256)+(-128); }
	def m12418():void { var l:ULong = (256)+(255); }
	def m12419():void { var l:ULong = (256)+(-255); }
	def m12420():void { var l:ULong = (256)+(256); }
	def m12421():void { var l:ULong = (256)+(-256); }
	def m12422():void { var l:ULong = (256)+(32767); }
	def m12423():void { var l:ULong = (256)+(-32767); }
	def m12424():void { var l:ULong = (256)+(32768); }
	def m12425():void { var l:ULong = (256)+(-32768); }
	def m12426():void { var l:ULong = (256)+(65535); }
	def m12427():void { var l:ULong = (256)+(-65535); }
	def m12428():void { var l:ULong = (256)+(65536); }
	def m12429():void { var l:ULong = (256)+(-65536); }
	def m12430():void { var l:ULong = (256)+(16777216); }
	def m12431():void { var l:ULong = (256)+(-16777216); }
	def m12432():void { var l:ULong = (256)+(16777217); }
	def m12433():void { var l:ULong = (256)+(-16777217); }
	def m12434():void { var l:ULong = (256)+(2147483647); }
	def m12435():void { var l:ULong = (256)+(-2147483647); }
	def m12436():void { var l:ULong = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12437():void { var l:ULong = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12438():void { var l:ULong = (-256)+(w2); }
	def m12439():void { var l:ULong = (-256)+(w3); }
	def m12440():void { var l:ULong = (-256)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12441():void { var l:ULong = (-256)+(w5); }
	def m12442():void { var l:ULong = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m12443():void { var l:ULong = (-256)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m12444():void { var l:ULong = (-256)+(w8); }  
	def m12445():void { var l:ULong = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m12446():void { var l:ULong = (-256)+(0); }
	def m12447():void { var l:ULong = (-256)+(-0); }
	def m12448():void { var l:ULong = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12449():void { var l:ULong = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12450():void { var l:ULong = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12451():void { var l:ULong = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12452():void { var l:ULong = (-256)+(127); }
	def m12453():void { var l:ULong = (-256)+(-127); }
	def m12454():void { var l:ULong = (-256)+(128); }
	def m12455():void { var l:ULong = (-256)+(-128); }
	def m12456():void { var l:ULong = (-256)+(255); }
	def m12457():void { var l:ULong = (-256)+(-255); }
	def m12458():void { var l:ULong = (-256)+(256); }
	def m12459():void { var l:ULong = (-256)+(-256); }
	def m12460():void { var l:ULong = (-256)+(32767); }
	def m12461():void { var l:ULong = (-256)+(-32767); }
	def m12462():void { var l:ULong = (-256)+(32768); }
	def m12463():void { var l:ULong = (-256)+(-32768); }
	def m12464():void { var l:ULong = (-256)+(65535); }
	def m12465():void { var l:ULong = (-256)+(-65535); }
	def m12466():void { var l:ULong = (-256)+(65536); }
	def m12467():void { var l:ULong = (-256)+(-65536); }
	def m12468():void { var l:ULong = (-256)+(16777216); }
	def m12469():void { var l:ULong = (-256)+(-16777216); }
	def m12470():void { var l:ULong = (-256)+(16777217); }
	def m12471():void { var l:ULong = (-256)+(-16777217); }
	def m12472():void { var l:ULong = (-256)+(2147483647); }
	def m12473():void { var l:ULong = (-256)+(-2147483647); }
	def m12474():void { var l:ULong = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12475():void { var l:ULong = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12476():void { var l:ULong = (32767)+(w2); }
	def m12477():void { var l:ULong = (32767)+(w3); }
	def m12478():void { var l:ULong = (32767)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12479():void { var l:ULong = (32767)+(w5); }
	def m12480():void { var l:ULong = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m12481():void { var l:ULong = (32767)+(w7); }
	def m12482():void { var l:ULong = (32767)+(w8); }  
	def m12483():void { var l:ULong = (32767)+(w9); }  
	def m12484():void { var l:ULong = (32767)+(0); }
	def m12485():void { var l:ULong = (32767)+(-0); }
	def m12486():void { var l:ULong = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12487():void { var l:ULong = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12488():void { var l:ULong = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12489():void { var l:ULong = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12490():void { var l:ULong = (32767)+(127); }
	def m12491():void { var l:ULong = (32767)+(-127); }
	def m12492():void { var l:ULong = (32767)+(128); }
	def m12493():void { var l:ULong = (32767)+(-128); }
	def m12494():void { var l:ULong = (32767)+(255); }
	def m12495():void { var l:ULong = (32767)+(-255); }
	def m12496():void { var l:ULong = (32767)+(256); }
	def m12497():void { var l:ULong = (32767)+(-256); }
	def m12498():void { var l:ULong = (32767)+(32767); }
	def m12499():void { var l:ULong = (32767)+(-32767); }
	def m12500():void { var l:ULong = (32767)+(32768); }
	def m12501():void { var l:ULong = (32767)+(-32768); }
	def m12502():void { var l:ULong = (32767)+(65535); }
	def m12503():void { var l:ULong = (32767)+(-65535); }
	def m12504():void { var l:ULong = (32767)+(65536); }
	def m12505():void { var l:ULong = (32767)+(-65536); }
	def m12506():void { var l:ULong = (32767)+(16777216); }
	def m12507():void { var l:ULong = (32767)+(-16777216); }
	def m12508():void { var l:ULong = (32767)+(16777217); }
	def m12509():void { var l:ULong = (32767)+(-16777217); }
	def m12510():void { var l:ULong = (32767)+(2147483647); }
	def m12511():void { var l:ULong = (32767)+(-2147483647); }
	def m12512():void { var l:ULong = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12513():void { var l:ULong = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12514():void { var l:ULong = (-32767)+(w2); }
	def m12515():void { var l:ULong = (-32767)+(w3); }
	def m12516():void { var l:ULong = (-32767)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12517():void { var l:ULong = (-32767)+(w5); }
	def m12518():void { var l:ULong = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m12519():void { var l:ULong = (-32767)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m12520():void { var l:ULong = (-32767)+(w8); }  
	def m12521():void { var l:ULong = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m12522():void { var l:ULong = (-32767)+(0); }
	def m12523():void { var l:ULong = (-32767)+(-0); }
	def m12524():void { var l:ULong = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12525():void { var l:ULong = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12526():void { var l:ULong = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12527():void { var l:ULong = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12528():void { var l:ULong = (-32767)+(127); }
	def m12529():void { var l:ULong = (-32767)+(-127); }
	def m12530():void { var l:ULong = (-32767)+(128); }
	def m12531():void { var l:ULong = (-32767)+(-128); }
	def m12532():void { var l:ULong = (-32767)+(255); }
	def m12533():void { var l:ULong = (-32767)+(-255); }
	def m12534():void { var l:ULong = (-32767)+(256); }
	def m12535():void { var l:ULong = (-32767)+(-256); }
	def m12536():void { var l:ULong = (-32767)+(32767); }
	def m12537():void { var l:ULong = (-32767)+(-32767); }
	def m12538():void { var l:ULong = (-32767)+(32768); }
	def m12539():void { var l:ULong = (-32767)+(-32768); }
	def m12540():void { var l:ULong = (-32767)+(65535); }
	def m12541():void { var l:ULong = (-32767)+(-65535); }
	def m12542():void { var l:ULong = (-32767)+(65536); }
	def m12543():void { var l:ULong = (-32767)+(-65536); }
	def m12544():void { var l:ULong = (-32767)+(16777216); }
	def m12545():void { var l:ULong = (-32767)+(-16777216); }
	def m12546():void { var l:ULong = (-32767)+(16777217); }
	def m12547():void { var l:ULong = (-32767)+(-16777217); }
	def m12548():void { var l:ULong = (-32767)+(2147483647); }
	def m12549():void { var l:ULong = (-32767)+(-2147483647); }
	def m12550():void { var l:ULong = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12551():void { var l:ULong = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12552():void { var l:ULong = (32768)+(w2); }
	def m12553():void { var l:ULong = (32768)+(w3); }
	def m12554():void { var l:ULong = (32768)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12555():void { var l:ULong = (32768)+(w5); }
	def m12556():void { var l:ULong = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m12557():void { var l:ULong = (32768)+(w7); }
	def m12558():void { var l:ULong = (32768)+(w8); }  
	def m12559():void { var l:ULong = (32768)+(w9); }  
	def m12560():void { var l:ULong = (32768)+(0); }
	def m12561():void { var l:ULong = (32768)+(-0); }
	def m12562():void { var l:ULong = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12563():void { var l:ULong = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12564():void { var l:ULong = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12565():void { var l:ULong = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12566():void { var l:ULong = (32768)+(127); }
	def m12567():void { var l:ULong = (32768)+(-127); }
	def m12568():void { var l:ULong = (32768)+(128); }
	def m12569():void { var l:ULong = (32768)+(-128); }
	def m12570():void { var l:ULong = (32768)+(255); }
	def m12571():void { var l:ULong = (32768)+(-255); }
	def m12572():void { var l:ULong = (32768)+(256); }
	def m12573():void { var l:ULong = (32768)+(-256); }
	def m12574():void { var l:ULong = (32768)+(32767); }
	def m12575():void { var l:ULong = (32768)+(-32767); }
	def m12576():void { var l:ULong = (32768)+(32768); }
	def m12577():void { var l:ULong = (32768)+(-32768); }
	def m12578():void { var l:ULong = (32768)+(65535); }
	def m12579():void { var l:ULong = (32768)+(-65535); }
	def m12580():void { var l:ULong = (32768)+(65536); }
	def m12581():void { var l:ULong = (32768)+(-65536); }
	def m12582():void { var l:ULong = (32768)+(16777216); }
	def m12583():void { var l:ULong = (32768)+(-16777216); }
	def m12584():void { var l:ULong = (32768)+(16777217); }
	def m12585():void { var l:ULong = (32768)+(-16777217); }
	def m12586():void { var l:ULong = (32768)+(2147483647); }
	def m12587():void { var l:ULong = (32768)+(-2147483647); }
	def m12588():void { var l:ULong = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12589():void { var l:ULong = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12590():void { var l:ULong = (-32768)+(w2); }
	def m12591():void { var l:ULong = (-32768)+(w3); }
	def m12592():void { var l:ULong = (-32768)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12593():void { var l:ULong = (-32768)+(w5); }
	def m12594():void { var l:ULong = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m12595():void { var l:ULong = (-32768)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m12596():void { var l:ULong = (-32768)+(w8); }  
	def m12597():void { var l:ULong = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m12598():void { var l:ULong = (-32768)+(0); }
	def m12599():void { var l:ULong = (-32768)+(-0); }
	def m12600():void { var l:ULong = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12601():void { var l:ULong = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12602():void { var l:ULong = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12603():void { var l:ULong = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12604():void { var l:ULong = (-32768)+(127); }
	def m12605():void { var l:ULong = (-32768)+(-127); }
	def m12606():void { var l:ULong = (-32768)+(128); }
	def m12607():void { var l:ULong = (-32768)+(-128); }
	def m12608():void { var l:ULong = (-32768)+(255); }
	def m12609():void { var l:ULong = (-32768)+(-255); }
	def m12610():void { var l:ULong = (-32768)+(256); }
	def m12611():void { var l:ULong = (-32768)+(-256); }
	def m12612():void { var l:ULong = (-32768)+(32767); }
	def m12613():void { var l:ULong = (-32768)+(-32767); }
	def m12614():void { var l:ULong = (-32768)+(32768); }
	def m12615():void { var l:ULong = (-32768)+(-32768); }
	def m12616():void { var l:ULong = (-32768)+(65535); }
	def m12617():void { var l:ULong = (-32768)+(-65535); }
	def m12618():void { var l:ULong = (-32768)+(65536); }
	def m12619():void { var l:ULong = (-32768)+(-65536); }
	def m12620():void { var l:ULong = (-32768)+(16777216); }
	def m12621():void { var l:ULong = (-32768)+(-16777216); }
	def m12622():void { var l:ULong = (-32768)+(16777217); }
	def m12623():void { var l:ULong = (-32768)+(-16777217); }
	def m12624():void { var l:ULong = (-32768)+(2147483647); }
	def m12625():void { var l:ULong = (-32768)+(-2147483647); }
	def m12626():void { var l:ULong = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12627():void { var l:ULong = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12628():void { var l:ULong = (65535)+(w2); }
	def m12629():void { var l:ULong = (65535)+(w3); }
	def m12630():void { var l:ULong = (65535)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12631():void { var l:ULong = (65535)+(w5); }
	def m12632():void { var l:ULong = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m12633():void { var l:ULong = (65535)+(w7); }
	def m12634():void { var l:ULong = (65535)+(w8); }  
	def m12635():void { var l:ULong = (65535)+(w9); }  
	def m12636():void { var l:ULong = (65535)+(0); }
	def m12637():void { var l:ULong = (65535)+(-0); }
	def m12638():void { var l:ULong = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12639():void { var l:ULong = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12640():void { var l:ULong = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12641():void { var l:ULong = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12642():void { var l:ULong = (65535)+(127); }
	def m12643():void { var l:ULong = (65535)+(-127); }
	def m12644():void { var l:ULong = (65535)+(128); }
	def m12645():void { var l:ULong = (65535)+(-128); }
	def m12646():void { var l:ULong = (65535)+(255); }
	def m12647():void { var l:ULong = (65535)+(-255); }
	def m12648():void { var l:ULong = (65535)+(256); }
	def m12649():void { var l:ULong = (65535)+(-256); }
	def m12650():void { var l:ULong = (65535)+(32767); }
	def m12651():void { var l:ULong = (65535)+(-32767); }
	def m12652():void { var l:ULong = (65535)+(32768); }
	def m12653():void { var l:ULong = (65535)+(-32768); }
	def m12654():void { var l:ULong = (65535)+(65535); }
	def m12655():void { var l:ULong = (65535)+(-65535); }
	def m12656():void { var l:ULong = (65535)+(65536); }
	def m12657():void { var l:ULong = (65535)+(-65536); }
	def m12658():void { var l:ULong = (65535)+(16777216); }
	def m12659():void { var l:ULong = (65535)+(-16777216); }
	def m12660():void { var l:ULong = (65535)+(16777217); }
	def m12661():void { var l:ULong = (65535)+(-16777217); }
	def m12662():void { var l:ULong = (65535)+(2147483647); }
	def m12663():void { var l:ULong = (65535)+(-2147483647); }
	def m12664():void { var l:ULong = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12665():void { var l:ULong = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12666():void { var l:ULong = (-65535)+(w2); }
	def m12667():void { var l:ULong = (-65535)+(w3); }
	def m12668():void { var l:ULong = (-65535)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12669():void { var l:ULong = (-65535)+(w5); }
	def m12670():void { var l:ULong = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m12671():void { var l:ULong = (-65535)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m12672():void { var l:ULong = (-65535)+(w8); }  
	def m12673():void { var l:ULong = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m12674():void { var l:ULong = (-65535)+(0); }
	def m12675():void { var l:ULong = (-65535)+(-0); }
	def m12676():void { var l:ULong = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12677():void { var l:ULong = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12678():void { var l:ULong = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12679():void { var l:ULong = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12680():void { var l:ULong = (-65535)+(127); }
	def m12681():void { var l:ULong = (-65535)+(-127); }
	def m12682():void { var l:ULong = (-65535)+(128); }
	def m12683():void { var l:ULong = (-65535)+(-128); }
	def m12684():void { var l:ULong = (-65535)+(255); }
	def m12685():void { var l:ULong = (-65535)+(-255); }
	def m12686():void { var l:ULong = (-65535)+(256); }
	def m12687():void { var l:ULong = (-65535)+(-256); }
	def m12688():void { var l:ULong = (-65535)+(32767); }
	def m12689():void { var l:ULong = (-65535)+(-32767); }
	def m12690():void { var l:ULong = (-65535)+(32768); }
	def m12691():void { var l:ULong = (-65535)+(-32768); }
	def m12692():void { var l:ULong = (-65535)+(65535); }
	def m12693():void { var l:ULong = (-65535)+(-65535); }
	def m12694():void { var l:ULong = (-65535)+(65536); }
	def m12695():void { var l:ULong = (-65535)+(-65536); }
	def m12696():void { var l:ULong = (-65535)+(16777216); }
	def m12697():void { var l:ULong = (-65535)+(-16777216); }
	def m12698():void { var l:ULong = (-65535)+(16777217); }
	def m12699():void { var l:ULong = (-65535)+(-16777217); }
	def m12700():void { var l:ULong = (-65535)+(2147483647); }
	def m12701():void { var l:ULong = (-65535)+(-2147483647); }
	def m12702():void { var l:ULong = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12703():void { var l:ULong = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12704():void { var l:ULong = (65536)+(w2); }
	def m12705():void { var l:ULong = (65536)+(w3); }
	def m12706():void { var l:ULong = (65536)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12707():void { var l:ULong = (65536)+(w5); }
	def m12708():void { var l:ULong = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m12709():void { var l:ULong = (65536)+(w7); }
	def m12710():void { var l:ULong = (65536)+(w8); }  
	def m12711():void { var l:ULong = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m12712():void { var l:ULong = (65536)+(0); }
	def m12713():void { var l:ULong = (65536)+(-0); }
	def m12714():void { var l:ULong = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12715():void { var l:ULong = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12716():void { var l:ULong = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12717():void { var l:ULong = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12718():void { var l:ULong = (65536)+(127); }
	def m12719():void { var l:ULong = (65536)+(-127); }
	def m12720():void { var l:ULong = (65536)+(128); }
	def m12721():void { var l:ULong = (65536)+(-128); }
	def m12722():void { var l:ULong = (65536)+(255); }
	def m12723():void { var l:ULong = (65536)+(-255); }
	def m12724():void { var l:ULong = (65536)+(256); }
	def m12725():void { var l:ULong = (65536)+(-256); }
	def m12726():void { var l:ULong = (65536)+(32767); }
	def m12727():void { var l:ULong = (65536)+(-32767); }
	def m12728():void { var l:ULong = (65536)+(32768); }
	def m12729():void { var l:ULong = (65536)+(-32768); }
	def m12730():void { var l:ULong = (65536)+(65535); }
	def m12731():void { var l:ULong = (65536)+(-65535); }
	def m12732():void { var l:ULong = (65536)+(65536); }
	def m12733():void { var l:ULong = (65536)+(-65536); }
	def m12734():void { var l:ULong = (65536)+(16777216); }
	def m12735():void { var l:ULong = (65536)+(-16777216); }
	def m12736():void { var l:ULong = (65536)+(16777217); }
	def m12737():void { var l:ULong = (65536)+(-16777217); }
	def m12738():void { var l:ULong = (65536)+(2147483647); }
	def m12739():void { var l:ULong = (65536)+(-2147483647); }
	def m12740():void { var l:ULong = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12741():void { var l:ULong = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12742():void { var l:ULong = (-65536)+(w2); }
	def m12743():void { var l:ULong = (-65536)+(w3); }
	def m12744():void { var l:ULong = (-65536)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12745():void { var l:ULong = (-65536)+(w5); }
	def m12746():void { var l:ULong = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m12747():void { var l:ULong = (-65536)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m12748():void { var l:ULong = (-65536)+(w8); }  
	def m12749():void { var l:ULong = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m12750():void { var l:ULong = (-65536)+(0); }
	def m12751():void { var l:ULong = (-65536)+(-0); }
	def m12752():void { var l:ULong = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12753():void { var l:ULong = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12754():void { var l:ULong = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12755():void { var l:ULong = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12756():void { var l:ULong = (-65536)+(127); }
	def m12757():void { var l:ULong = (-65536)+(-127); }
	def m12758():void { var l:ULong = (-65536)+(128); }
	def m12759():void { var l:ULong = (-65536)+(-128); }
	def m12760():void { var l:ULong = (-65536)+(255); }
	def m12761():void { var l:ULong = (-65536)+(-255); }
	def m12762():void { var l:ULong = (-65536)+(256); }
	def m12763():void { var l:ULong = (-65536)+(-256); }
	def m12764():void { var l:ULong = (-65536)+(32767); }
	def m12765():void { var l:ULong = (-65536)+(-32767); }
	def m12766():void { var l:ULong = (-65536)+(32768); }
	def m12767():void { var l:ULong = (-65536)+(-32768); }
	def m12768():void { var l:ULong = (-65536)+(65535); }
	def m12769():void { var l:ULong = (-65536)+(-65535); }
	def m12770():void { var l:ULong = (-65536)+(65536); }
	def m12771():void { var l:ULong = (-65536)+(-65536); }
	def m12772():void { var l:ULong = (-65536)+(16777216); }
	def m12773():void { var l:ULong = (-65536)+(-16777216); }
	def m12774():void { var l:ULong = (-65536)+(16777217); }
	def m12775():void { var l:ULong = (-65536)+(-16777217); }
	def m12776():void { var l:ULong = (-65536)+(2147483647); }
	def m12777():void { var l:ULong = (-65536)+(-2147483647); }
	def m12778():void { var l:ULong = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12779():void { var l:ULong = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12780():void { var l:ULong = (16777216)+(w2); }
	def m12781():void { var l:ULong = (16777216)+(w3); }
	def m12782():void { var l:ULong = (16777216)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12783():void { var l:ULong = (16777216)+(w5); }
	def m12784():void { var l:ULong = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m12785():void { var l:ULong = (16777216)+(w7); }
	def m12786():void { var l:ULong = (16777216)+(w8); }  
	def m12787():void { var l:ULong = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m12788():void { var l:ULong = (16777216)+(0); }
	def m12789():void { var l:ULong = (16777216)+(-0); }
	def m12790():void { var l:ULong = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12791():void { var l:ULong = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12792():void { var l:ULong = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12793():void { var l:ULong = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12794():void { var l:ULong = (16777216)+(127); }
	def m12795():void { var l:ULong = (16777216)+(-127); }
	def m12796():void { var l:ULong = (16777216)+(128); }
	def m12797():void { var l:ULong = (16777216)+(-128); }
	def m12798():void { var l:ULong = (16777216)+(255); }
	def m12799():void { var l:ULong = (16777216)+(-255); }
	def m12800():void { var l:ULong = (16777216)+(256); }
	def m12801():void { var l:ULong = (16777216)+(-256); }
	def m12802():void { var l:ULong = (16777216)+(32767); }
	def m12803():void { var l:ULong = (16777216)+(-32767); }
	def m12804():void { var l:ULong = (16777216)+(32768); }
	def m12805():void { var l:ULong = (16777216)+(-32768); }
	def m12806():void { var l:ULong = (16777216)+(65535); }
	def m12807():void { var l:ULong = (16777216)+(-65535); }
	def m12808():void { var l:ULong = (16777216)+(65536); }
	def m12809():void { var l:ULong = (16777216)+(-65536); }
	def m12810():void { var l:ULong = (16777216)+(16777216); }
	def m12811():void { var l:ULong = (16777216)+(-16777216); }
	def m12812():void { var l:ULong = (16777216)+(16777217); }
	def m12813():void { var l:ULong = (16777216)+(-16777217); }
	def m12814():void { var l:ULong = (16777216)+(2147483647); }
	def m12815():void { var l:ULong = (16777216)+(-2147483647); }
	def m12816():void { var l:ULong = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12817():void { var l:ULong = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12818():void { var l:ULong = (-16777216)+(w2); }
	def m12819():void { var l:ULong = (-16777216)+(w3); }
	def m12820():void { var l:ULong = (-16777216)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12821():void { var l:ULong = (-16777216)+(w5); }
	def m12822():void { var l:ULong = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m12823():void { var l:ULong = (-16777216)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m12824():void { var l:ULong = (-16777216)+(w8); }  
	def m12825():void { var l:ULong = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m12826():void { var l:ULong = (-16777216)+(0); }
	def m12827():void { var l:ULong = (-16777216)+(-0); }
	def m12828():void { var l:ULong = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12829():void { var l:ULong = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12830():void { var l:ULong = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12831():void { var l:ULong = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12832():void { var l:ULong = (-16777216)+(127); }
	def m12833():void { var l:ULong = (-16777216)+(-127); }
	def m12834():void { var l:ULong = (-16777216)+(128); }
	def m12835():void { var l:ULong = (-16777216)+(-128); }
	def m12836():void { var l:ULong = (-16777216)+(255); }
	def m12837():void { var l:ULong = (-16777216)+(-255); }
	def m12838():void { var l:ULong = (-16777216)+(256); }
	def m12839():void { var l:ULong = (-16777216)+(-256); }
	def m12840():void { var l:ULong = (-16777216)+(32767); }
	def m12841():void { var l:ULong = (-16777216)+(-32767); }
	def m12842():void { var l:ULong = (-16777216)+(32768); }
	def m12843():void { var l:ULong = (-16777216)+(-32768); }
	def m12844():void { var l:ULong = (-16777216)+(65535); }
	def m12845():void { var l:ULong = (-16777216)+(-65535); }
	def m12846():void { var l:ULong = (-16777216)+(65536); }
	def m12847():void { var l:ULong = (-16777216)+(-65536); }
	def m12848():void { var l:ULong = (-16777216)+(16777216); }
	def m12849():void { var l:ULong = (-16777216)+(-16777216); }
	def m12850():void { var l:ULong = (-16777216)+(16777217); }
	def m12851():void { var l:ULong = (-16777216)+(-16777217); }
	def m12852():void { var l:ULong = (-16777216)+(2147483647); }
	def m12853():void { var l:ULong = (-16777216)+(-2147483647); }
	def m12854():void { var l:ULong = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12855():void { var l:ULong = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12856():void { var l:ULong = (16777217)+(w2); }
	def m12857():void { var l:ULong = (16777217)+(w3); }
	def m12858():void { var l:ULong = (16777217)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12859():void { var l:ULong = (16777217)+(w5); }
	def m12860():void { var l:ULong = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m12861():void { var l:ULong = (16777217)+(w7); }
	def m12862():void { var l:ULong = (16777217)+(w8); }  
	def m12863():void { var l:ULong = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m12864():void { var l:ULong = (16777217)+(0); }
	def m12865():void { var l:ULong = (16777217)+(-0); }
	def m12866():void { var l:ULong = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12867():void { var l:ULong = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12868():void { var l:ULong = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12869():void { var l:ULong = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12870():void { var l:ULong = (16777217)+(127); }
	def m12871():void { var l:ULong = (16777217)+(-127); }
	def m12872():void { var l:ULong = (16777217)+(128); }
	def m12873():void { var l:ULong = (16777217)+(-128); }
	def m12874():void { var l:ULong = (16777217)+(255); }
	def m12875():void { var l:ULong = (16777217)+(-255); }
	def m12876():void { var l:ULong = (16777217)+(256); }
	def m12877():void { var l:ULong = (16777217)+(-256); }
	def m12878():void { var l:ULong = (16777217)+(32767); }
	def m12879():void { var l:ULong = (16777217)+(-32767); }
	def m12880():void { var l:ULong = (16777217)+(32768); }
	def m12881():void { var l:ULong = (16777217)+(-32768); }
	def m12882():void { var l:ULong = (16777217)+(65535); }
	def m12883():void { var l:ULong = (16777217)+(-65535); }
	def m12884():void { var l:ULong = (16777217)+(65536); }
	def m12885():void { var l:ULong = (16777217)+(-65536); }
	def m12886():void { var l:ULong = (16777217)+(16777216); }
	def m12887():void { var l:ULong = (16777217)+(-16777216); }
	def m12888():void { var l:ULong = (16777217)+(16777217); }
	def m12889():void { var l:ULong = (16777217)+(-16777217); }
	def m12890():void { var l:ULong = (16777217)+(2147483647); }
	def m12891():void { var l:ULong = (16777217)+(-2147483647); }
	def m12892():void { var l:ULong = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12893():void { var l:ULong = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12894():void { var l:ULong = (-16777217)+(w2); }
	def m12895():void { var l:ULong = (-16777217)+(w3); }
	def m12896():void { var l:ULong = (-16777217)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12897():void { var l:ULong = (-16777217)+(w5); }
	def m12898():void { var l:ULong = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m12899():void { var l:ULong = (-16777217)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m12900():void { var l:ULong = (-16777217)+(w8); }  
	def m12901():void { var l:ULong = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m12902():void { var l:ULong = (-16777217)+(0); }
	def m12903():void { var l:ULong = (-16777217)+(-0); }
	def m12904():void { var l:ULong = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12905():void { var l:ULong = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12906():void { var l:ULong = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12907():void { var l:ULong = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12908():void { var l:ULong = (-16777217)+(127); }
	def m12909():void { var l:ULong = (-16777217)+(-127); }
	def m12910():void { var l:ULong = (-16777217)+(128); }
	def m12911():void { var l:ULong = (-16777217)+(-128); }
	def m12912():void { var l:ULong = (-16777217)+(255); }
	def m12913():void { var l:ULong = (-16777217)+(-255); }
	def m12914():void { var l:ULong = (-16777217)+(256); }
	def m12915():void { var l:ULong = (-16777217)+(-256); }
	def m12916():void { var l:ULong = (-16777217)+(32767); }
	def m12917():void { var l:ULong = (-16777217)+(-32767); }
	def m12918():void { var l:ULong = (-16777217)+(32768); }
	def m12919():void { var l:ULong = (-16777217)+(-32768); }
	def m12920():void { var l:ULong = (-16777217)+(65535); }
	def m12921():void { var l:ULong = (-16777217)+(-65535); }
	def m12922():void { var l:ULong = (-16777217)+(65536); }
	def m12923():void { var l:ULong = (-16777217)+(-65536); }
	def m12924():void { var l:ULong = (-16777217)+(16777216); }
	def m12925():void { var l:ULong = (-16777217)+(-16777216); }
	def m12926():void { var l:ULong = (-16777217)+(16777217); }
	def m12927():void { var l:ULong = (-16777217)+(-16777217); }
	def m12928():void { var l:ULong = (-16777217)+(2147483647); }
	def m12929():void { var l:ULong = (-16777217)+(-2147483647); }
	def m12930():void { var l:ULong = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12931():void { var l:ULong = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12932():void { var l:ULong = (2147483647)+(w2); }
	def m12933():void { var l:ULong = (2147483647)+(w3); }
	def m12934():void { var l:ULong = (2147483647)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12935():void { var l:ULong = (2147483647)+(w5); }
	def m12936():void { var l:ULong = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m12937():void { var l:ULong = (2147483647)+(w7); }
	def m12938():void { var l:ULong = (2147483647)+(w8); }  
	def m12939():void { var l:ULong = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m12940():void { var l:ULong = (2147483647)+(0); }
	def m12941():void { var l:ULong = (2147483647)+(-0); }
	def m12942():void { var l:ULong = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12943():void { var l:ULong = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12944():void { var l:ULong = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12945():void { var l:ULong = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12946():void { var l:ULong = (2147483647)+(127); }
	def m12947():void { var l:ULong = (2147483647)+(-127); }
	def m12948():void { var l:ULong = (2147483647)+(128); }
	def m12949():void { var l:ULong = (2147483647)+(-128); }
	def m12950():void { var l:ULong = (2147483647)+(255); }
	def m12951():void { var l:ULong = (2147483647)+(-255); }
	def m12952():void { var l:ULong = (2147483647)+(256); }
	def m12953():void { var l:ULong = (2147483647)+(-256); }
	def m12954():void { var l:ULong = (2147483647)+(32767); }
	def m12955():void { var l:ULong = (2147483647)+(-32767); }
	def m12956():void { var l:ULong = (2147483647)+(32768); }
	def m12957():void { var l:ULong = (2147483647)+(-32768); }
	def m12958():void { var l:ULong = (2147483647)+(65535); }
	def m12959():void { var l:ULong = (2147483647)+(-65535); }
	def m12960():void { var l:ULong = (2147483647)+(65536); }
	def m12961():void { var l:ULong = (2147483647)+(-65536); }
	def m12962():void { var l:ULong = (2147483647)+(16777216); }
	def m12963():void { var l:ULong = (2147483647)+(-16777216); }
	def m12964():void { var l:ULong = (2147483647)+(16777217); }
	def m12965():void { var l:ULong = (2147483647)+(-16777217); }
	def m12966():void { var l:ULong = (2147483647)+(2147483647); }
	def m12967():void { var l:ULong = (2147483647)+(-2147483647); }
	def m12968():void { var l:ULong = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12969():void { var l:ULong = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12970():void { var l:ULong = (-2147483647)+(w2); }
	def m12971():void { var l:ULong = (-2147483647)+(w3); }
	def m12972():void { var l:ULong = (-2147483647)+(w4); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m12973():void { var l:ULong = (-2147483647)+(w5); }
	def m12974():void { var l:ULong = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m12975():void { var l:ULong = (-2147483647)+(w7); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m12976():void { var l:ULong = (-2147483647)+(w8); }  
	def m12977():void { var l:ULong = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m12978():void { var l:ULong = (-2147483647)+(0); }
	def m12979():void { var l:ULong = (-2147483647)+(-0); }
	def m12980():void { var l:ULong = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12981():void { var l:ULong = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m12982():void { var l:ULong = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12983():void { var l:ULong = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m12984():void { var l:ULong = (-2147483647)+(127); }
	def m12985():void { var l:ULong = (-2147483647)+(-127); }
	def m12986():void { var l:ULong = (-2147483647)+(128); }
	def m12987():void { var l:ULong = (-2147483647)+(-128); }
	def m12988():void { var l:ULong = (-2147483647)+(255); }
	def m12989():void { var l:ULong = (-2147483647)+(-255); }
	def m12990():void { var l:ULong = (-2147483647)+(256); }
	def m12991():void { var l:ULong = (-2147483647)+(-256); }
	def m12992():void { var l:ULong = (-2147483647)+(32767); }
	def m12993():void { var l:ULong = (-2147483647)+(-32767); }
	def m12994():void { var l:ULong = (-2147483647)+(32768); }
	def m12995():void { var l:ULong = (-2147483647)+(-32768); }
	def m12996():void { var l:ULong = (-2147483647)+(65535); }
	def m12997():void { var l:ULong = (-2147483647)+(-65535); }
	def m12998():void { var l:ULong = (-2147483647)+(65536); }
	def m12999():void { var l:ULong = (-2147483647)+(-65536); }
	def m13000():void { var l:ULong = (-2147483647)+(16777216); }
	def m13001():void { var l:ULong = (-2147483647)+(-16777216); }
	def m13002():void { var l:ULong = (-2147483647)+(16777217); }
	def m13003():void { var l:ULong = (-2147483647)+(-16777217); }
	def m13004():void { var l:ULong = (-2147483647)+(2147483647); }
	def m13005():void { var l:ULong = (-2147483647)+(-2147483647); }
	def m13006():void { var l:UShort = (w0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13007():void { var l:UShort = (w0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13008():void { var l:UShort = (w0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13009():void { var l:UShort = (w0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13010():void { var l:UShort = (w0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13011():void { var l:UShort = (w0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13012():void { var l:UShort = (w0)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13013():void { var l:UShort = (w0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13014():void { var l:UShort = (w0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13015():void { var l:UShort = (w0)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13016():void { var l:UShort = (w0)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13017():void { var l:UShort = (w0)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13018():void { var l:UShort = (w0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13019():void { var l:UShort = (w0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13020():void { var l:UShort = (w0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13021():void { var l:UShort = (w0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13022():void { var l:UShort = (w0)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13023():void { var l:UShort = (w0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13024():void { var l:UShort = (w0)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13025():void { var l:UShort = (w0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13026():void { var l:UShort = (w0)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13027():void { var l:UShort = (w0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13028():void { var l:UShort = (w0)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13029():void { var l:UShort = (w0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13030():void { var l:UShort = (w0)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13031():void { var l:UShort = (w0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13032():void { var l:UShort = (w0)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13033():void { var l:UShort = (w0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13034():void { var l:UShort = (w0)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13035():void { var l:UShort = (w0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13036():void { var l:UShort = (w0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13037():void { var l:UShort = (w0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13038():void { var l:UShort = (w0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13039():void { var l:UShort = (w0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13040():void { var l:UShort = (w0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13041():void { var l:UShort = (w0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13042():void { var l:UShort = (w0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13043():void { var l:UShort = (w0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w0) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13044():void { var l:UShort = (w1)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13045():void { var l:UShort = (w1)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13046():void { var l:UShort = (w1)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13047():void { var l:UShort = (w1)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13048():void { var l:UShort = (w1)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13049():void { var l:UShort = (w1)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13050():void { var l:UShort = (w1)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13051():void { var l:UShort = (w1)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13052():void { var l:UShort = (w1)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13053():void { var l:UShort = (w1)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13054():void { var l:UShort = (w1)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13055():void { var l:UShort = (w1)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13056():void { var l:UShort = (w1)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13057():void { var l:UShort = (w1)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13058():void { var l:UShort = (w1)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13059():void { var l:UShort = (w1)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13060():void { var l:UShort = (w1)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13061():void { var l:UShort = (w1)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13062():void { var l:UShort = (w1)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13063():void { var l:UShort = (w1)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13064():void { var l:UShort = (w1)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13065():void { var l:UShort = (w1)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13066():void { var l:UShort = (w1)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13067():void { var l:UShort = (w1)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13068():void { var l:UShort = (w1)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13069():void { var l:UShort = (w1)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13070():void { var l:UShort = (w1)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13071():void { var l:UShort = (w1)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13072():void { var l:UShort = (w1)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13073():void { var l:UShort = (w1)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13074():void { var l:UShort = (w1)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13075():void { var l:UShort = (w1)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13076():void { var l:UShort = (w1)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13077():void { var l:UShort = (w1)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13078():void { var l:UShort = (w1)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13079():void { var l:UShort = (w1)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13080():void { var l:UShort = (w1)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13081():void { var l:UShort = (w1)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w1) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13082():void { var l:UShort = (w2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13083():void { var l:UShort = (w2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13084():void { var l:UShort = (w2)+(w2); }
	def m13085():void { var l:UShort = (w2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13086():void { var l:UShort = (w2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13087():void { var l:UShort = (w2)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13088():void { var l:UShort = (w2)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Byte, x10.lang.UByte)		 Type: x10.lang.Byte)
	def m13089():void { var l:UShort = (w2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13090():void { var l:UShort = (w2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13091():void { var l:UShort = (w2)+(w9); }  
	def m13092():void { var l:UShort = (w2)+(0); }  
	def m13093():void { var l:UShort = (w2)+(-0); }  
	def m13094():void { var l:UShort = (w2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13095():void { var l:UShort = (w2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13096():void { var l:UShort = (w2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13097():void { var l:UShort = (w2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13098():void { var l:UShort = (w2)+(127); }  
	def m13099():void { var l:UShort = (w2)+(-127); }  
	def m13100():void { var l:UShort = (w2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13101():void { var l:UShort = (w2)+(-128); }  
	def m13102():void { var l:UShort = (w2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13103():void { var l:UShort = (w2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13104():void { var l:UShort = (w2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13105():void { var l:UShort = (w2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13106():void { var l:UShort = (w2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13107():void { var l:UShort = (w2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13108():void { var l:UShort = (w2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13109():void { var l:UShort = (w2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13110():void { var l:UShort = (w2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13111():void { var l:UShort = (w2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13112():void { var l:UShort = (w2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13113():void { var l:UShort = (w2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13114():void { var l:UShort = (w2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13115():void { var l:UShort = (w2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13116():void { var l:UShort = (w2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13117():void { var l:UShort = (w2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13118():void { var l:UShort = (w2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13119():void { var l:UShort = (w2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2)) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13120():void { var l:UShort = (w3)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13121():void { var l:UShort = (w3)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13122():void { var l:UShort = (w3)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13123():void { var l:UShort = (w3)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13124():void { var l:UShort = (w3)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13125():void { var l:UShort = (w3)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13126():void { var l:UShort = (w3)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UByte)		 Type: x10.lang.Int)
	def m13127():void { var l:UShort = (w3)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UInt)		 Type: x10.lang.Int)
	def m13128():void { var l:UShort = (w3)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13129():void { var l:UShort = (w3)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int, x10.lang.UShort)		 Type: x10.lang.Int)
	def m13130():void { var l:UShort = (w3)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13131():void { var l:UShort = (w3)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13132():void { var l:UShort = (w3)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13133():void { var l:UShort = (w3)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13134():void { var l:UShort = (w3)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13135():void { var l:UShort = (w3)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13136():void { var l:UShort = (w3)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13137():void { var l:UShort = (w3)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13138():void { var l:UShort = (w3)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13139():void { var l:UShort = (w3)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13140():void { var l:UShort = (w3)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13141():void { var l:UShort = (w3)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13142():void { var l:UShort = (w3)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13143():void { var l:UShort = (w3)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13144():void { var l:UShort = (w3)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13145():void { var l:UShort = (w3)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13146():void { var l:UShort = (w3)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13147():void { var l:UShort = (w3)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13148():void { var l:UShort = (w3)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13149():void { var l:UShort = (w3)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13150():void { var l:UShort = (w3)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13151():void { var l:UShort = (w3)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13152():void { var l:UShort = (w3)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13153():void { var l:UShort = (w3)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13154():void { var l:UShort = (w3)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13155():void { var l:UShort = (w3)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13156():void { var l:UShort = (w3)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13157():void { var l:UShort = (w3)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w3) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13158():void { var l:UShort = (w4)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13159():void { var l:UShort = (w4)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13160():void { var l:UShort = (w4)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13161():void { var l:UShort = (w4)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13162():void { var l:UShort = (w4)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13163():void { var l:UShort = (w4)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13164():void { var l:UShort = (w4)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UByte)		 Type: x10.lang.Long)
	def m13165():void { var l:UShort = (w4)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UInt)		 Type: x10.lang.Long)
	def m13166():void { var l:UShort = (w4)+(w8); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.ULong)		 Type: x10.lang.Long)
	def m13167():void { var l:UShort = (w4)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Long, x10.lang.UShort)		 Type: x10.lang.Long)
	def m13168():void { var l:UShort = (w4)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13169():void { var l:UShort = (w4)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13170():void { var l:UShort = (w4)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13171():void { var l:UShort = (w4)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13172():void { var l:UShort = (w4)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13173():void { var l:UShort = (w4)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13174():void { var l:UShort = (w4)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13175():void { var l:UShort = (w4)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13176():void { var l:UShort = (w4)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13177():void { var l:UShort = (w4)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13178():void { var l:UShort = (w4)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13179():void { var l:UShort = (w4)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13180():void { var l:UShort = (w4)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13181():void { var l:UShort = (w4)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13182():void { var l:UShort = (w4)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13183():void { var l:UShort = (w4)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13184():void { var l:UShort = (w4)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13185():void { var l:UShort = (w4)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13186():void { var l:UShort = (w4)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13187():void { var l:UShort = (w4)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13188():void { var l:UShort = (w4)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13189():void { var l:UShort = (w4)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13190():void { var l:UShort = (w4)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13191():void { var l:UShort = (w4)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13192():void { var l:UShort = (w4)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13193():void { var l:UShort = (w4)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13194():void { var l:UShort = (w4)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13195():void { var l:UShort = (w4)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w4) + x10.lang.Long.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13196():void { var l:UShort = (w5)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13197():void { var l:UShort = (w5)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13198():void { var l:UShort = (w5)+(w2); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13199():void { var l:UShort = (w5)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13200():void { var l:UShort = (w5)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13201():void { var l:UShort = (w5)+(w5); }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + (SignedAndUnsignedTests.this.w5)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13202():void { var l:UShort = (w5)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UByte)		 Type: x10.lang.Short)
	def m13203():void { var l:UShort = (w5)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13204():void { var l:UShort = (w5)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13205():void { var l:UShort = (w5)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Short, x10.lang.UShort)		 Type: x10.lang.Short)
	def m13206():void { var l:UShort = (w5)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13207():void { var l:UShort = (w5)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13208():void { var l:UShort = (w5)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13209():void { var l:UShort = (w5)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13210():void { var l:UShort = (w5)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13211():void { var l:UShort = (w5)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13212():void { var l:UShort = (w5)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13213():void { var l:UShort = (w5)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13214():void { var l:UShort = (w5)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13215():void { var l:UShort = (w5)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13216():void { var l:UShort = (w5)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13217():void { var l:UShort = (w5)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13218():void { var l:UShort = (w5)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13219():void { var l:UShort = (w5)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13220():void { var l:UShort = (w5)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13221():void { var l:UShort = (w5)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13222():void { var l:UShort = (w5)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13223():void { var l:UShort = (w5)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w5) + x10.lang.Short.operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m13224():void { var l:UShort = (w5)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13225():void { var l:UShort = (w5)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13226():void { var l:UShort = (w5)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13227():void { var l:UShort = (w5)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13228():void { var l:UShort = (w5)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13229():void { var l:UShort = (w5)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13230():void { var l:UShort = (w5)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13231():void { var l:UShort = (w5)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13232():void { var l:UShort = (w5)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13233():void { var l:UShort = (w5)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5)) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13234():void { var l:UShort = (w6)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13235():void { var l:UShort = (w6)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13236():void { var l:UShort = (w6)+(w2); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Byte)		 Type: x10.lang.UByte)
	def m13237():void { var l:UShort = (w6)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int)		 Type: x10.lang.UByte)
	def m13238():void { var l:UShort = (w6)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Long)		 Type: x10.lang.UByte)
	def m13239():void { var l:UShort = (w6)+(w5); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Short)		 Type: x10.lang.UByte)
	def m13240():void { var l:UShort = (w6)+(w6); }
	def m13241():void { var l:UShort = (w6)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13242():void { var l:UShort = (w6)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13243():void { var l:UShort = (w6)+(w9); }  
	def m13244():void { var l:UShort = (w6)+(0); }  
	def m13245():void { var l:UShort = (w6)+(-0); }  
	def m13246():void { var l:UShort = (w6)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13247():void { var l:UShort = (w6)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13248():void { var l:UShort = (w6)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13249():void { var l:UShort = (w6)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13250():void { var l:UShort = (w6)+(127); }  
	def m13251():void { var l:UShort = (w6)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-127})		 Type: x10.lang.UByte)
	def m13252():void { var l:UShort = (w6)+(128); }  
	def m13253():void { var l:UShort = (w6)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-128})		 Type: x10.lang.UByte)
	def m13254():void { var l:UShort = (w6)+(255); }  
	def m13255():void { var l:UShort = (w6)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-255})		 Type: x10.lang.UByte)
	def m13256():void { var l:UShort = (w6)+(256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==256})		 Type: x10.lang.UByte)
	def m13257():void { var l:UShort = (w6)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-256})		 Type: x10.lang.UByte)
	def m13258():void { var l:UShort = (w6)+(32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32767})		 Type: x10.lang.UByte)
	def m13259():void { var l:UShort = (w6)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32767})		 Type: x10.lang.UByte)
	def m13260():void { var l:UShort = (w6)+(32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==32768})		 Type: x10.lang.UByte)
	def m13261():void { var l:UShort = (w6)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-32768})		 Type: x10.lang.UByte)
	def m13262():void { var l:UShort = (w6)+(65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65535})		 Type: x10.lang.UByte)
	def m13263():void { var l:UShort = (w6)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65535})		 Type: x10.lang.UByte)
	def m13264():void { var l:UShort = (w6)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==65536})		 Type: x10.lang.UByte)
	def m13265():void { var l:UShort = (w6)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-65536})		 Type: x10.lang.UByte)
	def m13266():void { var l:UShort = (w6)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777216})		 Type: x10.lang.UByte)
	def m13267():void { var l:UShort = (w6)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777216})		 Type: x10.lang.UByte)
	def m13268():void { var l:UShort = (w6)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==16777217})		 Type: x10.lang.UByte)
	def m13269():void { var l:UShort = (w6)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-16777217})		 Type: x10.lang.UByte)
	def m13270():void { var l:UShort = (w6)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==2147483647})		 Type: x10.lang.UByte)
	def m13271():void { var l:UShort = (w6)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UByte, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UByte)
	def m13272():void { var l:UShort = (w7)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13273():void { var l:UShort = (w7)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13274():void { var l:UShort = (w7)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13275():void { var l:UShort = (w7)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int)		 Type: x10.lang.UInt)
	def m13276():void { var l:UShort = (w7)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Long)		 Type: x10.lang.UInt)
	def m13277():void { var l:UShort = (w7)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13278():void { var l:UShort = (w7)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13279():void { var l:UShort = (w7)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13280():void { var l:UShort = (w7)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13281():void { var l:UShort = (w7)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13282():void { var l:UShort = (w7)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13283():void { var l:UShort = (w7)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13284():void { var l:UShort = (w7)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13285():void { var l:UShort = (w7)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13286():void { var l:UShort = (w7)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13287():void { var l:UShort = (w7)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13288():void { var l:UShort = (w7)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13289():void { var l:UShort = (w7)+(-127); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-127})		 Type: x10.lang.UInt)
	def m13290():void { var l:UShort = (w7)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13291():void { var l:UShort = (w7)+(-128); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-128})		 Type: x10.lang.UInt)
	def m13292():void { var l:UShort = (w7)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13293():void { var l:UShort = (w7)+(-255); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-255})		 Type: x10.lang.UInt)
	def m13294():void { var l:UShort = (w7)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13295():void { var l:UShort = (w7)+(-256); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-256})		 Type: x10.lang.UInt)
	def m13296():void { var l:UShort = (w7)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13297():void { var l:UShort = (w7)+(-32767); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32767})		 Type: x10.lang.UInt)
	def m13298():void { var l:UShort = (w7)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13299():void { var l:UShort = (w7)+(-32768); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-32768})		 Type: x10.lang.UInt)
	def m13300():void { var l:UShort = (w7)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13301():void { var l:UShort = (w7)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65535})		 Type: x10.lang.UInt)
	def m13302():void { var l:UShort = (w7)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13303():void { var l:UShort = (w7)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-65536})		 Type: x10.lang.UInt)
	def m13304():void { var l:UShort = (w7)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13305():void { var l:UShort = (w7)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777216})		 Type: x10.lang.UInt)
	def m13306():void { var l:UShort = (w7)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13307():void { var l:UShort = (w7)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-16777217})		 Type: x10.lang.UInt)
	def m13308():void { var l:UShort = (w7)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w7) + x10.lang.UInt.operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13309():void { var l:UShort = (w7)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UInt, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UInt)
	def m13310():void { var l:UShort = (w8)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13311():void { var l:UShort = (w8)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13312():void { var l:UShort = (w8)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13313():void { var l:UShort = (w8)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13314():void { var l:UShort = (w8)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.ULong, x10.lang.Long)		 Type: x10.lang.ULong)
	def m13315():void { var l:UShort = (w8)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13316():void { var l:UShort = (w8)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13317():void { var l:UShort = (w8)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13318():void { var l:UShort = (w8)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13319():void { var l:UShort = (w8)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13320():void { var l:UShort = (w8)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13321():void { var l:UShort = (w8)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13322():void { var l:UShort = (w8)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13323():void { var l:UShort = (w8)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13324():void { var l:UShort = (w8)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13325():void { var l:UShort = (w8)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13326():void { var l:UShort = (w8)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13327():void { var l:UShort = (w8)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13328():void { var l:UShort = (w8)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13329():void { var l:UShort = (w8)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13330():void { var l:UShort = (w8)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13331():void { var l:UShort = (w8)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13332():void { var l:UShort = (w8)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13333():void { var l:UShort = (w8)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13334():void { var l:UShort = (w8)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13335():void { var l:UShort = (w8)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13336():void { var l:UShort = (w8)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13337():void { var l:UShort = (w8)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13338():void { var l:UShort = (w8)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13339():void { var l:UShort = (w8)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13340():void { var l:UShort = (w8)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13341():void { var l:UShort = (w8)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13342():void { var l:UShort = (w8)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13343():void { var l:UShort = (w8)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13344():void { var l:UShort = (w8)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13345():void { var l:UShort = (w8)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13346():void { var l:UShort = (w8)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13347():void { var l:UShort = (w8)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (SignedAndUnsignedTests.this.w8) + x10.lang.ULong.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13348():void { var l:UShort = (w9)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13349():void { var l:UShort = (w9)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13350():void { var l:UShort = (w9)+(w2); }  
	def m13351():void { var l:UShort = (w9)+(w3); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int)		 Type: x10.lang.UShort)
	def m13352():void { var l:UShort = (w9)+(w4); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Long)		 Type: x10.lang.UShort)
	def m13353():void { var l:UShort = (w9)+(w5); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Short)		 Type: x10.lang.UShort)
	def m13354():void { var l:UShort = (w9)+(w6); }  
	def m13355():void { var l:UShort = (w9)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13356():void { var l:UShort = (w9)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13357():void { var l:UShort = (w9)+(w9); }
	def m13358():void { var l:UShort = (w9)+(0); }  
	def m13359():void { var l:UShort = (w9)+(-0); }  
	def m13360():void { var l:UShort = (w9)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13361():void { var l:UShort = (w9)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13362():void { var l:UShort = (w9)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13363():void { var l:UShort = (w9)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13364():void { var l:UShort = (w9)+(127); }  
	def m13365():void { var l:UShort = (w9)+(-127); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-127})		 Type: x10.lang.UShort)
	def m13366():void { var l:UShort = (w9)+(128); }  
	def m13367():void { var l:UShort = (w9)+(-128); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-128})		 Type: x10.lang.UShort)
	def m13368():void { var l:UShort = (w9)+(255); }  
	def m13369():void { var l:UShort = (w9)+(-255); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-255})		 Type: x10.lang.UShort)
	def m13370():void { var l:UShort = (w9)+(256); }  
	def m13371():void { var l:UShort = (w9)+(-256); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-256})		 Type: x10.lang.UShort)
	def m13372():void { var l:UShort = (w9)+(32767); }  
	def m13373():void { var l:UShort = (w9)+(-32767); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32767})		 Type: x10.lang.UShort)
	def m13374():void { var l:UShort = (w9)+(32768); }  
	def m13375():void { var l:UShort = (w9)+(-32768); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-32768})		 Type: x10.lang.UShort)
	def m13376():void { var l:UShort = (w9)+(65535); }  
	def m13377():void { var l:UShort = (w9)+(-65535); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65535})		 Type: x10.lang.UShort)
	def m13378():void { var l:UShort = (w9)+(65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==65536})		 Type: x10.lang.UShort)
	def m13379():void { var l:UShort = (w9)+(-65536); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-65536})		 Type: x10.lang.UShort)
	def m13380():void { var l:UShort = (w9)+(16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777216})		 Type: x10.lang.UShort)
	def m13381():void { var l:UShort = (w9)+(-16777216); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777216})		 Type: x10.lang.UShort)
	def m13382():void { var l:UShort = (w9)+(16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==16777217})		 Type: x10.lang.UShort)
	def m13383():void { var l:UShort = (w9)+(-16777217); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-16777217})		 Type: x10.lang.UShort)
	def m13384():void { var l:UShort = (w9)+(2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==2147483647})		 Type: x10.lang.UShort)
	def m13385():void { var l:UShort = (w9)+(-2147483647); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.UShort, x10.lang.Int{self==-2147483647})		 Type: x10.lang.UShort)
	def m13386():void { var l:UShort = (0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13387():void { var l:UShort = (0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13388():void { var l:UShort = (0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13389():void { var l:UShort = (0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13390():void { var l:UShort = (0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13391():void { var l:UShort = (0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13392():void { var l:UShort = (0)+(w6); }  
	def m13393():void { var l:UShort = (0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13394():void { var l:UShort = (0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13395():void { var l:UShort = (0)+(w9); }  
	def m13396():void { var l:UShort = (0)+(0); }
	def m13397():void { var l:UShort = (0)+(-0); }
	def m13398():void { var l:UShort = (0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13399():void { var l:UShort = (0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13400():void { var l:UShort = (0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13401():void { var l:UShort = (0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13402():void { var l:UShort = (0)+(127); }
	def m13403():void { var l:UShort = (0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13404():void { var l:UShort = (0)+(128); }
	def m13405():void { var l:UShort = (0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13406():void { var l:UShort = (0)+(255); }
	def m13407():void { var l:UShort = (0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13408():void { var l:UShort = (0)+(256); }
	def m13409():void { var l:UShort = (0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13410():void { var l:UShort = (0)+(32767); }
	def m13411():void { var l:UShort = (0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13412():void { var l:UShort = (0)+(32768); }
	def m13413():void { var l:UShort = (0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13414():void { var l:UShort = (0)+(65535); }
	def m13415():void { var l:UShort = (0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13416():void { var l:UShort = (0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13417():void { var l:UShort = (0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13418():void { var l:UShort = (0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13419():void { var l:UShort = (0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13420():void { var l:UShort = (0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13421():void { var l:UShort = (0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13422():void { var l:UShort = (0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13423():void { var l:UShort = (0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13424():void { var l:UShort = (-0)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13425():void { var l:UShort = (-0)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13426():void { var l:UShort = (-0)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13427():void { var l:UShort = (-0)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13428():void { var l:UShort = (-0)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13429():void { var l:UShort = (-0)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13430():void { var l:UShort = (-0)+(w6); }  
	def m13431():void { var l:UShort = (-0)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((0)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13432():void { var l:UShort = (-0)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((0)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13433():void { var l:UShort = (-0)+(w9); }  
	def m13434():void { var l:UShort = (-0)+(0); }
	def m13435():void { var l:UShort = (-0)+(-0); }
	def m13436():void { var l:UShort = (-0)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13437():void { var l:UShort = (-0)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((0)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13438():void { var l:UShort = (-0)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13439():void { var l:UShort = (-0)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((0)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13440():void { var l:UShort = (-0)+(127); }
	def m13441():void { var l:UShort = (-0)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13442():void { var l:UShort = (-0)+(128); }
	def m13443():void { var l:UShort = (-0)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13444():void { var l:UShort = (-0)+(255); }
	def m13445():void { var l:UShort = (-0)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13446():void { var l:UShort = (-0)+(256); }
	def m13447():void { var l:UShort = (-0)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13448():void { var l:UShort = (-0)+(32767); }
	def m13449():void { var l:UShort = (-0)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13450():void { var l:UShort = (-0)+(32768); }
	def m13451():void { var l:UShort = (-0)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13452():void { var l:UShort = (-0)+(65535); }
	def m13453():void { var l:UShort = (-0)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13454():void { var l:UShort = (-0)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13455():void { var l:UShort = (-0)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13456():void { var l:UShort = (-0)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13457():void { var l:UShort = (-0)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13458():void { var l:UShort = (-0)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13459():void { var l:UShort = (-0)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13460():void { var l:UShort = (-0)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13461():void { var l:UShort = (-0)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (0) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13462():void { var l:UShort = (1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13463():void { var l:UShort = (1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13464():void { var l:UShort = (1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13465():void { var l:UShort = (1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13466():void { var l:UShort = (1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13467():void { var l:UShort = (1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13468():void { var l:UShort = (1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13469():void { var l:UShort = (1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13470():void { var l:UShort = (1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13471():void { var l:UShort = (1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13472():void { var l:UShort = (1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13473():void { var l:UShort = (1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13474():void { var l:UShort = (1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13475():void { var l:UShort = (1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13476():void { var l:UShort = (1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13477():void { var l:UShort = (1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13478():void { var l:UShort = (1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13479():void { var l:UShort = (1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13480():void { var l:UShort = (1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13481():void { var l:UShort = (1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13482():void { var l:UShort = (1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13483():void { var l:UShort = (1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13484():void { var l:UShort = (1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13485():void { var l:UShort = (1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13486():void { var l:UShort = (1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13487():void { var l:UShort = (1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13488():void { var l:UShort = (1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13489():void { var l:UShort = (1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13490():void { var l:UShort = (1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13491():void { var l:UShort = (1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13492():void { var l:UShort = (1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13493():void { var l:UShort = (1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13494():void { var l:UShort = (1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13495():void { var l:UShort = (1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13496():void { var l:UShort = (1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13497():void { var l:UShort = (1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13498():void { var l:UShort = (1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13499():void { var l:UShort = (1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13500():void { var l:UShort = (-1.1f)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13501():void { var l:UShort = (-1.1f)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13502():void { var l:UShort = (-1.1f)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13503():void { var l:UShort = (-1.1f)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13504():void { var l:UShort = (-1.1f)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13505():void { var l:UShort = (-1.1f)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13506():void { var l:UShort = (-1.1f)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13507():void { var l:UShort = (-1.1f)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13508():void { var l:UShort = (-1.1f)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13509():void { var l:UShort = (-1.1f)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13510():void { var l:UShort = (-1.1f)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13511():void { var l:UShort = (-1.1f)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13512():void { var l:UShort = (-1.1f)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13513():void { var l:UShort = (-1.1f)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13514():void { var l:UShort = (-1.1f)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13515():void { var l:UShort = (-1.1f)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-1.100000023841858)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13516():void { var l:UShort = (-1.1f)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13517():void { var l:UShort = (-1.1f)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13518():void { var l:UShort = (-1.1f)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13519():void { var l:UShort = (-1.1f)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13520():void { var l:UShort = (-1.1f)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13521():void { var l:UShort = (-1.1f)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13522():void { var l:UShort = (-1.1f)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13523():void { var l:UShort = (-1.1f)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13524():void { var l:UShort = (-1.1f)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13525():void { var l:UShort = (-1.1f)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13526():void { var l:UShort = (-1.1f)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13527():void { var l:UShort = (-1.1f)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13528():void { var l:UShort = (-1.1f)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13529():void { var l:UShort = (-1.1f)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13530():void { var l:UShort = (-1.1f)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13531():void { var l:UShort = (-1.1f)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13532():void { var l:UShort = (-1.1f)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13533():void { var l:UShort = (-1.1f)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13534():void { var l:UShort = (-1.1f)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13535():void { var l:UShort = (-1.1f)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13536():void { var l:UShort = (-1.1f)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13537():void { var l:UShort = (-1.1f)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-1.100000023841858) + x10.lang.Float.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13538():void { var l:UShort = (2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13539():void { var l:UShort = (2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13540():void { var l:UShort = (2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13541():void { var l:UShort = (2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13542():void { var l:UShort = (2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13543():void { var l:UShort = (2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13544():void { var l:UShort = (2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13545():void { var l:UShort = (2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13546():void { var l:UShort = (2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13547():void { var l:UShort = (2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13548():void { var l:UShort = (2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13549():void { var l:UShort = (2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13550():void { var l:UShort = (2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13551():void { var l:UShort = (2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13552():void { var l:UShort = (2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13553():void { var l:UShort = (2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13554():void { var l:UShort = (2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13555():void { var l:UShort = (2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13556():void { var l:UShort = (2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13557():void { var l:UShort = (2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13558():void { var l:UShort = (2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13559():void { var l:UShort = (2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13560():void { var l:UShort = (2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13561():void { var l:UShort = (2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13562():void { var l:UShort = (2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13563():void { var l:UShort = (2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13564():void { var l:UShort = (2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13565():void { var l:UShort = (2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13566():void { var l:UShort = (2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13567():void { var l:UShort = (2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13568():void { var l:UShort = (2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13569():void { var l:UShort = (2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13570():void { var l:UShort = (2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13571():void { var l:UShort = (2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13572():void { var l:UShort = (2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13573():void { var l:UShort = (2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13574():void { var l:UShort = (2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13575():void { var l:UShort = (2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13576():void { var l:UShort = (-2.2)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13577():void { var l:UShort = (-2.2)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13578():void { var l:UShort = (-2.2)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13579():void { var l:UShort = (-2.2)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w3))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13580():void { var l:UShort = (-2.2)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w4))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13581():void { var l:UShort = (-2.2)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13582():void { var l:UShort = (-2.2)+(w6); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w6))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13583():void { var l:UShort = (-2.2)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w7))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13584():void { var l:UShort = (-2.2)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w8))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13585():void { var l:UShort = (-2.2)+(w9); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((SignedAndUnsignedTests.this.w9))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13586():void { var l:UShort = (-2.2)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13587():void { var l:UShort = (-2.2)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((0))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13588():void { var l:UShort = (-2.2)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13589():void { var l:UShort = (-2.2)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-1.100000023841858))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13590():void { var l:UShort = (-2.2)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13591():void { var l:UShort = (-2.2)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13592():void { var l:UShort = (-2.2)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13593():void { var l:UShort = (-2.2)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-127))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13594():void { var l:UShort = (-2.2)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13595():void { var l:UShort = (-2.2)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-128))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13596():void { var l:UShort = (-2.2)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13597():void { var l:UShort = (-2.2)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-255))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13598():void { var l:UShort = (-2.2)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13599():void { var l:UShort = (-2.2)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-256))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13600():void { var l:UShort = (-2.2)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13601():void { var l:UShort = (-2.2)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32767))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13602():void { var l:UShort = (-2.2)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13603():void { var l:UShort = (-2.2)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-32768))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13604():void { var l:UShort = (-2.2)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13605():void { var l:UShort = (-2.2)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65535))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13606():void { var l:UShort = (-2.2)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13607():void { var l:UShort = (-2.2)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-65536))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13608():void { var l:UShort = (-2.2)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13609():void { var l:UShort = (-2.2)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777216))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13610():void { var l:UShort = (-2.2)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13611():void { var l:UShort = (-2.2)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-16777217))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13612():void { var l:UShort = (-2.2)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13613():void { var l:UShort = (-2.2)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2.2) + x10.lang.Double.implicit_operator_as((-2147483647))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13614():void { var l:UShort = (127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13615():void { var l:UShort = (127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13616():void { var l:UShort = (127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13617():void { var l:UShort = (127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13618():void { var l:UShort = (127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13619():void { var l:UShort = (127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13620():void { var l:UShort = (127)+(w6); }  
	def m13621():void { var l:UShort = (127)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((127)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13622():void { var l:UShort = (127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13623():void { var l:UShort = (127)+(w9); }  
	def m13624():void { var l:UShort = (127)+(0); }
	def m13625():void { var l:UShort = (127)+(-0); }
	def m13626():void { var l:UShort = (127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13627():void { var l:UShort = (127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((127)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13628():void { var l:UShort = (127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13629():void { var l:UShort = (127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((127)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13630():void { var l:UShort = (127)+(127); }
	def m13631():void { var l:UShort = (127)+(-127); }
	def m13632():void { var l:UShort = (127)+(128); }
	def m13633():void { var l:UShort = (127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13634():void { var l:UShort = (127)+(255); }
	def m13635():void { var l:UShort = (127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13636():void { var l:UShort = (127)+(256); }
	def m13637():void { var l:UShort = (127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13638():void { var l:UShort = (127)+(32767); }
	def m13639():void { var l:UShort = (127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13640():void { var l:UShort = (127)+(32768); }
	def m13641():void { var l:UShort = (127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13642():void { var l:UShort = (127)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13643():void { var l:UShort = (127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13644():void { var l:UShort = (127)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13645():void { var l:UShort = (127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13646():void { var l:UShort = (127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13647():void { var l:UShort = (127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13648():void { var l:UShort = (127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13649():void { var l:UShort = (127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13650():void { var l:UShort = (127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13651():void { var l:UShort = (127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (127) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13652():void { var l:UShort = (-127)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13653():void { var l:UShort = (-127)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13654():void { var l:UShort = (-127)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13655():void { var l:UShort = (-127)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13656():void { var l:UShort = (-127)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13657():void { var l:UShort = (-127)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13658():void { var l:UShort = (-127)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UByte)		 Type: x10.lang.Int{self==-127})
	def m13659():void { var l:UShort = (-127)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UInt)		 Type: x10.lang.Int{self==-127})
	def m13660():void { var l:UShort = (-127)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-127)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13661():void { var l:UShort = (-127)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-127}, x10.lang.UShort)		 Type: x10.lang.Int{self==-127})
	def m13662():void { var l:UShort = (-127)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13663():void { var l:UShort = (-127)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13664():void { var l:UShort = (-127)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13665():void { var l:UShort = (-127)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-127)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13666():void { var l:UShort = (-127)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13667():void { var l:UShort = (-127)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-127)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13668():void { var l:UShort = (-127)+(127); }
	def m13669():void { var l:UShort = (-127)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13670():void { var l:UShort = (-127)+(128); }
	def m13671():void { var l:UShort = (-127)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13672():void { var l:UShort = (-127)+(255); }
	def m13673():void { var l:UShort = (-127)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13674():void { var l:UShort = (-127)+(256); }
	def m13675():void { var l:UShort = (-127)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13676():void { var l:UShort = (-127)+(32767); }
	def m13677():void { var l:UShort = (-127)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13678():void { var l:UShort = (-127)+(32768); }
	def m13679():void { var l:UShort = (-127)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13680():void { var l:UShort = (-127)+(65535); }
	def m13681():void { var l:UShort = (-127)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13682():void { var l:UShort = (-127)+(65536); }
	def m13683():void { var l:UShort = (-127)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13684():void { var l:UShort = (-127)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13685():void { var l:UShort = (-127)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13686():void { var l:UShort = (-127)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13687():void { var l:UShort = (-127)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13688():void { var l:UShort = (-127)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13689():void { var l:UShort = (-127)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-127) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13690():void { var l:UShort = (128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13691():void { var l:UShort = (128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13692():void { var l:UShort = (128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13693():void { var l:UShort = (128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13694():void { var l:UShort = (128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13695():void { var l:UShort = (128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13696():void { var l:UShort = (128)+(w6); }  
	def m13697():void { var l:UShort = (128)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((128)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13698():void { var l:UShort = (128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13699():void { var l:UShort = (128)+(w9); }  
	def m13700():void { var l:UShort = (128)+(0); }
	def m13701():void { var l:UShort = (128)+(-0); }
	def m13702():void { var l:UShort = (128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13703():void { var l:UShort = (128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((128)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13704():void { var l:UShort = (128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13705():void { var l:UShort = (128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((128)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13706():void { var l:UShort = (128)+(127); }
	def m13707():void { var l:UShort = (128)+(-127); }
	def m13708():void { var l:UShort = (128)+(128); }
	def m13709():void { var l:UShort = (128)+(-128); }
	def m13710():void { var l:UShort = (128)+(255); }
	def m13711():void { var l:UShort = (128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13712():void { var l:UShort = (128)+(256); }
	def m13713():void { var l:UShort = (128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13714():void { var l:UShort = (128)+(32767); }
	def m13715():void { var l:UShort = (128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13716():void { var l:UShort = (128)+(32768); }
	def m13717():void { var l:UShort = (128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13718():void { var l:UShort = (128)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13719():void { var l:UShort = (128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13720():void { var l:UShort = (128)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13721():void { var l:UShort = (128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13722():void { var l:UShort = (128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13723():void { var l:UShort = (128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13724():void { var l:UShort = (128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13725():void { var l:UShort = (128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13726():void { var l:UShort = (128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13727():void { var l:UShort = (128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (128) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13728():void { var l:UShort = (-128)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13729():void { var l:UShort = (-128)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13730():void { var l:UShort = (-128)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13731():void { var l:UShort = (-128)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13732():void { var l:UShort = (-128)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13733():void { var l:UShort = (-128)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13734():void { var l:UShort = (-128)+(w6); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UByte)		 Type: x10.lang.Int{self==-128})
	def m13735():void { var l:UShort = (-128)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UInt)		 Type: x10.lang.Int{self==-128})
	def m13736():void { var l:UShort = (-128)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-128)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13737():void { var l:UShort = (-128)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-128}, x10.lang.UShort)		 Type: x10.lang.Int{self==-128})
	def m13738():void { var l:UShort = (-128)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13739():void { var l:UShort = (-128)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13740():void { var l:UShort = (-128)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13741():void { var l:UShort = (-128)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-128)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13742():void { var l:UShort = (-128)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13743():void { var l:UShort = (-128)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-128)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13744():void { var l:UShort = (-128)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13745():void { var l:UShort = (-128)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13746():void { var l:UShort = (-128)+(128); }
	def m13747():void { var l:UShort = (-128)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13748():void { var l:UShort = (-128)+(255); }
	def m13749():void { var l:UShort = (-128)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13750():void { var l:UShort = (-128)+(256); }
	def m13751():void { var l:UShort = (-128)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13752():void { var l:UShort = (-128)+(32767); }
	def m13753():void { var l:UShort = (-128)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13754():void { var l:UShort = (-128)+(32768); }
	def m13755():void { var l:UShort = (-128)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13756():void { var l:UShort = (-128)+(65535); }
	def m13757():void { var l:UShort = (-128)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13758():void { var l:UShort = (-128)+(65536); }
	def m13759():void { var l:UShort = (-128)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13760():void { var l:UShort = (-128)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13761():void { var l:UShort = (-128)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13762():void { var l:UShort = (-128)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13763():void { var l:UShort = (-128)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13764():void { var l:UShort = (-128)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13765():void { var l:UShort = (-128)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-128) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13766():void { var l:UShort = (255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13767():void { var l:UShort = (255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13768():void { var l:UShort = (255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13769():void { var l:UShort = (255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13770():void { var l:UShort = (255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13771():void { var l:UShort = (255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13772():void { var l:UShort = (255)+(w6); }  
	def m13773():void { var l:UShort = (255)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((255)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13774():void { var l:UShort = (255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13775():void { var l:UShort = (255)+(w9); }  
	def m13776():void { var l:UShort = (255)+(0); }
	def m13777():void { var l:UShort = (255)+(-0); }
	def m13778():void { var l:UShort = (255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13779():void { var l:UShort = (255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((255)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13780():void { var l:UShort = (255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13781():void { var l:UShort = (255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((255)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13782():void { var l:UShort = (255)+(127); }
	def m13783():void { var l:UShort = (255)+(-127); }
	def m13784():void { var l:UShort = (255)+(128); }
	def m13785():void { var l:UShort = (255)+(-128); }
	def m13786():void { var l:UShort = (255)+(255); }
	def m13787():void { var l:UShort = (255)+(-255); }
	def m13788():void { var l:UShort = (255)+(256); }
	def m13789():void { var l:UShort = (255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13790():void { var l:UShort = (255)+(32767); }
	def m13791():void { var l:UShort = (255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13792():void { var l:UShort = (255)+(32768); }
	def m13793():void { var l:UShort = (255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13794():void { var l:UShort = (255)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13795():void { var l:UShort = (255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13796():void { var l:UShort = (255)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13797():void { var l:UShort = (255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13798():void { var l:UShort = (255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13799():void { var l:UShort = (255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13800():void { var l:UShort = (255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13801():void { var l:UShort = (255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13802():void { var l:UShort = (255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13803():void { var l:UShort = (255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (255) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13804():void { var l:UShort = (-255)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13805():void { var l:UShort = (-255)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13806():void { var l:UShort = (-255)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13807():void { var l:UShort = (-255)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13808():void { var l:UShort = (-255)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13809():void { var l:UShort = (-255)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13810():void { var l:UShort = (-255)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UByte)		 Type: x10.lang.Int{self==-255})
	def m13811():void { var l:UShort = (-255)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UInt)		 Type: x10.lang.Int{self==-255})
	def m13812():void { var l:UShort = (-255)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-255)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13813():void { var l:UShort = (-255)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-255}, x10.lang.UShort)		 Type: x10.lang.Int{self==-255})
	def m13814():void { var l:UShort = (-255)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13815():void { var l:UShort = (-255)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13816():void { var l:UShort = (-255)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13817():void { var l:UShort = (-255)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-255)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13818():void { var l:UShort = (-255)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13819():void { var l:UShort = (-255)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-255)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13820():void { var l:UShort = (-255)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13821():void { var l:UShort = (-255)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13822():void { var l:UShort = (-255)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13823():void { var l:UShort = (-255)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13824():void { var l:UShort = (-255)+(255); }
	def m13825():void { var l:UShort = (-255)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13826():void { var l:UShort = (-255)+(256); }
	def m13827():void { var l:UShort = (-255)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13828():void { var l:UShort = (-255)+(32767); }
	def m13829():void { var l:UShort = (-255)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13830():void { var l:UShort = (-255)+(32768); }
	def m13831():void { var l:UShort = (-255)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13832():void { var l:UShort = (-255)+(65535); }
	def m13833():void { var l:UShort = (-255)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13834():void { var l:UShort = (-255)+(65536); }
	def m13835():void { var l:UShort = (-255)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13836():void { var l:UShort = (-255)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13837():void { var l:UShort = (-255)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13838():void { var l:UShort = (-255)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13839():void { var l:UShort = (-255)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13840():void { var l:UShort = (-255)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13841():void { var l:UShort = (-255)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-255) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13842():void { var l:UShort = (256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13843():void { var l:UShort = (256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13844():void { var l:UShort = (256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13845():void { var l:UShort = (256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13846():void { var l:UShort = (256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13847():void { var l:UShort = (256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13848():void { var l:UShort = (256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==256}, x10.lang.UByte)		 Type: x10.lang.Int{self==256})
	def m13849():void { var l:UShort = (256)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((256)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13850():void { var l:UShort = (256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13851():void { var l:UShort = (256)+(w9); }  
	def m13852():void { var l:UShort = (256)+(0); }
	def m13853():void { var l:UShort = (256)+(-0); }
	def m13854():void { var l:UShort = (256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13855():void { var l:UShort = (256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((256)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13856():void { var l:UShort = (256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13857():void { var l:UShort = (256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((256)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13858():void { var l:UShort = (256)+(127); }
	def m13859():void { var l:UShort = (256)+(-127); }
	def m13860():void { var l:UShort = (256)+(128); }
	def m13861():void { var l:UShort = (256)+(-128); }
	def m13862():void { var l:UShort = (256)+(255); }
	def m13863():void { var l:UShort = (256)+(-255); }
	def m13864():void { var l:UShort = (256)+(256); }
	def m13865():void { var l:UShort = (256)+(-256); }
	def m13866():void { var l:UShort = (256)+(32767); }
	def m13867():void { var l:UShort = (256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13868():void { var l:UShort = (256)+(32768); }
	def m13869():void { var l:UShort = (256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13870():void { var l:UShort = (256)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13871():void { var l:UShort = (256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13872():void { var l:UShort = (256)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13873():void { var l:UShort = (256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13874():void { var l:UShort = (256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13875():void { var l:UShort = (256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13876():void { var l:UShort = (256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13877():void { var l:UShort = (256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13878():void { var l:UShort = (256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13879():void { var l:UShort = (256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (256) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13880():void { var l:UShort = (-256)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13881():void { var l:UShort = (-256)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13882():void { var l:UShort = (-256)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13883():void { var l:UShort = (-256)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13884():void { var l:UShort = (-256)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13885():void { var l:UShort = (-256)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13886():void { var l:UShort = (-256)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UByte)		 Type: x10.lang.Int{self==-256})
	def m13887():void { var l:UShort = (-256)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UInt)		 Type: x10.lang.Int{self==-256})
	def m13888():void { var l:UShort = (-256)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-256)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13889():void { var l:UShort = (-256)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-256}, x10.lang.UShort)		 Type: x10.lang.Int{self==-256})
	def m13890():void { var l:UShort = (-256)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13891():void { var l:UShort = (-256)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13892():void { var l:UShort = (-256)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13893():void { var l:UShort = (-256)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-256)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13894():void { var l:UShort = (-256)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13895():void { var l:UShort = (-256)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-256)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13896():void { var l:UShort = (-256)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13897():void { var l:UShort = (-256)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13898():void { var l:UShort = (-256)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13899():void { var l:UShort = (-256)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13900():void { var l:UShort = (-256)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13901():void { var l:UShort = (-256)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13902():void { var l:UShort = (-256)+(256); }
	def m13903():void { var l:UShort = (-256)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13904():void { var l:UShort = (-256)+(32767); }
	def m13905():void { var l:UShort = (-256)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13906():void { var l:UShort = (-256)+(32768); }
	def m13907():void { var l:UShort = (-256)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13908():void { var l:UShort = (-256)+(65535); }
	def m13909():void { var l:UShort = (-256)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13910():void { var l:UShort = (-256)+(65536); }
	def m13911():void { var l:UShort = (-256)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13912():void { var l:UShort = (-256)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13913():void { var l:UShort = (-256)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13914():void { var l:UShort = (-256)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13915():void { var l:UShort = (-256)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13916():void { var l:UShort = (-256)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13917():void { var l:UShort = (-256)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-256) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13918():void { var l:UShort = (32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13919():void { var l:UShort = (32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13920():void { var l:UShort = (32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13921():void { var l:UShort = (32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13922():void { var l:UShort = (32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13923():void { var l:UShort = (32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13924():void { var l:UShort = (32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==32767})
	def m13925():void { var l:UShort = (32767)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32767)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m13926():void { var l:UShort = (32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13927():void { var l:UShort = (32767)+(w9); }  
	def m13928():void { var l:UShort = (32767)+(0); }
	def m13929():void { var l:UShort = (32767)+(-0); }
	def m13930():void { var l:UShort = (32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13931():void { var l:UShort = (32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32767)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13932():void { var l:UShort = (32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13933():void { var l:UShort = (32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32767)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13934():void { var l:UShort = (32767)+(127); }
	def m13935():void { var l:UShort = (32767)+(-127); }
	def m13936():void { var l:UShort = (32767)+(128); }
	def m13937():void { var l:UShort = (32767)+(-128); }
	def m13938():void { var l:UShort = (32767)+(255); }
	def m13939():void { var l:UShort = (32767)+(-255); }
	def m13940():void { var l:UShort = (32767)+(256); }
	def m13941():void { var l:UShort = (32767)+(-256); }
	def m13942():void { var l:UShort = (32767)+(32767); }
	def m13943():void { var l:UShort = (32767)+(-32767); }
	def m13944():void { var l:UShort = (32767)+(32768); }
	def m13945():void { var l:UShort = (32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13946():void { var l:UShort = (32767)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13947():void { var l:UShort = (32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13948():void { var l:UShort = (32767)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13949():void { var l:UShort = (32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13950():void { var l:UShort = (32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13951():void { var l:UShort = (32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13952():void { var l:UShort = (32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13953():void { var l:UShort = (32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13954():void { var l:UShort = (32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13955():void { var l:UShort = (32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32767) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13956():void { var l:UShort = (-32767)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13957():void { var l:UShort = (-32767)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13958():void { var l:UShort = (-32767)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13959():void { var l:UShort = (-32767)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13960():void { var l:UShort = (-32767)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13961():void { var l:UShort = (-32767)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13962():void { var l:UShort = (-32767)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32767})
	def m13963():void { var l:UShort = (-32767)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32767})
	def m13964():void { var l:UShort = (-32767)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32767)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m13965():void { var l:UShort = (-32767)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32767}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32767})
	def m13966():void { var l:UShort = (-32767)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13967():void { var l:UShort = (-32767)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13968():void { var l:UShort = (-32767)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13969():void { var l:UShort = (-32767)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32767)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13970():void { var l:UShort = (-32767)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13971():void { var l:UShort = (-32767)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32767)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13972():void { var l:UShort = (-32767)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13973():void { var l:UShort = (-32767)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13974():void { var l:UShort = (-32767)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13975():void { var l:UShort = (-32767)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13976():void { var l:UShort = (-32767)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13977():void { var l:UShort = (-32767)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13978():void { var l:UShort = (-32767)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13979():void { var l:UShort = (-32767)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13980():void { var l:UShort = (-32767)+(32767); }
	def m13981():void { var l:UShort = (-32767)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13982():void { var l:UShort = (-32767)+(32768); }
	def m13983():void { var l:UShort = (-32767)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13984():void { var l:UShort = (-32767)+(65535); }
	def m13985():void { var l:UShort = (-32767)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13986():void { var l:UShort = (-32767)+(65536); }
	def m13987():void { var l:UShort = (-32767)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13988():void { var l:UShort = (-32767)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13989():void { var l:UShort = (-32767)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13990():void { var l:UShort = (-32767)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13991():void { var l:UShort = (-32767)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13992():void { var l:UShort = (-32767)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13993():void { var l:UShort = (-32767)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32767) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13994():void { var l:UShort = (32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m13995():void { var l:UShort = (32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m13996():void { var l:UShort = (32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13997():void { var l:UShort = (32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m13998():void { var l:UShort = (32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m13999():void { var l:UShort = (32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14000():void { var l:UShort = (32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==32768})
	def m14001():void { var l:UShort = (32768)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((32768)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14002():void { var l:UShort = (32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14003():void { var l:UShort = (32768)+(w9); }  
	def m14004():void { var l:UShort = (32768)+(0); }
	def m14005():void { var l:UShort = (32768)+(-0); }
	def m14006():void { var l:UShort = (32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14007():void { var l:UShort = (32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((32768)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14008():void { var l:UShort = (32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14009():void { var l:UShort = (32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((32768)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14010():void { var l:UShort = (32768)+(127); }
	def m14011():void { var l:UShort = (32768)+(-127); }
	def m14012():void { var l:UShort = (32768)+(128); }
	def m14013():void { var l:UShort = (32768)+(-128); }
	def m14014():void { var l:UShort = (32768)+(255); }
	def m14015():void { var l:UShort = (32768)+(-255); }
	def m14016():void { var l:UShort = (32768)+(256); }
	def m14017():void { var l:UShort = (32768)+(-256); }
	def m14018():void { var l:UShort = (32768)+(32767); }
	def m14019():void { var l:UShort = (32768)+(-32767); }
	def m14020():void { var l:UShort = (32768)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14021():void { var l:UShort = (32768)+(-32768); }
	def m14022():void { var l:UShort = (32768)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14023():void { var l:UShort = (32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14024():void { var l:UShort = (32768)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14025():void { var l:UShort = (32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14026():void { var l:UShort = (32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14027():void { var l:UShort = (32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14028():void { var l:UShort = (32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14029():void { var l:UShort = (32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14030():void { var l:UShort = (32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14031():void { var l:UShort = (32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (32768) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14032():void { var l:UShort = (-32768)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14033():void { var l:UShort = (-32768)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14034():void { var l:UShort = (-32768)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14035():void { var l:UShort = (-32768)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14036():void { var l:UShort = (-32768)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14037():void { var l:UShort = (-32768)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14038():void { var l:UShort = (-32768)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UByte)		 Type: x10.lang.Int{self==-32768})
	def m14039():void { var l:UShort = (-32768)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UInt)		 Type: x10.lang.Int{self==-32768})
	def m14040():void { var l:UShort = (-32768)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-32768)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14041():void { var l:UShort = (-32768)+(w9); }// ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-32768}, x10.lang.UShort)		 Type: x10.lang.Int{self==-32768})
	def m14042():void { var l:UShort = (-32768)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14043():void { var l:UShort = (-32768)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14044():void { var l:UShort = (-32768)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14045():void { var l:UShort = (-32768)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-32768)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14046():void { var l:UShort = (-32768)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14047():void { var l:UShort = (-32768)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-32768)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14048():void { var l:UShort = (-32768)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14049():void { var l:UShort = (-32768)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14050():void { var l:UShort = (-32768)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14051():void { var l:UShort = (-32768)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14052():void { var l:UShort = (-32768)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14053():void { var l:UShort = (-32768)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14054():void { var l:UShort = (-32768)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14055():void { var l:UShort = (-32768)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14056():void { var l:UShort = (-32768)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14057():void { var l:UShort = (-32768)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14058():void { var l:UShort = (-32768)+(32768); }
	def m14059():void { var l:UShort = (-32768)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14060():void { var l:UShort = (-32768)+(65535); }
	def m14061():void { var l:UShort = (-32768)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14062():void { var l:UShort = (-32768)+(65536); }
	def m14063():void { var l:UShort = (-32768)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14064():void { var l:UShort = (-32768)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14065():void { var l:UShort = (-32768)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14066():void { var l:UShort = (-32768)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14067():void { var l:UShort = (-32768)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14068():void { var l:UShort = (-32768)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14069():void { var l:UShort = (-32768)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-32768) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14070():void { var l:UShort = (65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14071():void { var l:UShort = (65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14072():void { var l:UShort = (65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14073():void { var l:UShort = (65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14074():void { var l:UShort = (65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14075():void { var l:UShort = (65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14076():void { var l:UShort = (65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==65535})
	def m14077():void { var l:UShort = (65535)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65535)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14078():void { var l:UShort = (65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14079():void { var l:UShort = (65535)+(w9); }  
	def m14080():void { var l:UShort = (65535)+(0); }
	def m14081():void { var l:UShort = (65535)+(-0); }
	def m14082():void { var l:UShort = (65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14083():void { var l:UShort = (65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65535)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14084():void { var l:UShort = (65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14085():void { var l:UShort = (65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65535)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14086():void { var l:UShort = (65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14087():void { var l:UShort = (65535)+(-127); }
	def m14088():void { var l:UShort = (65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14089():void { var l:UShort = (65535)+(-128); }
	def m14090():void { var l:UShort = (65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14091():void { var l:UShort = (65535)+(-255); }
	def m14092():void { var l:UShort = (65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14093():void { var l:UShort = (65535)+(-256); }
	def m14094():void { var l:UShort = (65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14095():void { var l:UShort = (65535)+(-32767); }
	def m14096():void { var l:UShort = (65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14097():void { var l:UShort = (65535)+(-32768); }
	def m14098():void { var l:UShort = (65535)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14099():void { var l:UShort = (65535)+(-65535); }
	def m14100():void { var l:UShort = (65535)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14101():void { var l:UShort = (65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14102():void { var l:UShort = (65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14103():void { var l:UShort = (65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14104():void { var l:UShort = (65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14105():void { var l:UShort = (65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14106():void { var l:UShort = (65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14107():void { var l:UShort = (65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65535) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14108():void { var l:UShort = (-65535)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14109():void { var l:UShort = (-65535)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14110():void { var l:UShort = (-65535)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14111():void { var l:UShort = (-65535)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14112():void { var l:UShort = (-65535)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14113():void { var l:UShort = (-65535)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14114():void { var l:UShort = (-65535)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65535})
	def m14115():void { var l:UShort = (-65535)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65535})
	def m14116():void { var l:UShort = (-65535)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65535)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14117():void { var l:UShort = (-65535)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65535}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65535})
	def m14118():void { var l:UShort = (-65535)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14119():void { var l:UShort = (-65535)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14120():void { var l:UShort = (-65535)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14121():void { var l:UShort = (-65535)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65535)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14122():void { var l:UShort = (-65535)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14123():void { var l:UShort = (-65535)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65535)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14124():void { var l:UShort = (-65535)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14125():void { var l:UShort = (-65535)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14126():void { var l:UShort = (-65535)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14127():void { var l:UShort = (-65535)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14128():void { var l:UShort = (-65535)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14129():void { var l:UShort = (-65535)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14130():void { var l:UShort = (-65535)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14131():void { var l:UShort = (-65535)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14132():void { var l:UShort = (-65535)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14133():void { var l:UShort = (-65535)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14134():void { var l:UShort = (-65535)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14135():void { var l:UShort = (-65535)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14136():void { var l:UShort = (-65535)+(65535); }
	def m14137():void { var l:UShort = (-65535)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14138():void { var l:UShort = (-65535)+(65536); }
	def m14139():void { var l:UShort = (-65535)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14140():void { var l:UShort = (-65535)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14141():void { var l:UShort = (-65535)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14142():void { var l:UShort = (-65535)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14143():void { var l:UShort = (-65535)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14144():void { var l:UShort = (-65535)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14145():void { var l:UShort = (-65535)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65535) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14146():void { var l:UShort = (65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14147():void { var l:UShort = (65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14148():void { var l:UShort = (65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14149():void { var l:UShort = (65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14150():void { var l:UShort = (65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14151():void { var l:UShort = (65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14152():void { var l:UShort = (65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==65536})
	def m14153():void { var l:UShort = (65536)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((65536)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14154():void { var l:UShort = (65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14155():void { var l:UShort = (65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==65536})
	def m14156():void { var l:UShort = (65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14157():void { var l:UShort = (65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14158():void { var l:UShort = (65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14159():void { var l:UShort = (65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((65536)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14160():void { var l:UShort = (65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14161():void { var l:UShort = (65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((65536)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14162():void { var l:UShort = (65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14163():void { var l:UShort = (65536)+(-127); }
	def m14164():void { var l:UShort = (65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14165():void { var l:UShort = (65536)+(-128); }
	def m14166():void { var l:UShort = (65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14167():void { var l:UShort = (65536)+(-255); }
	def m14168():void { var l:UShort = (65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14169():void { var l:UShort = (65536)+(-256); }
	def m14170():void { var l:UShort = (65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14171():void { var l:UShort = (65536)+(-32767); }
	def m14172():void { var l:UShort = (65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14173():void { var l:UShort = (65536)+(-32768); }
	def m14174():void { var l:UShort = (65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14175():void { var l:UShort = (65536)+(-65535); }
	def m14176():void { var l:UShort = (65536)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14177():void { var l:UShort = (65536)+(-65536); }
	def m14178():void { var l:UShort = (65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14179():void { var l:UShort = (65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14180():void { var l:UShort = (65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14181():void { var l:UShort = (65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14182():void { var l:UShort = (65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14183():void { var l:UShort = (65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (65536) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14184():void { var l:UShort = (-65536)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14185():void { var l:UShort = (-65536)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14186():void { var l:UShort = (-65536)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14187():void { var l:UShort = (-65536)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14188():void { var l:UShort = (-65536)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14189():void { var l:UShort = (-65536)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14190():void { var l:UShort = (-65536)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UByte)		 Type: x10.lang.Int{self==-65536})
	def m14191():void { var l:UShort = (-65536)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UInt)		 Type: x10.lang.Int{self==-65536})
	def m14192():void { var l:UShort = (-65536)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-65536)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14193():void { var l:UShort = (-65536)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-65536}, x10.lang.UShort)		 Type: x10.lang.Int{self==-65536})
	def m14194():void { var l:UShort = (-65536)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14195():void { var l:UShort = (-65536)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14196():void { var l:UShort = (-65536)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14197():void { var l:UShort = (-65536)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-65536)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14198():void { var l:UShort = (-65536)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14199():void { var l:UShort = (-65536)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-65536)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14200():void { var l:UShort = (-65536)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14201():void { var l:UShort = (-65536)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14202():void { var l:UShort = (-65536)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14203():void { var l:UShort = (-65536)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14204():void { var l:UShort = (-65536)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14205():void { var l:UShort = (-65536)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14206():void { var l:UShort = (-65536)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14207():void { var l:UShort = (-65536)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14208():void { var l:UShort = (-65536)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14209():void { var l:UShort = (-65536)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14210():void { var l:UShort = (-65536)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14211():void { var l:UShort = (-65536)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14212():void { var l:UShort = (-65536)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14213():void { var l:UShort = (-65536)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14214():void { var l:UShort = (-65536)+(65536); }
	def m14215():void { var l:UShort = (-65536)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14216():void { var l:UShort = (-65536)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14217():void { var l:UShort = (-65536)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14218():void { var l:UShort = (-65536)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14219():void { var l:UShort = (-65536)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14220():void { var l:UShort = (-65536)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14221():void { var l:UShort = (-65536)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-65536) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14222():void { var l:UShort = (16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14223():void { var l:UShort = (16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14224():void { var l:UShort = (16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14225():void { var l:UShort = (16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14226():void { var l:UShort = (16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14227():void { var l:UShort = (16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14228():void { var l:UShort = (16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777216})
	def m14229():void { var l:UShort = (16777216)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777216)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14230():void { var l:UShort = (16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14231():void { var l:UShort = (16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777216})
	def m14232():void { var l:UShort = (16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14233():void { var l:UShort = (16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14234():void { var l:UShort = (16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14235():void { var l:UShort = (16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14236():void { var l:UShort = (16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14237():void { var l:UShort = (16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777216)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14238():void { var l:UShort = (16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14239():void { var l:UShort = (16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14240():void { var l:UShort = (16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14241():void { var l:UShort = (16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14242():void { var l:UShort = (16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14243():void { var l:UShort = (16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14244():void { var l:UShort = (16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14245():void { var l:UShort = (16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14246():void { var l:UShort = (16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14247():void { var l:UShort = (16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14248():void { var l:UShort = (16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14249():void { var l:UShort = (16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14250():void { var l:UShort = (16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14251():void { var l:UShort = (16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14252():void { var l:UShort = (16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14253():void { var l:UShort = (16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14254():void { var l:UShort = (16777216)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14255():void { var l:UShort = (16777216)+(-16777216); }
	def m14256():void { var l:UShort = (16777216)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14257():void { var l:UShort = (16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14258():void { var l:UShort = (16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14259():void { var l:UShort = (16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777216) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14260():void { var l:UShort = (-16777216)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14261():void { var l:UShort = (-16777216)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14262():void { var l:UShort = (-16777216)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14263():void { var l:UShort = (-16777216)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14264():void { var l:UShort = (-16777216)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14265():void { var l:UShort = (-16777216)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14266():void { var l:UShort = (-16777216)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777216})
	def m14267():void { var l:UShort = (-16777216)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777216})
	def m14268():void { var l:UShort = (-16777216)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777216)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14269():void { var l:UShort = (-16777216)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777216}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777216})
	def m14270():void { var l:UShort = (-16777216)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14271():void { var l:UShort = (-16777216)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14272():void { var l:UShort = (-16777216)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14273():void { var l:UShort = (-16777216)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777216)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14274():void { var l:UShort = (-16777216)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14275():void { var l:UShort = (-16777216)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777216)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14276():void { var l:UShort = (-16777216)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14277():void { var l:UShort = (-16777216)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14278():void { var l:UShort = (-16777216)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14279():void { var l:UShort = (-16777216)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14280():void { var l:UShort = (-16777216)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14281():void { var l:UShort = (-16777216)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14282():void { var l:UShort = (-16777216)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14283():void { var l:UShort = (-16777216)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14284():void { var l:UShort = (-16777216)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14285():void { var l:UShort = (-16777216)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14286():void { var l:UShort = (-16777216)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14287():void { var l:UShort = (-16777216)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14288():void { var l:UShort = (-16777216)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14289():void { var l:UShort = (-16777216)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14290():void { var l:UShort = (-16777216)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14291():void { var l:UShort = (-16777216)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14292():void { var l:UShort = (-16777216)+(16777216); }
	def m14293():void { var l:UShort = (-16777216)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14294():void { var l:UShort = (-16777216)+(16777217); }
	def m14295():void { var l:UShort = (-16777216)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14296():void { var l:UShort = (-16777216)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14297():void { var l:UShort = (-16777216)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777216) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14298():void { var l:UShort = (16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14299():void { var l:UShort = (16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14300():void { var l:UShort = (16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14301():void { var l:UShort = (16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14302():void { var l:UShort = (16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14303():void { var l:UShort = (16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14304():void { var l:UShort = (16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==16777217})
	def m14305():void { var l:UShort = (16777217)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((16777217)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14306():void { var l:UShort = (16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14307():void { var l:UShort = (16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==16777217})
	def m14308():void { var l:UShort = (16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14309():void { var l:UShort = (16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14310():void { var l:UShort = (16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14311():void { var l:UShort = (16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14312():void { var l:UShort = (16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14313():void { var l:UShort = (16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((16777217)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14314():void { var l:UShort = (16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14315():void { var l:UShort = (16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14316():void { var l:UShort = (16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14317():void { var l:UShort = (16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14318():void { var l:UShort = (16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14319():void { var l:UShort = (16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14320():void { var l:UShort = (16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14321():void { var l:UShort = (16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14322():void { var l:UShort = (16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14323():void { var l:UShort = (16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14324():void { var l:UShort = (16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14325():void { var l:UShort = (16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14326():void { var l:UShort = (16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14327():void { var l:UShort = (16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14328():void { var l:UShort = (16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14329():void { var l:UShort = (16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14330():void { var l:UShort = (16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14331():void { var l:UShort = (16777217)+(-16777216); }
	def m14332():void { var l:UShort = (16777217)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14333():void { var l:UShort = (16777217)+(-16777217); }
	def m14334():void { var l:UShort = (16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14335():void { var l:UShort = (16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (16777217) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14336():void { var l:UShort = (-16777217)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14337():void { var l:UShort = (-16777217)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14338():void { var l:UShort = (-16777217)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14339():void { var l:UShort = (-16777217)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14340():void { var l:UShort = (-16777217)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14341():void { var l:UShort = (-16777217)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14342():void { var l:UShort = (-16777217)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UByte)		 Type: x10.lang.Int{self==-16777217})
	def m14343():void { var l:UShort = (-16777217)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UInt)		 Type: x10.lang.Int{self==-16777217})
	def m14344():void { var l:UShort = (-16777217)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-16777217)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14345():void { var l:UShort = (-16777217)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-16777217}, x10.lang.UShort)		 Type: x10.lang.Int{self==-16777217})
	def m14346():void { var l:UShort = (-16777217)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14347():void { var l:UShort = (-16777217)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14348():void { var l:UShort = (-16777217)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14349():void { var l:UShort = (-16777217)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-16777217)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14350():void { var l:UShort = (-16777217)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14351():void { var l:UShort = (-16777217)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-16777217)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14352():void { var l:UShort = (-16777217)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14353():void { var l:UShort = (-16777217)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14354():void { var l:UShort = (-16777217)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14355():void { var l:UShort = (-16777217)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14356():void { var l:UShort = (-16777217)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14357():void { var l:UShort = (-16777217)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14358():void { var l:UShort = (-16777217)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14359():void { var l:UShort = (-16777217)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14360():void { var l:UShort = (-16777217)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14361():void { var l:UShort = (-16777217)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14362():void { var l:UShort = (-16777217)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14363():void { var l:UShort = (-16777217)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14364():void { var l:UShort = (-16777217)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14365():void { var l:UShort = (-16777217)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14366():void { var l:UShort = (-16777217)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14367():void { var l:UShort = (-16777217)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14368():void { var l:UShort = (-16777217)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14369():void { var l:UShort = (-16777217)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14370():void { var l:UShort = (-16777217)+(16777217); }
	def m14371():void { var l:UShort = (-16777217)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14372():void { var l:UShort = (-16777217)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14373():void { var l:UShort = (-16777217)+(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-16777217) + (-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14374():void { var l:UShort = (2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14375():void { var l:UShort = (2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14376():void { var l:UShort = (2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14377():void { var l:UShort = (2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14378():void { var l:UShort = (2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14379():void { var l:UShort = (2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14380():void { var l:UShort = (2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==2147483647})
	def m14381():void { var l:UShort = (2147483647)+(w7); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.UInt.operator_as((2147483647)) + (SignedAndUnsignedTests.this.w7)		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m14382():void { var l:UShort = (2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14383():void { var l:UShort = (2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==2147483647})
	def m14384():void { var l:UShort = (2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14385():void { var l:UShort = (2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14386():void { var l:UShort = (2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14387():void { var l:UShort = (2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14388():void { var l:UShort = (2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14389():void { var l:UShort = (2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((2147483647)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14390():void { var l:UShort = (2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14391():void { var l:UShort = (2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14392():void { var l:UShort = (2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14393():void { var l:UShort = (2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14394():void { var l:UShort = (2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14395():void { var l:UShort = (2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14396():void { var l:UShort = (2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14397():void { var l:UShort = (2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14398():void { var l:UShort = (2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14399():void { var l:UShort = (2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14400():void { var l:UShort = (2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14401():void { var l:UShort = (2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14402():void { var l:UShort = (2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14403():void { var l:UShort = (2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14404():void { var l:UShort = (2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14405():void { var l:UShort = (2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14406():void { var l:UShort = (2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14407():void { var l:UShort = (2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14408():void { var l:UShort = (2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14409():void { var l:UShort = (2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14410():void { var l:UShort = (2147483647)+(2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (2147483647) + (2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14411():void { var l:UShort = (2147483647)+(-2147483647); }
	def m14412():void { var l:UShort = (-2147483647)+(w0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14413():void { var l:UShort = (-2147483647)+(w1); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w1)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14414():void { var l:UShort = (-2147483647)+(w2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w2))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14415():void { var l:UShort = (-2147483647)+(w3); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (SignedAndUnsignedTests.this.w3)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14416():void { var l:UShort = (-2147483647)+(w4); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Long.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w4)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m14417():void { var l:UShort = (-2147483647)+(w5); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + x10.lang.Int.implicit_operator_as((SignedAndUnsignedTests.this.w5))		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14418():void { var l:UShort = (-2147483647)+(w6); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UByte)		 Type: x10.lang.Int{self==-2147483647})
	def m14419():void { var l:UShort = (-2147483647)+(w7); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UInt)		 Type: x10.lang.Int{self==-2147483647})
	def m14420():void { var l:UShort = (-2147483647)+(w8); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.ULong.implicit_operator_as((-2147483647)) + (SignedAndUnsignedTests.this.w8)		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m14421():void { var l:UShort = (-2147483647)+(w9); }  // ERR (Semantic Error: No valid method call found for call in given type.		 Call: operator+(x10.lang.Int{self==-2147483647}, x10.lang.UShort)		 Type: x10.lang.Int{self==-2147483647})
	def m14422():void { var l:UShort = (-2147483647)+(0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14423():void { var l:UShort = (-2147483647)+(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (0)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14424():void { var l:UShort = (-2147483647)+(1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14425():void { var l:UShort = (-2147483647)+(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Float.implicit_operator_as((-2147483647)) + (-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m14426():void { var l:UShort = (-2147483647)+(2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14427():void { var l:UShort = (-2147483647)+(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: x10.lang.Double.implicit_operator_as((-2147483647)) + (-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m14428():void { var l:UShort = (-2147483647)+(127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14429():void { var l:UShort = (-2147483647)+(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-127)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14430():void { var l:UShort = (-2147483647)+(128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14431():void { var l:UShort = (-2147483647)+(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-128)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14432():void { var l:UShort = (-2147483647)+(255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14433():void { var l:UShort = (-2147483647)+(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-255)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14434():void { var l:UShort = (-2147483647)+(256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14435():void { var l:UShort = (-2147483647)+(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-256)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14436():void { var l:UShort = (-2147483647)+(32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14437():void { var l:UShort = (-2147483647)+(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32767)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14438():void { var l:UShort = (-2147483647)+(32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14439():void { var l:UShort = (-2147483647)+(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-32768)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14440():void { var l:UShort = (-2147483647)+(65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14441():void { var l:UShort = (-2147483647)+(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65535)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14442():void { var l:UShort = (-2147483647)+(65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14443():void { var l:UShort = (-2147483647)+(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14444():void { var l:UShort = (-2147483647)+(16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14445():void { var l:UShort = (-2147483647)+(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14446():void { var l:UShort = (-2147483647)+(16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14447():void { var l:UShort = (-2147483647)+(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: (-2147483647) + (-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m14448():void { var l:UShort = (-2147483647)+(2147483647); }
	def m14449():void { var l:UShort = (-2147483647)+(-2147483647); }
}
