class UnaryOpTests {
	var w0:Float=0;
	var w1:Double=0;
	var w2:Byte=0;
	var w3:Int=0;
	var w4:Long=0;
	var w5:Short=0;
	var w6:UByte=0;
	var w7:UInt=0;
	var w8:ULong=0;
	var w9:UShort=0;
	var w10:Point=null;


	def m11():void { var l:Float = w0++; }
	def m12():void { var l:Float = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m13():void { var l:Float = w2++; }  
	def m14():void { var l:Float = w3++; }
	def m15():void { var l:Float = w4++; }
	def m16():void { var l:Float = w5++; }  
	def m17():void { var l:Float = w6++; }  
	def m18():void { var l:Float = w7++; }
	def m19():void { var l:Float = w8++; }
	def m20():void { var l:Float = w9++; }
	def m21():void { var l:Float = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Float		 Found type: x10.lang.Point)
	def m22():void { var l:Float = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m23():void { var l:Float = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m24():void { var l:Float = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m25():void { var l:Float = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m26():void { var l:Float = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m27():void { var l:Float = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m28():void { var l:Float = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m29():void { var l:Float = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m30():void { var l:Float = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m31():void { var l:Float = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m32():void { var l:Float = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m33():void { var l:Float = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m34():void { var l:Float = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m35():void { var l:Float = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m36():void { var l:Float = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m37():void { var l:Float = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m38():void { var l:Float = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m39():void { var l:Float = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m40():void { var l:Float = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m41():void { var l:Float = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m42():void { var l:Float = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m43():void { var l:Float = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m44():void { var l:Float = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m45():void { var l:Float = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m46():void { var l:Float = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m47():void { var l:Float = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m48():void { var l:Float = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m49():void { var l:Float = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m50():void { var l:Float = -w0; }
	def m51():void { var l:Float = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m52():void { var l:Float = -w2; } 
	def m53():void { var l:Float = -w3; }
	def m54():void { var l:Float = -w4; }
	def m55():void { var l:Float = -w5; }
	def m56():void { var l:Float = -w6; }
	def m57():void { var l:Float = -w7; }
	def m58():void { var l:Float = -w8; }
	def m59():void { var l:Float = -w9; }
	def m60():void { var l:Float = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Float		 Found type: x10.lang.Point{})
	def m61():void { var l:Float = -0; }
	def m62():void { var l:Float = -(-0); }
	def m63():void { var l:Float = -1.1f; }
	def m64():void { var l:Float = -(-1.1f); }
	def m65():void { var l:Float = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m66():void { var l:Float = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Float		 Found type: x10.lang.Double)
	def m67():void { var l:Float = -127; }
	def m68():void { var l:Float = -(-127); }
	def m69():void { var l:Float = -128; }
	def m70():void { var l:Float = -(-128); }
	def m71():void { var l:Float = -255; }
	def m72():void { var l:Float = -(-255); }
	def m73():void { var l:Float = -256; }
	def m74():void { var l:Float = -(-256); }
	def m75():void { var l:Float = -32767; }
	def m76():void { var l:Float = -(-32767); }
	def m77():void { var l:Float = -32768; }
	def m78():void { var l:Float = -(-32768); }
	def m79():void { var l:Float = -65535; }
	def m80():void { var l:Float = -(-65535); }
	def m81():void { var l:Float = -65536; }
	def m82():void { var l:Float = -(-65536); }
	def m83():void { var l:Float = -16777216; }
	def m84():void { var l:Float = -(-16777216); }
	def m85():void { var l:Float = -16777217; }
	def m86():void { var l:Float = -(-16777217); }
	def m87():void { var l:Float = -2147483647; }
	def m88():void { var l:Float = -(-2147483647); }
	def m89():void { var l:Double = w0++; }
	def m90():void { var l:Double = w1++; }
	def m91():void { var l:Double = w2++; }  
	def m92():void { var l:Double = w3++; }
	def m93():void { var l:Double = w4++; }
	def m94():void { var l:Double = w5++; }  
	def m95():void { var l:Double = w6++; }
	def m96():void { var l:Double = w7++; }
	def m97():void { var l:Double = w8++; }
	def m98():void { var l:Double = w9++; }
	def m99():void { var l:Double = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Double		 Found type: x10.lang.Point)
	def m100():void { var l:Double = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m101():void { var l:Double = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m102():void { var l:Double = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m103():void { var l:Double = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m104():void { var l:Double = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m105():void { var l:Double = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m106():void { var l:Double = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m107():void { var l:Double = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m108():void { var l:Double = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m109():void { var l:Double = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m110():void { var l:Double = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m111():void { var l:Double = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m112():void { var l:Double = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m113():void { var l:Double = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m114():void { var l:Double = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m115():void { var l:Double = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m116():void { var l:Double = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m117():void { var l:Double = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m118():void { var l:Double = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m119():void { var l:Double = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m120():void { var l:Double = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m121():void { var l:Double = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m122():void { var l:Double = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m123():void { var l:Double = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m124():void { var l:Double = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m125():void { var l:Double = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m126():void { var l:Double = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m127():void { var l:Double = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m128():void { var l:Double = -w0; }
	def m129():void { var l:Double = -w1; }
	def m130():void { var l:Double = -w2; } 
	def m131():void { var l:Double = -w3; }
	def m132():void { var l:Double = -w4; }
	def m133():void { var l:Double = -w5; }
	def m134():void { var l:Double = -w6; }
	def m135():void { var l:Double = -w7; }
	def m136():void { var l:Double = -w8; }
	def m137():void { var l:Double = -w9; }
	def m138():void { var l:Double = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Double		 Found type: x10.lang.Point{})
	def m139():void { var l:Double = -0; }
	def m140():void { var l:Double = -(-0); }
	def m141():void { var l:Double = -1.1f; }
	def m142():void { var l:Double = -(-1.1f); }
	def m143():void { var l:Double = -2.2; }
	def m144():void { var l:Double = -(-2.2); }
	def m145():void { var l:Double = -127; }
	def m146():void { var l:Double = -(-127); }
	def m147():void { var l:Double = -128; }
	def m148():void { var l:Double = -(-128); }
	def m149():void { var l:Double = -255; }
	def m150():void { var l:Double = -(-255); }
	def m151():void { var l:Double = -256; }
	def m152():void { var l:Double = -(-256); }
	def m153():void { var l:Double = -32767; }
	def m154():void { var l:Double = -(-32767); }
	def m155():void { var l:Double = -32768; }
	def m156():void { var l:Double = -(-32768); }
	def m157():void { var l:Double = -65535; }
	def m158():void { var l:Double = -(-65535); }
	def m159():void { var l:Double = -65536; }
	def m160():void { var l:Double = -(-65536); }
	def m161():void { var l:Double = -16777216; }
	def m162():void { var l:Double = -(-16777216); }
	def m163():void { var l:Double = -16777217; }
	def m164():void { var l:Double = -(-16777217); }
	def m165():void { var l:Double = -2147483647; }
	def m166():void { var l:Double = -(-2147483647); }
	def m167():void { var l:Byte = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m168():void { var l:Byte = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m169():void { var l:Byte = w2++; }  
	def m170():void { var l:Byte = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m171():void { var l:Byte = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m172():void { var l:Byte = w5++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w5++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m173():void { var l:Byte = w6++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w6++		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m174():void { var l:Byte = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m175():void { var l:Byte = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m176():void { var l:Byte = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m177():void { var l:Byte = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Byte		 Found type: x10.lang.Point)
	def m178():void { var l:Byte = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m179():void { var l:Byte = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m180():void { var l:Byte = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m181():void { var l:Byte = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m182():void { var l:Byte = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m183():void { var l:Byte = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m184():void { var l:Byte = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m185():void { var l:Byte = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m186():void { var l:Byte = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m187():void { var l:Byte = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m188():void { var l:Byte = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m189():void { var l:Byte = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m190():void { var l:Byte = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m191():void { var l:Byte = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m192():void { var l:Byte = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m193():void { var l:Byte = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m194():void { var l:Byte = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m195():void { var l:Byte = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m196():void { var l:Byte = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m197():void { var l:Byte = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m198():void { var l:Byte = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m199():void { var l:Byte = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m200():void { var l:Byte = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m201():void { var l:Byte = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m202():void { var l:Byte = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m203():void { var l:Byte = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m204():void { var l:Byte = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m205():void { var l:Byte = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m206():void { var l:Byte = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m207():void { var l:Byte = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m208():void { var l:Byte = -w2; } 
	def m209():void { var l:Byte = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m210():void { var l:Byte = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.Byte		 Found type: x10.lang.Long)
	def m211():void { var l:Byte = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w5		 Expected type: x10.lang.Byte		 Found type: x10.lang.Short)
	def m212():void { var l:Byte = -w6; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w6		 Expected type: x10.lang.Byte		 Found type: x10.lang.UByte)
	def m213():void { var l:Byte = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.Byte		 Found type: x10.lang.UInt)
	def m214():void { var l:Byte = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.Byte		 Found type: x10.lang.ULong)
	def m215():void { var l:Byte = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.Byte		 Found type: x10.lang.UShort)
	def m216():void { var l:Byte = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Byte		 Found type: x10.lang.Point{})
	def m217():void { var l:Byte = -0; }
	def m218():void { var l:Byte = -(-0); }
	def m219():void { var l:Byte = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m220():void { var l:Byte = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Float)
	def m221():void { var l:Byte = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m222():void { var l:Byte = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Double)
	def m223():void { var l:Byte = -127; }
	def m224():void { var l:Byte = -(-127); }
	def m225():void { var l:Byte = -128; }
	def m226():void { var l:Byte = -(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-128)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m227():void { var l:Byte = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-255})
	def m228():void { var l:Byte = -(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-255)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m229():void { var l:Byte = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-256})
	def m230():void { var l:Byte = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m231():void { var l:Byte = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-32767})
	def m232():void { var l:Byte = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m233():void { var l:Byte = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-32768})
	def m234():void { var l:Byte = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m235():void { var l:Byte = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-65535})
	def m236():void { var l:Byte = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m237():void { var l:Byte = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-65536})
	def m238():void { var l:Byte = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m239():void { var l:Byte = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-16777216})
	def m240():void { var l:Byte = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m241():void { var l:Byte = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-16777217})
	def m242():void { var l:Byte = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m243():void { var l:Byte = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int{self==-2147483647})
	def m244():void { var l:Byte = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.Byte		 Found type: x10.lang.Int)
	def m245():void { var l:Int = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m246():void { var l:Int = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m247():void { var l:Int = w2++; }  
	def m248():void { var l:Int = w3++; }
	def m249():void { var l:Int = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m250():void { var l:Int = w5++; }  
	def m251():void { var l:Int = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w6++		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m252():void { var l:Int = w7++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m253():void { var l:Int = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m254():void { var l:Int = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m255():void { var l:Int = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Int		 Found type: x10.lang.Point)
	def m256():void { var l:Int = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m257():void { var l:Int = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m258():void { var l:Int = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m259():void { var l:Int = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m260():void { var l:Int = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m261():void { var l:Int = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m262():void { var l:Int = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m263():void { var l:Int = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m264():void { var l:Int = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m265():void { var l:Int = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m266():void { var l:Int = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m267():void { var l:Int = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m268():void { var l:Int = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m269():void { var l:Int = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m270():void { var l:Int = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m271():void { var l:Int = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m272():void { var l:Int = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m273():void { var l:Int = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m274():void { var l:Int = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m275():void { var l:Int = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m276():void { var l:Int = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m277():void { var l:Int = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m278():void { var l:Int = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m279():void { var l:Int = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m280():void { var l:Int = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m281():void { var l:Int = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m282():void { var l:Int = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m283():void { var l:Int = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m284():void { var l:Int = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m285():void { var l:Int = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m286():void { var l:Int = -w2; } 
	def m287():void { var l:Int = -w3; }
	def m288():void { var l:Int = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.Int		 Found type: x10.lang.Long)
	def m289():void { var l:Int = -w5; }
	def m290():void { var l:Int = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w6		 Expected type: x10.lang.Int		 Found type: x10.lang.UByte)
	def m291():void { var l:Int = -w7; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.Int		 Found type: x10.lang.UInt)
	def m292():void { var l:Int = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.Int		 Found type: x10.lang.ULong)
	def m293():void { var l:Int = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.Int		 Found type: x10.lang.UShort)
	def m294():void { var l:Int = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Int		 Found type: x10.lang.Point{})
	def m295():void { var l:Int = -0; }
	def m296():void { var l:Int = -(-0); }
	def m297():void { var l:Int = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m298():void { var l:Int = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Int		 Found type: x10.lang.Float)
	def m299():void { var l:Int = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m300():void { var l:Int = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Int		 Found type: x10.lang.Double)
	def m301():void { var l:Int = -127; }
	def m302():void { var l:Int = -(-127); }
	def m303():void { var l:Int = -128; }
	def m304():void { var l:Int = -(-128); }
	def m305():void { var l:Int = -255; }
	def m306():void { var l:Int = -(-255); }
	def m307():void { var l:Int = -256; }
	def m308():void { var l:Int = -(-256); }
	def m309():void { var l:Int = -32767; }
	def m310():void { var l:Int = -(-32767); }
	def m311():void { var l:Int = -32768; }
	def m312():void { var l:Int = -(-32768); }
	def m313():void { var l:Int = -65535; }
	def m314():void { var l:Int = -(-65535); }
	def m315():void { var l:Int = -65536; }
	def m316():void { var l:Int = -(-65536); }
	def m317():void { var l:Int = -16777216; }
	def m318():void { var l:Int = -(-16777216); }
	def m319():void { var l:Int = -16777217; }
	def m320():void { var l:Int = -(-16777217); }
	def m321():void { var l:Int = -2147483647; }
	def m322():void { var l:Int = -(-2147483647); }
	def m323():void { var l:Long = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m324():void { var l:Long = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m325():void { var l:Long = w2++; }  
	def m326():void { var l:Long = w3++; }
	def m327():void { var l:Long = w4++; }
	def m328():void { var l:Long = w5++; }  
	def m329():void { var l:Long = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w6++		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m330():void { var l:Long = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m331():void { var l:Long = w8++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m332():void { var l:Long = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m333():void { var l:Long = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Long		 Found type: x10.lang.Point)
	def m334():void { var l:Long = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m335():void { var l:Long = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m336():void { var l:Long = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m337():void { var l:Long = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m338():void { var l:Long = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m339():void { var l:Long = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m340():void { var l:Long = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m341():void { var l:Long = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m342():void { var l:Long = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m343():void { var l:Long = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m344():void { var l:Long = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m345():void { var l:Long = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m346():void { var l:Long = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m347():void { var l:Long = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m348():void { var l:Long = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m349():void { var l:Long = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m350():void { var l:Long = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m351():void { var l:Long = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m352():void { var l:Long = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m353():void { var l:Long = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m354():void { var l:Long = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m355():void { var l:Long = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m356():void { var l:Long = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m357():void { var l:Long = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m358():void { var l:Long = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m359():void { var l:Long = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m360():void { var l:Long = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m361():void { var l:Long = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m362():void { var l:Long = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m363():void { var l:Long = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m364():void { var l:Long = -w2; } 
	def m365():void { var l:Long = -w3; }
	def m366():void { var l:Long = -w4; }
	def m367():void { var l:Long = -w5; }
	def m368():void { var l:Long = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w6		 Expected type: x10.lang.Long		 Found type: x10.lang.UByte)
	def m369():void { var l:Long = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.Long		 Found type: x10.lang.UInt)
	def m370():void { var l:Long = -w8; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.Long		 Found type: x10.lang.ULong)
	def m371():void { var l:Long = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.Long		 Found type: x10.lang.UShort)
	def m372():void { var l:Long = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Long		 Found type: x10.lang.Point{})
	def m373():void { var l:Long = -0; }
	def m374():void { var l:Long = -(-0); }
	def m375():void { var l:Long = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m376():void { var l:Long = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Long		 Found type: x10.lang.Float)
	def m377():void { var l:Long = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m378():void { var l:Long = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Long		 Found type: x10.lang.Double)
	def m379():void { var l:Long = -127; }
	def m380():void { var l:Long = -(-127); }
	def m381():void { var l:Long = -128; }
	def m382():void { var l:Long = -(-128); }
	def m383():void { var l:Long = -255; }
	def m384():void { var l:Long = -(-255); }
	def m385():void { var l:Long = -256; }
	def m386():void { var l:Long = -(-256); }
	def m387():void { var l:Long = -32767; }
	def m388():void { var l:Long = -(-32767); }
	def m389():void { var l:Long = -32768; }
	def m390():void { var l:Long = -(-32768); }
	def m391():void { var l:Long = -65535; }
	def m392():void { var l:Long = -(-65535); }
	def m393():void { var l:Long = -65536; }
	def m394():void { var l:Long = -(-65536); }
	def m395():void { var l:Long = -16777216; }
	def m396():void { var l:Long = -(-16777216); }
	def m397():void { var l:Long = -16777217; }
	def m398():void { var l:Long = -(-16777217); }
	def m399():void { var l:Long = -2147483647; }
	def m400():void { var l:Long = -(-2147483647); }
	def m401():void { var l:Short = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m402():void { var l:Short = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m403():void { var l:Short = w2++; }  
	def m404():void { var l:Short = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m405():void { var l:Short = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m406():void { var l:Short = w5++; }  
	def m407():void { var l:Short = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w6++		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m408():void { var l:Short = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m409():void { var l:Short = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m410():void { var l:Short = w9++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m411():void { var l:Short = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.Short		 Found type: x10.lang.Point)
	def m412():void { var l:Short = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m413():void { var l:Short = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m414():void { var l:Short = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m415():void { var l:Short = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m416():void { var l:Short = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m417():void { var l:Short = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m418():void { var l:Short = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m419():void { var l:Short = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m420():void { var l:Short = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m421():void { var l:Short = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m422():void { var l:Short = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m423():void { var l:Short = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m424():void { var l:Short = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m425():void { var l:Short = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m426():void { var l:Short = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m427():void { var l:Short = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m428():void { var l:Short = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m429():void { var l:Short = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m430():void { var l:Short = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m431():void { var l:Short = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m432():void { var l:Short = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m433():void { var l:Short = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m434():void { var l:Short = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m435():void { var l:Short = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m436():void { var l:Short = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m437():void { var l:Short = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m438():void { var l:Short = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m439():void { var l:Short = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m440():void { var l:Short = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m441():void { var l:Short = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m442():void { var l:Short = -w2; } 
	def m443():void { var l:Short = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m444():void { var l:Short = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.Short		 Found type: x10.lang.Long)
	def m445():void { var l:Short = -w5; }
	def m446():void { var l:Short = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w6		 Expected type: x10.lang.Short		 Found type: x10.lang.UByte)
	def m447():void { var l:Short = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.Short		 Found type: x10.lang.UInt)
	def m448():void { var l:Short = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.Short		 Found type: x10.lang.ULong)
	def m449():void { var l:Short = -w9; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.Short		 Found type: x10.lang.UShort)
	def m450():void { var l:Short = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.Short		 Found type: x10.lang.Point{})
	def m451():void { var l:Short = -0; }
	def m452():void { var l:Short = -(-0); }
	def m453():void { var l:Short = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m454():void { var l:Short = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Short		 Found type: x10.lang.Float)
	def m455():void { var l:Short = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m456():void { var l:Short = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Short		 Found type: x10.lang.Double)
	def m457():void { var l:Short = -127; }
	def m458():void { var l:Short = -(-127); }
	def m459():void { var l:Short = -128; }
	def m460():void { var l:Short = -(-128); }
	def m461():void { var l:Short = -255; }
	def m462():void { var l:Short = -(-255); }
	def m463():void { var l:Short = -256; }
	def m464():void { var l:Short = -(-256); }
	def m465():void { var l:Short = -32767; }
	def m466():void { var l:Short = -(-32767); }
	def m467():void { var l:Short = -32768; }
	def m468():void { var l:Short = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m469():void { var l:Short = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-65535})
	def m470():void { var l:Short = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m471():void { var l:Short = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-65536})
	def m472():void { var l:Short = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m473():void { var l:Short = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-16777216})
	def m474():void { var l:Short = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m475():void { var l:Short = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-16777217})
	def m476():void { var l:Short = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m477():void { var l:Short = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.Short		 Found type: x10.lang.Int{self==-2147483647})
	def m478():void { var l:Short = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.Short		 Found type: x10.lang.Int)
	def m479():void { var l:UByte = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m480():void { var l:UByte = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m481():void { var l:UByte = w2++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w2++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m482():void { var l:UByte = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m483():void { var l:UByte = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m484():void { var l:UByte = w5++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w5++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m485():void { var l:UByte = w6++; }
	def m486():void { var l:UByte = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m487():void { var l:UByte = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m488():void { var l:UByte = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m489():void { var l:UByte = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.UByte		 Found type: x10.lang.Point)
	def m490():void { var l:UByte = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m491():void { var l:UByte = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m492():void { var l:UByte = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m493():void { var l:UByte = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m494():void { var l:UByte = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m495():void { var l:UByte = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m496():void { var l:UByte = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m497():void { var l:UByte = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m498():void { var l:UByte = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m499():void { var l:UByte = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m500():void { var l:UByte = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m501():void { var l:UByte = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m502():void { var l:UByte = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m503():void { var l:UByte = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m504():void { var l:UByte = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m505():void { var l:UByte = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m506():void { var l:UByte = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m507():void { var l:UByte = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m508():void { var l:UByte = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m509():void { var l:UByte = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m510():void { var l:UByte = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m511():void { var l:UByte = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m512():void { var l:UByte = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m513():void { var l:UByte = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m514():void { var l:UByte = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m515():void { var l:UByte = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m516():void { var l:UByte = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m517():void { var l:UByte = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m518():void { var l:UByte = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m519():void { var l:UByte = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m520():void { var l:UByte = -w2; } // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w2		 Expected type: x10.lang.UByte		 Found type: x10.lang.Byte)
	def m521():void { var l:UByte = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m522():void { var l:UByte = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.UByte		 Found type: x10.lang.Long)
	def m523():void { var l:UByte = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w5		 Expected type: x10.lang.UByte		 Found type: x10.lang.Short)
	def m524():void { var l:UByte = -w6; }
	def m525():void { var l:UByte = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.UByte		 Found type: x10.lang.UInt)
	def m526():void { var l:UByte = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.UByte		 Found type: x10.lang.ULong)
	def m527():void { var l:UByte = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.UByte		 Found type: x10.lang.UShort)
	def m528():void { var l:UByte = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.UByte		 Found type: x10.lang.Point{})
	def m529():void { var l:UByte = -0; }
	def m530():void { var l:UByte = -(-0); }
	def m531():void { var l:UByte = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m532():void { var l:UByte = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Float)
	def m533():void { var l:UByte = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m534():void { var l:UByte = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Double)
	def m535():void { var l:UByte = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-127})
	def m536():void { var l:UByte = -(-127); }
	def m537():void { var l:UByte = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-128})
	def m538():void { var l:UByte = -(-128); }
	def m539():void { var l:UByte = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-255})
	def m540():void { var l:UByte = -(-255); }
	def m541():void { var l:UByte = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-256})
	def m542():void { var l:UByte = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m543():void { var l:UByte = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32767})
	def m544():void { var l:UByte = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m545():void { var l:UByte = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-32768})
	def m546():void { var l:UByte = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m547():void { var l:UByte = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65535})
	def m548():void { var l:UByte = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m549():void { var l:UByte = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-65536})
	def m550():void { var l:UByte = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m551():void { var l:UByte = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777216})
	def m552():void { var l:UByte = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m553():void { var l:UByte = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-16777217})
	def m554():void { var l:UByte = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m555():void { var l:UByte = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int{self==-2147483647})
	def m556():void { var l:UByte = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.UByte		 Found type: x10.lang.Int)
	def m557():void { var l:UInt = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m558():void { var l:UInt = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m559():void { var l:UInt = w2++; }  
	def m560():void { var l:UInt = w3++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m561():void { var l:UInt = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m562():void { var l:UInt = w5++; }  
	def m563():void { var l:UInt = w6++; }
	def m564():void { var l:UInt = w7++; }
	def m565():void { var l:UInt = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m566():void { var l:UInt = w9++; }
	def m567():void { var l:UInt = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.UInt		 Found type: x10.lang.Point)
	def m568():void { var l:UInt = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m569():void { var l:UInt = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m570():void { var l:UInt = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m571():void { var l:UInt = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m572():void { var l:UInt = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m573():void { var l:UInt = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m574():void { var l:UInt = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m575():void { var l:UInt = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m576():void { var l:UInt = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m577():void { var l:UInt = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m578():void { var l:UInt = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m579():void { var l:UInt = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m580():void { var l:UInt = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m581():void { var l:UInt = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m582():void { var l:UInt = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m583():void { var l:UInt = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m584():void { var l:UInt = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m585():void { var l:UInt = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m586():void { var l:UInt = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m587():void { var l:UInt = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m588():void { var l:UInt = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m589():void { var l:UInt = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m590():void { var l:UInt = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m591():void { var l:UInt = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m592():void { var l:UInt = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m593():void { var l:UInt = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m594():void { var l:UInt = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m595():void { var l:UInt = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m596():void { var l:UInt = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m597():void { var l:UInt = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m598():void { var l:UInt = -w2; } 
	def m599():void { var l:UInt = -w3; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int)
	def m600():void { var l:UInt = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.UInt		 Found type: x10.lang.Long)
	def m601():void { var l:UInt = -w5; }
	def m602():void { var l:UInt = -w6; }
	def m603():void { var l:UInt = -w7; }
	def m604():void { var l:UInt = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.UInt		 Found type: x10.lang.ULong)
	def m605():void { var l:UInt = -w9; }
	def m606():void { var l:UInt = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.UInt		 Found type: x10.lang.Point{})
	def m607():void { var l:UInt = -0; }
	def m608():void { var l:UInt = -(-0); }
	def m609():void { var l:UInt = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m610():void { var l:UInt = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Float)
	def m611():void { var l:UInt = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m612():void { var l:UInt = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UInt		 Found type: x10.lang.Double)
	def m613():void { var l:UInt = -127; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-127})
	def m614():void { var l:UInt = -(-127); }
	def m615():void { var l:UInt = -128; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-128})
	def m616():void { var l:UInt = -(-128); }
	def m617():void { var l:UInt = -255; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-255})
	def m618():void { var l:UInt = -(-255); }
	def m619():void { var l:UInt = -256; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-256})
	def m620():void { var l:UInt = -(-256); }
	def m621():void { var l:UInt = -32767; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-32767})
	def m622():void { var l:UInt = -(-32767); }
	def m623():void { var l:UInt = -32768; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-32768})
	def m624():void { var l:UInt = -(-32768); }
	def m625():void { var l:UInt = -65535; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-65535})
	def m626():void { var l:UInt = -(-65535); }
	def m627():void { var l:UInt = -65536; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-65536})
	def m628():void { var l:UInt = -(-65536); }
	def m629():void { var l:UInt = -16777216; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-16777216})
	def m630():void { var l:UInt = -(-16777216); }
	def m631():void { var l:UInt = -16777217; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-16777217})
	def m632():void { var l:UInt = -(-16777217); }
	def m633():void { var l:UInt = -2147483647; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.UInt		 Found type: x10.lang.Int{self==-2147483647})
	def m634():void { var l:UInt = -(-2147483647); }
	def m635():void { var l:ULong = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m636():void { var l:ULong = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m637():void { var l:ULong = w2++; }  
	def m638():void { var l:ULong = w3++; }
	def m639():void { var l:ULong = w4++; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m640():void { var l:ULong = w5++; }  
	def m641():void { var l:ULong = w6++; }
	def m642():void { var l:ULong = w7++; }
	def m643():void { var l:ULong = w8++; }
	def m644():void { var l:ULong = w9++; }
	def m645():void { var l:ULong = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.ULong		 Found type: x10.lang.Point)
	def m646():void { var l:ULong = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m647():void { var l:ULong = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m648():void { var l:ULong = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m649():void { var l:ULong = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m650():void { var l:ULong = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m651():void { var l:ULong = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m652():void { var l:ULong = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m653():void { var l:ULong = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m654():void { var l:ULong = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m655():void { var l:ULong = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m656():void { var l:ULong = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m657():void { var l:ULong = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m658():void { var l:ULong = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m659():void { var l:ULong = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m660():void { var l:ULong = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m661():void { var l:ULong = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m662():void { var l:ULong = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m663():void { var l:ULong = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m664():void { var l:ULong = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m665():void { var l:ULong = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m666():void { var l:ULong = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m667():void { var l:ULong = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m668():void { var l:ULong = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m669():void { var l:ULong = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m670():void { var l:ULong = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m671():void { var l:ULong = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m672():void { var l:ULong = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m673():void { var l:ULong = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m674():void { var l:ULong = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m675():void { var l:ULong = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m676():void { var l:ULong = -w2; } 
	def m677():void { var l:ULong = -w3; }
	def m678():void { var l:ULong = -w4; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.ULong		 Found type: x10.lang.Long)
	def m679():void { var l:ULong = -w5; }
	def m680():void { var l:ULong = -w6; }
	def m681():void { var l:ULong = -w7; }
	def m682():void { var l:ULong = -w8; }
	def m683():void { var l:ULong = -w9; }
	def m684():void { var l:ULong = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.ULong		 Found type: x10.lang.Point{})
	def m685():void { var l:ULong = -0; }
	def m686():void { var l:ULong = -(-0); }
	def m687():void { var l:ULong = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m688():void { var l:ULong = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Float)
	def m689():void { var l:ULong = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m690():void { var l:ULong = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.ULong		 Found type: x10.lang.Double)
	def m691():void { var l:ULong = -127; }
	def m692():void { var l:ULong = -(-127); }
	def m693():void { var l:ULong = -128; }
	def m694():void { var l:ULong = -(-128); }
	def m695():void { var l:ULong = -255; }
	def m696():void { var l:ULong = -(-255); }
	def m697():void { var l:ULong = -256; }
	def m698():void { var l:ULong = -(-256); }
	def m699():void { var l:ULong = -32767; }
	def m700():void { var l:ULong = -(-32767); }
	def m701():void { var l:ULong = -32768; }
	def m702():void { var l:ULong = -(-32768); }
	def m703():void { var l:ULong = -65535; }
	def m704():void { var l:ULong = -(-65535); }
	def m705():void { var l:ULong = -65536; }
	def m706():void { var l:ULong = -(-65536); }
	def m707():void { var l:ULong = -16777216; }
	def m708():void { var l:ULong = -(-16777216); }
	def m709():void { var l:ULong = -16777217; }
	def m710():void { var l:ULong = -(-16777217); }
	def m711():void { var l:ULong = -2147483647; }
	def m712():void { var l:ULong = -(-2147483647); }
	def m713():void { var l:UShort = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m714():void { var l:UShort = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m715():void { var l:UShort = w2++; }  
	def m716():void { var l:UShort = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m717():void { var l:UShort = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m718():void { var l:UShort = w5++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w5++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m719():void { var l:UShort = w6++; }
	def m720():void { var l:UShort = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m721():void { var l:UShort = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m722():void { var l:UShort = w9++; }
	def m723():void { var l:UShort = w10++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w10++		 Expected type: x10.lang.UShort		 Found type: x10.lang.Point)
	def m724():void { var l:UShort = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m725():void { var l:UShort = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m726():void { var l:UShort = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m727():void { var l:UShort = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m728():void { var l:UShort = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m729():void { var l:UShort = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m730():void { var l:UShort = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m731():void { var l:UShort = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m732():void { var l:UShort = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m733():void { var l:UShort = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m734():void { var l:UShort = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m735():void { var l:UShort = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m736():void { var l:UShort = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m737():void { var l:UShort = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m738():void { var l:UShort = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m739():void { var l:UShort = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m740():void { var l:UShort = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m741():void { var l:UShort = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m742():void { var l:UShort = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m743():void { var l:UShort = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m744():void { var l:UShort = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m745():void { var l:UShort = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m746():void { var l:UShort = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m747():void { var l:UShort = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m748():void { var l:UShort = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m749():void { var l:UShort = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m750():void { var l:UShort = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m751():void { var l:UShort = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m752():void { var l:UShort = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m753():void { var l:UShort = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m754():void { var l:UShort = -w2; } 
	def m755():void { var l:UShort = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m756():void { var l:UShort = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.UShort		 Found type: x10.lang.Long)
	def m757():void { var l:UShort = -w5; }// ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w5		 Expected type: x10.lang.UShort		 Found type: x10.lang.Short)
	def m758():void { var l:UShort = -w6; }
	def m759():void { var l:UShort = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.UShort		 Found type: x10.lang.UInt)
	def m760():void { var l:UShort = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.UShort		 Found type: x10.lang.ULong)
	def m761():void { var l:UShort = -w9; }
	def m762():void { var l:UShort = -w10; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w10		 Expected type: x10.lang.UShort		 Found type: x10.lang.Point{})
	def m763():void { var l:UShort = -0; }
	def m764():void { var l:UShort = -(-0); }
	def m765():void { var l:UShort = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m766():void { var l:UShort = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Float)
	def m767():void { var l:UShort = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m768():void { var l:UShort = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Double)
	def m769():void { var l:UShort = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-127})
	def m770():void { var l:UShort = -(-127); }
	def m771():void { var l:UShort = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-128})
	def m772():void { var l:UShort = -(-128); }
	def m773():void { var l:UShort = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-255})
	def m774():void { var l:UShort = -(-255); }
	def m775():void { var l:UShort = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-256})
	def m776():void { var l:UShort = -(-256); }
	def m777():void { var l:UShort = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-32767})
	def m778():void { var l:UShort = -(-32767); }
	def m779():void { var l:UShort = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-32768})
	def m780():void { var l:UShort = -(-32768); }
	def m781():void { var l:UShort = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65535})
	def m782():void { var l:UShort = -(-65535); }
	def m783():void { var l:UShort = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-65536})
	def m784():void { var l:UShort = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m785():void { var l:UShort = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777216})
	def m786():void { var l:UShort = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m787():void { var l:UShort = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-16777217})
	def m788():void { var l:UShort = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m789():void { var l:UShort = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int{self==-2147483647})
	def m790():void { var l:UShort = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.UShort		 Found type: x10.lang.Int)
	def m791():void { var l:Point = w0++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w0++		 Expected type: x10.lang.Point		 Found type: x10.lang.Float)
	def m792():void { var l:Point = w1++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w1++		 Expected type: x10.lang.Point		 Found type: x10.lang.Double)
	def m793():void { var l:Point = w2++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w2++		 Expected type: x10.lang.Point		 Found type: x10.lang.Byte)
	def m794():void { var l:Point = w3++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w3++		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m795():void { var l:Point = w4++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w4++		 Expected type: x10.lang.Point		 Found type: x10.lang.Long)
	def m796():void { var l:Point = w5++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w5++		 Expected type: x10.lang.Point		 Found type: x10.lang.Short)
	def m797():void { var l:Point = w6++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w6++		 Expected type: x10.lang.Point		 Found type: x10.lang.UByte)
	def m798():void { var l:Point = w7++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w7++		 Expected type: x10.lang.Point		 Found type: x10.lang.UInt)
	def m799():void { var l:Point = w8++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w8++		 Expected type: x10.lang.Point		 Found type: x10.lang.ULong)
	def m800():void { var l:Point = w9++; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: UnaryOpTests.this.w9++		 Expected type: x10.lang.Point		 Found type: x10.lang.UShort)
	def m801():void { var l:Point = w10++; }
	def m802():void { var l:Point = 0++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m803():void { var l:Point = (-0)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m804():void { var l:Point = 1.1f++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m805():void { var l:Point = (-1.1f)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m806():void { var l:Point = 2.2++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m807():void { var l:Point = (-2.2)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m808():void { var l:Point = 127++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m809():void { var l:Point = (-127)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m810():void { var l:Point = 128++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m811():void { var l:Point = (-128)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m812():void { var l:Point = 255++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m813():void { var l:Point = (-255)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m814():void { var l:Point = 256++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m815():void { var l:Point = (-256)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m816():void { var l:Point = 32767++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m817():void { var l:Point = (-32767)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m818():void { var l:Point = 32768++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m819():void { var l:Point = (-32768)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m820():void { var l:Point = 65535++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m821():void { var l:Point = (-65535)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m822():void { var l:Point = 65536++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m823():void { var l:Point = (-65536)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m824():void { var l:Point = 16777216++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m825():void { var l:Point = (-16777216)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m826():void { var l:Point = 16777217++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m827():void { var l:Point = (-16777217)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m828():void { var l:Point = 2147483647++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m829():void { var l:Point = (-2147483647)++; }  // ERR (Semantic Error: Cannot apply ++ to an arbitrary expression.)
	def m830():void { var l:Point = -w0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w0		 Expected type: x10.lang.Point		 Found type: x10.lang.Float)
	def m831():void { var l:Point = -w1; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w1		 Expected type: x10.lang.Point		 Found type: x10.lang.Double)
	def m832():void { var l:Point = -w2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w2		 Expected type: x10.lang.Point		 Found type: x10.lang.Byte)
	def m833():void { var l:Point = -w3; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w3		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m834():void { var l:Point = -w4; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w4		 Expected type: x10.lang.Point		 Found type: x10.lang.Long)
	def m835():void { var l:Point = -w5; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w5		 Expected type: x10.lang.Point		 Found type: x10.lang.Short)
	def m836():void { var l:Point = -w6; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w6		 Expected type: x10.lang.Point		 Found type: x10.lang.UByte)
	def m837():void { var l:Point = -w7; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w7		 Expected type: x10.lang.Point		 Found type: x10.lang.UInt)
	def m838():void { var l:Point = -w8; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w8		 Expected type: x10.lang.Point		 Found type: x10.lang.ULong)
	def m839():void { var l:Point = -w9; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -UnaryOpTests.this.w9		 Expected type: x10.lang.Point		 Found type: x10.lang.UShort)
	def m840():void { var l:Point = -w10; }
	def m841():void { var l:Point = -0; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: 0		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==0})
	def m842():void { var l:Point = -(-0); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(0)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m843():void { var l:Point = -1.1f; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -1.100000023841858		 Expected type: x10.lang.Point		 Found type: x10.lang.Float)
	def m844():void { var l:Point = -(-1.1f); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-1.100000023841858)		 Expected type: x10.lang.Point		 Found type: x10.lang.Float)
	def m845():void { var l:Point = -2.2; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2.2		 Expected type: x10.lang.Point		 Found type: x10.lang.Double)
	def m846():void { var l:Point = -(-2.2); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2.2)		 Expected type: x10.lang.Point		 Found type: x10.lang.Double)
	def m847():void { var l:Point = -127; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -127		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-127})
	def m848():void { var l:Point = -(-127); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-127)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m849():void { var l:Point = -128; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -128		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-128})
	def m850():void { var l:Point = -(-128); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-128)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m851():void { var l:Point = -255; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -255		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-255})
	def m852():void { var l:Point = -(-255); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-255)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m853():void { var l:Point = -256; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -256		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-256})
	def m854():void { var l:Point = -(-256); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-256)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m855():void { var l:Point = -32767; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32767		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-32767})
	def m856():void { var l:Point = -(-32767); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32767)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m857():void { var l:Point = -32768; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -32768		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-32768})
	def m858():void { var l:Point = -(-32768); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-32768)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m859():void { var l:Point = -65535; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65535		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-65535})
	def m860():void { var l:Point = -(-65535); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65535)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m861():void { var l:Point = -65536; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -65536		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-65536})
	def m862():void { var l:Point = -(-65536); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-65536)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m863():void { var l:Point = -16777216; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777216		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-16777216})
	def m864():void { var l:Point = -(-16777216); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777216)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m865():void { var l:Point = -16777217; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -16777217		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-16777217})
	def m866():void { var l:Point = -(-16777217); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-16777217)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
	def m867():void { var l:Point = -2147483647; }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -2147483647		 Expected type: x10.lang.Point		 Found type: x10.lang.Int{self==-2147483647})
	def m868():void { var l:Point = -(-2147483647); }  // ERR (Semantic Error: Cannot assign expression to target.		 Expression: -(-2147483647)		 Expected type: x10.lang.Point		 Found type: x10.lang.Int)
}
