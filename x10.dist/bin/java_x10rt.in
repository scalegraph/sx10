help=""
time=""
verbose=""
extra_cp=""
extra_lib=""
mx=""
defs=""
dev=""
java_args=""
args=""

while [ -n "$1" ]; do
    case "$1" in
        -h|-help|--help) help="1"; break;;
        -mx) shift; mx="$1";;
        -D*) if [[ "${1##-D}" = java.library.path=* ]]; then
                 echo >&2 "Error: Cannot reset java.library.path, use -libpath instead"
                 exit 1
             fi
             # TODO: add tests for more system properties above
             defs="${defs} $1";;
        -classpath|-cp) shift; extra_cp="$1";;
        -libpath) shift; extra_lib="$1";;
        -config) shift; config="$1.cfg";;
        -dev) dev="true";;
        -J*) java_args="${java_args} '${1##-J}'";;
        -*=*) java_args="${java_args} -Dx10.${1##-}";;
        -*) java_args="${java_args} -Dx10.${1##-}=true";;
        *) args="$args $1"; shift; args="$args $*"; break;;
    esac
    shift
done

if [ -n "$help" -o -z "$args" ]; then
    cat << EOF
Usage: java_x10rt [options] <main-class> [arg0 arg1 ...]
where [options] includes:
    -h -help --help          print this message
    -mx <size>               set max heap size, e.g., -mx 200M
    -D<name>=<value>         set system property <name> to <value>
    -classpath <path>        search path for class files
    -libpath <path>          search path for native libraries
    -J<arg>                  [USE WITH CAUTION] pass <arg> directly to java.
        e.g., use -J-verbose to make java execution verbose.
EOF
    exit 1
fi


LIB_DIR="${TOP}${FILE_SEP}lib"

classpath=""
[ -n "$dev" ] && classpath="${TOP}${FILE_SEP}..${FILE_SEP}x10.runtime${FILE_SEP}classes${PATH_SEP}"
classpath=".${PATH_SEP}${classpath}${LIB_DIR}${FILE_SEP}x10.jar"

if [ -n "$extra_cp" ]; then
   classpath="$extra_cp${PATH_SEP}$classpath"
fi

externpath="${classpath}${PATH_SEP}${LIB_DIR}"
if [ -n "$extra_lib" ]; then
   externpath="$extra_lib${PATH_SEP}$externpath"
fi

java_args="-Djava.library.path=\"$externpath\" -ea -classpath \"$classpath\" ${java_args}"

if [ -n "$mx" ]; then
   java_args="-Xmx$mx $java_args"
fi
java_args="${java_args} ${defs}"

command="\"$JAVA\" $java_args $config $args"

[ -n "$verbose" ] && echo "$command"

eval "$command"
exit $?

