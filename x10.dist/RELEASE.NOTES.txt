Release 2.2.0

MAJOR CHANGES

We have been extremely busy since the 2.2.1 release of X10.
In all, 462 JIRA issues were resolved for the 2.2.0 release.
A number of changes, clarifications, and improvements have
been made to the language and its implementation.  Some of the
more noticeable language changes are:

  Covariant and contravariant type parameters are gone.

  The operator in is gone.  in is now only a keyword.

  Method functions and operator functions have been removed.

  The expression m..n when m and n are of type Int now creates 
  an IntRange struct instead of a Region. This results in 
  more efficient code for for(i in m..n) without needing
  point destructuring syntax.

  vars can no longer be assigned in their place of origin in an at.  
  Use a GlobalRef[Cell[T]] instead.  We'll have a new idiom for 
  expressing this more concisely in 2.3.

  The next and resume keywords are gone; they have been
  replaced by static methods on Clock.

Please consult the language specification for the details of
these changes and for a list of additional changes.

LIMITATIONS OF THIS RELEASE

The following features described in the 2.2.0 language manual do not
currently work and will be fixed in the subsequent releases:
  - Non-static type definitions as class or interface members
    (static type defs do work)

The constraint solver used by X10 typechecker is known to be incomplete 
for situations in which a constraint implies an infinite number of 
distinct constraints.

Additionally, the following features described in the language
manual do not currently work with the C++ backend and will be fixed in
the subsequent releases:
  - Garbage collection on AIX
  - Non-final generic instance methods
  - Exception stack traces on Cygwin

As in previous releases, the X10 runtime uses a "busy wait" loop
in the worker threads that execute asyncs. A consequence of this is
that even if a place has no asyncs to execute, it will still consume
CPU cycles busy waiting for new asyncs to be created.  
See XTENLANG-1012 for more details.

The generated C++ code requires g++ 4.2 or better to be compiled; 
we do almost all of our testing against g++ 4.3.2.  On AIX, you
may either use g++ 4.2 or better or xlC 10.1.0.4 or better.


SUMMARY OF ISSUES RESOLVED IN THIS RELEASE

Below is a summary of JIRA issues addressed for the X10 2.2.0

** New Features and Improvements
    * [XTENLANG-361] - Add feature to support asynchronous argument evaluation
    * [XTENLANG-389] - Property subgraph should not be cyclic -- averts undecidability for constraint type- checking.
    * [XTENLANG-414] - Command line options to list available XRX configuration options
    * [XTENLANG-452] - Remove _MustFailRun support in the X10 regression scripts
    * [XTENLANG-635] - The error message for trying to call an instance method from a static context isn't very helpful.
    * [XTENLANG-713] - X10 vs. Java in the manual
    * [XTENLANG-890] - Consistent application of conversion and method lookup for calls to == and equals.
    * [XTENLANG-901] - Equals on closure literals should be defined as structural equality instead of reference equality
    * [XTENLANG-929] - Non-static struct members should fail to compile gracefully.
    * [XTENLANG-937] - ant rule for generating x10doc
    * [XTENLANG-938] - Augment X10 release packaging to include (a) x10doc and (b) unbundled .x10 files for standard libraries
    * [XTENLANG-962] - Array library redesign
    * [XTENLANG-963] - Remove Rail / Array distinction
    * [XTENLANG-1037] - X10DT should provide quick fixes for common compiler errors
    * [XTENLANG-1063] - Remove unnecessary duplication between code that supports Java vs. C++ back-ends
    * [XTENLANG-1124] - "at" expressions should have higher precedence than mathematical operators
    * [XTENLANG-1202] - Compiler and IDE support for sequentializing code
    * [XTENLANG-1248] - Correctly implement constraint lub
    * [XTENLANG-1259] - Conversion between Int and Point
    * [XTENLANG-1378] - X10DT builder needs more abstract way of recording dependencies
    * [XTENLANG-1428] - Rationalize =in=
    * [XTENLANG-1541] - Support compiling X10 programs against SVN head or some other version of X10.
    * [XTENLANG-1547] - Character encoding
    * [XTENLANG-1563] - How should code be saved in SVN so that checking out in X10DT will automatically create an X10 project?
    * [XTENLANG-1564] - Extract STATIC_CALLS as a separate phase/stage which removes certain errors from the error queue and inserts dynamic casts 
    * [XTENLANG-1573] - improve compiler message for typechecking problem with Array parameter
    * [XTENLANG-1597] - language design: here and there
    * [XTENLANG-1607] - If something must be static, make it static, don't force me to say "static"
    * [XTENLANG-1618] - remove extern keyword
    * [XTENLANG-1624] - improve compiler message for unresolved method calls
    * [XTENLANG-1642] - Multiple exception toString improvement
    * [XTENLANG-1650] - to def or not to def?
    * [XTENLANG-1667] - Remove the next and resume keywords from the language
    * [XTENLANG-1680] - Runtime.getRuntime().availableProcessors() function
    * [XTENLANG-1690] - more general dynamic constraint checks
    * [XTENLANG-1846] - Improve toString() for exceptions
    * [XTENLANG-1869] - high finish overhead
    * [XTENLANG-1950] - Allow an abend so that failure of critical activity can gracefully end a set of related activities
    * [XTENLANG-1995] - Define IntRange and LongRange using the .. operator on Int/Long respectively
    * [XTENLANG-2017] - IndexedMemoryChunk.fill( T ) method, similar to the one in Array
    * [XTENLANG-2050] - Document best practices for doing parallel builds with x10c/x10c++ (e.g. make -j +/- Ant?)
    * [XTENLANG-2060] - Region.min(), Region.max()
    * [XTENLANG-2145] - Support the "force identifier" construct
    * [XTENLANG-2153] - Fix discussion of implicit conversions between unsigned and signed types
    * [XTENLANG-2237] - document interop with Arrays
    * [XTENLANG-2268] - BGP: build pgas_bgp to not require setting of  X10RT_PGAS_COLLECTIVES environment variable
    * [XTENLANG-2294] - language specification should document the algorithm for generating default hash codes for structs
    * [XTENLANG-2302] - Destructuring Points should check their size.
    * [XTENLANG-2313] - Inefficient implementation of (Complex) struct constants
    * [XTENLANG-2322] - More descriptive toString for method selectors/closures
    * [XTENLANG-2352] - X10 Class Library: FileReader/Writer do not support reading/writing of unsigned types
    * [XTENLANG-2361] - IBM/X10 compiler does not support CUDA compute capability 2.1 (GeForce GTX460)
    * [XTENLANG-2368] - Compile .x10's without a main() method into a .lib with x10c++ 
    * [XTENLANG-2436] - X10 needs top-level type definitions
    * [XTENLANG-2439] - X10 2.2 language design decisions (umbrella)
    * [XTENLANG-2444] - Remove co-and contra- variance from the language
    * [XTENLANG-2458] - Typedef definition
    * [XTENLANG-2465] - Need to define semantics for STATIC_CALLS/DYNAMIC_CALLS (and possibly rename to STATIC_CHECKS/DYNAMIC_CHECKS)
    * [XTENLANG-2483] - Performance of name resolution
    * [XTENLANG-2499] - IntRange as a struct?
    * [XTENLANG-2500] - Add more operators to X10
    * [XTENLANG-2512] - Remove method selection literals
    * [XTENLANG-2513] - Java IndexedMemoryChunk should support long allocation and indices
    * [XTENLANG-2523] - Need a map between source files and output files from the compiler
    * [XTENLANG-2525] - 'e as T' should print a warning when the built-in cast behavior overrides the user-defined explicit conversion.
    * [XTENLANG-2527] - Consider removing the "operator (x:T) as ? <: U = E" syntax
    * [XTENLANG-2528] - Support #this, #paramname in Java backend @Natives
    * [XTENLANG-2542] - @Native with a set operator has unintuitive parameter order
    * [XTENLANG-2660] - Remove ability for code in an at statement/expr to assign a local variable declared outside the at statement/expr
    * [XTENLANG-2664] - Remove special handling of at's first argument
    * [XTENLANG-2665] - Use #paramname instead of #0, #1 etc. for parameters of @Native and @NativeRep annotations in Java backend
    * [XTENLANG-2668] - Rename error nonterminals in the grammar to have "Error" in the name.

** Bug
    * [XTENLANG-4] - "attempting to use incompatible return type" when overriding methods with constraints involving parameters
    * [XTENLANG-21] - Can't determine type of ternary expression involving  (int)=>int
    * [XTENLANG-23] - "... override methods with compatible signatures"
    * [XTENLANG-47] - can't access property of enclosing class in header of nested class
    * [XTENLANG-118] - defined type not equivalent to its definition wrt type constraints
    * [XTENLANG-351] - x10c/x10c++ fails to process special symbols inside comments
    * [XTENLANG-398] - Performance of casts
    * [XTENLANG-547] - Front-end fails to reject method overloading on constrained types (place types)
    * [XTENLANG-560] - Reconsider what pieces of x10.io.InputStream/OutputStream should be global
    * [XTENLANG-585] - Identifiers that the compiler recognizes don't agree with the ones the spec says are OK.
    * [XTENLANG-614] - Ternary expression with void closures fails to typecheck
    * [XTENLANG-697] - Manual needs explanation of protected (and private, package, and public)
    * [XTENLANG-716] - Rule super-extends not checked
    * [XTENLANG-747] - Entailment rule on inherited method guards not enforced
    * [XTENLANG-846] - property assignments not being type-checked
    * [XTENLANG-865] - Fix covariance/contravariance type-checking and code generation
    * [XTENLANG-912] - ArrayIndexOutOfBoundException on test case Array/DimCheckN4_MustFailCompile
    * [XTENLANG-914] - Array operations in manual are not all implemented
    * [XTENLANG-920] - Upcast of function types requires wrapping/type conversions due to co/contra variance of arguments/return type
    * [XTENLANG-925] - Implicit conversions of primitive types probably needed in constraints.  Or some such.
    * [XTENLANG-966] - Type definition does not respect value constraint
    * [XTENLANG-967] - Type constraint on closure not checked
    * [XTENLANG-975] - Get rid of "incomplete" methods in the X10 runtime and class libraries
    * [XTENLANG-989] - Failure to verify method constraint correctly
    * [XTENLANG-1013] - "1.2 as Any as Int" causes ClassCastException
    * [XTENLANG-1048] - String::split behaves very differently with Java and C++ runtime implementations
    * [XTENLANG-1057] - X10DT relies on a set of static variables to configure compiler options
    * [XTENLANG-1079] - Integer::parseInt behaves differently with Java and C++ runtime implementations
    * [XTENLANG-1110] - Type parameters of enclosing class appear to not be consistiently "captured" by nested classes
    * [XTENLANG-1148] - Can't compare unsigned and signed
    * [XTENLANG-1150] - var D <: T = E feature sometimes fails to compile
    * [XTENLANG-1183] - X10Doc: Refactor to enable code reuse in X10DT
    * [XTENLANG-1185] - Typechecker fails to reject attempting to access instance field as a static field
    * [XTENLANG-1196] - break inside foreach/ateach doesn't compile and doesn't make much sense
    * [XTENLANG-1210] - x10.io.File / openRead
    * [XTENLANG-1234] - Method override information not computed correctly in the X10 frontend
    * [XTENLANG-1253] - Must switch/case statements all need to have the same integral type?
    * [XTENLANG-1264] - Expected type is wrong in compilation error message
    * [XTENLANG-1269] - IsSpaceChar behaves strangely
    * [XTENLANG-1289] - Int.parseInt does not treat radix argument properly in C++ library
    * [XTENLANG-1292] - Dejavafication needed in 'Vars.tex'
    * [XTENLANG-1293] - Property method used as a term causes odd internal-looking compiler error
    * [XTENLANG-1294] - {(self.a==3&&self.b==4)==true}   == BOOM!
    * [XTENLANG-1301] - Some entity links are broken
    * [XTENLANG-1316] - Bowen's clock spec comments
    * [XTENLANG-1333] - Class library APIs to expose HFI functionality
    * [XTENLANG-1335] - bogus constraint added to the type of for-loop formal
    * [XTENLANG-1347] - Closure body and declared type do not match
    * [XTENLANG-1350] - Specify the rules for computing the upper bound during typechecking.
    * [XTENLANG-1351] - Dejavalize "definite assignment" in chapter 5 Vars
    * [XTENLANG-1354] - handling "this" in generic classes is incorrect for type inference
    * [XTENLANG-1374] - Failed regression tests due to ClosureSynthesiser changes
    * [XTENLANG-1375] - Completeness of Reported Errors
    * [XTENLANG-1376] - Position information: The source extent of each node must be accurate.
    * [XTENLANG-1380] - leastCommonAncestorBase handles null in a wrong way (without considering the constraint)
    * [XTENLANG-1383] - Compiler should always produce a proper AST after typechecking
    * [XTENLANG-1389] - constraint information not properly propagated through here-expression
    * [XTENLANG-1415] - "for loops" are rejected if the constraint is wrong even for DYNAMIC_CALLS 
    * [XTENLANG-1422] - Method selection rule in the presence of unsigned types not defined
    * [XTENLANG-1423] - Parser doesn't produce line numbers if there is a parsing error somewhere.
    * [XTENLANG-1427] - Compiler does not report an error when constructing an instance of a class with a parse error
    * [XTENLANG-1443] - set(T,I) must always have a matching apply(I)
    * [XTENLANG-1445] - Covariance and contravariance doesn't consider inheritance in the manual
    * [XTENLANG-1448] - Generic and overriding don't mix well
    * [XTENLANG-1460] - Superclass invariants are not checked
    * [XTENLANG-1461] - Class with two set methods no longer works right.
    * [XTENLANG-1463] - Return type of a ctor not infered correctly when the superclass has properties
    * [XTENLANG-1467] - Parsing errors for constraints: "Test{self!=null}!" and "Test{self!=null}{self.home==here}"
    * [XTENLANG-1468] - Function types should be represented directly (not with Fun_0_x)
    * [XTENLANG-1481] - NPE when compiling inequality constraints
    * [XTENLANG-1490] - An instanceof check throws an NullPointerException at runtime (in both C++ and Java)
    * [XTENLANG-1500] - Suggestions for section 13 -- Places
    * [XTENLANG-1503] - Need name mangling for Struct.structEquals(Object):Boolean
    * [XTENLANG-1509] - AST incompleteness
    * [XTENLANG-1512] - Compiler fails to report on illegal overloading with generics
    * [XTENLANG-1523] - DYNAMIC_CALLS doesn't work for methods parameters (but it does for the receiver)
    * [XTENLANG-1525] - Overload resolution is wrong when using DYNAMIC_CALLS
    * [XTENLANG-1529] - 0.toHexString()  == null
    * [XTENLANG-1536] - better error message when attempting to run without compiling
    * [XTENLANG-1550] - NQueensPar: Place type checking, method guards, instance methods, and nested classes
    * [XTENLANG-1567] - Property methods bugs: need to reject recursive property methods and resolution for property methods doesn't check for "self."
    * [XTENLANG-1574] - Adding class-invariants to the constraints of a type 
    * [XTENLANG-1580] - Superclass constraints are not added to the real-clause
    * [XTENLANG-1582] - Compiler NPE when typechecking a construct that offers
    * [XTENLANG-1589] - DYNAMIC_CALLS works wrong when resolving a static field
    * [XTENLANG-1611] - Class invariants and superclass invariants do not imply invariants on "self" ("this" is not translated to "self")
    * [XTENLANG-1614] - offer clause is typed incorrectly if the return type is inferred
    * [XTENLANG-1627] - Type check of array of arrays behaves inconsistently
    * [XTENLANG-1630] - Compiler internal error message appears as regular compilation error
    * [XTENLANG-1636] - Property method return type is not inferred correctly
    * [XTENLANG-1638] - Front end should check for a missing type parameter
    * [XTENLANG-1647] - Frontend should reject wrong function types
    * [XTENLANG-1660] - Conditional atomic blocks generate deadlocks
    * [XTENLANG-1661] - Failure of: "The region constructed from an of regions is the Cartesian product of the regions."
    * [XTENLANG-1675] - Constraints (with boolean and int properties) are not calculated correctly
    * [XTENLANG-1686] - Overloading is not done properly with generic methods when the generic parameters are inferred  (probably a constraint problem)
    * [XTENLANG-1688] - Operator precedence problem (unary minus and as)
    * [XTENLANG-1713] - Generic bounds have problems (are not type-checked correctly)
    * [XTENLANG-1716] - Type checker generates dynamic casts to the exactly same type multiple times
    * [XTENLANG-1723] - Coercion of large floating point number to integer
    * [XTENLANG-1729] - Resolution rules for inner and outer classes when having a field and method with the same name
    * [XTENLANG-1731] - Ambiguous node in the AST produced by typechecking a for loop
    * [XTENLANG-1732] - Missing generic parameter error is reported after the error of the usage
    * [XTENLANG-1742] - X10Doc for Dist fails to specify behavior sufficiently for blocked distributions
    * [XTENLANG-1758] - Behavior on EOF must be specified for FileReader.read???()
    * [XTENLANG-1759] - Please do not include methods in X10Doc that throw "incomplete method" exceptions
    * [XTENLANG-1767] - CFG is incorrect with respect to async and exceptional edges (like exceptions, return, break, etc)
    * [XTENLANG-1772] - Literals of primitive types do not use the proper conversions.
    * [XTENLANG-1775] - Constraints should only include variables, literals, field access, {{==}}, and {{!=}} (everything else should be reported as an error)
    * [XTENLANG-1784] - Inappropriate type casting a constant to Int.
    * [XTENLANG-1812] - front end fails to catch error with missing type parameter
    * [XTENLANG-1816] - Inference bug
    * [XTENLANG-1823] - "this()" is an ambiguity in the language: between constructor call and apply method on "this"
    * [XTENLANG-1830] - checking the apply method guard of GlobalRef is not done correctly
    * [XTENLANG-1833] - property-assign statement doesn't introduce the new constraints to the context.
    * [XTENLANG-1837] - Barrier is too strong: an error in one class prevents seeing errors in another class (in the same file)
    * [XTENLANG-1840] - Bug in inference with constraints (for DistArray)
    * [XTENLANG-1842] - Inner (non static member) classes should not have static fields&classes.
    * [XTENLANG-1843] - The compiler erroneously allows referring to classes with empty parentheses after the name
    * [XTENLANG-1847] - x10c fails to report generics type error
    * [XTENLANG-1849] - move Semaphore, Lock from x10.lang to x10.util.concurrent
    * [XTENLANG-1850] - Constraints are not added to the context after a super call.
    * [XTENLANG-1851] - definite assignment is still required if the constructor throws an exception
    * [XTENLANG-1863] - Order of properties not enforced
    * [XTENLANG-1864] - Resolution of {{super.field}} is wrong: the qualifier should be the current class (or some enclosing class), but it is the superclass.
    * [XTENLANG-1876] - front end fails to detect duplicate signatures involving generics
    * [XTENLANG-1881] - Remove remaining uses of the "test and try something else if exception" pattern from the conversion code in the typechecker
    * [XTENLANG-1895] - Array[T] ctor must be protected by {T hasZero}  or else the type system is comprimised.
    * [XTENLANG-1902] - Missing placeTerm() on formal, and wrong currentPlaceTerm in ateach
    * [XTENLANG-1905] - GlobalRef.home() is not equated correctly
    * [XTENLANG-1914] - Revisit the entire design of property fields and methods in interfaces
    * [XTENLANG-1915] - Can non-generic method override a generic one (or vice versa)?
    * [XTENLANG-1916] - Cannot overload based on Any and Object in the java back-end 
    * [XTENLANG-1920] - Inserting into a StringBuilder seems to be broken
    * [XTENLANG-1921] - StringBuilder.add method does not accept an instance of a struct
    * [XTENLANG-1923] - Formally define the language of legal constraints
    * [XTENLANG-1927] - Point destructuring should not be desugared until after typechecking.
    * [XTENLANG-1928] - Point destructuring syntax should require a variable of type Point
    * [XTENLANG-1929] - {{here}} on a method guard is not "context-sensitive"
    * [XTENLANG-1930] - Interface invariants are effectively ignored by the compiler
    * [XTENLANG-1932] - Constraints do not treat "this" of outer instances correctly
    * [XTENLANG-1935] - Order of evaluation of a(i)=b doesn't match the spec in C++
    * [XTENLANG-1936] - Inlining produces unreachable java code
    * [XTENLANG-1939] - Typechecker permits "def f() = m()" syntax when m() is a void method
    * [XTENLANG-1940] - Sample code comment for File example does not work.
    * [XTENLANG-1941] - Cleaner handling of system exit codes would be nice.
    * [XTENLANG-1944] - A closure created from an instance method is not interned on the java backend (which violates the spec)
    * [XTENLANG-1962] - Missing type parameter in extends clause crashes both backends
    * [XTENLANG-1964] - Clarify Section 8.9
    * [XTENLANG-1975] - Failure to reject constructor call on generic method when type inference not possible
    * [XTENLANG-1978] - Error message about ambiguity when matching arrays against functions will confuse people
    * [XTENLANG-1989] - Fix spec's description of 'at' behavior (assuming it's wrong -- discussion is not concluded)
    * [XTENLANG-2001] - Treatment of case 'x': is inconsistent between Java and C++ back ends
    * [XTENLANG-2003] - X10DT crashes on Null Pointer when selecting a class in the Debug wiizard new configuration menu
    * [XTENLANG-2014] - Another confusing error message about type constraints: when do two points have the same rank?
    * [XTENLANG-2018] - visibility modifier ignored with nested classes
    * [XTENLANG-2022] - Inconsistent constraint checking between struct and class
    * [XTENLANG-2026] - Reached threshold when checking constraints.
    * [XTENLANG-2045] - SVN checked out directories show another directory reading error
    * [XTENLANG-2053] - errors in x10.lang.Char
    * [XTENLANG-2056] - Scoping rules for local vars are not done correctly within async/at
    * [XTENLANG-2058] - Empty and FullRegion should be subtypes of Region{rect}
    * [XTENLANG-2064] - support (document?) how to control linking flags with x10c++
    * [XTENLANG-2070] - Post increment doesn't work with parenthesis 
    * [XTENLANG-2081] - Spurious syntax error in nested class
    * [XTENLANG-2088] - runtime failure for large loop
    * [XTENLANG-2110] - nullary property methods clash with properties that are nullary functions
    * [XTENLANG-2113] - Java backend generates invalid code for Byte and Short literals
    * [XTENLANG-2119] - UByte (and other unsigned types) has a bug in their parse() method
    * [XTENLANG-2121] - Overriding shouldn't consider static methods
    * [XTENLANG-2132] - Assertion fails when have two inner classes with the same name
    * [XTENLANG-2135] - Constant propagation of a null comparison produces incorrect results
    * [XTENLANG-2152] - Should not infer type of fields/method with @Native annotations
    * [XTENLANG-2155] - R(3) is accepted as a type even though there is no type definition R(r:Int)=...
    * [XTENLANG-2156] - Equality of unsigned types is broken
    * [XTENLANG-2162] - ICE: java.lang.IndexOutOfBoundsException raised when compiling input program
    * [XTENLANG-2163] - Method and outer class type parameters have to be alpha-renamed before code generation
    * [XTENLANG-2165] - Need a way to access outer class's type parameters from an inner class or an instance method
    * [XTENLANG-2166] - for loop:async execution throws exception
    * [XTENLANG-2169] - Document current type inference of generic params
    * [XTENLANG-2172] - Generic Type inference is done by unification
    * [XTENLANG-2185] - Inference for closures is broken
    * [XTENLANG-2189] - Overly aggressive constant propagation of transient val fields 
    * [XTENLANG-2192] - Constructor can be called with undeclared generic type parameter (also see XTENLANG-2183)
    * [XTENLANG-2194] - Inferred type of destructured point
    * [XTENLANG-2198] - Asymetric treatment of constraints in Array
    * [XTENLANG-2202] - How to specify the return type for explicit casting operator
    * [XTENLANG-2205] - Document the implicit and explicit operator as in the spec
    * [XTENLANG-2209] - import typedef with generic types is broken
    * [XTENLANG-2221] - Covariant return type is not implemented correctly for primitive types in the java backend
    * [XTENLANG-2234] - Inconsistient application of dynamic_calls for array apply (var vs. val instance fields)
    * [XTENLANG-2242] - DYNAMIC_CALLS and STATIC_CALLS and VERBOSE_CALLS are not consistent (STATIC_CALLS reports an error which is not reported with VERBOSE_CALLS)
    * [XTENLANG-2254] - CachingResolver.install AssertionError :  XXX is already in the cache; cannot replace with YYY
    * [XTENLANG-2260] - type inference of method calls changed; spec needs to change to match.
    * [XTENLANG-2262] - Revise def of 'atomic'
    * [XTENLANG-2266] - Typechecker confused by package, struct, and variable with the same name.
    * [XTENLANG-2270] - Array.copy does not handle count=0 properly in the C++ back end
    * [XTENLANG-2273] - Incorrect return type of the synthetic default constructor
    * [XTENLANG-2274] - AssertionError: No substitution found for type parameter V
    * [XTENLANG-2277] - Incorrect typechecking of operator()X=  (e.g., "+=")
    * [XTENLANG-2280] - Tests from spec -- include negative tests
    * [XTENLANG-2291] - type inference bug for constructor with generics
    * [XTENLANG-2295] - Remove constraints on functions from spec
    * [XTENLANG-2297] - Type inference can infer the wrong type for a function
    * [XTENLANG-2303] - A careful account of how variables are passed into "at" blocks would be helpful
    * [XTENLANG-2305] - In-line interface in class doesn't compile in Java back end
    * [XTENLANG-2307] - Define "direct sub[class/interface/struct] of" for generics once and for all
    * [XTENLANG-2311] - exception is thrown when calling next() on a PolyRegion iterator without calling hasNext first
    * [XTENLANG-2314] - LangSpec issues from Yoav
    * [XTENLANG-2319] - Error message does not help resolve problem with construction of dist array entry
    * [XTENLANG-2320] - self!=null is not enough to show self!=null
    * [XTENLANG-2321] - langauge specification on makeBlock() method from Dist
    * [XTENLANG-2325] - Method guards can only be made weaker by overriding (and it is not checked by the compiler)
    * [XTENLANG-2329] - Method guards are not type checked on calls to unary operators or closures.
    * [XTENLANG-2333] - MultiVM cannot launch when login shell is csh
    * [XTENLANG-2335] - User-reported error in x10.util.ArrayList.addBefore
    * [XTENLANG-2337] - On the Java back-end, PolyScanner.PointIt.next() will not flatten unless it is also inlined
    * [XTENLANG-2339] - C++ backend generates bogus code when comparing a val x : Any to null
    * [XTENLANG-2342] - read of a transient val field is improperly optimized into the "constant" value of its field initilizer expression
    * [XTENLANG-2349] - X10 compiler ICE with diagnostic test case for constraint types
    * [XTENLANG-2350] - NPE in the front end compiling binary vs. constant?
    * [XTENLANG-2351] - AtFieldWrite_MustFailCompile.x10 C++ backend failed
    * [XTENLANG-2354] - revise spec for 'in'
    * [XTENLANG-2364] - ClassCastException in compiler when lowering collecting finish
    * [XTENLANG-2366] - ICE:TYPE DECLARATION caused internal compiler error (java.lang.IndexOutOfBoundsException)
    * [XTENLANG-2370] - GENERIC:invocation of operators on type parameter failed to compile
    * [XTENLANG-2372] - Expression flattener problem on loop bounds that contain instance field loads
    * [XTENLANG-2373] - X10RT JNI is incompletely built when JAVA_HOME is not set
    * [XTENLANG-2374] - Operator precedence table in x10doc
    * [XTENLANG-2377] - Compiler rejects a legal creation of an inner class (due to non-static inner classes and generics)
    * [XTENLANG-2382] - Closure representation is wrong (mixes Any and void in the return type)
    * [XTENLANG-2387] - Recursive local declaration should be prohibited
    * [XTENLANG-2389] - Constraint system is confused between self, this, and outer this.
    * [XTENLANG-2391] - X10DT: the passphrase is shown in clear text in x10_platform.conf
    * [XTENLANG-2392] - C++ backend: compilation fails with -O
    * [XTENLANG-2393] - Remove special numerical cases (handling of Int, UInt, Short, coercions, etc) from type-checking
    * [XTENLANG-2395] - X10DT: second launch configuration in project overwrites the main class of the first one
    * [XTENLANG-2396] - Possible clocked finish bug
    * [XTENLANG-2401] - Context.find should search only by name and erased-signature (i.e., ignore constraints)
    * [XTENLANG-2402] - Invariant violations in compiler junit test suite 
    * [XTENLANG-2405] - X10 currently have no syntax for calling operators of the superclass
    * [XTENLANG-2407] - NoSuchElementException thrown from the compiler
    * [XTENLANG-2413] - 'final' -> 'val'
    * [XTENLANG-2416] - Type error for constrained method call
    * [XTENLANG-2417] - Java back end doesn't compile at-back idiom
    * [XTENLANG-2426] - X10 front-end: compilation throws java.lang.StackOverflowError exception on method constraint
    * [XTENLANG-2428] - Dynamic checks not generated for an argument to a new expression
    * [XTENLANG-2430] - false pass test case: GenericClassNonGenericConstructor_MustFailCompile.x10
    * [XTENLANG-2438] - Name clash between static field and the first component of qualified type name on the Java backend
    * [XTENLANG-2440] - delayed initialization of 'val' local variable doesn't compile
    * [XTENLANG-2441] - Bug in auto-generation of equals methods for struct types
    * [XTENLANG-2447] - Class invariant is not enforced in the call site
    * [XTENLANG-2448] - Class invariant and should it be broken into type- and value- constraints
    * [XTENLANG-2449] - Rename STATIC_CALLS and VERBOSE_CALLS to STATIC_CHECKS and VERBOSE_CHECKS
    * [XTENLANG-2450] - DIAG:constraint on Triangle, b.end==a.start not recognised
    * [XTENLANG-2452] - C++ backend produces incorrect code for simple for loop
    * [XTENLANG-2454] - Precisely define semantics of shift count on operators <<, >>, and >>>
    * [XTENLANG-2456] - Constraint system gets confused by the {T haszero} constraints.
    * [XTENLANG-2457] - The rules of collecting-finish are not specified anywhere
    * [XTENLANG-2459] - Revise grammar for 2.2 in spec
    * [XTENLANG-2460] - spec needs to be correct about writing vars in asyncs -- is it?
    * [XTENLANG-2463] - Name clash between field and type parameter causes post compilation error in both backends
    * [XTENLANG-2474] - Optimizer:-Optimize compilation throws java.lang.NullPointerException
    * [XTENLANG-2475] - Native compiler: resume() on a dropped Clock doesn't throw ClockUseException
    * [XTENLANG-2484] - clarification needed for accessing static fields in a class via native code
    * [XTENLANG-2485] - Remove the syntax for specifying the type of an Array literal
    * [XTENLANG-2486] - x10doc: handle top-level typedefs correctly
    * [XTENLANG-2488] - Name clash between field and inner type on the Java backend
    * [XTENLANG-2491] - How do system-as, user-explicit-as, user-implicit-as and literal coercions work together?
    * [XTENLANG-2492] - Language specification:update 16.2 to reflect the fact m..n is evaluated as an IntRange
    * [XTENLANG-2494] - Error messages sometimes contain id$1234
    * [XTENLANG-2495] - Apparent invalid AST created by DYNAMIC_CHECKS 
    * [XTENLANG-2497] - != null method guard on a closure parameter causes an ICE with the C++ backend only
    * [XTENLANG-2503] - Remove exceptions that interrupt the flow of typechecking -- report those errors instead
    * [XTENLANG-2505] - The Java backend should copy @NativeClass references to the build directory as the C++ backend does
    * [XTENLANG-2506] - Java backend generates improper constructor for struct with IndexedMemoryChunk property
    * [XTENLANG-2509] - abstract method impl in subclass with parameter type constrain fails to be recognized 
    * [XTENLANG-2510] - Bad Java code generation for variable declarations with struct type bounds
    * [XTENLANG-2511] - Bad Java code generation for "new" with type bounds
    * [XTENLANG-2515] - X10 RT: execution seg-faults on P7 machines (with -x10rt pgas_lapi)
    * [XTENLANG-2519] - X10 Native compiler:Cast from float/double to a signed integer type
    * [XTENLANG-2520] - InternalCompilerError in Desugarer
    * [XTENLANG-2522] - X10 C++ backend codegen:conversion from Int/double to Any failed to compile
    * [XTENLANG-2529] - Java backend should not generate default constructor calls from a struct to a @NativeRep'd class
    * [XTENLANG-2531] - C++ backend:Optimizer:RegionTriangular.x10 fails to compile with -O
    * [XTENLANG-2532] - Inconsistent behavior from the compiler wrt to code generation
    * [XTENLANG-2535] - The compiler reports a type is inconsistent (even though it is), and we shouldn't add constraints to user-specified return types
    * [XTENLANG-2537] - Compiler must report an ambiguity when multiple operators match an invocation
    * [XTENLANG-2538] - Specify the exact rules for operator resolution in the manual
    * [XTENLANG-2540] - Implicitly using Array from a struct method causes a post-compilation error in the C++ backend
    * [XTENLANG-2547] - Backquoted identifiers don't always work
    * [XTENLANG-2549] - Compiler emitting a warning for unsound casts
    * [XTENLANG-2552] - Region properties are not calculated correctly
    * [XTENLANG-2553] - Java backend need to support statements that come before the super/this call (aka split constructors, or separation between allocation and construction).
    * [XTENLANG-2555] - ICE: assertion failure in typechecker
    * [XTENLANG-2557] - ICE: Internal compiler error while typechecking a loop
    * [XTENLANG-2558] - ICE: ClassCastException while compiling a file with a syntax error
    * [XTENLANG-2560] - AST does not have a node for missing type.
    * [XTENLANG-2561] - Remove  short operator names, like Int.+  from the parser
    * [XTENLANG-2566] - Incorrect runtime type information for user-defined structs
    * [XTENLANG-2567] - Invalid AST created by DYNAMIC_CHECKS for Point rank check in non-Array context.
    * [XTENLANG-2570] - Java backend does not appropriately mangle static initialization dispatchers
    * [XTENLANG-2571] - Classical problem of matching else
    * [XTENLANG-2573] - front-end:ICE:java.lang.NullPointerException thrown at compile time
    * [XTENLANG-2574] - front-end:destructing syntax in iteration construct fails to compile for DistArray
    * [XTENLANG-2575] - Cannot qualify typedef (e.g., writing x10.array.Point(4)   fails)
    * [XTENLANG-2576] - front-end:Array:operator()= rejects Point as parameter
    * [XTENLANG-2577] - front-end:Array:Array.certain forms of map[]() are rejected 
    * [XTENLANG-2579] - Compiling files in the ipm project throws exception
    * [XTENLANG-2582] - front-end: property method is not expanded correctly 
    * [XTENLANG-2584] - X10 2.2 frontend issues (umbrella)
    * [XTENLANG-2586] - Definite initialization is incorrect for locals and closures
    * [XTENLANG-2587] - Compiler generates bad code for Array.map due to variety of problems in dynamic check injection by front-end.
    * [XTENLANG-2588] - Compiler crashes on encounter an illegal return type
    * [XTENLANG-2589] - Type name for function type arguments printed incorrectly in the Java backend
    * [XTENLANG-2592] - C++ codegen:DYNAMIC_CHECK:exepcted exception is not thrown on a violation of constraint
    * [XTENLANG-2594] - front-end:constraint method call:problems in implicit conversion from Array[Int](1) to Point
    * [XTENLANG-2595] - front-end:type checker:operator + on x10.lang.Int in an iteration on element of DistArray[Int](2)
    * [XTENLANG-2596] - BGP: Clock test cases hangs on run
    * [XTENLANG-2597] - Reader.readLine() returned value includes newline
    * [XTENLANG-2598] - C++ backend: @Native methods can't be used to implement interfaces
    * [XTENLANG-2599] - error: switch quantity not an integer
    * [XTENLANG-2603] - Constant folding based on constrained type of field leads to incorrect code in presence of dynamic checks.
    * [XTENLANG-2606] - AllReduce fail with 58 places and up
    * [XTENLANG-2607] - Internal compiler error --- ClassCastException 
    * [XTENLANG-2609] - XTypeTranslator cannot handle non-nullary abstract properties
    * [XTENLANG-2610] - non-existing annotations should be compilation errors (not ambiguous AST nodes!)
    * [XTENLANG-2611] - front-end:java.lang.StackOverflowError:compiler ICE at a for loop
    * [XTENLANG-2613] - Remove operator 'in' from the language
    * [XTENLANG-2614] - Constraint system bug
    * [XTENLANG-2616] - The C++ backend should not rely on fake class names for function types in code generation
    * [XTENLANG-2617] - super class with constrains shows type check error in derived class's constructor
    * [XTENLANG-2620] - front-end: disallow constraints on annotations
    * [XTENLANG-2622] - null is special in constraints, and is not treated correctly
    * [XTENLANG-2623] - Impossible casts need to fail to compile
    * [XTENLANG-2624] - Impossible =='s need to fail to compile.
    * [XTENLANG-2625] - Reachability information is incorrect for constructors of anonymous inner class
    * [XTENLANG-2628] - class invariant is not enforced if the class has no properties (and therefore no property assign call)
    * [XTENLANG-2630] - fillInStackTrace exception on X86_32 at -O
    * [XTENLANG-2631] - getRealXClause returns an inconsistent constraint when using Array as a property
    * [XTENLANG-2632] - BGP: clocked async fail NullPointerException
    * [XTENLANG-2633] - Odd interaction between typedef, generic type, and constructor guard.
    * [XTENLANG-2634] - AssertionError because closure calls can have type parameters (even though closure literals cannot)
    * [XTENLANG-2635] - LCA for two structs that implement the same interface should be that interface (if the structs have no other interface in common)
    * [XTENLANG-2637] - DistArray element access:operator+(x10.lang.Int, x10.lang.Int): fails to compile 
    * [XTENLANG-2638] - Constraint bug - inconsistent environment 
    * [XTENLANG-2639] - Constructor inlining causes post compilation error in java backend
    * [XTENLANG-2640] - Implicit inlining of RectLayout constructor calls into Array.x10 fails
    * [XTENLANG-2641] - Somewhat odd overloading/overriding behaviour when method arguments have constraints
    * [XTENLANG-2644] - ICE: Java traceback in program with type error
    * [XTENLANG-2645] - typechecker bug when using Rail typedef inside of ArrayBuilder 
    * [XTENLANG-2646] - Closures with bodies that are assignment expressions don't parse
    * [XTENLANG-2648] - Document 2.2 keywords for 2.2 release
    * [XTENLANG-2649] - Internal compiler error in ForLoopOptimizer
    * [XTENLANG-2650] - Exceedingly long time spent in the StaticInitializer phase
    * [XTENLANG-2652] - Reached MAX_RECURSION_DEPTH:compilation ICE reaching max recursion depth
    * [XTENLANG-2655] - Name of FunctionType_c includes a space character unlike the name of X10ClassType_c
    * [XTENLANG-2657] - user-defined structs shouldn't but can have default values
    * [XTENLANG-2658] - alpha-conversion of function types doesn't respect constraints properly.
    * [XTENLANG-2662] - Post compilation error with duplicate type parameter for m3r.engine.JobRunner.x10
    * [XTENLANG-2667] - Explicit casts should be searched both in the source and target types
    * [XTENLANG-2672] - LangSpec:  Packages5t5g
    * [XTENLANG-2673] - LangSpec: Packages Stimulus
    * [XTENLANG-2678] - Spurious 'cannot assign expression to target' 
    * [XTENLANG-2680] - Override and implement virtual and interface method with @Native is broken in Java backend
    * [XTENLANG-2681] - Interfaces with type invariants may refuse to be inheritable.
    * [XTENLANG-2682] - Failure to check place constraints with STATIC_CHECKS
    * [XTENLANG-2684] - Remove the use of exceptions in disambiguation
    * [XTENLANG-2690] - BGP: nested async: exception: signal 11
    * [XTENLANG-2697] - Local variables leak into inferred method return types
    * [XTENLANG-2699] - Managed backend does not correctly handle nested anonymous classes
    * [XTENLANG-2705] - Constant propagator eliminates return statement, which causes post compilation error in Java backend
    * [XTENLANG-2706] - Failed to override method with the same signature
    * [XTENLANG-2708] - Loop unrolling no longer works on the CUDAMatMul sample
    * [XTENLANG-2709] - HeatTransfer samples no longer compile without dynamic checks
    * [XTENLANG-2710] - "val o = 1 as Comparable[Int]" causes ICE
    * [XTENLANG-2711] - Regression: when having a {T haszero} constraint it interrupts with initialization checks
    * [XTENLANG-2713] - Java compilation errors in an X10 Quicksort program that passes X10
    * [XTENLANG-2717] - Regression: Assertion error for GenericLocal2
    * [XTENLANG-2718] - Regression: Assertion error for Types460
    * [XTENLANG-2720] - Document restrictions on members of inner and local classes
    * [XTENLANG-2723] - Severe performance degradation in SPECxbb2005
    * [XTENLANG-2725] - The place of method invocation is not computed correctly
    * [XTENLANG-2726] - X10 parser bugs: (Type) and here()
    * [XTENLANG-2728] - Regression: A var of a type which haszero isn't definitely assigned
    * [XTENLANG-2732] - Can subvert the typesystem by using generics
    * [XTENLANG-2735] - Constant propagation of StringLit results in invalid AST (constant only partially propagated)
    * [XTENLANG-2737] - X10c++ compiler throws an exception when given command line argument -MAIN_CLASS=""
    * [XTENLANG-2740] - ArrayCopyTo test fails with x10rt standalone
    * [XTENLANG-2744] - NPE when compiling method guard dynamic checks

For the details of JIRA issues fixed in this release, see
http://jira.codehaus.org/browse/XTENLANG/fixforversion/16002

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1

