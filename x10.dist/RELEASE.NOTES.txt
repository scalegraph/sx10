X10 Release 2.4.3

HIGHLIGHTS OF THIS RELEASE

There were no significant language changes or 
incompatible class library API changes made in 
this release of X10. 

A major new feature in X10DT 2.4.3 is support for basic 
source-level debugging of X10 programs running on Managed X10. 
With this release debugging operations that rely on source
line information (e.g. breakpoints, single stepping) can be
done at the X10 source level.  Debugging operations like variable
inspection can only be done at the level of the generated Java
code (due to limitations of JSR-045 SMAP mappings). To try this
new feature, simply launch a Managed X10 program using the usual
Eclipse debugging procedures. 

In previous versions of X10, when a Place had no activities
to execute the XRX runtime would consume CPU by actively pooling
the network for incoming activities.  In X10 2.4.3 the default has
been changed to instead block the polling thread on the network, 
thus allowing idle X10 Places to not consume CPU resources.  
If the previous behavior is desired (active polling), set the 
environment variable X10_BUSY_WAITING to true.

LIMITATIONS OF THIS RELEASE

The size and index of arrays must be less than 2^31 with Managed X10.
An attempt to allocate a longer array causes IllegalArgumentException. 

The following features described in the 2.4 language manual do not
currently work and may be fixed in the subsequent releases:
  - Non-static type definitions as class or interface members
    (static type defs do work)

The constraint solver used by X10 typechecker is known to be incomplete 
for situations in which a constraint implies an infinite number of 
distinct constraints.

Additionally, the following features described in the language
manual do not currently work with Native X10.
  - Non-final generic instance methods
  - Exception stack traces on Cygwin

The generated C++ code requires g++ 4.2 or better to be compiled; 
we do almost all of our testing against g++ 4.4.
  + On Power/Linux and BG/Q, you may either use g++ 4.2 or better
    or xlC 11.1 or better. 

SUMMARY OF ISSUES RESOLVED IN THIS RELEASE

Below is a summary of JIRA issues addressed for the X10 2.4.3

** New Features and Improvements
    * [XTENLANG-1012] - Busy wait in x10::runtime::Pool::scan()
    * [XTENLANG-3367] - Handle non-trivial at() expressions in CUDA kernels
    * [XTENLANG-3370] - generate SMAPI debug info in command line builds
    * [XTENLANG-3385] - GML: add Manhattan, Chebyshev distances to x10.matrix.Vector
    * [XTENLANG-3386] - New class x10.util.Date

** Bugs
    * [XTENLANG-3219] - Exceptions during serialization/deserialization can hang XRX
    * [XTENLANG-3368] - Resilient X10: failure to reliably raise DPE when System.killHere is called
    * [XTENLANG-3374] - Team: illegal broadcastFlat within atomic block
    * [XTENLANG-3376] - bugs in x10.io.File.list() 
    * [XTENLANG-3377] - Team.WORLD.barrier() intermittent hang with X10RT MPI
    * [XTENLANG-3383] - Elements of Rail[struct] not initialized to zero
    * [XTENLANG-3384] - Incomplete type error on cast to constrained type in postcompile
    * [XTENLANG-3387] - Machine architecture unknown for X10RT MPI bindings

** Tasks
    * [XTENLANG-3332] - Update install instructions on website

For the details of JIRA issues fixed in this release, see
http: http://jira.codehaus.org/secure/ReleaseNote.jspa?version=20024&projectId=11812

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1
